Starting experiment #5 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2201324061738873;  // std dev = 0,481, 7.865,000 (wgt'ed) examples reached here.  /* #neg=5.018 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.13592671287729013;  // std dev = 3,291, 54,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.0276832519706391;  // std dev = 8,575, 727,000 (wgt'ed) examples reached here.  /* #neg=644 #pos=83 */
%   | | | else return 0.04564893509951213;  // std dev = 4,131, 112,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=21 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.038918165868742735;  // std dev = 6,205, 260,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=47 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1922772076352807;  // std dev = 0,481, 7.841,000 (wgt'ed) examples reached here.  /* #neg=4.994 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.763434467777347;  // std dev = 2,689, 92,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=84 */
%   | | | else return -0.14491479360529302;  // std dev = 1,016, 310,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.19341845138407418;  // std dev = 3,157, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return -0.060364743290341;  // std dev = 4,399, 265,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.02025447818685626;  // std dev = 6,435, 395,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=47 */
%   | | | else return -0.11083836233661391;  // std dev = 1,397, 67,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=2 */
%   | | else return -0.13050727127346626;  // std dev = 0,063, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16251321365111124;  // std dev = 0,481, 7.858,000 (wgt'ed) examples reached here.  /* #neg=5.011 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7021223622880992;  // std dev = 1,400, 86,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=84 */
%   | | | else return -0.12698312164096773;  // std dev = 1,010, 287,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.13570938517041267;  // std dev = 3,232, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return -0.052273067280458094;  // std dev = 4,397, 261,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.0037593434695690695;  // std dev = 6,380, 355,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=47 */
%   | | | else return -0.08938732296003889;  // std dev = 1,389, 54,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=2 */
%   | | else return -0.11932109584903525;  // std dev = 0,079, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13048437272147187;  // std dev = 0,479, 7.963,000 (wgt'ed) examples reached here.  /* #neg=5.116 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.31000685385364085;  // std dev = 0,616, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.173483025785467;  // std dev = 3,079, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.537622986252554;  // std dev = 0,800, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13392836542905537;  // std dev = 0,018, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0447605352614012;  // std dev = 2,391, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | | else return -0.014528424374185294;  // std dev = 8,192, 717,000 (wgt'ed) examples reached here.  /* #neg=629 #pos=88 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0020819397565353163;  // std dev = 4,543, 261,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=48 */
%   | | | else return -0.10050017120536556;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(E, C) )
%   | | | then return 0.7492455887694759;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.16140775093163812;  // std dev = 5,988, 148,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=61 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return 0.7492455887694759;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.18581934629545913;  // std dev = 2,162, 77,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=5 */
%   | else return 0.10592690177030135;  // std dev = 0,479, 7.738,000 (wgt'ed) examples reached here.  /* #neg=4.978 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then return 0.00975308167063945;  // std dev = 0,306, 676,000 (wgt'ed) examples reached here.  /* #neg=555 #pos=121 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.009259192119718408;  // std dev = 6,389, 374,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=47 */
%   | | | else return -0.08260209329029855;  // std dev = 1,393, 59,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=2 */
%   | | else return -0.09177271722557091;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08481964963235726;  // std dev = 0,478, 7.996,000 (wgt'ed) examples reached here.  /* #neg=5.149 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.0010036001938439104;  // std dev = 0,807, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.12330291395536475;  // std dev = 3,142, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.017896032518925964;  // std dev = 5,682, 403,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=83 */
%   | | | else return -0.05029773516564821;  // std dev = 4,410, 273,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.006010921141247311;  // std dev = 6,332, 338,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=47 */
%   | | | else return -0.07862202101853943;  // std dev = 1,396, 68,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=2 */
%   | | else return -0.0926708758783329;  // std dev = 0,086, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07197290590224767;  // std dev = 0,479, 7.903,000 (wgt'ed) examples reached here.  /* #neg=5.056 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, E) )
%   | | | then return 0.013244908010832725;  // std dev = 5,753, 421,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=85 */
%   | | | else return -0.05986747656954042;  // std dev = 3,411, 155,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=15 */
%   | | else if ( haswordtitle(E, I), haswordvenue(A, I) )
%   | | | then return 0.0649719470192248;  // std dev = 4,086, 112,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=21 */
%   | | | else return -0.12571970150655518;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return -0.0064051139807434114;  // std dev = 0,907, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.12694609592893275;  // std dev = 0,061, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.014287442863792688;  // std dev = 6,480, 416,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=48 */
%   | | | else return -0.07751331627422241;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.5469994991090849;  // std dev = 8,43e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.2538937496235116;  // std dev = 4,156, 70,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=39 */
%   | | | else return -0.0873438979123637;  // std dev = 4,601, 125,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=27 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.2528653419306805;  // std dev = 4,075, 71,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=39 */
%   | | | else return -0.11210130171107234;  // std dev = 4,605, 155,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=27 */
%   | | else return 0.05643046524431387;  // std dev = 0,480, 7.490,000 (wgt'ed) examples reached here.  /* #neg=4.796 #pos=2.694 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then return 0.013979990407122823;  // std dev = 0,308, 645,000 (wgt'ed) examples reached here.  /* #neg=524 #pos=121 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.004135177015861732;  // std dev = 0,327, 396,000 (wgt'ed) examples reached here.  /* #neg=347 #pos=49 */
%   | | else return -0.07407546636342698;  // std dev = 0,036, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6085996832009491;  // std dev = 0,486, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.3435350769914578;  // std dev = 0,193, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.050533911529418996;  // std dev = 4,570, 147,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=36 */
%   | | | else return 0.42030298709320557;  // std dev = 1,195, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.03890467053793793;  // std dev = 0,478, 7.794,000 (wgt'ed) examples reached here.  /* #neg=5.034 #pos=2.760 */
%   else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, B) )
%   | | then if ( samebib(K, L), venue(L, A) )
%   | | | then return 0.7517084299036647;  // std dev = 2,892, 92,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=84 */
%   | | | else return -0.13327421020663222;  // std dev = 0,897, 501,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=1 */
%   | | else return -0.02004069157554312;  // std dev = 0,248, 241,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=36 */
%   | else return -0.01706129463873998;  // std dev = 0,258, 308,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=49 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, A), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.02081595206763174;  // std dev = 0,473, 7.571,000 (wgt'ed) examples reached here.  /* #neg=4.962 #pos=2.609 */
%   | | else return 0.023279142927473854;  // std dev = 0,322, 749,000 (wgt'ed) examples reached here.  /* #neg=614 #pos=135 */
%   | else if ( title(F, D), venue(F, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.13507647202573964;  // std dev = 4,678, 144,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=27 */
%   | | | else return -0.051116630752098616;  // std dev = 0,824, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.4049380075265816;  // std dev = 4,515, 106,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=78 */
%   | | | else return 0.05378073949748825;  // std dev = 4,503, 194,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=49 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then return 0.4877002950985233;  // std dev = 0,381, 45,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=37 */
%   | | else return 0.6046732857015026;  // std dev = 0,244, 33,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | else return -0.006879865378330181;  // std dev = 0,267, 287,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=49 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
0;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
0;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
0;false,true,false;haswordtitle(H, D).;false;false
0;false,true;author(F, E), venue(F, A).;true;true
0;false,true,true;author(G, E), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;false,true,false;haswordauthor(H, D).;false;false
2;false,true;title(F, E), venue(F, A).;true;true
2;false,true,true;samebib(F, G), venue(G, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
3;false,false,true;haswordauthor(K, I).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), venue(G, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
4;false,false,true;title(L, K), venue(L, B).;false;false
4;true,true,true;haswordauthor(E, C).;false;false
4;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
4;true,true,false;haswordauthor(G, C).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;true,true;haswordtitle(F, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true,false;title(H, E), venue(H, A).;false;false
5;false,true;haswordauthor(F, D).;true;true
5;false,true,true;author(G, F), venue(G, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false;haswordvenue(A, J), haswordauthor(K, J).;true;true
6;false,false,true;author(L, K), venue(L, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false,true,true;author(H, G), title(H, E).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;true,false,true;author(I, H), venue(I, A).;false;false
7;true,true,false;author(F, E), venue(F, B).;false;false
7;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
7;true,true;haswordvenue(B, D).;false;true
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true;title(K, J), venue(K, B).;true;false
8;false,true,true;samebib(K, L), venue(L, A).;false;false
8;true,true,true;samebib(F, G), venue(G, B).;false;false
8;false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;true,true,false;haswordtitle(H, C).;false;false
8;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
8;true,true;author(F, E), venue(F, A).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;false,true;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;false;haswordvenue(A, G), haswordvenue(B, G).;true;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;false
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false;title(F, D), venue(F, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5093117257971874;  // std dev = 4,420, 86,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=56 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048766;  // std dev = 8,54e-09, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3499202295999362;  // std dev = 4,932, 99,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839147;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3414769949592233;  // std dev = 4,600, 90,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360628;  // std dev = 5,89e-09, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2891722537326734;  // std dev = 4,467, 87,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.10159632948783615;  // std dev = 5,87e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1991364798237131;  // std dev = 0,485, 90,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14310175074323953;  // std dev = 4,641, 91,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08810602035544114;  // std dev = 0,019, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12118431474991126;  // std dev = 4,557, 89,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07876530939873691;  // std dev = 0,000412, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.10542710905155245;  // std dev = 4,467, 87,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07323285596305028;  // std dev = 0,000427, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.5643242831476564;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.012995304481210094;  // std dev = 0,494, 97,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842855969498801;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.06842324584156108;  // std dev = 0,000259, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.4241906967098084;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.06401828958343772;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.4324833737274432;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.06419323574838802;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5675166262725567;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.06419355496539715;  // std dev = 1,05e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978388
   AUC PR    = 0.863056
   CLL	      = -0.194478
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.900506


Total learning time: 1.204 seconds
Total inference time: 2.947 seconds
AUC ROC: 0.978388


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.203649
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.498 seconds
Parameter learned model CLL: -0.203649


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, A)'}, {'false,true,true,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [8.54e-09, 85, 0], 'true': [4.42, 30, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 81, 0], 'true': [4.932, 43, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [2.63e-09, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,false': [5.89e-09, 61, 0], 'true': [4.6, 34, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [3.73e-09, 8, 0], 'true': [4.467, 31, 56], 'false,true,true': [0.0, 3, 0], 'false,true,false,false': [5.87e-08, 77, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 72, 0], 'true,true': [0.485, 34, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [4.641, 35, 56], 'false,true,true': [0.019, 7, 0], 'false,true,false,false': [1.67e-08, 65, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [4.557, 33, 56], 'false,true,true': [0.000412, 74, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.000427, 70, 0], 'true,true,true': [4.467, 31, 56], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true,true': 'genre(B, F)', 'false': 'movie(G, A)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(A, I)', 'false,true': 'genre(B, H)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'true,true,true,false': [0.0, 2, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true,false': [0.000259, 70, 0], 'true,true,false': [0.494, 41, 56], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(A, D)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true,false': 'genre(B, E)'}, {'true,false,false,false': [1.05e-08, 63, 0], 'true,false,true,true': [1.03e-07, 0, 56], 'true,false,false,true': [0.0, 23, 0], 'true,true,true': [0.0, 1, 0], 'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0], 'true,true,false': [0.0, 4, 0]}]]
[{'': [0.22714981070849077, 7.734137924355023e-17], 'false,true': [0.0, 7.314410515177502e-17], 'false,true,true': [nan, 0.0], 'false': [7.734137924355023e-17, nan]}, {'': [0.24568921538618482, -2.140188963132832e-17], 'false,true': [0.0, -2.1930331350620375e-17], 'false,true,true': [nan, 0.0], 'false': [-2.140188963132832e-17, nan]}, {'': [0.235061728395061, 2.56322562020219e-05], 'false,true': [0.00020935145252967135, 3.45807171604557e-17], 'false,true,true': [0.0, 2.3129646346357427e-18], 'false': [2.56322562020219e-05, nan]}, {'': [0.22935658607477863, 3.154042683594195e-17], 'false,true,false': [1.734723475976807e-18, 4.469729060179202e-17], 'false,true': [-1.1564823173178713e-18, 3.657205257588751e-17], 'false': [3.154042683594195e-17, nan]}, {'': [0.23506172839506156, 0.0], 'true': [0.23506172839506156, nan], 'false': [0.0, nan]}, {'': [0.23668639053254398, 5.727070459578111e-06], 'false,true,false': [nan, 4.270088556250602e-18], 'false,true': [5.120287426689816e-05, 4.270088556250602e-18], 'false': [5.727070459578111e-06, nan]}, {'': [0.23330387577326125, 2.2924235865440534e-09], 'false,true': [2.2924235865440534e-09, nan], 'false': [2.2924235865440534e-09, nan]}, {'': [0.2293565860747792, 2.601688555862022e-09], 'true,true': [0.2293565860747792, nan], 'true': [0.2293565860747792, nan], 'false': [2.601688555862022e-09, nan]}, {'': [0.24568921538618485, 9.341535577485811e-10], 'false,true,true': [nan, 0.0], 'true,true,true': [nan, 0.0], 'false': [9.341535577485811e-10, nan], 'false,true': [0.0, 9.600592971408567e-10], 'true': [0.24568921538618485, nan], 'true,true': [0.0, 0.2440216813689019]}, {'': [0.1213338990878521, nan], 'true,false,true': [1.9032394707859825e-16, 0.0], 'true,false,false': [-7.723290606088045e-17, 1.76225876924628e-18], 'true,true': [0.0, 0.0], 'true': [0.02075586605683267, 0.12368242168721139], 'true,false': [0.008213144260655846, 0.049632386607016604]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, F).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,false;genre(A, F).;true;true
3;false;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(A, E).;true;true
8;false;genre(B, H).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false;genre(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(B, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(A, E) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.09269127618926105;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,75e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.0851847513883968;  // std dev = 1,67e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.08518475138839683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109172;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( director(B) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(B, E) )
%   | then return -0.06842697784420271;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06419184008202618;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1340070300080109;  // std dev = 4,47e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then return -0.06419184008202626;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999586
   AUC PR    = 0.986599
   CLL	      = -0.082912
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.721 seconds
Total inference time: 2.828 seconds
AUC ROC: 0.999586


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064942
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.86 seconds
Refined model CLL: -0.064942


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999586
   AUC PR    = 0.986599
   CLL	      = -0.082912
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 7.283 seconds
Total inference time: 2.828 seconds
AUC ROC: 0.999586
Total revision time: 7.283
Best scored revision CLL: -0.064942


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 02:58:34
{'Inference time': 2.828, 'CLL': -0.082912, 'parameter': {'Inference time': 2.947, 'CLL': -0.194478, 'Precision': [1.0, 0.5], 'AUC ROC': 0.978388, 'Recall': 0.819018, 'Learning time': 1.204, 'AUC PR': 0.863056, 'F1': 0.900506}, 'Precision': [0.735892, 0.5], 'AUC ROC': 0.999586, 'Recall': 1.0, 'Learning time': 7.283, 'AUC PR': 0.986599, 'F1': 0.847854}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
0;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
0;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
0;false,true,false;haswordtitle(H, D).;false;false
0;false,true;author(F, E), venue(F, A).;true;true
0;false,true,true;author(G, E), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;false,true,false;haswordauthor(H, D).;false;false
2;false,true;title(F, E), venue(F, A).;true;true
2;false,true,true;samebib(F, G), venue(G, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
3;false,false,true;haswordauthor(K, I).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), venue(G, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
4;false,false,true;title(L, K), venue(L, B).;false;false
4;true,true,true;haswordauthor(E, C).;false;false
4;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
4;true,true,false;haswordauthor(G, C).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;true,true;haswordtitle(F, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true,false;title(H, E), venue(H, A).;false;false
5;false,true;haswordauthor(F, D).;true;true
5;false,true,true;author(G, F), venue(G, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false;haswordvenue(A, J), haswordauthor(K, J).;true;true
6;false,false,true;author(L, K), venue(L, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false,true,true;author(H, G), title(H, E).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;true,false,true;author(I, H), venue(I, A).;false;false
7;true,true,false;author(F, E), venue(F, B).;false;false
7;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
7;true,true;haswordvenue(B, D).;false;true
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true;title(K, J), venue(K, B).;true;false
8;false,true,true;samebib(K, L), venue(L, A).;false;false
8;true,true,true;samebib(F, G), venue(G, B).;false;false
8;false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;true,true,false;haswordtitle(H, C).;false;false
8;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
8;true,true;author(F, E), venue(F, A).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;false,true;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;false;haswordvenue(A, G), haswordvenue(B, G).;true;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;false
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false;title(F, D), venue(F, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6113956883462661;  // std dev = 3,783, 77,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=58 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3835126301500103;  // std dev = 4,713, 94,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.38153877678549025;  // std dev = 4,237, 84,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360621;  // std dev = 7,57e-09, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.32038249811391295;  // std dev = 4,058, 81,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.10159632948783616;  // std dev = 5,37e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.12993641432043587;  // std dev = 0,489, 96,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09280898699836088;  // std dev = 0,010, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18378508801189847;  // std dev = 4,237, 84,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08684273299810354;  // std dev = 0,012, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0851755788319221;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12990876946418586;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07875981153753546;  // std dev = 0,000285, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.0015563604965872983;  // std dev = 4,901, 99,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07331495010981137;  // std dev = 0,008, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.5846802049729114;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.05976423947153263;  // std dev = 0,479, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06841675903459267;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06840652470612942;  // std dev = 0,000285, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.4396299597199422;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.06408337555674258;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.4008846392646;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06418282394174898;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5991153607354;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.0641834386529431;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.977686
   AUC PR    = 0.861626
   CLL	      = -0.206758
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total learning time: 1.22 seconds
Total inference time: 2.195 seconds
AUC ROC: 0.977686


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.203691
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.487 seconds
Parameter learned model CLL: -0.203691


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, A)'}, {'false,true,true,false': [0.0, 9, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,false': [8.12e-09, 64, 0], 'true': [3.783, 19, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 92, 0], 'true': [4.713, 36, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [2.63e-09, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,false': [7.57e-09, 88, 0], 'true': [4.237, 26, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 5, 0], 'true': [4.058, 23, 58], 'false,true,true': [0.0, 1, 0], 'false,true,false,false': [5.37e-08, 72, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.01, 84, 0], 'true,true': [0.489, 38, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [4.237, 26, 58], 'false,true,true': [0.012, 11, 0], 'false,true,false,false': [0.0, 69, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [4.292, 27, 58], 'false,true,true': [0.000285, 80, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.008, 93, 0], 'true,true,true': [4.901, 41, 58], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true,true': 'genre(B, F)', 'false': 'movie(G, A)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(A, I)', 'false,true': 'genre(B, H)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 3, 0], 'true,true,true,false': [0.0, 4, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true,false': [0.000285, 83, 0], 'true,true,false': [0.479, 32, 58], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(A, D)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true,false': 'genre(B, E)'}, {'true,false,false,false': [0.0, 81, 0], 'true,false,true,true': [5.96e-08, 0, 58], 'true,false,false,true': [0.0, 24, 0], 'true,true,true': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0], 'true,true,false': [0.0, 4, 0]}]]
[{'': [0.18586608196997756, 7.201446646217232e-17], 'false,true': [-1.1102230246251566e-17, 6.591949208711867e-17], 'false,true,true': [0.0, -9.25185853854297e-18], 'false': [7.201446646217232e-17, nan]}, {'': [0.2363060208239034, -1.3877787807814457e-17], 'false,true': [0.0, -1.68946982008176e-17], 'false,true,true': [nan, 0.0], 'false': [-1.3877787807814457e-17, nan]}, {'': [0.21371882086167704, 1.853019963082847e-06], 'false,true': [3.2315853640852224e-05, 5.803438537813318e-17], 'false,true,true': [0.0, 2.3129646346357427e-18], 'false': [1.853019963082847e-06, nan]}, {'': [0.2033226642280132, 4.554761126667309e-17], 'false,true,false': [0.0, 4.0091387000352874e-17], 'false,true': [0.0, 4.469729060179202e-17], 'false': [4.554761126667309e-17, nan]}, {'': [0.23914930555555491, 1.1500342700497876e-06], 'true': [0.23914930555555491, nan], 'false': [1.1500342700497876e-06, nan]}, {'': [0.21371882086167754, 2.049375440968393e-06], 'false,true,false': [nan, -1.4481169886415085e-17], 'false,true': [1.2507313562172425e-05, -1.4481169886415085e-17], 'false': [2.049375440968393e-06, nan]}, {'': [0.21674740484429084, 1.0138905992551628e-09], 'false,true': [1.0138905992551628e-09, nan], 'false': [1.0138905992551628e-09, nan]}, {'': [0.24262830323436355, 6.62184575144435e-07], 'true,true': [0.24262830323436355, nan], 'true': [0.24262830323436355, nan], 'false': [6.62184575144435e-07, nan]}, {'': [0.23630602082390256, 9.51223579877807e-10], 'false,true,true': [nan, -1.1564823173178713e-18], 'true,true,true': [nan, 0.0], 'false': [9.51223579877807e-10, nan], 'false,true': [-1.1564823173178713e-18, 9.819513809836646e-10], 'true': [0.23630602082390256, nan], 'true,true': [0.0, 0.22913580246913615]}, {'': [0.1090442768712554, nan], 'true,false,true': [6.125368411725002e-17, 0.0], 'true,false,false': [0.0, -2.3300977060034148e-17], 'true,true': [0.0, 0.0], 'true': [0.03134116375036605, 0.11031136929248368], 'true,false': [0.006969271794069461, 0.05045621782267089]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, F).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,false;genre(A, F).;true;true
3;false;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(A, E).;true;true
8;false;genre(B, H).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false;genre(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048766;  // std dev = 6,32e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.1295462451214155;  // std dev = 0,014, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11190809203425058;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( genre(B, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(A, E) )
%   | | then return -0.10125971913733542;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.10159632948783621;  // std dev = 3,49e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.092691276189261;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( actor(A) )
%   | then return -0.09269127618926105;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return -0.09240936390223627;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694894;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839686;  // std dev = 2,28e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( genre(A, D) )
%   | then return -0.08494544301394573;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1,75e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.07857122610741725;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.08383006916707628;  // std dev = 0,018, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 9,31e-10, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(A) )
%   | | | then return -0.07322821069735039;  // std dev = 0,000333, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.07573825731929383;  // std dev = 0,007, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(B, E) )
%   | then if ( female(A) )
%   | | then return -0.06810670073346309;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07248928930067365;  // std dev = 0,015, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842770089474043;  // std dev = 2,88e-06, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.06842697784420267;  // std dev = 2,11e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.068101198693732;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06665685695855747;  // std dev = 0,015, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.12458244838145915;  // std dev = 0,193, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.0996325163381063;  // std dev = 0,508, 46,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=38 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then return -0.06419198656217347;  // std dev = 3,66e-07, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075873
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.348 seconds
Total inference time: 2.483 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065107
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.723 seconds
Refined model CLL: -0.065107


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075873
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 6.778 seconds
Total inference time: 2.483 seconds
AUC ROC: 1.0
Total revision time: 6.778
Best scored revision CLL: -0.065107


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 02:58:46
{'Inference time': 2.483, 'CLL': -0.075873, 'parameter': {'Inference time': 2.195, 'CLL': -0.206758, 'Precision': [1.0, 0.5], 'AUC ROC': 0.977686, 'Recall': 0.817901, 'Learning time': 1.22, 'AUC PR': 0.861626, 'F1': 0.89983}, 'Precision': [0.736364, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 6.778, 'AUC PR': 1.0, 'F1': 0.848168}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
0;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
0;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
0;false,true,false;haswordtitle(H, D).;false;false
0;false,true;author(F, E), venue(F, A).;true;true
0;false,true,true;author(G, E), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;false,true,false;haswordauthor(H, D).;false;false
2;false,true;title(F, E), venue(F, A).;true;true
2;false,true,true;samebib(F, G), venue(G, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
3;false,false,true;haswordauthor(K, I).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), venue(G, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
4;false,false,true;title(L, K), venue(L, B).;false;false
4;true,true,true;haswordauthor(E, C).;false;false
4;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
4;true,true,false;haswordauthor(G, C).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;true,true;haswordtitle(F, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true,false;title(H, E), venue(H, A).;false;false
5;false,true;haswordauthor(F, D).;true;true
5;false,true,true;author(G, F), venue(G, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false;haswordvenue(A, J), haswordauthor(K, J).;true;true
6;false,false,true;author(L, K), venue(L, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false,true,true;author(H, G), title(H, E).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;true,false,true;author(I, H), venue(I, A).;false;false
7;true,true,false;author(F, E), venue(F, B).;false;false
7;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
7;true,true;haswordvenue(B, D).;false;true
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true;title(K, J), venue(K, B).;true;false
8;false,true,true;samebib(K, L), venue(L, A).;false;false
8;true,true,true;samebib(F, G), venue(G, B).;false;false
8;false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;true,true,false;haswordtitle(H, C).;false;false
8;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
8;true,true;author(F, E), venue(F, A).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;false,true;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;false;haswordvenue(A, G), haswordvenue(B, G).;true;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;false
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false;title(F, D), venue(F, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5273218674303357;  // std dev = 7,674, 266,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=178 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.1418510649004884;  // std dev = 0,000, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.48475816758792106;  // std dev = 7,264, 253,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.12544463852839147;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.1254446385283918;  // std dev = 0,000, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4051264678127209;  // std dev = 7,088, 248,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.11231637819360632;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.11231637819360682;  // std dev = 0,000, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.30371003002355873;  // std dev = 7,195, 251,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783616;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.10159632948783652;  // std dev = 0,000, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.18393967346672538;  // std dev = 0,472, 268,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09269127618926046;  // std dev = 1,13e-07, 253,000 (wgt'ed) examples reached here.  /* #neg=253 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13551997745641822;  // std dev = 7,760, 269,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839685;  // std dev = 3,49e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839678;  // std dev = 7,88e-08, 208,000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15793558372174135;  // std dev = 7,088, 248,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109144;  // std dev = 1,15e-07, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.08633340799615134;  // std dev = 7,493, 260,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07324622576333699;  // std dev = 8,30e-08, 251,000 (wgt'ed) examples reached here.  /* #neg=251 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.6188441637224416;  // std dev = 2,11e-08, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.6188441637224413;  // std dev = 7,30e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.11669302636020204;  // std dev = 0,441, 242,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return -0.06842697784420278;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06842697784420264;  // std dev = 2,17e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.06842697784420262;  // std dev = 5,16e-08, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.46650051324258596;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.06419184008202626;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.35403759398894924;  // std dev = 2,53e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.15596240601104974;  // std dev = 4,999, 100,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=49 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993692
   AUC PR    = 0.961008
   CLL	      = -0.296305
   Precision = 0.069012 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.129114


Total learning time: 1.712 seconds
Total inference time: 2.34 seconds
AUC ROC: 0.993692


Results scoring model
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.239145
   Precision = 0.226752 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.369678


Total scoring time: 1.869 seconds
Parameter learned model CLL: -0.239145


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, A)'}, {'false,true,true,false': [4.08e-08, 40, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 8, 0], 'false,true,false': [0.0, 234, 0], 'true': [7.674, 88, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 36, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 7, 0], 'false,true,false': [0.0, 233, 0], 'true': [7.264, 75, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [2.98e-08, 50, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 241, 0], 'true': [7.088, 70, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 35, 0], 'true': [7.195, 73, 178], 'false,true,true': [1.83e-08, 57, 0], 'false,true,false,false': [0.0, 193, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.13e-07, 253, 0], 'true,true': [0.472, 90, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [7.76, 91, 178], 'false,true,true': [3.49e-08, 58, 0], 'false,true,false,false': [7.88e-08, 208, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [7.088, 70, 178], 'false,true,true': [1.15e-07, 269, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [8.3e-08, 251, 0], 'true,true,true': [7.493, 82, 178], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true,true': 'genre(B, F)', 'false': 'movie(G, A)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(A, I)', 'false,true': 'genre(B, H)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 9, 0], 'false,true,true,false': [2.17e-08, 43, 0], 'true,true,true,false': [7.3e-08, 15, 0], 'true,true,true,true': [2.11e-08, 8, 0], 'false,true,false': [5.16e-08, 235, 0], 'true,true,false': [0.441, 64, 178], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(A, D)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true,false': 'genre(B, E)'}, {'true,false,false,false': [0.0, 185, 0], 'true,false,true,true': [2.53e-07, 0, 129], 'true,false,false,true': [4.999, 51, 49], 'true,true,true': [0.0, 14, 0], 'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 43, 0], 'true,true,false': [0.0, 64, 0]}]]
[{'': [0.22138051896659483, -1.8897413185109047e-17], 'false,true': [5.3198186596622086e-17, -1.8978171361113786e-16], 'false,true,true': [-6.938893903907228e-18, 4.163336342344337e-17], 'false': [-1.8897413185109047e-17, nan]}, {'': [0.20856442062834557, -8.688701931849052e-17], 'false,true': [-2.0655312086049424e-17, -7.052060413928032e-17], 'false,true,true': [-1.982541115402065e-18, -1.850371707708594e-17], 'false': [-8.688701931849052e-17, nan]}, {'': [0.2025884495317415, -9.70024212641775e-17], 'false,true': [2.1350442781253012e-17, -8.660660938984624e-17], 'false,true,true': [0.0, 1.7763568394002505e-17], 'false': [-9.70024212641775e-17, nan]}, {'': [0.2062506944334173, -5.765368689281514e-17], 'false,true,false': [-1.5860328923216522e-18, -9.779166538149047e-17], 'false,true': [5.843279076974508e-18, -7.985814738531828e-17], 'false': [-5.765368689281514e-17, nan]}, {'': [0.22304522165292923, 5.0903506267398484e-17], 'true': [0.22304522165292923, nan], 'false': [5.0903506267398484e-17, nan]}, {'': [0.22384986387694936, 3.4224920307993546e-17], 'false,true,false': [nan, 2.9890619893754213e-17], 'false,true': [2.1055953915304692e-17, 2.9890619893754213e-17], 'false': [3.4224920307993546e-17, nan]}, {'': [0.20258844953173802, 4.9526677678445644e-17], 'false,true': [4.9526677678445644e-17, nan], 'false': [4.9526677678445644e-17, nan]}, {'': [0.2159171597633138, 2.7423835668031755e-17], 'true,true': [0.2159171597633138, nan], 'true': [0.2159171597633138, nan], 'false': [2.7423835668031755e-17, nan]}, {'': [0.2205197579209684, -4.642047489721909e-17], 'false,true,true': [0.0, 1.0973134545713756e-17], 'true,true,true': [5.551115123125783e-17, 3.552713678800501e-16], 'false': [-4.642047489721909e-17, nan], 'true,true': [3.8616453030440226e-16, 0.19452223208797223], 'true': [0.2205197579209684, nan], 'false,true': [1.1742743529689156e-17, 1.1338447911065428e-17]}, {'': [0.08934298714924224, nan], 'true': [0.023836231521398393, 0.09630097888272102], 'true,false,false': [0.24990000000000046, -3.600723323108616e-18], 'true,true': [-1.2688263138573217e-16, -1.734723475976807e-18], 'true,false,true': [4.957274900651862e-16, -2.581914010756178e-18], 'true,false': [0.03279672366062419, 0.08960238818420771]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, F).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, F).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,false;genre(A, F).;true;true
3;false;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, I).;true;true
8;true,true;genre(B, F).;true;true
8;true;genre(A, E).;true;true
8;false;genre(B, H).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false;genre(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 6,14e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.14185106490048843;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.12544463852839183;  // std dev = 0,000, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360636;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.11231637819360633;  // std dev = 3,73e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.1123163781936067;  // std dev = 0,000, 216,000 (wgt'ed) examples reached here.  /* #neg=216 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then return -0.10159632948783624;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.1015963294878362;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( genre(A, E) )
%   | | then return -0.10159632948783634;  // std dev = 1,86e-09, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.10159632948783652;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.09269127618926104;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.09269127618926085;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926094;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.09269127618926086;  // std dev = 1,05e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.09269127618926093;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.0851847513883968;  // std dev = 3,09e-09, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839679;  // std dev = 3,61e-09, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.08518475138839687;  // std dev = 1,61e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839676;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.08518475138839676;  // std dev = 2,58e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109176;  // std dev = 4,37e-09, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0787767547310917;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.07877675473109166;  // std dev = 1,67e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109168;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.07877675473109162;  // std dev = 1,18e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 1,18e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333702;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( actor(A) )
%   | | | then return -0.07324622576333702;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return -0.07324622576333702;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( genre(B, F) )
%   | then return -0.06842697784420261;  // std dev = 2,79e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420261;  // std dev = 2,79e-09, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else return -0.06842697784420261;  // std dev = 2,95e-09, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202623;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.0870960548387715;  // std dev = 1,095, 169,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=129 */
%   | | | else return -0.06419184008202614;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A), director(B) )
%   | | | then return 0.06794073997799863;  // std dev = 0,742, 63,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=42 */
%   | | | else return -0.05857486805518306;  // std dev = 0,517, 247,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064374
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.98 seconds
Total inference time: 3.07 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06715
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.878 seconds
Refined model CLL: -0.06715


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064374
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.439 seconds
Total inference time: 3.07 seconds
AUC ROC: 1.0
Total revision time: 9.439
Best scored revision CLL: -0.06715


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 02:59:02
{'Inference time': 3.07, 'CLL': -0.064374, 'parameter': {'Inference time': 2.34, 'CLL': -0.296305, 'Precision': [0.069012, 0.5], 'AUC ROC': 0.993692, 'Recall': 1.0, 'Learning time': 1.712, 'AUC PR': 0.961008, 'F1': 0.129114}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 9.439, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
0;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
0;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
0;false,true,false;haswordtitle(H, D).;false;false
0;false,true;author(F, E), venue(F, A).;true;true
0;false,true,true;author(G, E), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;false,true,false;haswordauthor(H, D).;false;false
2;false,true;title(F, E), venue(F, A).;true;true
2;false,true,true;samebib(F, G), venue(G, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
3;false,false,true;haswordauthor(K, I).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), venue(G, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
4;false,false,true;title(L, K), venue(L, B).;false;false
4;true,true,true;haswordauthor(E, C).;false;false
4;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
4;true,true,false;haswordauthor(G, C).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;true,true;haswordtitle(F, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true,false;title(H, E), venue(H, A).;false;false
5;false,true;haswordauthor(F, D).;true;true
5;false,true,true;author(G, F), venue(G, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false;haswordvenue(A, J), haswordauthor(K, J).;true;true
6;false,false,true;author(L, K), venue(L, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false,true,true;author(H, G), title(H, E).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;true,false,true;author(I, H), venue(I, A).;false;false
7;true,true,false;author(F, E), venue(F, B).;false;false
7;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
7;true,true;haswordvenue(B, D).;false;true
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true;title(K, J), venue(K, B).;true;false
8;false,true,true;samebib(K, L), venue(L, A).;false;false
8;true,true,true;samebib(F, G), venue(G, B).;false;false
8;false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;true,true,false;haswordtitle(H, C).;false;false
8;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
8;true,true;author(F, E), venue(F, A).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;false,true;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;false;haswordvenue(A, G), haswordvenue(B, G).;true;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;false
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false;title(F, D), venue(F, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.47458729126389637;  // std dev = 4,155, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 7,90e-09, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4518455365315057;  // std dev = 3,901, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24120169554244075;  // std dev = 4,571, 84,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360632;  // std dev = 4,17e-09, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.31479033907407084;  // std dev = 3,901, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783627;  // std dev = 2,36e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.26055136301226645;  // std dev = 0,466, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09269127618926104;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10635734504033882;  // std dev = 4,284, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09672449847077808;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839679;  // std dev = 7,45e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13052625105115406;  // std dev = 4,009, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07907589610004755;  // std dev = 0,031, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.0320789470536294;  // std dev = 4,363, 78,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07315376620482346;  // std dev = 0,002, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.5527872482569396;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.009712751743060397;  // std dev = 0,496, 80,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return -0.09593401258398167;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06841380414383227;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06840073603740907;  // std dev = 0,000725, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.41560338593843854;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06837910239591208;  // std dev = 0,022, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.44481287763225236;  // std dev = 1,63e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06418021678866129;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5551871223677474;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06418100167819456;  // std dev = 1,67e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978805
   AUC PR    = 0.865091
   CLL	      = -0.191438
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.904065


Total learning time: 1.15 seconds
Total inference time: 2.498 seconds
AUC ROC: 0.978805


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.203125
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.233 seconds
Parameter learned model CLL: -0.203125


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, A)'}, {'false,true,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [7.9e-09, 59, 0], 'true': [4.155, 28, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 8, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 57, 0], 'true': [3.901, 23, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [4.17e-09, 49, 0], 'true': [4.571, 39, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 3, 0], 'true': [3.901, 23, 45], 'false,true,true': [0.0, 5, 0], 'false,true,false,false': [2.36e-08, 49, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 65, 0], 'true,true': [0.466, 21, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [4.284, 31, 45], 'false,true,true': [0.028, 3, 0], 'false,true,false,false': [7.45e-09, 58, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [4.009, 25, 45], 'false,true,true': [0.031, 82, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.002, 54, 0], 'true,true,true': [4.363, 33, 45], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true,true': 'genre(B, F)', 'false': 'movie(G, A)', 'true,true': 'genre(A, E)', 'false,true,true': 'genre(A, I)', 'false,true': 'genre(B, H)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 4, 0], 'true,true,true,false': [0.0, 5, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true,false': [0.000725, 56, 0], 'true,true,false': [0.496, 35, 45], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(A, D)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true,false': 'genre(B, E)'}, {'true,false,false,false': [1.67e-08, 50, 0], 'true,false,true,true': [1.63e-07, 0, 45], 'true,false,false,true': [0.0, 22, 0], 'true,true,true': [0.0, 4, 0], 'false': [0.0, 0, 0], 'true,false,true,false': [2.63e-09, 5, 0], 'true,true,false': [0.022, 5, 0]}]]
[{'': [0.23644210921373646, 6.446456272017038e-17], 'false,true': [0.0, 6.39789539614497e-17], 'false,true,true': [nan, 0.0], 'false': [6.446456272017038e-17, nan]}, {'': [0.22383217993079552, -1.708035422500241e-17], 'false,true': [0.0, -3.895519384649672e-17], 'false,true,true': [nan, 0.0], 'false': [-1.708035422500241e-17, nan]}, {'': [0.2487244897959177, 2.3042364662031552e-17], 'false,true': [0.0, 1.586032892321652e-17], 'false,true,true': [nan, 0.0], 'false': [2.3042364662031552e-17, nan]}, {'': [0.22383217993079596, 2.1425356615573195e-17], 'false,true,false': [-1.1564823173178713e-18, 1.1328806373726087e-17], 'false,true': [0.0, 1.4945309946877107e-17], 'false': [2.1425356615573195e-17, nan]}, {'': [0.21694214876033002, -2.2204460492503132e-17], 'true': [0.21694214876033002, nan], 'false': [-2.2204460492503132e-17, nan]}, {'': [0.24151662049861486, 1.932531896578266e-05], 'false,true,false': [nan, 9.570888143320315e-19], 'false,true': [0.00026633152545065447, 9.570888143320315e-19], 'false': [1.932531896578266e-05, nan]}, {'': [0.2295918367346938, 1.1846995373869687e-05], 'false,true': [1.1846995373869687e-05, nan], 'false': [1.1846995373869687e-05, nan]}, {'': [0.24408284023668622, 5.102368563564069e-08], 'true,true': [0.24408284023668622, nan], 'true': [0.24408284023668622, nan], 'false': [5.102368563564069e-08, nan]}, {'': [0.2491349480968861, 1.2231691696057514e-05], 'false,true,true': [0.0, 0.0], 'true,true,true': [nan, -4.4408920985006264e-17], 'false': [1.2231691696057514e-05, nan], 'false,true': [0.00012117789961428385, 9.392647288909904e-09], 'true': [0.2491349480968861, nan], 'true,true': [-4.4408920985006264e-17, 0.24609375000000022]}, {'': [0.12661676587046536, nan], 'true,false,true': [5.921189464667501e-16, 1.3877787807814458e-18], 'true,false,false': [-1.6148698540002277e-16, 5.551115123125783e-18], 'true,true': [0.0, 9.555933584781406e-05], 'true': [0.029822151009204562, 0.12919411727283214], 'true,false': [0.023316657315136453, 0.051156580171694284]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,false;genre(A, F).;true;true
3;false;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,true;genre(A, I).;true;true
8;true;genre(A, E).;true;true
8;false;genre(B, H).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false;genre(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.26189302493912087;  // std dev = 0,393, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.08006198787611658;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.32071184716014944;  // std dev = 3,73e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.09269127618926103;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839686;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08518475138839682;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.07436000914528047;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839686;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.0851847513883968;  // std dev = 1,75e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10583280483353527;  // std dev = 0,564, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( female(B) )
%   | then return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07181291710605497;  // std dev = 0,003, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.06286958772495094;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.06002901637441174;  // std dev = 0,001, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.06848183128695892;  // std dev = 0,000100, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06702699619102302;  // std dev = 0,002, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( female(A) )
%   | | | then return 0.15274385809367078;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.1527438580936709;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(B, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06255469818123968;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.10351489614800541;  // std dev = 0,258, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.12299598166967574;  // std dev = 0,272, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(B) )
%   | | | then return -0.06422432318932465;  // std dev = 0,000159, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06382166967588151;  // std dev = 0,005, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074083
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 2.575 seconds
Total inference time: 2.802 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066243
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.591 seconds
Refined model CLL: -0.066243


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074083
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 6.549 seconds
Total inference time: 2.802 seconds
AUC ROC: 1.0
Total revision time: 6.549
Best scored revision CLL: -0.066243


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 02:59:14
{'Inference time': 2.802, 'CLL': -0.074083, 'parameter': {'Inference time': 2.498, 'CLL': -0.191438, 'Precision': [1.0, 0.5], 'AUC ROC': 0.978805, 'Recall': 0.824926, 'Learning time': 1.15, 'AUC PR': 0.865091, 'F1': 0.904065}, 'Precision': [0.743929, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 6.549, 'AUC PR': 1.0, 'F1': 0.853165}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
0;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
0;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
0;false,true,false;haswordtitle(H, D).;false;false
0;false,true;author(F, E), venue(F, A).;true;true
0;false,true,true;author(G, E), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false,true,true;samebib(F, G), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,false,true;title(K, J), venue(K, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;false,true,false;haswordauthor(H, D).;false;false
2;false,true;title(F, E), venue(F, A).;true;true
2;false,true,true;samebib(F, G), venue(G, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
3;false,false,true;haswordauthor(K, I).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
3;false,true,false;author(H, E), venue(H, A).;false;false
3;false,true;haswordtitle(F, D).;true;true
3;false,true,true;author(G, E), venue(G, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
4;false,false,true;title(L, K), venue(L, B).;false;false
4;true,true,true;haswordauthor(E, C).;false;false
4;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
4;true,true,false;haswordauthor(G, C).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;true,true;haswordtitle(F, D).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true,false;title(H, E), venue(H, A).;false;false
5;false,true;haswordauthor(F, D).;true;true
5;false,true,true;author(G, F), venue(G, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false;haswordvenue(A, J), haswordauthor(K, J).;true;true
6;false,false,true;author(L, K), venue(L, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false,true,true;author(H, G), title(H, E).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;true,false,true;author(I, H), venue(I, A).;false;false
7;true,true,false;author(F, E), venue(F, B).;false;false
7;false;haswordvenue(B, J), haswordtitle(K, J).;false;true
7;true,true;haswordvenue(B, D).;false;true
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
7;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true;title(K, J), venue(K, B).;true;false
8;false,true,true;samebib(K, L), venue(L, A).;false;false
8;true,true,true;samebib(F, G), venue(G, B).;false;false
8;false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;true,true,false;haswordtitle(H, C).;false;false
8;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
8;true,true;author(F, E), venue(F, A).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;false,true;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true;venue(E, A), title(E, D).;true;true
9;false;haswordvenue(A, G), haswordvenue(B, G).;true;false
9;true,false,false;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;false
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false;title(F, D), venue(F, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.510322848142991;  // std dev = 3,956, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4090925387668158;  // std dev = 4,108, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1254446385283916;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.35911726568302743;  // std dev = 3,956, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360628;  // std dev = 5,89e-09, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.33061581714866206;  // std dev = 3,655, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.1015963294878362;  // std dev = 4,21e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.2506935824231533;  // std dev = 0,457, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11004394991583528;  // std dev = 4,108, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1024943720119687;  // std dev = 0,024, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839679;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14993804622895238;  // std dev = 3,721, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.0791774582491904;  // std dev = 0,031, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.03715698538934089;  // std dev = 4,155, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07309499253341269;  // std dev = 0,002, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.588309431503018;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.054547711354125436;  // std dev = 0,479, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06837887266658077;  // std dev = 0,002, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.588309431503018;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.06314792654808245;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3985456134766489;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.06841107714092742;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.3382964917865092;  // std dev = 2,714, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return -0.06417974489005554;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.983069
   AUC PR    = 0.891379
   CLL	      = -0.233349
   Precision = 0.106309 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.192187


Total learning time: 1.144 seconds
Total inference time: 3.142 seconds
AUC ROC: 0.983069


Results scoring model
   AUC ROC   = 0.97178
   AUC PR    = 0.824078
   CLL	      = -0.241885
   Precision = 0.078809 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.146104


Total scoring time: 1.25 seconds
Parameter learned model CLL: -0.241885


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, A)'}, {'false,true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [8.12e-09, 66, 0], 'true': [3.956, 24, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 63, 0], 'true': [4.108, 27, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [2.63e-09, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [5.89e-09, 61, 0], 'true': [3.956, 24, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 2, 0], 'true': [3.655, 19, 45], 'false,true,true': [0.0, 2, 0], 'false,true,false,false': [4.21e-08, 62, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 66, 0], 'true,true': [0.457, 19, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true': [4.108, 27, 45], 'false,true,true': [0.024, 2, 0], 'false,true,false,false': [1.83e-08, 56, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.721, 20, 45], 'false,true,true': [0.031, 64, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.002, 47, 0], 'true,true,true': [4.155, 28, 45], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(B, F)', 'false': 'movie(G, A)', 'true,true': 'genre(A, E)', 'true': 'movie(D, B)', 'false,true': 'genre(B, H)'}, {'false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true,false': [0.002, 68, 0], 'true,true,false': [0.479, 25, 45], 'false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(A, D)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,true': 'movie(C, B)', 'true,false': 'genre(B, E)'}, {'true,false,false,false': [0.0, 63, 0], 'true,false,true,true': [0.0, 0, 35], 'true,false,false,true': [2.714, 28, 10], 'true,true,true': [0.0, 1, 0], 'false': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,false': [0.0, 3, 0]}]]
[{'': [0.2268431001890362, 6.857259857978908e-17], 'false,true': [0.0, 6.728624391667616e-17], 'false,true,true': [nan, 0.0], 'false': [6.857259857978908e-17, nan]}, {'': [0.234375000000001, -3.8163916471489756e-17], 'false,true': [0.0, -4.053195169266444e-17], 'false,true,true': [nan, 0.0], 'false': [-3.8163916471489756e-17, nan]}, {'': [0.22684310018903608, 3.8163916471489756e-17], 'false,true': [2.3129646346357427e-18, 3.45807171604557e-17], 'false,true,true': [nan, 2.3129646346357427e-18], 'false': [3.8163916471489756e-17, nan]}, {'': [0.20874023437500083, 3.027880976250427e-17], 'false,true,false': [0.0, 2.865091676452017e-17], 'false,true': [0.0, 2.949029909160572e-17], 'false': [3.027880976250427e-17, nan]}, {'': [0.2087402343750003, -1.6821560979169039e-18], 'true': [0.2087402343750003, nan], 'false': [-1.6821560979169039e-18, nan]}, {'': [0.2343750000000001, 2.0307382960198096e-05], 'false,true,false': [nan, 5.9476233462061954e-18], 'false,true': [0.00029962296613198457, 5.9476233462061954e-18], 'false': [2.0307382960198096e-05, nan]}, {'': [0.21301775147928978, 1.4599056026967476e-05], 'false,true': [1.4599056026967476e-05, nan], 'false': [1.4599056026967476e-05, nan]}, {'': [0.2364421092137363, 1.2923682072616263e-07], 'true,true': [0.2364421092137363, nan], 'true': [0.2364421092137363, nan], 'false': [1.2923682072616263e-07, nan]}, {'': [0.23209680618924827, 3.422522952218767e-08], 'true,true,true': [nan, 0.0], 'false': [3.422522952218767e-08, nan], 'false,true': [nan, 3.422522952218767e-08], 'true': [0.23209680618924827, nan], 'true,true': [0.0, 0.229591836734694]}, {'': [0.12621799262414107, nan], 'true,false,true': [-4.314009467114894e-16, 0.0], 'true,false,false': [0.1939058171745151, 0.0], 'true,true': [0.0, 0.0], 'true': [0.05171148867872489, 0.12755009866789027], 'true,false': [0.005888656853346941, 0.09058873292814835]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,false;genre(A, F).;true;true
3;false;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;true;movie(C, B).;true;true
9;false;genre(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926105;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1,05e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.08518475138839686;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.07324622576333704;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.457841559875266;  // std dev = 0,551, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420265;  // std dev = 1,67e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.06842697784420264;  // std dev = 1,90e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.0684269778442027;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.06842697784420271;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.05759669530908387;  // std dev = 0,023, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801115;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202625;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | | else return 0.10097388499300493;  // std dev = 0,256, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999707
   AUC PR    = 0.989873
   CLL	      = -0.07949
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.505 seconds
Total inference time: 3.195 seconds
AUC ROC: 0.999707


Results scoring model
   AUC ROC   = 0.999946
   AUC PR    = 0.997367
   CLL	      = -0.06588
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.424 seconds
Refined model CLL: -0.06588


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999707
   AUC PR    = 0.989873
   CLL	      = -0.07949
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 6.323 seconds
Total inference time: 3.195 seconds
AUC ROC: 0.999707
Total revision time: 6.323
Best scored revision CLL: -0.06588


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 02:59:27
{'Inference time': 3.195, 'CLL': -0.07949, 'parameter': {'Inference time': 3.142, 'CLL': -0.233349, 'Precision': [0.106309, 0.5], 'AUC ROC': 0.983069, 'Recall': 1.0, 'Learning time': 1.144, 'AUC PR': 0.891379, 'F1': 0.192187}, 'Precision': [0.742291, 0.5], 'AUC ROC': 0.999707, 'Recall': 1.0, 'Learning time': 6.323, 'AUC PR': 0.989873, 'F1': 0.852086}


