Starting experiment #1 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21630719399999776;  // std dev = 0,479, 7.949,000 (wgt'ed) examples reached here.  /* #neg=5.102 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8236661764788223;  // std dev = 1,702, 87,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=84 */
%   | | | else return -0.13865617672157407;  // std dev = 0,998, 313,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.1642713840791042;  // std dev = 3,226, 49,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.05949812372401716;  // std dev = 4,390, 255,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.010566148699370616;  // std dev = 6,390, 358,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=47 */
%   | | | else return -0.10481402786345068;  // std dev = 1,388, 54,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.8297268737421079;  // std dev = 5,96e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.23639354040877644;  // std dev = 6,016, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( haswordauthor(E, H), haswordvenue(A, H) )
%   | | | then return 0.5569996010148353;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.10698198701738568;  // std dev = 2,164, 79,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=5 */
%   | else return 0.18521373618415082;  // std dev = 0,479, 7.764,000 (wgt'ed) examples reached here.  /* #neg=5.004 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.6809256159608962;  // std dev = 1,954, 88,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=84 */
%   | | | else return -0.12250609017557579;  // std dev = 0,998, 304,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=1 */
%   | | else return -0.01900439269562112;  // std dev = 0,322, 300,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=36 */
%   | else return -0.022971257646976235;  // std dev = 0,319, 425,000 (wgt'ed) examples reached here.  /* #neg=376 #pos=49 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6126446973249576;  // std dev = 0,289, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.29395083084322626;  // std dev = 4,459, 79,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=39 */
%   | | | else return 0.043171057430339346;  // std dev = 4,526, 112,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=27 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.3871112793831466;  // std dev = 3,968, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 2.2827895582423275E-4;  // std dev = 4,611, 142,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=27 */
%   | | else return 0.15772689807647491;  // std dev = 0,479, 7.572,000 (wgt'ed) examples reached here.  /* #neg=4.878 #pos=2.694 */
%   else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | then if ( haswordtitle(M, K) )
%   | | then return 0.19091525355797753;  // std dev = 0,468, 47,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | else return 0.004803366868327615;  // std dev = 0,336, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else return -0.015668771389501474;  // std dev = 0,296, 1.092,000 (wgt'ed) examples reached here.  /* #neg=941 #pos=151 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13297155381391498;  // std dev = 0,478, 7.966,000 (wgt'ed) examples reached here.  /* #neg=5.119 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6938551703844691;  // std dev = 0,336, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1516367970454584;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.13938483002101915;  // std dev = 3,174, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return -0.13398131961324974;  // std dev = 0,039, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.021934255614187766;  // std dev = 0,940, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.061663618453831476;  // std dev = 2,420, 61,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.019712950770524713;  // std dev = 8,234, 734,000 (wgt'ed) examples reached here.  /* #neg=646 #pos=88 */
%   | | | else return 0.007318235695139089;  // std dev = 4,380, 263,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=46 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.18699617176781094;  // std dev = 5,698, 147,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=69 */
%   | | | else return 0.6043568259232494;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.07964240829906252;  // std dev = 0,287, 101,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=13 */
%   | else return 0.1094108291178997;  // std dev = 0,479, 7.718,000 (wgt'ed) examples reached here.  /* #neg=4.958 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then return 0.03316434893774835;  // std dev = 0,288, 390,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=85 */
%   | | else return -0.008187976889645317;  // std dev = 0,331, 273,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=36 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.007731539600968295;  // std dev = 6,321, 332,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=47 */
%   | | | else return -0.09546267020184848;  // std dev = 1,395, 71,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=2 */
%   | | else return -0.12204849871086922;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08979734266406453;  // std dev = 0,478, 7.925,000 (wgt'ed) examples reached here.  /* #neg=5.078 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, E) )
%   | | | then return 0.019634789083144887;  // std dev = 5,768, 410,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=85 */
%   | | | else return -0.04488626540842775;  // std dev = 3,448, 140,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=15 */
%   | | else if ( haswordtitle(E, I), haswordvenue(A, I) )
%   | | | then return 0.06419028825719031;  // std dev = 4,068, 108,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=21 */
%   | | | else return -0.1312137924882774;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.008868563377905632;  // std dev = 6,379, 373,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=47 */
%   | | | else return -0.08013092239116135;  // std dev = 1,391, 60,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=2 */
%   | | else return -0.10997871883552437;  // std dev = 0,005, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07021934520501612;  // std dev = 0,478, 7.954,000 (wgt'ed) examples reached here.  /* #neg=5.107 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.04651083824874307;  // std dev = 0,549, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.28526281826438915;  // std dev = 2,768, 31,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | else return -0.030283642670531595;  // std dev = 0,263, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.0176156401110701;  // std dev = 8,074, 686,000 (wgt'ed) examples reached here.  /* #neg=604 #pos=82 */
%   | | | else return 0.021170516658923375;  // std dev = 2,832, 103,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=21 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.008335852885752835;  // std dev = 4,411, 254,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=48 */
%   | | | else return -0.09928449154664688;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05988984041568348;  // std dev = 0,479, 7.870,000 (wgt'ed) examples reached here.  /* #neg=5.023 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.13623698800522932;  // std dev = 3,044, 43,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return -0.018208928333884926;  // std dev = 5,873, 541,000 (wgt'ed) examples reached here.  /* #neg=458 #pos=83 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.07014517719990845;  // std dev = 4,038, 102,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=21 */
%   | | | else return -0.11715155515427424;  // std dev = 0,001, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.0012309146255201277;  // std dev = 6,363, 360,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=47 */
%   | | | else return -0.07269409910967004;  // std dev = 1,393, 63,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=2 */
%   | | else return -0.0907522314945857;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.3302314708000159;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.00561625631622749;  // std dev = 6,575, 212,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=66 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.535145155391093;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5428461492480524;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.046114580498263134;  // std dev = 0,479, 7.661,000 (wgt'ed) examples reached here.  /* #neg=4.901 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then if ( author(L, J), title(L, K) )
%   | | | then return 0.07069935936035338;  // std dev = 0,469, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04382331039820166;  // std dev = 3,186, 47,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else return -0.010292472763938854;  // std dev = 0,282, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else return -0.010548225372592937;  // std dev = 0,293, 1.088,000 (wgt'ed) examples reached here.  /* #neg=937 #pos=151 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( haswordauthor(E, C) )
%   | then if ( title(F, D), venue(F, B) )
%   | | then return -0.2965551713981787;  // std dev = 0,065, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.24359806979981494;  // std dev = 3,975, 71,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=41 */
%   | | | else return 0.03796880979999713;  // std dev = 4,949, 145,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=50 */
%   | else if ( venue(H, B), title(H, D) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return 0.023795427301182684;  // std dev = 40,631, 7.308,000 (wgt'ed) examples reached here.  /* #neg=4.765 #pos=2.543 */
%   | | | else return 0.04224047002498453;  // std dev = 9,476, 646,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=132 */
%   | | else if ( title(I, D), venue(I, A) )
%   | | | then return -0.16786099032377896;  // std dev = 5,105, 266,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=30 */
%   | | | else return 0.17327994697807927;  // std dev = 6,641, 249,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=104 */
%   else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | then return 0.6096851327461854;  // std dev = 0,231, 72,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=68 */
%   | else return -0.0019806632673901262;  // std dev = 0,270, 282,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=49 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true;title(K, J), venue(K, A).;true;false
1;false,true,true;samebib(K, L), venue(L, B).;false;false
1;true,true,true;haswordauthor(G, C).;false;false
1;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
1;true,true,false;haswordauthor(E, H), haswordvenue(A, H).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true;haswordtitle(F, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true;haswordtitle(M, K).;false;false
2;true,false,true;author(J, I), venue(J, A).;false;false
2;true,true,false;author(G, E), venue(G, B).;false;false
2;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
2;true,true;haswordauthor(F, C).;false;true
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
2;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
3;false,false,true;author(K, J), venue(K, A).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
4;false,false,true;title(L, K), venue(L, B).;false;false
4;true,true,true;haswordtitle(F, C).;false;false
4;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
4;true,true;haswordtitle(F, D).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false,true;title(I, H), venue(I, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
5;false,true,true;author(H, G), title(H, E).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
6;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false,true;haswordtitle(F, D).;true;false
6;false,true,true;author(G, E), title(G, F).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
7;false,false,true;title(K, J), venue(K, B).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
7;false,true,true;haswordauthor(G, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true;haswordtitle(K, I).;true;false
8;false,true,true;author(L, J), title(L, K).;false;false
8;true,true,true;haswordauthor(G, C).;false;false
8;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
8;true,true,false;haswordauthor(H, C).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;true,true;haswordtitle(F, C).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true,false;author(G, E), venue(G, B).;false;false
9;false;haswordvenue(A, J), haswordvenue(B, J).;false;false
9;true,false,false;title(I, D), venue(I, A).;false;false
9;true,true;title(F, D), venue(F, B).;false;true
9;true;haswordauthor(E, C).;true;true
9;true,false;venue(H, B), title(H, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.46684458727342615;  // std dev = 4,681, 92,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048766;  // std dev = 8,33e-09, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.4277257344221485;  // std dev = 4,513, 88,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.6945201642388624;  // std dev = 0,991, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.28793597611201455;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.11231637819360624;  // std dev = 6,84e-09, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3212139654149683;  // std dev = 3,215, 79,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.10159632948783615;  // std dev = 6,59e-09, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.16719839537088646;  // std dev = 0,376, 93,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1832578063497804;  // std dev = 3,251, 83,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.08518475138839678;  // std dev = 3,94e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0847337116479591;  // std dev = 3,584, 93,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=56 */
%   else if ( movie(D, B) )
%   | then return -0.07877675473109162;  // std dev = 5,10e-09, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10782931592380708;  // std dev = 3,319, 85,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07367123530695388;  // std dev = 0,029, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.04197742950337271;  // std dev = 0,375, 92,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.06874471934395707;  // std dev = 0,003, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then return 0.2940153423625697;  // std dev = 0,935, 62,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | else if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.17117204929846208;  // std dev = 1,733, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.973666
   AUC PR    = 0.696168
   CLL	      = -0.182858
   Precision = 0.799401 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.809091


Total learning time: 1.284 seconds
Total inference time: 3.183 seconds
AUC ROC: 0.973666


Results scoring model
   AUC ROC   = 0.999547
   AUC PR    = 0.949153
   CLL	      = -0.183855
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.627 seconds
Parameter learned model CLL: -0.183855


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [8.33e-09, 77, 0], 'true': [4.681, 36, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [4.513, 32, 56], 'false,true,true,false': [0.0, 5, 0], 'false,true,false': [0.0, 74, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [6.84e-09, 73, 0], 'true,true,true': [0.991, 1, 56], 'true,true,false': [0.0, 33, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 9, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [6.59e-09, 78, 0], 'true': [3.215, 23, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 77, 0], 'true,true': [0.376, 37, 56], 'false,true,true': [0.0, 6, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.251, 27, 56], 'false,true,true': [3.94e-08, 96, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true': [5.1e-09, 84, 0], 'true': [3.584, 37, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.319, 29, 56], 'false,true,true': [0.029, 69, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.003, 80, 0], 'true,true': [0.375, 36, 56]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,false': 'genre(B, F)', 'true': 'genre(B, D)', 'true,false': 'genre(B, E)'}, {'true,false,false,false': [1.733, 109, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.935, 6, 56], 'true,false,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.2381852551984874, 7.307797124114954e-17], 'false,true': [0.0, 7.209240419643874e-17], 'false,true,true': [nan, 0.0], 'false': [7.307797124114954e-17, nan]}, {'': [0.2314049586776849, -2.5296220814244072e-17], 'false,true,true': [nan, 0.0], 'false': [-2.5296220814244072e-17, nan], 'false,true': [0.0, -2.700542492331462e-17], 'true': [0.2314049586776849, nan], 'true,true': [0.2314049586776849, nan]}, {'': [0.235061728395062, 4.7146457210109385e-17], 'true,true': [0.017236072637735304, -5.3828995133340925e-17], 'true': [0.235061728395062, nan], 'false': [4.7146457210109385e-17, nan]}, {'': [0.13084001289423214, 3.317907889684376e-17], 'false,true': [-6.1679056923619804e-18, 4.554761126667309e-17], 'false,true,true': [nan, -6.1679056923619804e-18], 'false': [3.317907889684376e-17, nan]}, {'': [0.1410286581205432, 1.33761810195802e-18], 'false,true': [0.0, 0.0], 'true': [0.1410286581205432, nan], 'false': [1.33761810195802e-18, nan]}, {'': [0.127366704211851, 1.61907524424502e-17], 'false,true': [1.61907524424502e-17, nan], 'false': [1.61907524424502e-17, nan]}, {'': [0.13810402111494444, 2.5112187461759493e-17], 'false': [2.5112187461759493e-17, nan]}, {'': [0.12961682445968623, 1.2283051627240535e-05], 'false,true': [1.2283051627240535e-05, nan], 'false': [1.2283051627240535e-05, nan]}, {'': [0.14085124284476153, 9.393636926814663e-06], 'true': [0.14085124284476153, nan], 'false': [9.393636926814663e-06, nan]}, {'': [0.0726897128256053, nan], 'true,false,false': [nan, 0.027561934751188306], 'true': [0.014088517095696756, 0.027561934751188306], 'true,false': [nan, 0.027561934751188306]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(B, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5220331034129512;  // std dev = 0,180, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( female(A) )
%   | | then return 0.41751358415831;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.4256417132823829;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.1015963294878363;  // std dev = 2,24e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601494;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.32622757958953147;  // std dev = 6,45e-09, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.09269127618926101;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694891;  // std dev = 7,45e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.25893241570375475;  // std dev = 6,45e-09, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( actor(A) )
%   | then return -0.08518475138839679;  // std dev = 2,36e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325355;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.21241035488442755;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.3150477181925853;  // std dev = 0,579, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07101421224673267;  // std dev = 0,005, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(A) )
%   | | then return 0.17709649774527747;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.1790396514182406;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( actor(A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.15421634240902068;  // std dev = 4,56e-09, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06856939406258526;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.06615864658067398;  // std dev = 0,012, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06856939406258526;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then return -0.06842697784420268;  // std dev = 3,23e-09, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 7,45e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13515552881964596;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(A), female(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(B) )
%   | | | then return -0.0642061975837468;  // std dev = 0,000182, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06324766372063538;  // std dev = 0,012, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(B) )
%   | | | then return -0.06419184008202622;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.06430329107576772;  // std dev = 0,004, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */


Results
   AUC ROC   = 0.99889
   AUC PR    = 0.966568
   CLL	      = -0.078922
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.034 seconds
Total inference time: 3.061 seconds
AUC ROC: 0.99889


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064821
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.593 seconds
Refined model CLL: -0.064821


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.99889
   AUC PR    = 0.966568
   CLL	      = -0.078922
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 7.538 seconds
Total inference time: 3.061 seconds
AUC ROC: 0.99889
Total revision time: 7.538
Best scored revision CLL: -0.064821


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:33:43
{'Inference time': 3.061, 'CLL': -0.078922, 'parameter': {'Inference time': 3.183, 'CLL': -0.182858, 'Precision': [0.799401, 0.5], 'AUC ROC': 0.973666, 'Recall': 0.819018, 'Learning time': 1.284, 'AUC PR': 0.696168, 'F1': 0.809091}, 'Precision': [0.735892, 0.5], 'AUC ROC': 0.99889, 'Recall': 1.0, 'Learning time': 7.538, 'AUC PR': 0.966568, 'F1': 0.847854}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true;title(K, J), venue(K, A).;true;false
1;false,true,true;samebib(K, L), venue(L, B).;false;false
1;true,true,true;haswordauthor(G, C).;false;false
1;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
1;true,true,false;haswordauthor(E, H), haswordvenue(A, H).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true;haswordtitle(F, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true;haswordtitle(M, K).;false;false
2;true,false,true;author(J, I), venue(J, A).;false;false
2;true,true,false;author(G, E), venue(G, B).;false;false
2;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
2;true,true;haswordauthor(F, C).;false;true
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
2;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
3;false,false,true;author(K, J), venue(K, A).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
4;false,false,true;title(L, K), venue(L, B).;false;false
4;true,true,true;haswordtitle(F, C).;false;false
4;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
4;true,true;haswordtitle(F, D).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false,true;title(I, H), venue(I, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
5;false,true,true;author(H, G), title(H, E).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
6;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false,true;haswordtitle(F, D).;true;false
6;false,true,true;author(G, E), title(G, F).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
7;false,false,true;title(K, J), venue(K, B).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
7;false,true,true;haswordauthor(G, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true;haswordtitle(K, I).;true;false
8;false,true,true;author(L, J), title(L, K).;false;false
8;true,true,true;haswordauthor(G, C).;false;false
8;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
8;true,true,false;haswordauthor(H, C).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;true,true;haswordtitle(F, C).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true,false;author(G, E), venue(G, B).;false;false
9;false;haswordvenue(A, J), haswordvenue(B, J).;false;false
9;true,false,false;title(I, D), venue(I, A).;false;false
9;true,true;title(F, D), venue(F, B).;false;true
9;true;haswordauthor(E, C).;true;true
9;true,false;venue(H, B), title(H, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5248156017661797;  // std dev = 4,397, 87,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14185106490048766;  // std dev = 8,33e-09, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.554962272908627;  // std dev = 3,626, 75,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.12544463852839144;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.6726559287032502;  // std dev = 1,58e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.32734407129674975;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.11231637819360624;  // std dev = 6,97e-09, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.26679854216277904;  // std dev = 3,312, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783615;  // std dev = 6,45e-09, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.21030697837480705;  // std dev = 0,351, 84,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.0938044078515829;  // std dev = 0,008, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09269127618926107;  // std dev = 1,49e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15429627589582925;  // std dev = 3,242, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.0851823090102414;  // std dev = 0,000121, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08943345545380173;  // std dev = 3,431, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   else if ( movie(D, B) )
%   | then return -0.07876920123055939;  // std dev = 2,38e-05, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0288666690364744;  // std dev = 3,682, 98,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07332530769921813;  // std dev = 0,007, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.05667061797160618;  // std dev = 0,364, 91,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.0684203107643463;  // std dev = 1,25e-05, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then return 0.2776492478074227;  // std dev = 0,957, 65,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   | else if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1918158966305672;  // std dev = 1,832, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.972959
   AUC PR    = 0.696009
   CLL	      = -0.18669
   Precision = 0.800604 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.80916


Total learning time: 1.202 seconds
Total inference time: 2.24 seconds
AUC ROC: 0.972959


Results scoring model
   AUC ROC   = 0.999416
   AUC PR    = 0.935484
   CLL	      = -0.177178
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.779 seconds
Parameter learned model CLL: -0.177178


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 5, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,false': [8.33e-09, 79, 0], 'true': [4.397, 29, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'true,true,true': [3.626, 17, 58], 'false,true,true,false': [0.0, 9, 0], 'false,true,false': [0.0, 85, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [6.97e-09, 75, 0], 'true,true,true': [1.58e-07, 0, 58], 'true,true,false': [0.0, 30, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [6.45e-09, 75, 0], 'true': [3.312, 27, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [1.49e-08, 87, 0], 'true,true': [0.351, 26, 58], 'false,true,true': [0.008, 8, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.242, 27, 58], 'false,true,true': [0.000121, 71, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true': [2.38e-05, 94, 0], 'true': [3.431, 32, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.682, 40, 58], 'false,true,true': [0.007, 86, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [1.25e-05, 94, 0], 'true,true': [0.364, 33, 58]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,false': 'genre(B, F)', 'true': 'genre(B, D)', 'true,false': 'genre(B, E)'}, {'true,false,false,false': [1.832, 106, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.957, 7, 58], 'true,false,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.2222222222222218, 7.314410515177502e-17], 'false,true': [-6.938893903907228e-18, 7.307797124114954e-17], 'false,true,true': [0.0, -2.7755575615628915e-18], 'false': [7.314410515177502e-17, nan]}, {'': [0.17528888888889005, -1.402386978473882e-17], 'false,true,true': [0.0, 0.0], 'false': [-1.402386978473882e-17, nan], 'false,true': [2.7755575615628915e-18, -2.0898315757650005e-17], 'true': [0.17528888888889005, nan], 'true,true': [0.17528888888889005, nan]}, {'': [0.22469008264462892, 4.884981308350689e-17], 'true,true': [4.2877578882075013e-16, -1.6283271027835628e-16], 'true': [0.22469008264462892, nan], 'false': [4.884981308350689e-17, nan]}, {'': [0.12903814928246474, 4.469729060179202e-17], 'false,true': [0.0, 4.2928623618839385e-17], 'false,true,true': [nan, 0.0], 'false': [4.469729060179202e-17, nan]}, {'': [0.12330267031201532, 8.259498703235367e-07], 'false,true': [8.673434683647424e-06, 2.5522368382187506e-18], 'true': [0.12330267031201532, nan], 'false': [8.259498703235367e-07, nan]}, {'': [0.1236715426747408, 2.0579980442807762e-10], 'false,true': [2.0579980442807762e-10, nan], 'false': [2.0579980442807762e-10, nan]}, {'': [0.13078114942196414, 5.644419494447138e-10], 'false': [5.644419494447138e-10, nan]}, {'': [0.13835656678577185, 5.837072793181828e-07], 'false,true': [5.837072793181828e-07, nan], 'false': [5.837072793181828e-07, nan]}, {'': [0.1325961805005729, 1.5538871489765034e-10], 'true': [0.1325961805005729, nan], 'false': [1.5538871489765034e-10, nan]}, {'': [0.07692777889655171, nan], 'true,false,false': [nan, 0.031675620717998426], 'true': [0.014102920025819407, 0.031675620717998426], 'true,false': [nan, 0.031675620717998426]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(B, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 7,30e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( female(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360636;  // std dev = 2,95e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( director(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.10159632948783621;  // std dev = 4,75e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694892;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2551722425694892;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 1,61e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.08518475138839685;  // std dev = 2,63e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1,05e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.0851847513883968;  // std dev = 1,97e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.08983912190911836;  // std dev = 0,021, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109176;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.07843964403596652;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08303547467057122;  // std dev = 0,019, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.07295370431372984;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07958406129985734;  // std dev = 0,023, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( female(A) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.15274385809367083;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.06842697784420271;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.0681708671988431;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06775458458520883;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1340070300080111;  // std dev = 2,63e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(A) )
%   | | then return -0.06359825541857257;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0635982554185726;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else return -0.06401102832495895;  // std dev = 0,000202, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.99555
   AUC PR    = 0.785367
   CLL	      = -0.083384
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.322 seconds
Total inference time: 3.07 seconds
AUC ROC: 0.99555


Results scoring model
   AUC ROC   = 0.999416
   AUC PR    = 0.935484
   CLL	      = -0.065818
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.526 seconds
Refined model CLL: -0.065818


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.99555
   AUC PR    = 0.785367
   CLL	      = -0.083384
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 6.829 seconds
Total inference time: 3.07 seconds
AUC ROC: 0.99555
Total revision time: 6.829
Best scored revision CLL: -0.065818


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:33:56
{'Inference time': 3.07, 'CLL': -0.083384, 'parameter': {'Inference time': 2.24, 'CLL': -0.18669, 'Precision': [0.800604, 0.5], 'AUC ROC': 0.972959, 'Recall': 0.817901, 'Learning time': 1.202, 'AUC PR': 0.696009, 'F1': 0.80916}, 'Precision': [0.736364, 0.5], 'AUC ROC': 0.99555, 'Recall': 1.0, 'Learning time': 6.829, 'AUC PR': 0.785367, 'F1': 0.848168}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true;title(K, J), venue(K, A).;true;false
1;false,true,true;samebib(K, L), venue(L, B).;false;false
1;true,true,true;haswordauthor(G, C).;false;false
1;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
1;true,true,false;haswordauthor(E, H), haswordvenue(A, H).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true;haswordtitle(F, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true;haswordtitle(M, K).;false;false
2;true,false,true;author(J, I), venue(J, A).;false;false
2;true,true,false;author(G, E), venue(G, B).;false;false
2;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
2;true,true;haswordauthor(F, C).;false;true
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
2;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
3;false,false,true;author(K, J), venue(K, A).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
4;false,false,true;title(L, K), venue(L, B).;false;false
4;true,true,true;haswordtitle(F, C).;false;false
4;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
4;true,true;haswordtitle(F, D).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false,true;title(I, H), venue(I, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
5;false,true,true;author(H, G), title(H, E).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
6;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false,true;haswordtitle(F, D).;true;false
6;false,true,true;author(G, E), title(G, F).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
7;false,false,true;title(K, J), venue(K, B).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
7;false,true,true;haswordauthor(G, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true;haswordtitle(K, I).;true;false
8;false,true,true;author(L, J), title(L, K).;false;false
8;true,true,true;haswordauthor(G, C).;false;false
8;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
8;true,true,false;haswordauthor(H, C).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;true,true;haswordtitle(F, C).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true,false;author(G, E), venue(G, B).;false;false
9;false;haswordvenue(A, J), haswordvenue(B, J).;false;false
9;true,false,false;title(I, D), venue(I, A).;false;false
9;true,true;title(F, D), venue(F, B).;false;true
9;true;haswordauthor(E, C).;true;true
9;true,false;venue(H, B), title(H, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5323913593419329;  // std dev = 7,615, 264,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.1418510649004885;  // std dev = 0,000, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.4520312250182913;  // std dev = 7,644, 265,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12544463852839127;  // std dev = 3,65e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.12544463852839186;  // std dev = 0,000, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.6559833097572098;  // std dev = 2,194, 134,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=129 */
%   | | else return 0.12312130399653926;  // std dev = 5,286, 114,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.11231637819360696;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.29847005876935684;  // std dev = 6,753, 255,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.10159632948783626;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.10159632948783653;  // std dev = 0,000, 200,000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.21489002738122895;  // std dev = 0,426, 260,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.0926912761892605;  // std dev = 6,83e-08, 220,000 (wgt'ed) examples reached here.  /* #neg=220 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1531064541356532;  // std dev = 6,993, 263,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.08518475138839678;  // std dev = 1,03e-07, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12095313593034741;  // std dev = 6,933, 261,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=178 */
%   else if ( movie(D, B) )
%   | then return -0.07877675473109143;  // std dev = 3,84e-09, 254,000 (wgt'ed) examples reached here.  /* #neg=254 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10741287943385106;  // std dev = 6,747, 255,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07324622576333689;  // std dev = 1,06e-07, 276,000 (wgt'ed) examples reached here.  /* #neg=276 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.07237436563037321;  // std dev = 0,427, 259,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.06842697784420293;  // std dev = 0,000, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then return 0.19550312702327002;  // std dev = 2,865, 173,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=129 */
%   | else if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09327592149093454;  // std dev = 5,389, 343,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=49 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.99261
   AUC PR    = 0.900638
   CLL	      = -0.264584
   Precision = 0.064496 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.121176


Total learning time: 1.741 seconds
Total inference time: 2.787 seconds
AUC ROC: 0.99261


Results scoring model
   AUC ROC   = 0.961149
   AUC PR    = 0.587865
   CLL	      = -0.242169
   Precision = 0.183316 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.309835


Total scoring time: 1.676 seconds
Parameter learned model CLL: -0.242169


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [3.65e-08, 36, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 7, 0], 'false,true,false': [0.0, 227, 0], 'true': [7.615, 86, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 4, 0], 'true,true,true': [7.644, 87, 178], 'false,true,true,false': [3.65e-08, 43, 0], 'false,true,false': [0.0, 247, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 278, 0], 'true,true,true': [2.194, 5, 129], 'true,true,false': [5.286, 65, 49]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 42, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 200, 0], 'true': [6.753, 77, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [6.83e-08, 220, 0], 'true,true': [0.426, 82, 178], 'false,true,true': [0.0, 49, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [6.993, 85, 178], 'false,true,true': [1.03e-07, 296, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true': [3.84e-09, 254, 0], 'true': [6.933, 83, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [6.747, 77, 178], 'false,true,true': [1.06e-07, 276, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 286, 0], 'true,true': [0.427, 81, 178]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,false': 'genre(B, F)', 'true': 'genre(B, D)', 'true,false': 'genre(B, E)'}, {'true,false,false,false': [5.389, 294, 49], 'true,false,true': [0.0, 0, 0], 'true,true': [2.865, 44, 129], 'true,false,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.21963957759412847, -5.592234494408195e-17], 'false,true': [4.6474452193611206e-17, -2.2302277499078035e-16], 'false,true,true': [-7.93016446160826e-18, 3.700743415417188e-17], 'false': [-5.592234494408195e-17, nan]}, {'': [0.22051975792097037, -9.667248105579594e-17], 'false,true,true': [0.0, 3.0982968129074136e-17], 'false': [-9.667248105579594e-17, nan], 'false,true': [4.015700301835673e-17, -7.731107701843196e-17], 'true': [0.22051975792097037, nan], 'true,true': [0.22051975792097037, nan]}, {'': [0.202588449531738, -1.118210240629654e-16], 'true,true': [0.03592114056582728, 0.24507540781778966], 'true': [0.202588449531738, nan], 'false': [-1.118210240629654e-16, nan]}, {'': [0.17885254605956452, -7.280150981148567e-17], 'false,true': [2.523234146875356e-18, -9.325873406851315e-17], 'false,true,true': [0.0, -2.64338815386942e-18], 'false': [-7.280150981148567e-17, nan]}, {'': [0.18106896093786326, 5.778112395818659e-17], 'false,true': [-2.0391851472706958e-17, 2.119516683375299e-17], 'true': [0.18106896093786326, nan], 'false': [5.778112395818659e-17, nan]}, {'': [0.18595578974611265, 3.600723323108616e-17], 'false,true': [3.600723323108616e-17, nan], 'false': [3.600723323108616e-17, nan]}, {'': [0.1841849992302865, 1.3987061727561027e-17], 'false': [1.3987061727561027e-17, nan]}, {'': [0.17850624604649862, 4.102998134484274e-17], 'false,true': [4.102998134484274e-17, nan], 'false': [4.102998134484274e-17, nan]}, {'': [0.18242830144086977, -4.5030024775006347e-17], 'true': [0.18242830144086977, nan], 'false': [-4.5030024775006347e-17, nan]}, {'': [0.09077190714543448, nan], 'true,false,false': [nan, 0.08466201240292393], 'true': [0.047451800455783455, 0.08466201240292393], 'true,false': [nan, 0.08466201240292393]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, H).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(B, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,true;genre(B, F).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 6,50e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.1418510649004885;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.1254446385283915;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.12544463852839188;  // std dev = 0,000, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.555366436746284;  // std dev = 1,88e-07, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return 0.5553664367462835;  // std dev = 3,48e-07, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.5553664367462842;  // std dev = 1,58e-07, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else return -0.11231637819360696;  // std dev = 0,000, 282,000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831;  // std dev = 1,90e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783626;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(B) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.10159632948783649;  // std dev = 0,000, 210,000 (wgt'ed) examples reached here.  /* #neg=210 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926101;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926087;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926079;  // std dev = 1,83e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.09269127618926092;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.25517224256948967;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 1,67e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.08518475138839682;  // std dev = 1,05e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839685;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(A) )
%   | then return -0.08518475138839675;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839676;  // std dev = 9,31e-10, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.08518475138839678;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109177;  // std dev = 4,75e-09, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0787767547310916;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | | else return -0.07877675473109161;  // std dev = 1,29e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.07877675473109168;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109164;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.07877675473109168;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( female(B) )
%   | then return -0.073246225763337;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( actor(B) )
%   | | then return -0.073246225763337;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else return -0.07324622576333699;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.15274385809367094;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06842697784420271;  // std dev = 7,45e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.06842697784420267;  // std dev = 1,12e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.0684269778442027;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.0684269778442028;  // std dev = 0,000, 263,000 (wgt'ed) examples reached here.  /* #neg=263 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.1340070300080108;  // std dev = 4,59e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return 0.1340070300080109;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06419184008202615;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1340070300080108;  // std dev = 4,21e-08, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return 0.13400703000801095;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202608;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06419184008202608;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 264,000 (wgt'ed) examples reached here.  /* #neg=264 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.776 seconds
Total inference time: 2.643 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.898 seconds
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.091 seconds
Total inference time: 2.643 seconds
AUC ROC: 1.0
Total revision time: 9.091
Best scored revision CLL: -0.065435


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:34:11
{'Inference time': 2.643, 'CLL': -0.063555, 'parameter': {'Inference time': 2.787, 'CLL': -0.264584, 'Precision': [0.064496, 0.5], 'AUC ROC': 0.99261, 'Recall': 1.0, 'Learning time': 1.741, 'AUC PR': 0.900638, 'F1': 0.121176}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 9.091, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true;title(K, J), venue(K, A).;true;false
1;false,true,true;samebib(K, L), venue(L, B).;false;false
1;true,true,true;haswordauthor(G, C).;false;false
1;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
1;true,true,false;haswordauthor(E, H), haswordvenue(A, H).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true;haswordtitle(F, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true;haswordtitle(M, K).;false;false
2;true,false,true;author(J, I), venue(J, A).;false;false
2;true,true,false;author(G, E), venue(G, B).;false;false
2;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
2;true,true;haswordauthor(F, C).;false;true
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
2;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
3;false,false,true;author(K, J), venue(K, A).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
4;false,false,true;title(L, K), venue(L, B).;false;false
4;true,true,true;haswordtitle(F, C).;false;false
4;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
4;true,true;haswordtitle(F, D).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false,true;title(I, H), venue(I, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
5;false,true,true;author(H, G), title(H, E).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
6;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false,true;haswordtitle(F, D).;true;false
6;false,true,true;author(G, E), title(G, F).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
7;false,false,true;title(K, J), venue(K, B).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
7;false,true,true;haswordauthor(G, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true;haswordtitle(K, I).;true;false
8;false,true,true;author(L, J), title(L, K).;false;false
8;true,true,true;haswordauthor(G, C).;false;false
8;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
8;true,true,false;haswordauthor(H, C).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;true,true;haswordtitle(F, C).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true,false;author(G, E), venue(G, B).;false;false
9;false;haswordvenue(A, J), haswordvenue(B, J).;false;false
9;true,false,false;title(I, D), venue(I, A).;false;false
9;true,true;title(F, D), venue(F, B).;false;true
9;true;haswordauthor(E, C).;true;true
9;true,false;venue(H, B), title(H, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5297907261442888;  // std dev = 3,844, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.4425432759227919;  // std dev = 3,901, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1254446385283916;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.6958611913073474;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.3041388086926531;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.11330086775050233;  // std dev = 0,005, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22850869988172978;  // std dev = 3,262, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12861047078248083;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.10150650591892775;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10150650591892775;  // std dev = 3,23e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.18926167431085775;  // std dev = 0,370, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09261606254766312;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09261606254766316;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13205542465556083;  // std dev = 3,182, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.08570302839532938;  // std dev = 0,029, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1898460210675451;  // std dev = 2,654, 62,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=45 */
%   else if ( movie(D, B) )
%   | then return -0.0786797290908354;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0757924490974056;  // std dev = 3,068, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07371747176080182;  // std dev = 0,025, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.05156520725820017;  // std dev = 0,366, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.06831793067213986;  // std dev = 3,09e-09, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then return 0.2923639622789186;  // std dev = 0,744, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | else if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1541186228920709;  // std dev = 1,366, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.974629
   AUC PR    = 0.704623
   CLL	      = -0.186189
   Precision = 0.80814 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.816446


Total learning time: 1.078 seconds
Total inference time: 2.867 seconds
AUC ROC: 0.974629


Results scoring model
   AUC ROC   = 0.998942
   AUC PR    = 0.918367
   CLL	      = -0.194323
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.237 seconds
Parameter learned model CLL: -0.194323


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [8.12e-09, 67, 0], 'true': [3.844, 22, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [3.901, 23, 45], 'false,true,true,false': [0.0, 7, 0], 'false,true,false': [0.0, 62, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.005, 60, 0], 'true,true,true': [0.0, 0, 45], 'true,true,false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 6, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,false': [3.23e-09, 48, 0], 'true': [3.262, 29, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 51, 0], 'true,true': [0.37, 27, 45], 'false,true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.182, 29, 45], 'false,true,true': [0.029, 71, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true': [0.0, 53, 0], 'true': [2.654, 17, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.068, 26, 45], 'false,true,true': [0.025, 65, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [3.09e-09, 59, 0], 'true,true': [0.366, 27, 45]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,false': 'genre(B, F)', 'true': 'genre(B, D)', 'true,false': 'genre(B, E)'}, {'true,false,false,false': [1.366, 74, 0], 'true,false,true': [0.0, 0, 0], 'true,true': [0.744, 4, 45], 'true,false,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.22053909556694173, 6.97854472621527e-17], 'false,true': [0.0, 6.628197161941232e-17], 'false,true,true': [nan, 0.0], 'false': [6.97854472621527e-17, nan]}, {'': [0.22383217993079563, -3.539841527790354e-17], 'false,true,true': [nan, -1.982541115402065e-18], 'false': [-3.539841527790354e-17, nan], 'false,true': [-1.982541115402065e-18, -4.118569284899774e-17], 'true': [0.22383217993079563, nan], 'true,true': [0.22383217993079563, nan]}, {'': [0.22053909556694107, 2.810737094151768e-05], 'true,true': [-8.684411214845669e-16, -4.0371746350005693e-17], 'true': [0.22053909556694107, nan], 'false': [2.810737094151768e-05, nan]}, {'': [0.14377692945918233, 1.311396535919859e-05], 'false,true': [8.995407077445497e-05, 9.25185853854297e-18], 'false,true,true': [0.0, -2.3129646346357427e-18], 'false': [1.311396535919859e-05, nan]}, {'': [0.1368812832940034, -2.05596856412066e-17], 'false,true': [-2.3129646346357427e-18, -1.523835523995313e-17], 'true': [0.1368812832940034, nan], 'false': [-2.05596856412066e-17, nan]}, {'': [0.13681744113103203, 1.1690550031637644e-05], 'false,true': [1.1690550031637644e-05, nan], 'false': [1.1690550031637644e-05, nan]}, {'': [0.11358210779003079, -1.0473802119105251e-17], 'false': [-1.0473802119105251e-17, nan]}, {'': [0.1325639086808206, 9.717544651175128e-06], 'false,true': [9.717544651175128e-06, nan], 'false': [9.717544651175128e-06, nan]}, {'': [0.1343129309947334, 9.40866970021319e-18], 'true': [0.1343129309947334, nan], 'false': [9.40866970021319e-18, nan]}, {'': [0.06744602520845015, nan], 'true,false,false': [nan, 0.02521288384653321], 'true': [0.01129452738304669, 0.02521288384653321], 'true,false': [nan, 0.02521288384653321]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(B, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,true;genre(B, F).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 6,50e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.17713862161527608;  // std dev = 0,127, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462844;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.5324645747131367;  // std dev = 0,134, 35,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11139790556954204;  // std dev = 0,002, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( female(B) )
%   | then return -0.11231637819360636;  // std dev = 2,95e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10168019331323039;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10134979872124894;  // std dev = 0,004, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(A) )
%   | | then return 0.4175135841583098;  // std dev = 1,29e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.4230935223297858;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783631;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.10159632948783626;  // std dev = 3,73e-09, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.09275681936296908;  // std dev = 4,53e-05, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.0885194855979825;  // std dev = 2,18e-05, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3244971891866074;  // std dev = 6,45e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.2577535120234903;  // std dev = 5,27e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08523385938901906;  // std dev = 5,94e-05, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08524019431923167;  // std dev = 0,000210, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.2344871877582749;  // std dev = 0,374, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then return -0.08518475138839686;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,49e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.2115794361142198;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(B) )
%   | | then return -0.0788290186071896;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07820999847656741;  // std dev = 0,003, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109172;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1784314944750074;  // std dev = 3,73e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07327739595115339;  // std dev = 4,91e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0733443348942104;  // std dev = 0,000104, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.06105659054307624;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07324622576333704;  // std dev = 5,27e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.07324622576333704;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.06844044505322734;  // std dev = 1,51e-05, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.06846756401241268;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.066969925642557;  // std dev = 0,014, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(A) )
%   | | then return 0.15274385809367094;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.15375583444550675;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( female(B) )
%   | then return -0.06842697784420271;  // std dev = 9,31e-10, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.13460357087915026;  // std dev = 0,000339, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.06419912600177151;  // std dev = 1,60e-05, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(A) )
%   | | | then return -0.06419549069353088;  // std dev = 2,57e-05, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.0642498934127834;  // std dev = 0,000529, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.0630723561582332;  // std dev = 0,003, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071666
   Precision = 0.836228 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.910811


Total learning time: 2.753 seconds
Total inference time: 3.529 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065679
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.354 seconds
Refined model CLL: -0.065679


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071666
   Precision = 0.836228 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.910811


Total learning time: 6.422000000000001 seconds
Total inference time: 3.529 seconds
AUC ROC: 1.0
Total revision time: 6.422000000000001
Best scored revision CLL: -0.065679


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:34:25
{'Inference time': 3.529, 'CLL': -0.071666, 'parameter': {'Inference time': 2.867, 'CLL': -0.186189, 'Precision': [0.80814, 0.5], 'AUC ROC': 0.974629, 'Recall': 0.824926, 'Learning time': 1.078, 'AUC PR': 0.704623, 'F1': 0.816446}, 'Precision': [0.836228, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 6.422000000000001, 'AUC PR': 1.0, 'F1': 0.910811}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,false,true;title(K, J), venue(K, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true;title(K, J), venue(K, A).;true;false
1;false,true,true;samebib(K, L), venue(L, B).;false;false
1;true,true,true;haswordauthor(G, C).;false;false
1;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
1;true,true,false;haswordauthor(E, H), haswordvenue(A, H).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;true,true;haswordtitle(F, D).;true;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true;haswordtitle(M, K).;false;false
2;true,false,true;author(J, I), venue(J, A).;false;false
2;true,true,false;author(G, E), venue(G, B).;false;false
2;false;haswordvenue(B, K), haswordauthor(L, K).;true;false
2;true,true;haswordauthor(F, C).;false;true
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
2;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
3;false,false,true;author(K, J), venue(K, A).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
4;false,false,true;title(L, K), venue(L, B).;false;false
4;true,true,true;haswordtitle(F, C).;false;false
4;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
4;true,true;haswordtitle(F, D).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false,true;title(I, H), venue(I, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
5;false,false,true;title(L, K), venue(L, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
5;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
5;false,true,true;author(H, G), title(H, E).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
6;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false,true;haswordtitle(F, D).;true;false
6;false,true,true;author(G, E), title(G, F).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
7;false,false,true;title(K, J), venue(K, B).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
7;false,true,true;haswordauthor(G, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true;haswordtitle(K, I).;true;false
8;false,true,true;author(L, J), title(L, K).;false;false
8;true,true,true;haswordauthor(G, C).;false;false
8;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
8;true,true,false;haswordauthor(H, C).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;true,true;haswordtitle(F, C).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true,false;author(G, E), venue(G, B).;false;false
9;false;haswordvenue(A, J), haswordvenue(B, J).;false;false
9;true,false,false;title(I, D), venue(I, A).;false;false
9;true,true;title(F, D), venue(F, B).;false;true
9;true;haswordauthor(E, C).;true;true
9;true,false;venue(H, B), title(H, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.42064893509951296;  // std dev = 4,437, 80,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.14185106490048766;  // std dev = 7,68e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.46065146408937374;  // std dev = 3,901, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1254446385283916;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7147770663244789;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0.131443732991145;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.11231637819360628;  // std dev = 5,74e-09, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2855741077580619;  // std dev = 3,483, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783621;  // std dev = 4,56e-09, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.20236228074524254;  // std dev = 0,426, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09969437111848439;  // std dev = 3,823, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.08518475138839679;  // std dev = 1,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10449407781342653;  // std dev = 3,668, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   else if ( movie(D, B) )
%   | then return -0.07903579613204621;  // std dev = 0,002, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return -0.011359220977192804;  // std dev = 4,134, 86,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07322864366174563;  // std dev = 2,24e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.045740484959072264;  // std dev = 0,440, 77,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.06841158769103386;  // std dev = 3,23e-09, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then return 0.3176949869000173;  // std dev = 0,913, 40,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=35 */
%   | else if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11047594568792361;  // std dev = 2,750, 102,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978147
   AUC PR    = 0.723355
   CLL	      = -0.215577
   Precision = 0.808989 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.831169


Total learning time: 1.111 seconds
Total inference time: 2.58 seconds
AUC ROC: 0.978147


Results scoring model
   AUC ROC   = 0.969312
   AUC PR    = 0.779331
   CLL	      = -0.216091
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total scoring time: 1.326 seconds
Parameter learned model CLL: -0.216091


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,false': [7.68e-09, 58, 0], 'true': [4.437, 35, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [3.901, 23, 45], 'false,true,true,false': [0.0, 2, 0], 'false,true,false': [0.0, 60, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [5.74e-09, 59, 0], 'true,true,true': [0.0, 0, 35], 'true,true,false': [2.415, 14, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [4.56e-09, 57, 0], 'true': [3.483, 22, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 64, 0], 'true,true': [0.426, 24, 45], 'false,true,true': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.823, 31, 45], 'false,true,true': [1.83e-08, 63, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true': [0.002, 70, 0], 'true': [3.668, 27, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [4.134, 41, 45], 'false,true,true': [2.24e-08, 62, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [3.23e-09, 59, 0], 'true,true': [0.44, 32, 45]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,false': 'genre(B, F)', 'true': 'genre(B, D)', 'true,false': 'genre(B, E)'}, {'true,false,false,false': [2.75, 92, 10], 'true,false,true': [0.0, 0, 0], 'true,true': [0.913, 5, 35], 'true,false,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0]}]]
[{'': [0.24609375000000028, 6.29126380620922e-17], 'false,true': [0.0, 6.125368411725002e-17], 'false,true,true': [0.0, 0.0], 'false': [6.29126380620922e-17, nan]}, {'': [0.22383217993079596, -3.760432825343272e-17], 'false,true,true': [nan, 0.0], 'false': [-3.760432825343272e-17, nan], 'false,true': [0.0, -4.070817756958907e-17], 'true': [0.22383217993079596, nan], 'true,true': [0.22383217993079596, nan]}, {'': [0.18098247629991362, 3.198947698072485e-17], 'true,true': [-2.0301221021717148e-16, 0.24305555555555589], 'true': [0.18098247629991362, nan], 'false': [3.198947698072485e-17, nan]}, {'': [0.18109615175770255, 2.590520390792032e-17], 'false,true': [-1.1564823173178713e-18, 2.1425356615573195e-17], 'false,true,true': [nan, -1.1564823173178713e-18], 'false': [2.590520390792032e-17, nan]}, {'': [0.18142226330897257, 0.0], 'false,true': [0.0, -1.734723475976807e-18], 'true': [0.18142226330897257, nan], 'false': [0.0, nan]}, {'': [0.19232356606458229, 5.28677630773884e-18], 'false,true': [5.28677630773884e-18, nan], 'false': [5.28677630773884e-18, nan]}, {'': [0.18690629480972784, 4.6300688712038895e-06], 'false': [4.6300688712038895e-06, nan]}, {'': [0.19876088547347856, 8.058070340021298e-18], 'false,true': [8.058070340021298e-18, nan], 'false': [8.058070340021298e-18, nan]}, {'': [0.19373411903924315, 1.034953667023451e-17], 'true': [0.19373411903924315, nan], 'false': [1.034953667023451e-17, nan]}, {'': [0.09621270467935075, nan], 'true,false,false': [nan, 0.07413123590965698], 'true': [0.020832453941019714, 0.07413123590965698], 'true,false': [nan, 0.07413123590965698]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(B, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.5553664367462843;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0.5553664367462844;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( female(A) )
%   | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360635;  // std dev = 3,48e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.11231637819360635;  // std dev = 3,48e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.3207118471601494;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( director(A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 1,61e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.08518475138839687;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(B) )
%   | then if ( director(A) )
%   | | then return -0.08518475138839686;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,49e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.0851847513883968;  // std dev = 1,75e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.08811586402356911;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2097577156325355;  // std dev = 7,90e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(A) )
%   | | then return -0.07876387889752286;  // std dev = 5,07e-05, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07324675907102525;  // std dev = 4,26e-07, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.07324622576333702;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07304837883291401;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.06842694384865776;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.0684153364890768;  // std dev = 4,48e-05, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842694384865776;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06842776461933077;  // std dev = 5,27e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.06842697784420271;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( actor(A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.13400703000801095;  // std dev = 1,05e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.06402931413921928;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.12358410372701752;  // std dev = 0,044, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return -0.6016862969478441;  // std dev = 0,647, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419236014664687;  // std dev = 4,78e-06, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.06419196316939277;  // std dev = 1,81e-06, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( female(A) )
%   | | | then return 0.10571612370126378;  // std dev = 0,183, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.13400703000801095;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1978253617336867;  // std dev = 0,732, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078462
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.231 seconds
Total inference time: 3.015 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065774
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.485 seconds
Refined model CLL: -0.065774


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078462
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 6.1530000000000005 seconds
Total inference time: 3.015 seconds
AUC ROC: 1.0
Total revision time: 6.1530000000000005
Best scored revision CLL: -0.065774


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:34:37
{'Inference time': 3.015, 'CLL': -0.078462, 'parameter': {'Inference time': 2.58, 'CLL': -0.215577, 'Precision': [0.808989, 0.5], 'AUC ROC': 0.978147, 'Recall': 0.854599, 'Learning time': 1.111, 'AUC PR': 0.723355, 'F1': 0.831169}, 'Precision': [0.742291, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 6.1530000000000005, 'AUC PR': 1.0, 'F1': 0.852086}


