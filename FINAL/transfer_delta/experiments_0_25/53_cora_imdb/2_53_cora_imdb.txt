Starting experiment #2 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21748252086247571;  // std dev = 0,480, 7.923,000 (wgt'ed) examples reached here.  /* #neg=5.076 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.2277141524908167;  // std dev = 0,483, 46,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.05483139955448872;  // std dev = 8,165, 422,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=83 */
%   | | | else return -0.05398495611387688;  // std dev = 4,377, 239,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=21 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.015201988383337488;  // std dev = 0,333, 379,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=48 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.8295607589846874;  // std dev = 4,21e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4295607589846873;  // std dev = 3,950, 65,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=39 */
%   | | | else return 0.011993191417119829;  // std dev = 4,698, 148,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=27 */
%   | | else return 0.18935739566827997;  // std dev = 0,480, 7.671,000 (wgt'ed) examples reached here.  /* #neg=4.911 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), venue(K, A) )
%   | | | then return 0.2281092297827639;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1472581659529772;  // std dev = 3,196, 47,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else if ( author(L, I), venue(L, A) )
%   | | | then return 0.2599894070826148;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.1448144943497034;  // std dev = 0,013, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.0015309166008922158;  // std dev = 0,350, 1.053,000 (wgt'ed) examples reached here.  /* #neg=902 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.608394040663975;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.19584672014071763;  // std dev = 5,936, 156,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=61 */
%   | | else return -0.04409522378258414;  // std dev = 0,339, 80,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=13 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.3142541480352318;  // std dev = 4,357, 76,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=39 */
%   | | | else return 0.008788560990697355;  // std dev = 4,625, 130,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=27 */
%   | | else return 0.16101609297768207;  // std dev = 0,480, 7.485,000 (wgt'ed) examples reached here.  /* #neg=4.791 #pos=2.694 */
%   else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | then if ( haswordtitle(M, K) )
%   | | then return 0.09916030783826595;  // std dev = 0,427, 69,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | else return -0.01982068609020181;  // std dev = 0,330, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else return -0.0036921250782807366;  // std dev = 0,346, 1.072,000 (wgt'ed) examples reached here.  /* #neg=921 #pos=151 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.5786516525390691;  // std dev = 0,291, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.0631157996856497;  // std dev = 6,493, 215,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=61 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return 0.689343510427935;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5139778826247612;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.12869998041116362;  // std dev = 0,478, 7.794,000 (wgt'ed) examples reached here.  /* #neg=5.034 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.802552338370132;  // std dev = 1,949, 88,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=84 */
%   | | | else return -0.14695128615739828;  // std dev = 1,011, 330,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=1 */
%   | | else return -0.020088117445348764;  // std dev = 0,325, 289,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=36 */
%   | else return -0.031017100373439264;  // std dev = 0,311, 451,000 (wgt'ed) examples reached here.  /* #neg=402 #pos=49 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1098689804538145;  // std dev = 0,478, 7.931,000 (wgt'ed) examples reached here.  /* #neg=5.084 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.14081721906662986;  // std dev = 0,877, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.22811366431641236;  // std dev = 2,944, 36,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.3321952553423208;  // std dev = 0,997, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.12069235808138815;  // std dev = 0,028, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.055192558246465025;  // std dev = 6,871, 371,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=83 */
%   | | | else return -0.048640569469114776;  // std dev = 4,387, 248,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.025019861961790128;  // std dev = 6,461, 422,000 (wgt'ed) examples reached here.  /* #neg=375 #pos=47 */
%   | | | else return -0.13517824926959876;  // std dev = 0,015, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08903349479611102;  // std dev = 0,478, 7.921,000 (wgt'ed) examples reached here.  /* #neg=5.074 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6681551309347202;  // std dev = 1,699, 87,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=84 */
%   | | | else return -0.1358920276481233;  // std dev = 1,021, 302,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.1459940223072857;  // std dev = 3,062, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return -0.03792289873520159;  // std dev = 4,374, 234,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.009013146340802065;  // std dev = 6,388, 378,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=47 */
%   | | | else return -0.10247447605242645;  // std dev = 1,392, 66,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=2 */
%   | | else return -0.11770261191951695;  // std dev = 0,021, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.40308792488131506;  // std dev = 0,072, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.1265853566405958;  // std dev = 4,688, 91,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=39 */
%   | | | else return -0.034803178034068426;  // std dev = 4,537, 125,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=27 */
%   | else return 0.07451548770909493;  // std dev = 0,480, 7.623,000 (wgt'ed) examples reached here.  /* #neg=4.863 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | then return -0.005480311966016593;  // std dev = 0,284, 547,000 (wgt'ed) examples reached here.  /* #neg=447 #pos=100 */
%   | | else return 0.05658779916973674;  // std dev = 0,382, 115,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=21 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then if ( title(N, M), venue(N, B) )
%   | | | then return -2.012610457182855E-5;  // std dev = 6,358, 355,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=47 */
%   | | | else return -0.07273276949525452;  // std dev = 1,379, 41,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=2 */
%   | | else return -0.10771088964340295;  // std dev = 0,017, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05572245577590648;  // std dev = 0,478, 7.921,000 (wgt'ed) examples reached here.  /* #neg=5.074 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.48252401642176007;  // std dev = 2,367, 90,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=84 */
%   | | | else return -0.11983220897500686;  // std dev = 1,014, 301,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.061765734133902364;  // std dev = 3,647, 168,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=17 */
%   | | | else return 0.014194802224648147;  // std dev = 4,035, 132,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=19 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return 0.0028687302800577824;  // std dev = 6,351, 346,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=47 */
%   | | | else return -0.08017358986948349;  // std dev = 1,390, 59,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=2 */
%   | | else return -0.09768232813356119;  // std dev = 0,016, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04820267557795888;  // std dev = 0,479, 7.828,000 (wgt'ed) examples reached here.  /* #neg=4.981 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return 0.05700914136879789;  // std dev = 1,826, 49,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return -0.02404290624938672;  // std dev = 5,424, 541,000 (wgt'ed) examples reached here.  /* #neg=457 #pos=84 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.021367567676695967;  // std dev = 4,148, 135,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=21 */
%   | | | else return -0.13101487414872615;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.0042633958687101105;  // std dev = 6,342, 343,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=47 */
%   | | | else return -0.06275511181092244;  // std dev = 1,383, 46,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=2 */
%   | | else return -0.08831086049488239;  // std dev = 0,016, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03371701534097308;  // std dev = 0,478, 7.916,000 (wgt'ed) examples reached here.  /* #neg=5.069 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.15506889401762222;  // std dev = 0,377, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.055716973690484395;  // std dev = 3,227, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.30470987417295514;  // std dev = 0,949, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.10042552587383151;  // std dev = 0,042, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.027852528418037408;  // std dev = 4,916, 517,000 (wgt'ed) examples reached here.  /* #neg=434 #pos=83 */
%   | | | else return 0.03149177248379221;  // std dev = 4,115, 125,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=21 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.00443887632697251;  // std dev = 6,394, 378,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=47 */
%   | | | else return -0.08208554737035532;  // std dev = 0,013, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
0;false,false,true;author(J, I), venue(J, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,false;title(G, E), venue(G, A).;false;false
0;false,true;haswordauthor(F, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordauthor(D, C).;false;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;false,true,true;author(K, I), venue(K, A).;false;false
1;false,true,false;author(L, I), venue(L, A).;false;false
1;false,true;haswordtitle(J, H).;true;true
1;true,false,true;author(G, F), venue(G, A).;false;false
1;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true;haswordtitle(M, K).;false;false
2;true,false,true;author(J, I), venue(J, B).;false;false
2;true,true,true;haswordauthor(G, C).;false;false
2;false;haswordvenue(A, K), haswordauthor(L, K).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;true,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true;title(J, I), venue(J, A).;true;false
3;false,true,true;samebib(J, K), venue(K, B).;false;false
3;true,true,true;haswordvenue(B, D).;false;false
3;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
3;true,true,false;haswordauthor(G, C).;false;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true;haswordtitle(F, C).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
4;false,false,true;title(K, J), venue(K, A).;false;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
4;false,true,false;author(H, E), venue(H, A).;false;false
4;false,true;haswordtitle(F, D).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true,false;haswordauthor(H, D).;false;false
5;false,true;title(F, E), venue(F, A).;true;true
5;false,true,true;samebib(F, G), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
6;false,false,true;title(N, M), venue(N, B).;false;false
6;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
6;false,false;haswordvenue(A, L), haswordtitle(M, L).;true;false
6;true,true;haswordauthor(F, C).;false;true
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;true,true,false;author(G, E), venue(G, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
8;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
8;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
8;false,true,true;haswordvenue(A, F).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
9;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
9;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
9;false,true,false;author(H, E), venue(H, A).;false;false
9;false,true;haswordtitle(F, D).;true;true
9;false,true,true;author(G, E), title(G, F).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4181489350995132;  // std dev = 4,964, 100,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048763;  // std dev = 8,16e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.20071187514554228;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.40798377702836974;  // std dev = 4,681, 92,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( genre(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839147;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3585978901038747;  // std dev = 0,479, 89,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.11231637819360622;  // std dev = 7,33e-09, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.3003046745534862;  // std dev = 4,420, 86,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783623;  // std dev = 4,83e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22494009360598738;  // std dev = 4,431, 87,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17285478635402238;  // std dev = 4,392, 87,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839679;  // std dev = 2,08e-09, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.4793042919471776;  // std dev = 2,15e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.5132350081864455;  // std dev = 0,145, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.07877675473109162;  // std dev = 5,10e-09, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09633910031883929;  // std dev = 3,349, 87,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07324622576333707;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12376776899246472;  // std dev = 3,020, 79,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.06842697784420267;  // std dev = 3,41e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.03468256609235243;  // std dev = 3,436, 89,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978388
   AUC PR    = 0.863056
   CLL	      = -0.205637
   Precision = 0.799401 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.809091


Total learning time: 0.968 seconds
Total inference time: 2.448 seconds
AUC ROC: 0.978388


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.21685
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.467 seconds
Parameter learned model CLL: -0.21685


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [8.16e-08, 87, 0], 'true': [4.964, 44, 56], 'false,true,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'false,true,false': 'genre(A, H)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 80, 0], 'true,true,true': [0.0, 2, 0], 'true,true,false': [4.681, 36, 56], 'false,true,true': [0.0, 6, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [7.33e-09, 83, 0], 'true,true': [0.479, 33, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [4.42, 30, 56], 'false,true,true,false': [0.0, 4, 0], 'false,true,false': [4.83e-08, 92, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 72, 0], 'true': [4.431, 31, 56], 'false,true,true': [1.86e-09, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [2.08e-09, 67, 0], 'true': [4.392, 31, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [5.1e-09, 85, 0], 'true,true,true': [2.15e-07, 0, 56], 'true,true,false': [0.145, 20, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [2.63e-09, 8, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 60, 0], 'true': [3.349, 31, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.02, 23, 56], 'false,true,true': [3.41e-08, 74, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 70, 0], 'true': [3.436, 33, 56], 'false,true,true': [0.0, 4, 0]}]]
[{'': [0.24639999999999979, 7.734137924355023e-17], 'false,true': [0.0, 7.656710514656253e-17], 'false': [7.734137924355023e-17, nan]}, {'': [0.24083295608872868, -1.8073398075293247e-17], 'false': [-1.8073398075293247e-17, nan], 'false,true,false': [nan, -2.2204460492503132e-17], 'false,true': [-2.3129646346357427e-18, -2.2204460492503132e-17], 'true': [0.24083295608872868, nan], 'true,true': [0.0, 0.23818525519848846]}, {'': [0.2292561040715589, 5.617996028223683e-17], 'true': [0.2292561040715589, nan], 'false': [5.617996028223683e-17, nan]}, {'': [0.22714981070849075, 2.1973164029039556e-17], 'false,true,true': [nan, 0.0], 'false': [2.1973164029039556e-17, nan], 'false,true': [0.0, 2.5342047301226398e-17], 'true': [0.22714981070849075, nan], 'true,true': [0.22714981070849075, nan]}, {'': [0.225707525994495, 0.0], 'false,true': [1.1564823173178713e-18, 0.0], 'false': [0.0, nan]}, {'': [0.22167724828484933, 4.758098676964957e-18], 'false,true': [0.0, 4.14262322621327e-18], 'false,true,true': [nan, 0.0], 'false': [4.758098676964957e-18, nan]}, {'': [0.1913015743722654, 2.6122894697062506e-17], 'true,true': [8.247371040072592e-16, 0.001057578807426829], 'true': [0.1913015743722654, nan], 'false': [2.6122894697062506e-17, nan]}, {'': [0.12888372744355703, -4.081702296416017e-18], 'false,true': [8.673617379884035e-19, -1.8503717077085942e-18], 'false,true,true': [nan, 8.673617379884035e-19], 'false': [-4.081702296416017e-18, nan]}, {'': [0.11541765902138545, 1.5753164538600193e-17], 'false,true': [1.5753164538600193e-17, nan], 'false': [1.5753164538600193e-17, nan]}, {'': [0.13266363622413269, -7.50150692314295e-18], 'false,true': [0.0, -6.3441315692866086e-18], 'false': [-7.50150692314295e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(A, E).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048766;  // std dev = 7,30e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360635;  // std dev = 3,48e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( actor(A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.10269047782192588;  // std dev = 0,011, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1534921754939161;  // std dev = 0,383, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08152828348748122;  // std dev = 0,006, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09200719776582093;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,67e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.0851847513883968;  // std dev = 1,67e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08058677891894482;  // std dev = 0,008, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07620903902007208;  // std dev = 0,003, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( actor(A), actor(B) )
%   | | | then return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07366985478979302;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07105123299246159;  // std dev = 0,003, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06843399035691912;  // std dev = 4,15e-05, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06653543965818684;  // std dev = 0,008, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.07377273459613125;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 9,31e-10, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419141883292485;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06421454811487748;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06159858917665601;  // std dev = 0,001, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801087;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(A, D) )
%   | then return -0.06419184008202619;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0773
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.82 seconds
Total inference time: 3.076 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064257
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.663 seconds
Refined model CLL: -0.064257


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0773
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 6.918 seconds
Total inference time: 3.076 seconds
AUC ROC: 1.0
Total revision time: 6.918
Best scored revision CLL: -0.064257


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:56:53
{'Inference time': 3.076, 'CLL': -0.0773, 'parameter': {'Inference time': 2.448, 'CLL': -0.205637, 'Precision': [0.799401, 0.5], 'AUC ROC': 0.978388, 'Recall': 0.819018, 'Learning time': 0.968, 'AUC PR': 0.863056, 'F1': 0.809091}, 'Precision': [0.735892, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 6.918, 'AUC PR': 1.0, 'F1': 0.847854}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
0;false,false,true;author(J, I), venue(J, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,false;title(G, E), venue(G, A).;false;false
0;false,true;haswordauthor(F, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordauthor(D, C).;false;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;false,true,true;author(K, I), venue(K, A).;false;false
1;false,true,false;author(L, I), venue(L, A).;false;false
1;false,true;haswordtitle(J, H).;true;true
1;true,false,true;author(G, F), venue(G, A).;false;false
1;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true;haswordtitle(M, K).;false;false
2;true,false,true;author(J, I), venue(J, B).;false;false
2;true,true,true;haswordauthor(G, C).;false;false
2;false;haswordvenue(A, K), haswordauthor(L, K).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;true,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true;title(J, I), venue(J, A).;true;false
3;false,true,true;samebib(J, K), venue(K, B).;false;false
3;true,true,true;haswordvenue(B, D).;false;false
3;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
3;true,true,false;haswordauthor(G, C).;false;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true;haswordtitle(F, C).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
4;false,false,true;title(K, J), venue(K, A).;false;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
4;false,true,false;author(H, E), venue(H, A).;false;false
4;false,true;haswordtitle(F, D).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true,false;haswordauthor(H, D).;false;false
5;false,true;title(F, E), venue(F, A).;true;true
5;false,true,true;samebib(F, G), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
6;false,false,true;title(N, M), venue(N, B).;false;false
6;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
6;false,false;haswordvenue(A, L), haswordtitle(M, L).;true;false
6;true,true;haswordauthor(F, C).;false;true
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;true,true,false;author(G, E), venue(G, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
8;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
8;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
8;false,true,true;haswordvenue(A, F).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
9;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
9;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
9;false,true,false;author(H, E), venue(H, A).;false;false
9;false,true;haswordtitle(F, D).;true;true
9;false,true,true;author(G, E), title(G, F).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5025933795439576;  // std dev = 4,541, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14185106490048766;  // std dev = 7,60e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21460180202256676;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.3959245137669083;  // std dev = 4,753, 95,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839147;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.39869420115362864;  // std dev = 0,459, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.11231637819360621;  // std dev = 7,68e-09, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.2836782775194689;  // std dev = 4,429, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1015963294878362;  // std dev = 5,27e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3096465583040931;  // std dev = 3,757, 77,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12297264805031807;  // std dev = 4,493, 91,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08518475138839682;  // std dev = 5,27e-09, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.4468244586287387;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.5241089586700513;  // std dev = 0,304, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.07894341557420856;  // std dev = 0,002, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08770920188833073;  // std dev = 3,339, 87,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07323491342721267;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.0732349134272126;  // std dev = 3,48e-09, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.05369889809191832;  // std dev = 3,425, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.06866115016790308;  // std dev = 0,018, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09527472625817343;  // std dev = 3,070, 81,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.06416844505145324;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06416844505145332;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.977686
   AUC PR    = 0.861626
   CLL	      = -0.219959
   Precision = 0.800604 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.80916


Total learning time: 1.221 seconds
Total inference time: 2.496 seconds
AUC ROC: 0.977686


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.217353
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.787 seconds
Parameter learned model CLL: -0.217353


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [7.6e-08, 78, 0], 'true': [4.541, 32, 58], 'false,true,true': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'false,true,false': 'genre(A, H)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 81, 0], 'true,true,true': [0.0, 2, 0], 'true,true,false': [4.753, 37, 58], 'false,true,true': [0.0, 8, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [7.68e-09, 93, 0], 'true,true': [0.459, 27, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [4.429, 30, 58], 'false,true,true,false': [0.0, 6, 0], 'false,true,false': [5.27e-08, 88, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 78, 0], 'true': [3.757, 19, 58], 'false,true,true': [1.86e-09, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [3.73e-09, 9, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [5.27e-09, 76, 0], 'true': [4.493, 33, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.002, 88, 0], 'true,true,true': [0.0, 0, 58], 'true,true,false': [0.304, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 6, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [3.48e-09, 88, 0], 'true': [3.339, 29, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.425, 32, 58], 'false,true,true': [0.018, 76, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 73, 0], 'true': [3.07, 23, 58], 'false,true,true': [0.0, 9, 0]}]]
[{'': [0.2291358024691354, 7.314410515177502e-17], 'false,true': [-7.93016446160826e-18, 7.401486830834377e-17], 'false': [7.314410515177502e-17, nan]}, {'': [0.2404081198852142, -1.7464182409833923e-17], 'false': [-1.7464182409833923e-17, nan], 'false,true,false': [nan, -2.1930331350620375e-17], 'false,true': [0.0, -2.1930331350620375e-17], 'true': [0.2404081198852142, nan], 'true,true': [0.0, 0.23778393351800348]}, {'': [0.21032884326411522, 5.968940992608368e-17], 'true': [0.21032884326411522, nan], 'false': [5.968940992608368e-17, nan]}, {'': [0.22293706838703195, 2.362176648138631e-17], 'false,true,true': [nan, -2.3129646346357427e-18], 'false': [2.362176648138631e-17, nan], 'false,true': [-2.3129646346357427e-18, 3.154042683594195e-17], 'true': [0.22293706838703195, nan], 'true,true': [0.22293706838703195, nan]}, {'': [0.18335082384634516, 0.0], 'false,true': [1.1564823173178713e-18, 0.0], 'false': [0.0, nan]}, {'': [0.22180671766797486, 3.004132890162188e-17], 'false,true': [1.5419764230904951e-18, 2.7755575615628914e-17], 'false,true,true': [nan, 1.5419764230904951e-18], 'false': [3.004132890162188e-17, nan]}, {'': [0.20257355921226555, 2.4164977867033057e-06], 'true,true': [-3.062684205862501e-16, 0.0035484381656903843], 'true': [0.20257355921226555, nan], 'false': [2.4164977867033057e-06, nan]}, {'': [0.12818492912253135, 1.4173059888831785e-17], 'false,true': [0.0, 1.2616170734376778e-17], 'false,true,true': [nan, 0.0], 'false': [1.4173059888831785e-17, nan]}, {'': [0.13034870100655077, 4.4679200835232175e-06], 'false,true': [4.4679200835232175e-06, nan], 'false': [4.4679200835232175e-06, nan]}, {'': [0.1163579126166901, -4.738756812424449e-18], 'false,true': [-7.709882115452476e-19, -6.843840562757814e-18], 'false': [-4.738756812424449e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(A, E).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.14185106490048766;  // std dev = 7,30e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.17713862161527616;  // std dev = 0,127, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.10726477876125251;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( female(B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( actor(A) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.09741747955928036;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783627;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( female(B) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.08918134420354834;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694894;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08495498631620743;  // std dev = 0,003, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.08518475138839679;  // std dev = 1,49e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.18884547159816534;  // std dev = 0,129, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07878856681968352;  // std dev = 3,71e-05, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.07601197096724772;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109172;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.18016471541308823;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324582485588838;  // std dev = 1,13e-06, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07325608995651924;  // std dev = 2,42e-05, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.26386315238462044;  // std dev = 0,473, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842634905658253;  // std dev = 6,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06843824457662498;  // std dev = 2,24e-05, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.05531747889805303;  // std dev = 9,80e-06, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.15506744648543574;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( female(A) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( actor(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.0684269778442027;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 4,17e-09, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.13581841656623092;  // std dev = 6,18e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(B) )
%   | | then return -0.06419062021814528;  // std dev = 4,27e-07, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(A) )
%   | | | then return -0.06419128530192354;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.10079423589991349;  // std dev = 0,542, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(A, D) )
%   | then return -0.06419184008202618;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074749
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.94 seconds
Total inference time: 3.399 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063982
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.928 seconds
Refined model CLL: -0.063982


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074749
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 7.876 seconds
Total inference time: 3.399 seconds
AUC ROC: 1.0
Total revision time: 7.876
Best scored revision CLL: -0.063982


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:57:07
{'Inference time': 3.399, 'CLL': -0.074749, 'parameter': {'Inference time': 2.496, 'CLL': -0.219959, 'Precision': [0.800604, 0.5], 'AUC ROC': 0.977686, 'Recall': 0.817901, 'Learning time': 1.221, 'AUC PR': 0.861626, 'F1': 0.80916}, 'Precision': [0.736364, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 7.876, 'AUC PR': 1.0, 'F1': 0.848168}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
0;false,false,true;author(J, I), venue(J, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,false;title(G, E), venue(G, A).;false;false
0;false,true;haswordauthor(F, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordauthor(D, C).;false;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;false,true,true;author(K, I), venue(K, A).;false;false
1;false,true,false;author(L, I), venue(L, A).;false;false
1;false,true;haswordtitle(J, H).;true;true
1;true,false,true;author(G, F), venue(G, A).;false;false
1;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true;haswordtitle(M, K).;false;false
2;true,false,true;author(J, I), venue(J, B).;false;false
2;true,true,true;haswordauthor(G, C).;false;false
2;false;haswordvenue(A, K), haswordauthor(L, K).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;true,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true;title(J, I), venue(J, A).;true;false
3;false,true,true;samebib(J, K), venue(K, B).;false;false
3;true,true,true;haswordvenue(B, D).;false;false
3;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
3;true,true,false;haswordauthor(G, C).;false;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true;haswordtitle(F, C).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
4;false,false,true;title(K, J), venue(K, A).;false;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
4;false,true,false;author(H, E), venue(H, A).;false;false
4;false,true;haswordtitle(F, D).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true,false;haswordauthor(H, D).;false;false
5;false,true;title(F, E), venue(F, A).;true;true
5;false,true,true;samebib(F, G), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
6;false,false,true;title(N, M), venue(N, B).;false;false
6;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
6;false,false;haswordvenue(A, L), haswordtitle(M, L).;true;false
6;true,true;haswordauthor(F, C).;false;true
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;true,true,false;author(G, E), venue(G, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
8;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
8;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
8;false,true,true;haswordvenue(A, F).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
9;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
9;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
9;false,true,false;author(H, E), venue(H, A).;false;false
9;false,true;haswordtitle(F, D).;true;true
9;false,true,true;author(G, E), title(G, F).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5480714157196638;  // std dev = 7,429, 258,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048766;  // std dev = 5,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.14185106490048843;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.22236647020238187;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.504164142042512;  // std dev = 6,977, 245,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.12544463852839158;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( genre(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839177;  // std dev = 0,000, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.4004126796047379;  // std dev = 0,439, 250,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.11231637819360688;  // std dev = 0,000, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.3311768717239114;  // std dev = 6,665, 241,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.10159632948783626;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.10159632948783653;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21926197635483316;  // std dev = 7,007, 253,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.092691276189261;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.09269127618926046;  // std dev = 1,07e-07, 254,000 (wgt'ed) examples reached here.  /* #neg=254 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1457604941240143;  // std dev = 7,218, 261,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0851847513883968;  // std dev = 1,67e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.08518475138839678;  // std dev = 5,59e-09, 216,000 (wgt'ed) examples reached here.  /* #neg=216 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.3714381266197135;  // std dev = 2,114, 136,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=129 */
%   | | else return -0.13279771269001647;  // std dev = 5,127, 112,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.07877675473109143;  // std dev = 3,36e-09, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09755550808551046;  // std dev = 6,469, 254,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333702;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.0732462257633367;  // std dev = 8,23e-09, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0651503252317933;  // std dev = 6,629, 257,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.06842697784420292;  // std dev = 0,000, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06220087727023685;  // std dev = 6,499, 252,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.06419184008202616;  // std dev = 5,27e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.06419184008202625;  // std dev = 2,36e-08, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993692
   AUC PR    = 0.961008
   CLL	      = -0.298315
   Precision = 0.06871 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.128585


Total learning time: 2.034 seconds
Total inference time: 2.319 seconds
AUC ROC: 0.993692


Results scoring model
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.248787
   Precision = 0.211401 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.34902


Total scoring time: 1.806 seconds
Parameter learned model CLL: -0.248787


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 231, 0], 'true': [7.429, 80, 178], 'false,true,true': [5.58e-08, 54, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'false,true,false': 'genre(A, H)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 225, 0], 'true,true,true': [0.0, 18, 0], 'true,true,false': [6.977, 67, 178], 'false,true,true': [0.0, 52, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 257, 0], 'true,true': [0.439, 72, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 8, 0], 'true,true,true': [6.665, 63, 178], 'false,true,true,false': [0.0, 39, 0], 'false,true,false': [0.0, 204, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [1.07e-07, 254, 0], 'true': [7.007, 75, 178], 'false,true,true': [0.0, 45, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [1.67e-08, 36, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 9, 0], 'false,true,false': [5.59e-09, 216, 0], 'true': [7.218, 83, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [3.36e-09, 266, 0], 'true,true,true': [2.114, 7, 129], 'true,true,false': [5.127, 63, 49]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 37, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [2.63e-09, 7, 0], 'false,true,false': [8.23e-09, 233, 0], 'true': [6.469, 76, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [6.629, 79, 178], 'false,true,true': [0.0, 283, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [2.36e-08, 237, 0], 'true': [6.499, 74, 178], 'false,true,true': [5.27e-09, 48, 0]}]]
[{'': [0.21392945135509234, -9.349246523159213e-18], 'false,true': [5.756711979537848e-17, -2.0762612408574356e-16], 'false': [-9.349246523159213e-18, nan]}, {'': [0.2187396087842887, -8.977976805633034e-17], 'false': [-8.977976805633034e-17, nan], 'false,true,false': [nan, -6.513308411134252e-17], 'false,true': [-3.416070845000482e-17, -6.513308411134252e-17], 'true': [0.2187396087842887, nan], 'true,true': [-6.167905692361981e-17, 0.19868388171595855]}, {'': [0.192430925219303, -9.676652043425489e-17], 'true': [0.192430925219303, nan], 'false': [-9.676652043425489e-17, nan]}, {'': [0.1843174920049871, -6.900190910020893e-17], 'false,true,true': [-1.734723475976807e-18, -8.540177112501205e-18], 'false': [-6.900190910020893e-17, nan], 'false,true': [8.267618268485208e-18, -9.143013143971877e-17], 'true': [0.1843174920049871, nan], 'true,true': [0.1843174920049871, nan]}, {'': [0.19404373236960726, 8.020340244783739e-17], 'false,true': [-1.603655480014115e-17, 4.545795061457334e-17], 'false': [8.020340244783739e-17, nan]}, {'': [0.19964229034656958, 3.402982450958334e-17], 'false,true': [4.934324553889585e-18, 3.0839528461809905e-17], 'false,true,true': [-4.625929269271485e-18, 7.709882115452476e-18], 'false': [3.402982450958334e-17, nan]}, {'': [0.18697138787249334, 1.1686558153949016e-17], 'true,true': [0.03285533629275184, 0.23468281448806508], 'true': [0.18697138787249334, nan], 'false': [1.1686558153949016e-17, nan]}, {'': [0.1647773416030318, 4.168346374043909e-17], 'false,true': [-1.1354553660939102e-17, 6.766166072822842e-17], 'false,true,true': [9.912705577010326e-19, -9.751959000085835e-18], 'false': [4.168346374043909e-17, nan]}, {'': [0.17098515129544084, -4.2368935215377e-17], 'false,true': [-4.2368935215377e-17, nan], 'false': [-4.2368935215377e-17, nan]}, {'': [0.16759080715934577, 3.4280570584917116e-17], 'false,true': [5.782411586589357e-19, 2.3422426679855622e-18], 'false': [3.4280570584917116e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(A, E).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,true;genre(B, G).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(B, F).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 5,16e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.14185106490048852;  // std dev = 0,000, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 1,86e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( female(A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.12544463852839133;  // std dev = 1,83e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( genre(A, E) )
%   | then return -0.12544463852839158;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.1254446385283917;  // std dev = 0,000, 209,000 (wgt'ed) examples reached here.  /* #neg=209 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.11231637819360694;  // std dev = 0,000, 275,000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783626;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.10159632948783656;  // std dev = 0,000, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.09269127618926104;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.09269127618926094;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.0926912761892609;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926089;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926086;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return -0.09269127618926089;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.08518475138839686;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.08518475138839679;  // std dev = 2,08e-09, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839679;  // std dev = 1,61e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.08518475138839675;  // std dev = 5,05e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | | else return -0.08518475138839675;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.08518475138839675;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.20320011403336183;  // std dev = 0,043, 132,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=129 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.20975771563253545;  // std dev = 5,96e-08, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.07877675473109179;  // std dev = 4,75e-09, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109162;  // std dev = 2,69e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.07877675473109155;  // std dev = 4,47e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else return -0.07877675473109162;  // std dev = 3,23e-09, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( female(B) )
%   | | then return -0.0787767547310917;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.07877675473109172;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.17760224179830436;  // std dev = 0,000478, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.17797885971013316;  // std dev = 0,000258, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 7,45e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.08653661132961628;  // std dev = 0,011, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( female(A) )
%   | | then return -0.073246225763337;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333695;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.07324622576333699;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.15312744154081756;  // std dev = 0,000424, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.15341289903446367;  // std dev = 0,000229, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06842697784420271;  // std dev = 1,05e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.07651149884534031;  // std dev = 0,010, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06842697784420294;  // std dev = 0,000, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13430643992672403;  // std dev = 0,000381, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.13452913029702526;  // std dev = 0,000205, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return -0.07636302750013317;  // std dev = 0,009, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.06419184008202612;  // std dev = 6,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.06419184008202615;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.06419184008202615;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else return -0.06419184008202622;  // std dev = 0,000, 140,000 (wgt'ed) examples reached here.  /* #neg=140 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063585
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.211 seconds
Total inference time: 2.702 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065686
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.605 seconds
Refined model CLL: -0.065686


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063585
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.656 seconds
Total inference time: 2.702 seconds
AUC ROC: 1.0
Total revision time: 9.656
Best scored revision CLL: -0.065686


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:57:23
{'Inference time': 2.702, 'CLL': -0.063585, 'parameter': {'Inference time': 2.319, 'CLL': -0.298315, 'Precision': [0.06871, 0.5], 'AUC ROC': 0.993692, 'Recall': 1.0, 'Learning time': 2.034, 'AUC PR': 0.961008, 'F1': 0.128585}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 9.656, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
0;false,false,true;author(J, I), venue(J, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,false;title(G, E), venue(G, A).;false;false
0;false,true;haswordauthor(F, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordauthor(D, C).;false;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;false,true,true;author(K, I), venue(K, A).;false;false
1;false,true,false;author(L, I), venue(L, A).;false;false
1;false,true;haswordtitle(J, H).;true;true
1;true,false,true;author(G, F), venue(G, A).;false;false
1;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true;haswordtitle(M, K).;false;false
2;true,false,true;author(J, I), venue(J, B).;false;false
2;true,true,true;haswordauthor(G, C).;false;false
2;false;haswordvenue(A, K), haswordauthor(L, K).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;true,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true;title(J, I), venue(J, A).;true;false
3;false,true,true;samebib(J, K), venue(K, B).;false;false
3;true,true,true;haswordvenue(B, D).;false;false
3;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
3;true,true,false;haswordauthor(G, C).;false;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true;haswordtitle(F, C).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
4;false,false,true;title(K, J), venue(K, A).;false;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
4;false,true,false;author(H, E), venue(H, A).;false;false
4;false,true;haswordtitle(F, D).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true,false;haswordauthor(H, D).;false;false
5;false,true;title(F, E), venue(F, A).;true;true
5;false,true,true;samebib(F, G), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
6;false,false,true;title(N, M), venue(N, B).;false;false
6;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
6;false,false;haswordvenue(A, L), haswordtitle(M, L).;true;false
6;true,true;haswordauthor(F, C).;false;true
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;true,true,false;author(G, E), venue(G, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
8;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
8;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
8;false,true,true;haswordvenue(A, F).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
9;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
9;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
9;false,true,false;author(H, E), venue(H, A).;false;false
9;false,true;haswordtitle(F, D).;true;true
9;false,true,true;author(G, E), title(G, F).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5612739350995126;  // std dev = 3,655, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048766;  // std dev = 6,14e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.22465781041568822;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.4091450064857205;  // std dev = 4,059, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( genre(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.31587684213502815;  // std dev = 0,483, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.11231637819360626;  // std dev = 6,04e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.14904825892696222;  // std dev = 4,609, 87,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783624;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.27230050411549184;  // std dev = 3,731, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0938044078515829;  // std dev = 0,008, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1332196172186087;  // std dev = 4,180, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08509804696387911;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839679;  // std dev = 2,28e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.4897853803974389;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.49993103664919253;  // std dev = 0,211, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.07894424620486855;  // std dev = 0,002, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14145472088186598;  // std dev = 2,774, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.0868783114300466;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07323485705103315;  // std dev = 4,47e-09, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.02044832824093957;  // std dev = 3,281, 78,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.06897676533837335;  // std dev = 0,016, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12095990273667534;  // std dev = 2,674, 63,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07010349592961816;  // std dev = 0,008, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06414944821542659;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978805
   AUC PR    = 0.865091
   CLL	      = -0.206275
   Precision = 0.80814 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.816446


Total learning time: 1.132 seconds
Total inference time: 2.508 seconds
AUC ROC: 0.978805


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.220038
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.286 seconds
Parameter learned model CLL: -0.220038


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [6.14e-08, 61, 0], 'true': [3.655, 19, 45], 'false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'false,true,false': 'genre(A, H)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 54, 0], 'true,true,true': [0.0, 1, 0], 'true,true,false': [4.059, 26, 45], 'false,true,true': [0.0, 9, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [6.04e-09, 62, 0], 'true,true': [0.483, 28, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [4.609, 42, 45], 'false,true,true,false': [0.0, 4, 0], 'false,true,false': [3.65e-08, 54, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 53, 0], 'true': [3.731, 22, 45], 'false,true,true': [0.008, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 5, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [2.28e-09, 56, 0], 'true': [4.18, 29, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.002, 83, 0], 'true,true,true': [0.0, 0, 45], 'true,true,false': [0.211, 30, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,false': [4.47e-09, 65, 0], 'true': [2.774, 20, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.281, 33, 45], 'false,true,true': [0.016, 72, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 66, 0], 'true': [2.674, 18, 45], 'false,true,true': [0.008, 9, 0]}]]
[{'': [0.20874023437500033, 6.832141690000964e-17], 'false,true': [0.0, 6.188128333976282e-17], 'false': [6.832141690000964e-17, nan]}, {'': [0.23437499999999942, -1.409807015397024e-17], 'false': [-1.409807015397024e-17, nan], 'false,true,false': [nan, -3.700743415417188e-17], 'false,true': [0.0, -3.700743415417188e-17], 'true': [0.23437499999999942, nan], 'true,true': [0.0, 0.23209680618924752]}, {'': [0.23288846296439075, 3.581364595565021e-17], 'true': [0.23288846296439075, nan], 'false': [3.581364595565021e-17, nan]}, {'': [0.2441391630568733, 2.871266442996095e-17], 'false,true,true': [nan, 0.0], 'false': [2.871266442996095e-17, nan], 'false,true': [0.0, 2.4671622769447922e-17], 'true': [0.2441391630568733, nan], 'true,true': [0.2441391630568733, nan]}, {'': [0.20781073693874808, 1.278688109387142e-06], 'false,true': [8.673434683647424e-06, -3.142140635731575e-18], 'false': [1.278688109387142e-06, nan]}, {'': [0.2361362314090431, 5.656931016513941e-10], 'false,true': [0.0, 5.9476233462061954e-18], 'false,true,true': [nan, 0.0], 'false': [5.656931016513941e-10, nan]}, {'': [0.2356814723199985, 2.530864941018325e-06], 'true,true': [-3.1579677144893343e-16, 0.0014805290970236011], 'true': [0.2356814723199985, nan], 'false': [2.530864941018325e-06, nan]}, {'': [0.11841339630581221, 2.777628576809393e-06], 'false,true': [0.0, 2.049642507000289e-17], 'false,true,true': [0.0, nan], 'false': [2.777628576809393e-06, nan]}, {'': [0.13802037648586987, 3.5033036470769976e-06], 'false,true': [3.5033036470769976e-06, nan], 'false': [3.5033036470769976e-06, nan]}, {'': [0.1134778147305893, 4.663818988178322e-06], 'false,true': [7.668556153873753e-06, -6.7286243916676156e-18], 'false': [4.663818988178322e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(A, E).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1642151258435549;  // std dev = 0,134, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.11104712419150652;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11204439519315638;  // std dev = 0,000981, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(A) )
%   | then if ( actor(B) )
%   | | then return -0.11231637819360635;  // std dev = 3,48e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.1016575898281435;  // std dev = 9,98e-05, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.10127623374049392;  // std dev = 0,003, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.10144689445127734;  // std dev = 0,003, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0928089722021135;  // std dev = 3,21e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09272199697351952;  // std dev = 3,04e-05, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.21529335474637548;  // std dev = 0,308, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08526975487733662;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08521072369363726;  // std dev = 2,43e-05, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07345083524834625;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(B) )
%   | | then return -0.07887051827078367;  // std dev = 1,20e-05, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return -0.07878793353288753;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07760355889135571;  // std dev = 0,014, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( female(B) )
%   | then if ( actor(A) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07330812564513846;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07325592323841996;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07300757929650917;  // std dev = 0,002, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1527438580936709;  // std dev = 5,89e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06849856213570327;  // std dev = 4,77e-05, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06852283727805475;  // std dev = 0,000166, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.05958109585913443;  // std dev = 4,81e-06, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return -0.06842697784420271;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.0684269778442027;  // std dev = 1,05e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.0684269778442027;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06427968572281528;  // std dev = 3,07e-05, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.05633189064029891;  // std dev = 4,71e-06, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801095;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13400703000801115;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(A, D) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07453
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 2.565 seconds
Total inference time: 3.549 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065681
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.341 seconds
Refined model CLL: -0.065681


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07453
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 6.324000000000001 seconds
Total inference time: 3.549 seconds
AUC ROC: 1.0
Total revision time: 6.324000000000001
Best scored revision CLL: -0.065681


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:57:36
{'Inference time': 3.549, 'CLL': -0.07453, 'parameter': {'Inference time': 2.508, 'CLL': -0.206275, 'Precision': [0.80814, 0.5], 'AUC ROC': 0.978805, 'Recall': 0.824926, 'Learning time': 1.132, 'AUC PR': 0.865091, 'F1': 0.816446}, 'Precision': [0.743929, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 6.324000000000001, 'AUC PR': 1.0, 'F1': 0.853165}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
0;false,false,true;author(J, I), venue(J, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,false;title(G, E), venue(G, A).;false;false
0;false,true;haswordauthor(F, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordauthor(D, C).;false;true
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
1;false,true,true;author(K, I), venue(K, A).;false;false
1;false,true,false;author(L, I), venue(L, A).;false;false
1;false,true;haswordtitle(J, H).;true;true
1;true,false,true;author(G, F), venue(G, A).;false;false
1;true,false;haswordvenue(B, E), haswordauthor(F, E).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true;haswordtitle(M, K).;false;false
2;true,false,true;author(J, I), venue(J, B).;false;false
2;true,true,true;haswordauthor(G, C).;false;false
2;false;haswordvenue(A, K), haswordauthor(L, K).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;true,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true;title(J, I), venue(J, A).;true;false
3;false,true,true;samebib(J, K), venue(K, B).;false;false
3;true,true,true;haswordvenue(B, D).;false;false
3;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
3;true,true,false;haswordauthor(G, C).;false;false
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;true,true;haswordtitle(F, C).;true;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
4;false,false,true;title(K, J), venue(K, A).;false;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
4;false,true,false;author(H, E), venue(H, A).;false;false
4;false,true;haswordtitle(F, D).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true,false;haswordauthor(H, D).;false;false
5;false,true;title(F, E), venue(F, A).;true;true
5;false,true,true;samebib(F, G), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
6;false,false,true;title(N, M), venue(N, B).;false;false
6;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
6;false,false;haswordvenue(A, L), haswordtitle(M, L).;true;false
6;true,true;haswordauthor(F, C).;false;true
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;true,true,false;author(G, E), venue(G, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;false,true;title(F, E), venue(F, A).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
8;false,false,true;title(K, J), venue(K, B).;false;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
8;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
8;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
8;false,true,true;haswordvenue(A, F).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
9;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
9;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
9;false,true,false;author(H, E), venue(H, A).;false;false
9;false,true;haswordtitle(F, D).;true;true
9;false,true,true;author(G, E), title(G, F).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4502541982574076;  // std dev = 4,284, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.14185106490048766;  // std dev = 7,30e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.4657298578324606;  // std dev = 3,844, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839152;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.38058558732941616;  // std dev = 0,468, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.11231637819360625;  // std dev = 6,59e-09, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.30662403147930245;  // std dev = 3,767, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1015963294878362;  // std dev = 4,34e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1616428370585333;  // std dev = 4,155, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16591515247020455;  // std dev = 3,904, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.08518475138839679;  // std dev = 2,28e-09, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.46735857379401446;  // std dev = 4,21e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.2351234385917008;  // std dev = 2,646, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.07877675473109175;  // std dev = 2,79e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07860696434214676;  // std dev = 3,519, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07596851317095014;  // std dev = 3,433, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.06842697784420268;  // std dev = 2,89e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.006315426398996421;  // std dev = 3,722, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.982257
   AUC PR    = 0.888508
   CLL	      = -0.236272
   Precision = 0.104077 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.188531


Total learning time: 1.121 seconds
Total inference time: 2.519 seconds
AUC ROC: 0.982257


Results scoring model
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.242601
   Precision = 0.078534 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.145631


Total scoring time: 1.401 seconds
Parameter learned model CLL: -0.242601


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [7.3e-08, 74, 0], 'true': [4.284, 31, 45], 'false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'false,true,false': 'genre(A, H)', 'false,true': 'genre(A, G)', 'true': 'movie(D, B)', 'true,true': 'genre(A, E)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 72, 0], 'true,true,true': [0.0, 0, 0], 'true,true,false': [3.844, 22, 45], 'false,true,true': [0.0, 3, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [6.59e-09, 70, 0], 'true,true': [0.468, 22, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, A)', 'true,true': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [3.767, 21, 45], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [4.34e-08, 60, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 56, 0], 'true': [4.155, 29, 45], 'false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [2.28e-09, 59, 0], 'true': [3.904, 24, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [2.79e-09, 58, 0], 'true,true,true': [4.21e-08, 0, 35], 'true,true,false': [2.646, 24, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [1.86e-09, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 78, 0], 'true': [3.519, 26, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [3.433, 24, 45], 'false,true,true': [2.89e-08, 69, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 63, 0], 'true': [3.722, 31, 45], 'false,true,true': [0.0, 2, 0]}]]
[{'': [0.24151662049861528, 7.105427357601002e-17], 'false,true': [0.0, 7.201446646217232e-17], 'false': [7.105427357601002e-17, nan]}, {'': [0.22053909556694024, -2.6645352591003756e-17], 'false': [-2.6645352591003756e-17, nan], 'false,true,false': [nan, -3.0839528461809905e-17], 'false,true': [0.0, -3.0839528461809905e-17], 'true': [0.22053909556694024, nan], 'true,true': [nan, 0.22053909556694024]}, {'': [0.21891601444760378, 4.4408920985006264e-17], 'true': [0.21891601444760378, nan], 'false': [4.4408920985006264e-17, nan]}, {'': [0.21499547533208538, 3.276067941516855e-17], 'false,true,true': [nan, 0.0], 'false': [3.276067941516855e-17, nan], 'false,true': [0.0, 3.14563190310461e-17], 'true': [0.21499547533208538, nan], 'true,true': [0.21499547533208538, nan]}, {'': [0.2333275993401503, -1.947759692324836e-18], 'false,true': [0.0, -9.912705577010326e-19], 'false': [-1.947759692324836e-18, nan]}, {'': [0.22092425019196468, 4.550094363217854e-18], 'false,true': [0.0, 5.645201820127915e-18], 'false,true,true': [nan, 0.0], 'false': [4.550094363217854e-18, nan]}, {'': [0.22484852939046757, 7.656710514656252e-18], 'true,true': [5.075305255429287e-17, 0.205993812845136], 'true': [0.22484852939046757, nan], 'false': [7.656710514656252e-18, nan]}, {'': [0.17444631478139272, -5.482582837655094e-18], 'false,true': [1.1564823173178713e-18, -4.981769982292369e-18], 'false,true,true': [nan, 1.1564823173178713e-18], 'false': [-5.482582837655094e-18, nan]}, {'': [0.1708508628329065, 1.206764157201257e-17], 'false,true': [1.206764157201257e-17, nan], 'false': [1.206764157201257e-17, nan]}, {'': [0.18231536964401643, -3.416070845000482e-18], 'false,true': [0.0, -2.64338815386942e-18], 'false': [-3.416070845000482e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;true;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.1254446385283916;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360636;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.1134103998881718;  // std dev = 0,004, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.11357688965723434;  // std dev = 7,79e-05, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10149651670249406;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( female(B) )
%   | | | then return -0.09260769746627663;  // std dev = 5,27e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.1951252523954158;  // std dev = 0,602, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.1025839257131505;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08511381431829011;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.20975771563253542;  // std dev = 9,13e-09, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07776101728815633;  // std dev = 0,010, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07871583893012414;  // std dev = 6,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.09358716070114655;  // std dev = 8,04e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07212723459937832;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.08592307543932264;  // std dev = 8,59e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( female(B) )
%   | | | then return -0.07319337897815135;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07313522399318241;  // std dev = 0,001, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06856318096652644;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0677260975409988;  // std dev = 0,009, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.15274385809367086;  // std dev = 4,93e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then return -0.06841590542917142;  // std dev = 2,17e-05, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.06843051590243346;  // std dev = 7,08e-06, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.07638763785601332;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07546553764014542;  // std dev = 0,010, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.06419184008202619;  // std dev = 1,86e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(B) )
%   | | | then return -0.06431199861647353;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06436238929466818;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return -0.07396499098674245;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(A), actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.0641707081290526;  // std dev = 0,000123, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.06419465631636673;  // std dev = 1,74e-05, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.06325796409080942;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080298
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.25 seconds
Total inference time: 3.224 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066204
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.391 seconds
Refined model CLL: -0.066204


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080298
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 7.163 seconds
Total inference time: 3.224 seconds
AUC ROC: 1.0
Total revision time: 7.163
Best scored revision CLL: -0.066204


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:57:50
{'Inference time': 3.224, 'CLL': -0.080298, 'parameter': {'Inference time': 2.519, 'CLL': -0.236272, 'Precision': [0.104077, 0.5], 'AUC ROC': 0.982257, 'Recall': 1.0, 'Learning time': 1.121, 'AUC PR': 0.888508, 'F1': 0.188531}, 'Precision': [0.742291, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 7.163, 'AUC PR': 1.0, 'F1': 0.852086}


