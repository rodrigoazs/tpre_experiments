Starting experiment #4 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2198105204653608;  // std dev = 0,480, 7.872,000 (wgt'ed) examples reached here.  /* #neg=5.025 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7914822684328452;  // std dev = 2,366, 90,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=84 */
%   | | | else return -0.1386252584488749;  // std dev = 0,998, 310,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.03944142634627078;  // std dev = 3,906, 166,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=17 */
%   | | | else return 0.010148935099512346;  // std dev = 4,014, 125,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=19 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.00522315792374376;  // std dev = 6,370, 344,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=47 */
%   | | | else return -0.1106010649004877;  // std dev = 1,392, 64,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7837768057718364;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.3423892459632249;  // std dev = 4,357, 76,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=39 */
%   | | | else return 0.0385336768077775;  // std dev = 4,620, 129,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=27 */
%   | else return 0.18549829326846148;  // std dev = 0,479, 7.747,000 (wgt'ed) examples reached here.  /* #neg=4.987 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then if ( author(K, J), title(K, I) )
%   | | | then return 0.045906822137934275;  // std dev = 1,086, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.19671900599790632;  // std dev = 3,160, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else if ( title(L, I), venue(L, A) )
%   | | | then return 0.05226656993079006;  // std dev = 6,997, 397,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=83 */
%   | | | else return -0.0657620256992623;  // std dev = 4,397, 283,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=21 */
%   | else return -0.029938475430581365;  // std dev = 0,311, 450,000 (wgt'ed) examples reached here.  /* #neg=401 #pos=49 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15791076817078384;  // std dev = 0,479, 7.980,000 (wgt'ed) examples reached here.  /* #neg=5.133 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.21089680381955006;  // std dev = 0,936, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.11688874060827123;  // std dev = 3,286, 54,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.19670286281239882;  // std dev = 1,153, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.13575396838497697;  // std dev = 0,014, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.028650039163423617;  // std dev = 7,648, 620,000 (wgt'ed) examples reached here.  /* #neg=554 #pos=66 */
%   | | | else return 0.0359491197460545;  // std dev = 4,731, 187,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=37 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.022054804582631142;  // std dev = 5,416, 266,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=48 */
%   | | | else return -0.12219680242187779;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then return 0.6089601903988051;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.19474892718996067;  // std dev = 4,639, 87,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=39 */
%   | | | else return 0.008894121358503133;  // std dev = 4,620, 129,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=27 */
%   | | else return 0.13154618457017647;  // std dev = 0,479, 7.741,000 (wgt'ed) examples reached here.  /* #neg=4.981 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then return 0.19366595920677704;  // std dev = 0,477, 45,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | else return -0.016032234170011497;  // std dev = 0,302, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, A) )
%   | | | then return 0.04813749190551737;  // std dev = 6,908, 384,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=83 */
%   | | | else return -0.03430271079989498;  // std dev = 4,348, 220,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=21 */
%   | | else return -0.006545815945072695;  // std dev = 0,331, 374,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=47 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11249395335824831;  // std dev = 0,480, 7.869,000 (wgt'ed) examples reached here.  /* #neg=5.022 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then return 0.1412196737335377;  // std dev = 0,469, 48,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return 0.027766836035374946;  // std dev = 6,959, 412,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=83 */
%   | | | else return -0.041884628604744685;  // std dev = 4,377, 249,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=21 */
%   | else return -0.011379776087103728;  // std dev = 0,324, 408,000 (wgt'ed) examples reached here.  /* #neg=359 #pos=49 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09067641698078695;  // std dev = 0,479, 7.876,000 (wgt'ed) examples reached here.  /* #neg=5.029 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.14602905606148703;  // std dev = 1,126, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.12938210882966103;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.09917142946582784;  // std dev = 1,009, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.07492920258805935;  // std dev = 2,796, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09774591872660897;  // std dev = 3,126, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return -0.02709609943218481;  // std dev = 1,300, 19,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.01340407278564446;  // std dev = 8,455, 720,000 (wgt'ed) examples reached here.  /* #neg=632 #pos=88 */
%   | | | else return -4.076591239666705E-5;  // std dev = 5,291, 276,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=46 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06909920385969473;  // std dev = 0,478, 7.954,000 (wgt'ed) examples reached here.  /* #neg=5.107 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.1348529401456971;  // std dev = 1,108, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.024014890424328587;  // std dev = 2,850, 71,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.3478294426789727;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.144404075730398;  // std dev = 0,037, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.013826496286881292;  // std dev = 7,199, 535,000 (wgt'ed) examples reached here.  /* #neg=453 #pos=82 */
%   | | | else return 0.06345154044260627;  // std dev = 4,102, 112,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=21 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0025949508388094233;  // std dev = 6,459, 379,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=48 */
%   | | | else return -0.10794049848930724;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, B), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.04787087513702096;  // std dev = 0,476, 7.429,000 (wgt'ed) examples reached here.  /* #neg=4.820 #pos=2.609 */
%   | | else return 0.03581707330181475;  // std dev = 0,367, 707,000 (wgt'ed) examples reached here.  /* #neg=573 #pos=134 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.15802437480975112;  // std dev = 0,306, 277,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=30 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.45411768500726907;  // std dev = 4,264, 102,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=78 */
%   | | | else return 0.054876538801003114;  // std dev = 5,244, 205,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=49 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then return 0.5621771390179316;  // std dev = 0,334, 78,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=68 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.03987856116172473;  // std dev = 5,130, 212,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=47 */
%   | | | else return -0.05446622640470553;  // std dev = 1,389, 24,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else return -0.09797824278867713;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordtitle(E, C) )
%   | | then if ( author(F, D), title(F, E) )
%   | | | then return 0.42785729335990563;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22003584480731658;  // std dev = 1,246, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.3985064437958704;  // std dev = 0,052, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.039616111174823956;  // std dev = 0,475, 7.992,000 (wgt'ed) examples reached here.  /* #neg=5.166 #pos=2.826 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, G) )
%   | | | then return 0.09140304485175134;  // std dev = 3,226, 49,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | | else return -0.01809282267091598;  // std dev = 7,043, 561,000 (wgt'ed) examples reached here.  /* #neg=478 #pos=83 */
%   | | else if ( haswordtitle(H, K), haswordvenue(A, K) )
%   | | | then return 0.04476353699038038;  // std dev = 4,115, 118,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=21 */
%   | | | else return -0.13382530492639283;  // std dev = 0,017, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.0055742324294725774;  // std dev = 0,329, 392,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=49 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03880241035161135;  // std dev = 0,477, 7.856,000 (wgt'ed) examples reached here.  /* #neg=5.009 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.14213516101033427;  // std dev = 1,070, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.13674113951080313;  // std dev = 0,081, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return 0.09104413346221137;  // std dev = 0,875, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.05113863356480842;  // std dev = 2,744, 59,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.006644633553521012;  // std dev = 8,292, 613,000 (wgt'ed) examples reached here.  /* #neg=530 #pos=83 */
%   | | | else return -0.039756098275020614;  // std dev = 3,698, 181,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=21 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.00798693318680047;  // std dev = 5,323, 255,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=47 */
%   | | | else return -0.08853517575036596;  // std dev = 0,005, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true;haswordauthor(J, H).;true;true
1;false,true,true;author(K, J), title(K, I).;false;false
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;false,true,false;title(L, I), venue(L, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
2;false,false,true;title(K, J), venue(K, A).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,true,true;author(G, E), title(G, F).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;true;haswordauthor(D, C).;false;true
3;false,false,true;title(M, L), venue(M, A).;false;false
3;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
3;false,true;haswordtitle(J, H).;false;false
3;true,false,true;author(G, F), venue(G, B).;false;false
3;true,false;haswordvenue(A, E), haswordauthor(F, E).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, B).;false;false
5;false,true;author(F, E), venue(F, A).;true;true
5;false,true,true;author(G, E), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
6;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false,true,false;author(H, E), venue(H, B).;false;false
6;false,true;haswordtitle(F, D).;true;true
6;false,true,true;author(G, E), venue(G, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;false
7;false,false,true;title(J, I), venue(J, A).;false;false
7;false;haswordvenue(A, G), haswordvenue(B, G).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
7;true,true;haswordvenue(B, C).;false;false
7;true;venue(E, B), title(E, D).;true;true
7;true,false;title(F, D), venue(F, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true,true;haswordauthor(J, G).;false;false
8;true,true,true;author(F, D), title(F, E).;false;false
8;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
8;false,true,false;haswordtitle(H, K), haswordvenue(A, K).;false;false
8;true,true;haswordtitle(E, C).;true;false
8;true;haswordauthor(D, C).;true;false
8;false,true;haswordtitle(H, I), haswordauthor(J, I).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
9;false,false,true;title(K, J), venue(K, B).;false;false
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;false,true,false;author(H, E), venue(H, B).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5248156017661797;  // std dev = 4,320, 84,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048766;  // std dev = 8,33e-09, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7816289395752943;  // std dev = 2,92e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.21837106042470472;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.12544463852839144;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3170847722092525;  // std dev = 3,700, 90,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360624;  // std dev = 5,87e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5440035346884402;  // std dev = 1,79e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.23568736948610083;  // std dev = 4,21e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.10159632948783621;  // std dev = 5,59e-09, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1764329973995982;  // std dev = 2,808, 91,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1518304227630985;  // std dev = 2,673, 88,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=56 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(B, G) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839679;  // std dev = 1,83e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10754698110228682;  // std dev = 2,717, 91,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=56 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(B, F) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07877675473109169;  // std dev = 3,33e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.29176696033034294;  // std dev = 0,991, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(A, E) )
%   | | then return -0.1533945713077167;  // std dev = 0,219, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.27361708962428627;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09286939573712812;  // std dev = 0,223, 84,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.06810854762313232;  // std dev = 0,012, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.045025777966672814;  // std dev = 2,238, 93,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=56 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.059559962510047915;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(B, G) )
%   | | | then return -0.06421097123748153;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06421097123748158;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971455
   AUC PR    = 0.688786
   CLL	      = -0.137061
   Precision = 0.799401 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.809091


Total learning time: 1.226 seconds
Total inference time: 2.925 seconds
AUC ROC: 0.971455


Results scoring model
   AUC ROC   = 0.999547
   AUC PR    = 0.949153
   CLL	      = -0.129207
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.497 seconds
Parameter learned model CLL: -0.129207


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,false': [8.33e-09, 78, 0], 'true': [4.32, 28, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)'}, {'false,false': [0.0, 0, 0], 'true,true,true': [2.92e-07, 0, 56], 'false,true,false': [0.0, 85, 0], 'true,true,false': [0.0, 33, 0], 'false,true,true': [0.0, 7, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [5.87e-08, 74, 0], 'true': [3.7, 34, 56], 'false,true,true': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [5.59e-09, 89, 0], 'true,true,true': [1.79e-07, 0, 56], 'true,true,false': [4.21e-08, 33, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 81, 0], 'true': [2.808, 35, 56], 'false,true,true': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, G)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 4, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [1.83e-08, 71, 0], 'false,true,true,false': [0.0, 5, 0], 'true': [2.673, 32, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 4, 0], 'true': [2.717, 35, 56], 'false,true,true': [0.0, 5, 0], 'false,true,false,false': [3.33e-08, 67, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)'}, {'true,false,false,false': [0.0, 69, 0], 'true,true,true': [0.991, 1, 56], 'true,false,false,true': [0.0, 36, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 1, 0], 'true,false,true': [0.219, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [0.223, 28, 56], 'false,true,true': [0.012, 93, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, G)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 73, 0], 'false,true,true,false': [0.0, 4, 0], 'true': [2.238, 37, 56]}]]
[{'': [0.2222222222222219, 7.401486830834377e-17], 'false,true': [0.0, 7.401486830834377e-17], 'false,true,true': [0.0, 0.0], 'false': [7.401486830834377e-17, nan]}, {'': [0.2333038757732616, -1.68946982008176e-17], 'false,true': [-1.982541115402065e-18, -2.0898315757650005e-17], 'true,true': [1.522591576628786e-15, 0.0], 'true': [0.2333038757732616, nan], 'false': [-1.68946982008176e-17, nan]}, {'': [0.15207329873726977, 5.2735593669694933e-17], 'false,true': [0.0, 4.650934292348629e-17], 'false': [5.2735593669694933e-17, nan]}, {'': [0.1418296036340164, 3.118604001756058e-17], 'true,true': [5.709718412357948e-16, 5.3828995133340925e-17], 'true': [0.1418296036340164, nan], 'false': [3.118604001756058e-17, nan]}, {'': [0.08664207287583585, 2.5522368382187506e-18], 'false,true': [0.0, 0.0], 'false': [2.5522368382187506e-18, nan]}, {'': [0.08122148345194578, 1.1102230246251566e-17], 'false,true,false': [0.0, 4.6910832026415064e-18], 'false,true': [0.0, 7.401486830834377e-18], 'false,true,true': [nan, 0.0], 'false': [1.1102230246251566e-17, nan]}, {'': [0.08114256953412341, 2.2642706423276218e-17], 'false,true,false': [0.0, 1.657049290485308e-17], 'false,true': [-1.3877787807814458e-18, 1.9546180011006276e-17], 'false': [2.2642706423276218e-17, nan]}, {'': [0.05396809328920071, nan], 'true,false,false': [-1.1102230246251565e-16, -2.413528314402514e-18], 'true,true': [0.01723607263773491, 0.0], 'true': [0.019196441683597028, 0.009078202456105198], 'true,false': [0.009635635940251921, 0.009045699045950864]}, {'': [0.049793991508637045, 1.470268182531569e-06], 'false,true': [1.470268182531569e-06, nan], 'false': [1.470268182531569e-06, nan]}, {'': [0.05384294064023025, 1.0398276966399252e-06], 'false,true,false': [0.0, -1.3687681125515628e-17], 'false,true': [0.0, -1.4062824978585317e-17], 'false,true,true': [nan, 0.0], 'false': [1.0398276966399252e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(B, E).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,false;genre(B, G).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,false;genre(B, F).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;false,false;movie(C, B).;true;true
7;true;movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,false;genre(B, G).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360636;  // std dev = 1,32e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( female(B) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.21001065151937887;  // std dev = 0,525, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07647605358084268;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(B, E) )
%   | | then return -0.08518475138839683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839682;  // std dev = 1,05e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( director(A) )
%   | | then return -0.07124666894556365;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.168155686191398;  // std dev = 0,046, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.13969125808168412;  // std dev = 0,165, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.07160313343741782;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.06235398458962116;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.1539045126889494;  // std dev = 3,23e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.15764771421190105;  // std dev = 3,23e-09, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.06842697784420267;  // std dev = 1,67e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.06853179061586709;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08477889546289508;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.13491248427624306;  // std dev = 4,17e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.1378238540089933;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06321266172423602;  // std dev = 0,002, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D) )
%   | then return -0.0681995862622173;  // std dev = 0,021, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(B, E) )
%   | | then return -0.07842822384972474;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */


Results
   AUC ROC   = 0.99889
   AUC PR    = 0.966568
   CLL	      = -0.07916
   Precision = 0.829517 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.906815


Total learning time: 2.444 seconds
Total inference time: 3.248 seconds
AUC ROC: 0.99889


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065252
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.651 seconds
Refined model CLL: -0.065252


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.99889
   AUC PR    = 0.966568
   CLL	      = -0.07916
   Precision = 0.829517 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.906815


Total learning time: 6.818 seconds
Total inference time: 3.248 seconds
AUC ROC: 0.99889
Total revision time: 6.818
Best scored revision CLL: -0.065252


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 02:14:18
{'Inference time': 3.248, 'CLL': -0.07916, 'parameter': {'Inference time': 2.925, 'CLL': -0.137061, 'Precision': [0.799401, 0.5], 'AUC ROC': 0.971455, 'Recall': 0.819018, 'Learning time': 1.226, 'AUC PR': 0.688786, 'F1': 0.809091}, 'Precision': [0.829517, 0.5], 'AUC ROC': 0.99889, 'Recall': 1.0, 'Learning time': 6.818, 'AUC PR': 0.966568, 'F1': 0.906815}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true;haswordauthor(J, H).;true;true
1;false,true,true;author(K, J), title(K, I).;false;false
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;false,true,false;title(L, I), venue(L, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
2;false,false,true;title(K, J), venue(K, A).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,true,true;author(G, E), title(G, F).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;true;haswordauthor(D, C).;false;true
3;false,false,true;title(M, L), venue(M, A).;false;false
3;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
3;false,true;haswordtitle(J, H).;false;false
3;true,false,true;author(G, F), venue(G, B).;false;false
3;true,false;haswordvenue(A, E), haswordauthor(F, E).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, B).;false;false
5;false,true;author(F, E), venue(F, A).;true;true
5;false,true,true;author(G, E), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
6;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false,true,false;author(H, E), venue(H, B).;false;false
6;false,true;haswordtitle(F, D).;true;true
6;false,true,true;author(G, E), venue(G, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;false
7;false,false,true;title(J, I), venue(J, A).;false;false
7;false;haswordvenue(A, G), haswordvenue(B, G).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
7;true,true;haswordvenue(B, C).;false;false
7;true;venue(E, B), title(E, D).;true;true
7;true,false;title(F, D), venue(F, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true,true;haswordauthor(J, G).;false;false
8;true,true,true;author(F, D), title(F, E).;false;false
8;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
8;false,true,false;haswordtitle(H, K), haswordvenue(A, K).;false;false
8;true,true;haswordtitle(E, C).;true;false
8;true;haswordauthor(D, C).;true;false
8;false,true;haswordtitle(H, I), haswordauthor(J, I).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
9;false,false,true;title(K, J), venue(K, B).;false;false
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;false,true,false;author(H, E), venue(H, B).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5325675397506758;  // std dev = 4,346, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048763;  // std dev = 8,93e-09, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7803029106457753;  // std dev = 2,92e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.21969708935422425;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.12544463852839144;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.32237977341086577;  // std dev = 3,721, 92,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360621;  // std dev = 7,45e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5241453828634173;  // std dev = 0,991, 59,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | | else return -0.23780529764776226;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.10173195905897792;  // std dev = 0,001, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21298411422396077;  // std dev = 2,644, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09267987042621134;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09267987042621145;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19733141472056615;  // std dev = 2,372, 80,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=58 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.09689833067801217;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08517507133585508;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, G) )
%   | | | then return -0.0851750713358551;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08517507133585502;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13007910459288882;  // std dev = 2,520, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then return -0.08019348605550126;  // std dev = 0,009, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( genre(B, F) )
%   | | | then return -0.0787684425798262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07876844257982626;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.27214445244161495;  // std dev = 0,991, 59,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | | else return -0.07323901495974869;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( genre(A, E) )
%   | | then return -0.1178915121757093;  // std dev = 0,283, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.29688816547804214;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.07323901495974873;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07093562126946751;  // std dev = 0,226, 89,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.0682819102034197;  // std dev = 0,006, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.05096692773749326;  // std dev = 2,188, 91,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06148152081351797;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, G) )
%   | | | then return -0.06419460622867451;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06419460622867447;  // std dev = 2,24e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.970727
   AUC PR    = 0.688693
   CLL	      = -0.1435
   Precision = 0.800604 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.80916


Total learning time: 1.21 seconds
Total inference time: 2.918 seconds
AUC ROC: 0.970727


Results scoring model
   AUC ROC   = 0.999416
   AUC PR    = 0.935484
   CLL	      = -0.130054
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.498 seconds
Parameter learned model CLL: -0.130054


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [8.93e-09, 91, 0], 'true': [4.346, 28, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)'}, {'false,false': [0.0, 0, 0], 'true,true,true': [2.92e-07, 0, 58], 'false,true,false': [0.0, 84, 0], 'true,true,false': [0.0, 39, 0], 'false,true,true': [0.0, 9, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [7.45e-08, 93, 0], 'true': [3.721, 34, 58], 'false,true,true': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.001, 101, 0], 'true,true,true': [0.991, 1, 58], 'true,true,false': [0.0, 27, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 72, 0], 'true': [2.644, 28, 58], 'false,true,true': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, G)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 7, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 86, 0], 'false,true,true,false': [0.0, 2, 0], 'true': [2.372, 22, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 7, 0], 'true': [2.52, 27, 58], 'false,true,true': [0.009, 7, 0], 'false,true,false,false': [0.0, 85, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)'}, {'true,false,false,false': [0.0, 73, 0], 'true,true,true': [0.991, 1, 58], 'true,false,false,true': [0.0, 29, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 10, 0], 'true,false,true': [0.283, 10, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [0.226, 31, 58], 'false,true,true': [0.006, 83, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, G)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [1.86e-09, 6, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [2.24e-08, 55, 0], 'false,true,true,false': [0.0, 1, 0], 'true': [2.188, 33, 58]}]]
[{'': [0.2195781503515409, 7.795182938857482e-17], 'false,true': [0.0, 7.564156871072495e-17], 'false,true,true': [nan, 0.0], 'false': [7.795182938857482e-17, nan]}, {'': [0.24040811988521785, -1.4325458382260084e-17], 'false,true': [0.0, -2.114710523095536e-17], 'true,true': [1.4700884188140004e-15, -1.0248212535001446e-16], 'true': [0.24040811988521785, nan], 'false': [-1.4325458382260084e-17, nan]}, {'': [0.15052506985234843, 6.280049432223107e-17], 'false,true': [0.0, 5.968940992608368e-17], 'false': [6.280049432223107e-17, nan]}, {'': [0.1364776276710329, 1.8395380568176516e-06], 'true,true': [0.016661878770468905, -1.644774851296528e-17], 'true': [0.1364776276710329, nan], 'false': [1.8395380568176516e-06, nan]}, {'': [0.08130819947601405, -3.172065784643304e-17], 'false,true': [0.0, -3.0839528461809905e-17], 'false': [-3.172065784643304e-17, nan]}, {'': [0.07035226183014864, 1.4166999687791522e-06], 'false,true,false': [-2.9738116731030977e-18, -5.163828021512356e-18], 'false,true': [3.054106880077031e-05, -5.9689409926083686e-18], 'false,true,true': [0.0, 0.0], 'false': [1.4166999687791522e-06, nan]}, {'': [0.07468737543624841, 9.949654376164484e-07], 'false,true,false': [0.0, -1.0449157878825003e-17], 'false,true': [1.2184493445385152e-05, -6.033820786006285e-18], 'false': [9.949654376164484e-07, nan]}, {'': [0.04736449536847533, nan], 'true,false,false': [-4.594026308793751e-17, -6.083413833562501e-18], 'true,true': [0.016661878770468333, -2.0816681711721684e-18], 'true': [0.029029921195452328, 0.010013416424637631], 'true,false': [0.008009950473358873, 0.010177825964132314]}, {'': [0.051289532243120856, 3.8025045821771177e-07], 'false,true': [3.8025045821771177e-07, nan], 'false': [3.8025045821771177e-07, nan]}, {'': [0.052597349981609406, 1.1680821558388995e-07], 'false,true,false': [5.782411586589357e-19, 9.08364292875128e-18], 'false,true': [0.0, 9.100188726435709e-18], 'false,true,true': [nan, 0.0], 'false': [1.1680821558388995e-07, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(B, E).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,false;genre(B, G).;true;true
5;false,true;genre(B, F).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,false;genre(B, F).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;false,false;movie(C, B).;true;true
7;true;movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,false;genre(B, G).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048766;  // std dev = 7,74e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( female(B) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.09269127618926093;  // std dev = 2,95e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839686;  // std dev = 2,28e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694892;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2551722425694892;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(B, F) )
%   | | then return -0.08518475138839683;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 5,27e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.0851847513883968;  // std dev = 1,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.07969218282499248;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.14282407969018335;  // std dev = 0,086, 44,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( female(B) )
%   | | then return -0.07319963868715823;  // std dev = 5,38e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07318410966176529;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.15723213749860532;  // std dev = 4,93e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.26201467379858495;  // std dev = 0,671, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.06842697784420271;  // std dev = 9,13e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.06837210915306169;  // std dev = 9,89e-07, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08505282301391748;  // std dev = 0,002, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 4,17e-09, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.13750128568379372;  // std dev = 4,17e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(B) )
%   | | then return -0.06321991819768814;  // std dev = 0,003, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.14648834557218518;  // std dev = 0,698, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then return -0.06736856962180307;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(B, E) )
%   | | then return -0.07891855956297684;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.06419184008202618;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */


Results
   AUC ROC   = 0.998889
   AUC PR    = 0.966587
   CLL	      = -0.077334
   Precision = 0.830769 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.907563


Total learning time: 2.611 seconds
Total inference time: 3.335 seconds
AUC ROC: 0.998889


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065066
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.605 seconds
Refined model CLL: -0.065066


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.998889
   AUC PR    = 0.966587
   CLL	      = -0.077334
   Precision = 0.830769 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.907563


Total learning time: 6.924000000000001 seconds
Total inference time: 3.335 seconds
AUC ROC: 0.998889
Total revision time: 6.924000000000001
Best scored revision CLL: -0.065066


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 02:14:32
{'Inference time': 3.335, 'CLL': -0.077334, 'parameter': {'Inference time': 2.918, 'CLL': -0.1435, 'Precision': [0.800604, 0.5], 'AUC ROC': 0.970727, 'Recall': 0.817901, 'Learning time': 1.21, 'AUC PR': 0.688693, 'F1': 0.80916}, 'Precision': [0.830769, 0.5], 'AUC ROC': 0.998889, 'Recall': 1.0, 'Learning time': 6.924000000000001, 'AUC PR': 0.966587, 'F1': 0.907563}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true;haswordauthor(J, H).;true;true
1;false,true,true;author(K, J), title(K, I).;false;false
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;false,true,false;title(L, I), venue(L, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
2;false,false,true;title(K, J), venue(K, A).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,true,true;author(G, E), title(G, F).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;true;haswordauthor(D, C).;false;true
3;false,false,true;title(M, L), venue(M, A).;false;false
3;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
3;false,true;haswordtitle(J, H).;false;false
3;true,false,true;author(G, F), venue(G, B).;false;false
3;true,false;haswordvenue(A, E), haswordauthor(F, E).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, B).;false;false
5;false,true;author(F, E), venue(F, A).;true;true
5;false,true,true;author(G, E), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
6;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false,true,false;author(H, E), venue(H, B).;false;false
6;false,true;haswordtitle(F, D).;true;true
6;false,true,true;author(G, E), venue(G, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;false
7;false,false,true;title(J, I), venue(J, A).;false;false
7;false;haswordvenue(A, G), haswordvenue(B, G).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
7;true,true;haswordvenue(B, C).;false;false
7;true;venue(E, B), title(E, D).;true;true
7;true,false;title(F, D), venue(F, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true,true;haswordauthor(J, G).;false;false
8;true,true,true;author(F, D), title(F, E).;false;false
8;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
8;false,true,false;haswordtitle(H, K), haswordvenue(A, K).;false;false
8;true,true;haswordtitle(E, C).;true;false
8;true;haswordauthor(D, C).;true;false
8;false,true;haswordtitle(H, I), haswordauthor(J, I).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
9;false,false,true;title(K, J), venue(K, B).;false;false
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;false,true,false;author(H, E), venue(H, B).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5534614350995087;  // std dev = 7,364, 256,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.14185106490048846;  // std dev = 0,000, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7393866622633763;  // std dev = 2,194, 134,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=129 */
%   | | else return 0.19550351390261336;  // std dev = 5,337, 117,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.12544463852839155;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.12544463852839183;  // std dev = 0,000, 240,000 (wgt'ed) examples reached here.  /* #neg=240 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3559134027952568;  // std dev = 7,061, 264,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360633;  // std dev = 2,36e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.11231637819360676;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.4932932764182649;  // std dev = 2,394, 135,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=129 */
%   | | else return 0.08235953005738932;  // std dev = 5,353, 118,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.1015963294878366;  // std dev = 0,000, 272,000 (wgt'ed) examples reached here.  /* #neg=272 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2035322675896942;  // std dev = 6,622, 264,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.0926912761892605;  // std dev = 6,99e-08, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15482846382743232;  // std dev = 6,571, 266,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=178 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.08518475138839686;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( genre(B, G) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.08518475138839678;  // std dev = 6,32e-08, 157,000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16561083438998314;  // std dev = 6,076, 244,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=178 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( genre(B, F) )
%   | | | then return -0.0787767547310917;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.07877675473109146;  // std dev = 8,16e-08, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.24461122142367284;  // std dev = 2,577, 136,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=129 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( genre(A, E) )
%   | | then return -0.20589235955756452;  // std dev = 1,483, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.03236238838118648;  // std dev = 5,213, 110,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=49 */
%   | | | else return -0.0732462257633367;  // std dev = 1,06e-07, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07451554808041153;  // std dev = 0,391, 258,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.06684689889094887;  // std dev = 0,053, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.05749530837092759;  // std dev = 6,291, 259,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=178 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.06428682278268945;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.056754028257469696;  // std dev = 7,45e-09, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( genre(B, G) )
%   | | | then return -0.06428682278268945;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.06428682278268927;  // std dev = 5,67e-08, 197,000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993054
   AUC PR    = 0.901018
   CLL	      = -0.238333
   Precision = 0.06871 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.128585


Total learning time: 1.81 seconds
Total inference time: 2.216 seconds
AUC ROC: 0.993054


Results scoring model
   AUC ROC   = 0.966161
   AUC PR    = 0.596149
   CLL	      = -0.221386
   Precision = 0.211401 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.34902


Total scoring time: 1.619 seconds
Parameter learned model CLL: -0.221386


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [4.08e-08, 39, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 7, 0], 'false,true,false': [0.0, 212, 0], 'true': [7.364, 78, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)'}, {'false,false': [0.0, 0, 0], 'true,true,true': [2.194, 5, 129], 'false,true,false': [0.0, 240, 0], 'true,true,false': [5.337, 68, 49], 'false,true,true': [0.0, 49, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 230, 0], 'true': [7.061, 86, 178], 'false,true,true': [2.36e-08, 46, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 272, 0], 'true,true,true': [2.394, 6, 129], 'true,true,false': [5.353, 69, 49]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [6.99e-08, 223, 0], 'true': [6.622, 86, 178], 'false,true,true': [0.0, 50, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, G)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 40, 0], 'false,true,true,true': [0.0, 11, 0], 'false,true,false,false': [6.32e-08, 157, 0], 'false,true,true,false': [1.67e-08, 41, 0], 'true': [6.571, 88, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 51, 0], 'true': [6.076, 66, 178], 'false,true,true': [0.0, 49, 0], 'false,true,false,false': [8.16e-08, 185, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)'}, {'true,false,false,false': [1.06e-07, 182, 0], 'true,true,true': [2.577, 7, 129], 'true,false,false,true': [5.213, 61, 49], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 52, 0], 'true,false,true': [1.483, 61, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [0.391, 80, 178], 'false,true,true': [0.053, 278, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, G)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 45, 0], 'false,true,true,true': [0.0, 8, 0], 'false,true,false,false': [5.67e-08, 197, 0], 'false,true,true,false': [7.45e-09, 39, 0], 'true': [6.291, 81, 178]}]]
[{'': [0.2118530273437555, -9.639145640156398e-17], 'false,true': [5.3097622916855314e-17, -2.388026883155997e-16], 'false,true,true': [-7.93016446160826e-18, 4.2700885562506023e-17], 'false': [-9.639145640156398e-17, nan]}, {'': [0.2062506944334238, -9.219845187198531e-17], 'false,true': [-3.172065784643304e-17, -7.401486830834377e-17], 'true,true': [0.03592114056582489, 0.24340711520198716], 'true': [0.2062506944334238, nan], 'false': [-9.219845187198531e-17, nan]}, {'': [0.18884040811730043, -1.1102230246251565e-16], 'false,true': [1.206764157201257e-17, -7.530208340935844e-17], 'false': [-1.1102230246251565e-16, nan]}, {'': [0.17793858048040825, -6.204187490552346e-17], 'true,true': [0.04246913580247035, 0.24281815570238421], 'true': [0.17793858048040825, nan], 'false': [-6.204187490552346e-17, nan]}, {'': [0.1661246321568094, 6.018791488810372e-17], 'false,true': [-1.9984014443252817e-17, 2.1905745777357347e-17], 'false': [6.018791488810372e-17, nan]}, {'': [0.16233301955087112, 3.299457984829782e-17], 'false,true,false': [-2.7755575615628915e-18, 2.5457343239812507e-17], 'false,true': [3.2025664171879517e-18, 2.817824935596844e-17], 'false,true,true': [-5.046468293750712e-18, 6.769652589177784e-18], 'false': [3.299457984829782e-17, nan]}, {'': [0.15129847001817187, 8.570142646229279e-18], 'false,true,false': [-3.2653618371328133e-18, 3.600723323108616e-17], 'false,true': [-2.2657612747452172e-18, 1.881733940042638e-17], 'false': [8.570142646229279e-18, nan]}, {'': [0.08892182832600448, nan], 'true,false,false': [0.24702479338843006, 6.161127774018726e-17], 'true,true': [0.048821366782007034, -1.3877787807814457e-17], 'true': [0.05553340325635924, 0.08666726519178623], 'true,false': [0.03606974346164024, 0.09344975085125393]}, {'': [0.1530511910830299, 1.0122778875782513e-05], 'false,true': [1.0122778875782513e-05, nan], 'false': [1.0122778875782513e-05, nan]}, {'': [0.15280400447398504, 6.624012945872804e-06], 'false,true,false': [-4.3175339846533866e-18, 1.6343384626461695e-17], 'false,true': [8.014401959283866e-06, 1.2845555656819993e-17], 'false,true,true': [0.0, 1.423362852083534e-18], 'false': [6.624012945872804e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(B, E).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,false;genre(B, G).;true;true
5;false,true;genre(B, F).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,false;genre(B, F).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;false,false;movie(C, B).;true;true
7;true;movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,false;genre(B, G).;true;true
9;false,true;genre(B, F).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 6,32e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.14185106490048846;  // std dev = 0,000, 216,000 (wgt'ed) examples reached here.  /* #neg=216 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then return 0.7194734122109556;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.1254446385283914;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.7194734122109553;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.12544463852839158;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( genre(A, E) )
%   | then return -0.12544463852839152;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.12544463852839177;  // std dev = 0,000, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462839;  // std dev = 3,57e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 4,15e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.11231637819360638;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.11231637819360674;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then return 0.41751358415831064;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.41751358415831064;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.10159632948783624;  // std dev = 2,79e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.1015963294878366;  // std dev = 0,000, 274,000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015033;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015033;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( actor(B) )
%   | | | then return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then return -0.0926912761892609;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( actor(B) )
%   | | | then return -0.09269127618926092;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | | else return -0.09269127618926086;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.0851847513883968;  // std dev = 2,08e-09, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.08518475138839682;  // std dev = 5,27e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( genre(B, F) )
%   | | then return -0.08518475138839675;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839675;  // std dev = 2,98e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | | else return -0.08518475138839675;  // std dev = 4,34e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253578;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253578;  // std dev = 1,09e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109166;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109155;  // std dev = 4,83e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | | else return -0.07877675473109153;  // std dev = 5,87e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.1105992118133018;  // std dev = 0,885, 64,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=47 */
%   | | | else return 0.1362242163561158;  // std dev = 0,916, 98,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=82 */
%   | | else return -0.07324622576333698;  // std dev = 1,32e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.07324622576333702;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.0925212533166916;  // std dev = 1,019, 74,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=49 */
%   | | | else return -0.07324622576333675;  // std dev = 1,03e-07, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.16271221653804663;  // std dev = 0,001, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.158573073121904;  // std dev = 0,002, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420274;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return -0.0805094455741645;  // std dev = 0,000666, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.0815625198482668;  // std dev = 0,002, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420261;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else return -0.06842697784420261;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.14174212183210325;  // std dev = 0,001, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.13854186736867743;  // std dev = 0,001, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06419184008202622;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( genre(B, F) )
%   | | then if ( actor(A) )
%   | | | then return -0.07595224619143535;  // std dev = 0,005, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.06419184008202612;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( actor(B) )
%   | | | then return -0.06419184008202625;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | | else return -0.0740198556975332;  // std dev = 0,000163, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064136
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.967 seconds
Total inference time: 3.318 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067363
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.007 seconds
Refined model CLL: -0.067363


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064136
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.403 seconds
Total inference time: 3.318 seconds
AUC ROC: 1.0
Total revision time: 9.403
Best scored revision CLL: -0.067363


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 02:14:48
{'Inference time': 3.318, 'CLL': -0.064136, 'parameter': {'Inference time': 2.216, 'CLL': -0.238333, 'Precision': [0.06871, 0.5], 'AUC ROC': 0.993054, 'Recall': 1.0, 'Learning time': 1.81, 'AUC PR': 0.901018, 'F1': 0.128585}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 9.403, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true;haswordauthor(J, H).;true;true
1;false,true,true;author(K, J), title(K, I).;false;false
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;false,true,false;title(L, I), venue(L, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
2;false,false,true;title(K, J), venue(K, A).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,true,true;author(G, E), title(G, F).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;true;haswordauthor(D, C).;false;true
3;false,false,true;title(M, L), venue(M, A).;false;false
3;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
3;false,true;haswordtitle(J, H).;false;false
3;true,false,true;author(G, F), venue(G, B).;false;false
3;true,false;haswordvenue(A, E), haswordauthor(F, E).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, B).;false;false
5;false,true;author(F, E), venue(F, A).;true;true
5;false,true,true;author(G, E), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
6;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false,true,false;author(H, E), venue(H, B).;false;false
6;false,true;haswordtitle(F, D).;true;true
6;false,true,true;author(G, E), venue(G, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;false
7;false,false,true;title(J, I), venue(J, A).;false;false
7;false;haswordvenue(A, G), haswordvenue(B, G).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
7;true,true;haswordvenue(B, C).;false;false
7;true;venue(E, B), title(E, D).;true;true
7;true,false;title(F, D), venue(F, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true,true;haswordauthor(J, G).;false;false
8;true,true,true;author(F, D), title(F, E).;false;false
8;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
8;false,true,false;haswordtitle(H, K), haswordvenue(A, K).;false;false
8;true,true;haswordtitle(E, C).;true;false
8;true;haswordauthor(D, C).;true;false
8;false,true;haswordtitle(H, I), haswordauthor(J, I).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
9;false,false,true;title(K, J), venue(K, B).;false;false
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;false,true,false;author(H, E), venue(H, B).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5199136409818657;  // std dev = 3,901, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048768;  // std dev = 7,45e-09, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7824644762800191;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.21753552371998092;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.12544463852839144;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.35767676200500004;  // std dev = 3,093, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360633;  // std dev = 2,79e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5349292923234176;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.24233043703823573;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.1015963294878362;  // std dev = 5,74e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19850742367916638;  // std dev = 2,353, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.162033996036675;  // std dev = 2,269, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.09690920192908593;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(B, G) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0851847513883968;  // std dev = 1,83e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11638084555901498;  // std dev = 2,312, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(B, F) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109179;  // std dev = 5,27e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2948577670472457;  // std dev = 4,21e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07441354685447626;  // std dev = 0,009, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( genre(A, E) )
%   | | then return -0.10903046107945458;  // std dev = 0,196, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.28795163766004234;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07324622576333704;  // std dev = 1,29e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.05882636442894625;  // std dev = 0,231, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.0684124070490085;  // std dev = 0,010, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06687281525173142;  // std dev = 1,847, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06207631556198958;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(B, G) )
%   | | | then return -0.06412262771184125;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06419271537343231;  // std dev = 1,58e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.972658
   AUC PR    = 0.697907
   CLL	      = -0.138692
   Precision = 0.80814 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.816446


Total learning time: 1.151 seconds
Total inference time: 3.116 seconds
AUC ROC: 0.972658


Results scoring model
   AUC ROC   = 0.998942
   AUC PR    = 0.918367
   CLL	      = -0.136555
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.328 seconds
Parameter learned model CLL: -0.136555


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [7.45e-09, 51, 0], 'true': [3.901, 23, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)'}, {'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false,true,false': [0.0, 34, 0], 'true,true,false': [0.0, 28, 0], 'false,true,true': [0.0, 7, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [2.79e-08, 48, 0], 'true': [3.093, 22, 45], 'false,true,true': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [5.74e-09, 62, 0], 'true,true,true': [0.0, 0, 45], 'true,true,false': [2.11e-08, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 64, 0], 'true': [2.353, 23, 45], 'false,true,true': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, G)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 4, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,false,false': [1.83e-08, 48, 0], 'false,true,true,false': [0.0, 4, 0], 'true': [2.269, 22, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 6, 0], 'true': [2.312, 24, 45], 'false,true,true': [0.0, 5, 0], 'false,true,false,false': [5.27e-09, 36, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)'}, {'true,false,false,false': [1.29e-08, 45, 0], 'true,true,true': [4.21e-08, 0, 45], 'true,false,false,true': [0.0, 19, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.009, 8, 0], 'true,false,true': [0.196, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [0.231, 27, 45], 'false,true,true': [0.01, 66, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, G)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 8, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [1.58e-08, 44, 0], 'false,true,true,false': [0.0, 3, 0], 'true': [1.847, 23, 45]}]]
[{'': [0.22383217993079618, 6.055761952500853e-17], 'false,true': [0.0, 5.659960517696876e-17], 'false,true,true': [nan, 0.0], 'false': [6.055761952500853e-17, nan]}, {'': [0.23644210921373576, 8.12358310701334e-18], 'false,true': [-1.982541115402065e-18, -1.6326809185664067e-17], 'true,true': [-4.736951571734001e-16, -3.172065784643304e-17], 'true': [0.23644210921373576, nan], 'false': [8.12358310701334e-18, nan]}, {'': [0.1428015257076297, 2.7755575615628914e-17], 'false,true': [-1.734723475976807e-18, 1.61907524424502e-17], 'false': [2.7755575615628914e-17, nan]}, {'': [0.14021726714108254, 3.40229636578677e-17], 'true,true': [-7.894919286223335e-16, 1.708035422500241e-17], 'true': [0.14021726714108254, nan], 'false': [3.40229636578677e-17, nan]}, {'': [0.08143108419332579, 0.0], 'false,true': [0.0, -1.734723475976807e-18], 'false': [0.0, nan]}, {'': [0.07682418157096983, 2.3693177799184803e-06], 'false,true,false': [0.0, 6.938893903907228e-18], 'false,true': [2.1994038476970403e-05, 7.472654973438553e-18], 'false,true,true': [0.0, 0.0], 'false': [2.3693177799184803e-06, nan]}, {'': [0.07744789234013183, -1.1810883240693154e-18], 'false,true,false': [-1.1564823173178713e-18, 7.709882115452476e-19], 'false,true': [-1.3877787807814458e-18, 0.0], 'false': [-1.1810883240693154e-18, nan]}, {'': [0.04713269449411539, nan], 'true,false,false': [-3.5059674461847047e-17, 3.7007434154171884e-18], 'true,true': [3.947459643111668e-17, 9.538469708731886e-06], 'true': [0.01747743449220716, 0.00940783957096614], 'true,false': [0.006402557485796369, 0.009622593721328749]}, {'': [0.05323493274425075, 1.4510677612048528e-06], 'false,true': [1.4510677612048528e-06, nan], 'false': [1.4510677612048528e-06, nan]}, {'': [0.05016970694615709, 2.2924764363648059e-07], 'false,true,false': [0.0, 5.677276830469551e-18], 'false,true': [0.0, 6.394684472115049e-10], 'false,true,true': [nan, 0.0], 'false': [2.2924764363648059e-07, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(B, E).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,false;genre(B, G).;true;true
5;false,true;genre(B, F).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,false;genre(B, F).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;false,false;movie(C, B).;true;true
7;true;movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,false;genre(B, G).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048774;  // std dev = 1,83e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11871648488022116;  // std dev = 0,026, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.10101365057079577;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10101365057079577;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.10159632948783634;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09220319071011909;  // std dev = 9,13e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.16901347200548286;  // std dev = 0,210, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08449548870060039;  // std dev = 0,001, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, F) )
%   | | then return -0.08518475138839683;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.0851847513883968;  // std dev = 1,67e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.07851705837042407;  // std dev = 0,000141, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.07306494506924996;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2097577156325355;  // std dev = 7,90e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07935929988175583;  // std dev = 0,002, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.11033843814298018;  // std dev = 0,111, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else return 0.1395450892189853;  // std dev = 0,089, 40,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.07180701124744286;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( movie(D, B) )
%   | | then return -0.07315508842782803;  // std dev = 0,000137, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.16158490149747085;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.15766712566455995;  // std dev = 4,93e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06820327971089975;  // std dev = 0,000270, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06821968406541461;  // std dev = 0,000521, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.06383998165205801;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06843278759724057;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.06843278759724053;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.06849399652251593;  // std dev = 3,03e-05, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08219953733463309;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06422557283536975;  // std dev = 8,82e-07, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06394729106866248;  // std dev = 1,93e-06, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.06012920570777227;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.14087184647533535;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1378389170856983;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(A, D) )
%   | then return -0.0642436701110928;  // std dev = 1,16e-05, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( genre(B, E) )
%   | | then return -0.07682423852737194;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06419696600698453;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069795
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.486 seconds
Total inference time: 2.661 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065756
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.433 seconds
Refined model CLL: -0.065756


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069795
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.398 seconds
Total inference time: 2.661 seconds
AUC ROC: 1.0
Total revision time: 6.398
Best scored revision CLL: -0.065756


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 02:15:01
{'Inference time': 2.661, 'CLL': -0.069795, 'parameter': {'Inference time': 3.116, 'CLL': -0.138692, 'Precision': [0.80814, 0.5], 'AUC ROC': 0.972658, 'Recall': 0.824926, 'Learning time': 1.151, 'AUC PR': 0.697907, 'F1': 0.816446}, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0, 'Recall': 1.0, 'Learning time': 6.398, 'AUC PR': 1.0, 'F1': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
0;false,false,true;title(L, K), venue(L, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true;haswordauthor(J, H).;true;true
1;false,true,true;author(K, J), title(K, I).;false;false
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;false,true,false;title(L, I), venue(L, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;true,true,false;author(G, E), venue(G, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
2;false,false,true;title(K, J), venue(K, A).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,true,true;author(G, E), title(G, F).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;true;haswordauthor(D, C).;false;true
3;false,false,true;title(M, L), venue(M, A).;false;false
3;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
3;false,true;haswordtitle(J, H).;false;false
3;true,false,true;author(G, F), venue(G, B).;false;false
3;true,false;haswordvenue(A, E), haswordauthor(F, E).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;title(G, E), venue(G, A).;false;false
4;false,true;haswordauthor(F, D).;false;true
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, B).;false;false
5;false,true;author(F, E), venue(F, A).;true;true
5;false,true,true;author(G, E), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
6;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
6;false,true,false;author(H, E), venue(H, B).;false;false
6;false,true;haswordtitle(F, D).;true;true
6;false,true,true;author(G, E), venue(G, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;false
7;false,false,true;title(J, I), venue(J, A).;false;false
7;false;haswordvenue(A, G), haswordvenue(B, G).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
7;true,true;haswordvenue(B, C).;false;false
7;true;venue(E, B), title(E, D).;true;true
7;true,false;title(F, D), venue(F, A).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true,true;haswordauthor(J, G).;false;false
8;true,true,true;author(F, D), title(F, E).;false;false
8;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
8;false,true,false;haswordtitle(H, K), haswordvenue(A, K).;false;false
8;true,true;haswordtitle(E, C).;true;false
8;true;haswordauthor(D, C).;true;false
8;false,true;haswordtitle(H, I), haswordauthor(J, I).;true;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
9;false,false,true;title(K, J), venue(K, B).;false;false
9;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
9;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;false,true,false;author(H, E), venue(H, B).;false;false
9;false,true;author(F, E), venue(F, A).;true;true
9;false,true,true;author(G, E), venue(G, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4502541982574076;  // std dev = 4,284, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.7940880667876834;  // std dev = 1,19e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0.0971183698179864;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839158;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3185550368521848;  // std dev = 3,756, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360625;  // std dev = 5,48e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5589995317110916;  // std dev = 1,33e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.01894134996737896;  // std dev = 2,714, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.10194213751060298;  // std dev = 0,002, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2358588307479355;  // std dev = 3,060, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10254715463958082;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09266219796763207;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21520297898885865;  // std dev = 2,859, 63,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, F) )
%   | | | then return -0.08516007241305729;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08516007241305726;  // std dev = 3,25e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09864366585465628;  // std dev = 3,242, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then return -0.0998540466784504;  // std dev = 0,009, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, F) )
%   | | | then return -0.0787555629242785;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07875556292427849;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.29492100420177514;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.07588110690963057;  // std dev = 0,023, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( genre(A, E) )
%   | | then return -0.08536108491662453;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.1373598580117145;  // std dev = 2,714, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return -0.07322784164885067;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.011628693483718604;  // std dev = 0,366, 82,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.06861518276734803;  // std dev = 0,010, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1245318295193071;  // std dev = 2,721, 63,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07408184772550028;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, G) )
%   | | | then return -0.06400623335405504;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06416537297840676;  // std dev = 2,98e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.976426
   AUC PR    = 0.717608
   CLL	      = -0.191164
   Precision = 0.808989 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.831169


Total learning time: 1.113 seconds
Total inference time: 2.752 seconds
AUC ROC: 0.976426


Results scoring model
   AUC ROC   = 0.967434
   AUC PR    = 0.770258
   CLL	      = -0.190315
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total scoring time: 1.364 seconds
Parameter learned model CLL: -0.190315


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false': [8.12e-09, 61, 0], 'true': [4.284, 31, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(F, B)', 'false,true': 'genre(A, G)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)'}, {'false,false': [0.0, 0, 0], 'true,true,true': [1.19e-07, 0, 35], 'false,true,false': [0.0, 67, 0], 'true,true,false': [2.64, 23, 10], 'false,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [5.48e-08, 69, 0], 'true': [3.756, 29, 45], 'false,true,true': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true': 'movie(D, A)', 'false': 'movie(F, B)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.002, 62, 0], 'true,true,true': [1.33e-07, 0, 35], 'true,true,false': [2.714, 28, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 75, 0], 'true': [3.06, 22, 45], 'false,true,true': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 4, 0], 'true': [2.859, 18, 45], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [3.25e-08, 63, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'true': [3.242, 27, 45], 'false,true,true': [0.009, 2, 0], 'false,true,false,false': [0.0, 55, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)'}, {'true,false,false,false': [0.0, 52, 0], 'true,true,true': [0.0, 0, 35], 'true,false,false,true': [2.714, 28, 10], 'false': [0.0, 0, 0], 'true,true,false': [0.023, 9, 0], 'true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [0.366, 37, 45], 'false,true,true': [0.01, 49, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, G)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, A)'}, {'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [2.98e-08, 78, 0], 'false,true,true,false': [0.0, 2, 0], 'true': [2.721, 18, 45]}]]
[{'': [0.24151662049861528, 6.344131569286608e-17], 'false,true': [0.0, 6.188128333976282e-17], 'false,true,true': [nan, 0.0], 'false': [6.344131569286608e-17, nan]}, {'': [0.22383217993079468, -3.314098580970616e-17], 'false,true': [nan, -3.314098580970616e-17], 'true,true': [4.0602442043434295e-16, 0.21120293847566576], 'true': [0.22383217993079468, nan], 'false': [-3.314098580970616e-17, nan]}, {'': [0.19060620739710546, 1.6046192126663505e-05], 'false,true': [0.0, 4.344350965924526e-17], 'false': [1.6046192126663505e-05, nan]}, {'': [0.18430016292990078, 3.5874956583300283e-06], 'true,true': [5.075305255429287e-16, 0.19390581717451552], 'true': [0.18430016292990078, nan], 'false': [3.5874956583300283e-06, nan]}, {'': [0.1397848502615906, 3.6136230919333516e-06], 'false,true': [0.0, -1.4802973661668754e-17], 'false': [3.6136230919333516e-06, nan]}, {'': [0.12974140546229135, 1.9056066840581045e-17], 'false,true,false': [0.0, 1.674145830783966e-17], 'false,true': [nan, 1.9056066840581045e-17], 'false': [1.9056066840581045e-17, nan]}, {'': [0.14597540951288257, 1.6218538302519255e-05], 'false,true,false': [0.0, -2.0185873175002845e-18], 'false,true': [4.054145669381455e-05, -2.9738116731030977e-18], 'false': [1.6218538302519255e-05, nan]}, {'': [0.08493363975630146, nan], 'true,false,false': [0.1939058171745152, -3.2025664171879517e-18], 'true,true': [-1.0150610510858574e-16, 5.631853235249198e-05], 'true': [0.022382736004279022, 0.0819664097602445], 'true,false': [0.0, 0.08287469330985556]}, {'': [0.13431475858259448, 2.217413560632388e-06], 'false,true': [2.217413560632388e-06, nan], 'false': [2.217413560632388e-06, nan]}, {'': [0.11754196622907134, 2.342431934172739e-06], 'false,true,false': [0.0, 1.1386902816668272e-17], 'false,true': [0.0, 6.173071255555218e-10], 'false,true,true': [nan, 0.0], 'false': [2.342431934172739e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(B, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;true;genre(B, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(B, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,false;genre(B, F).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;false,false;movie(C, B).;true;true
7;true;movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,false;genre(B, G).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( female(A) )
%   | | | then return 0.7194734122109545;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.12544463852839152;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.4175135841583102;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( female(A) )
%   | | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( female(A) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601494;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.3207118471601494;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.08518475138839686;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694893;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.2551722425694893;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 1,39e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.08518475138839682;  // std dev = 1,05e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.08518475138839683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253565;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1770964977452775;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | | else return 0.1353727104938416;  // std dev = 0,323, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.15417294996323755;  // std dev = 0,002, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.1537398918209446;  // std dev = 0,002, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.08298313395572557;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.1351224716183992;  // std dev = 0,002, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.13478472200930477;  // std dev = 0,002, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.06375740047369038;  // std dev = 0,000614, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, E) )
%   | | then return -0.0633229608653546;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.06419184008202622;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.06469948529890363;  // std dev = 0,012, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.997628
   AUC PR    = 0.901034
   CLL	      = -0.083477
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.994 seconds
Total inference time: 3.497 seconds
AUC ROC: 0.997628


Results scoring model
   AUC ROC   = 0.999571
   AUC PR    = 0.974902
   CLL	      = -0.066818
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.459 seconds
Refined model CLL: -0.066818


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.997628
   AUC PR    = 0.901034
   CLL	      = -0.083477
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 6.93 seconds
Total inference time: 3.497 seconds
AUC ROC: 0.997628
Total revision time: 6.93
Best scored revision CLL: -0.066818


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 02:15:15
{'Inference time': 3.497, 'CLL': -0.083477, 'parameter': {'Inference time': 2.752, 'CLL': -0.191164, 'Precision': [0.808989, 0.5], 'AUC ROC': 0.976426, 'Recall': 0.854599, 'Learning time': 1.113, 'AUC PR': 0.717608, 'F1': 0.831169}, 'Precision': [0.742291, 0.5], 'AUC ROC': 0.997628, 'Recall': 1.0, 'Learning time': 6.93, 'AUC PR': 0.901034, 'F1': 0.852086}


