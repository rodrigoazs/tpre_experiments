Starting experiment #5 for 1_imdb_uwcse

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.1418510649004892;  // std dev = 0,000, 720,000 (wgt'ed) examples reached here.  /* #neg=720 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.12544463852839235;  // std dev = 0,000, 741,000 (wgt'ed) examples reached here.  /* #neg=741 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360626;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.11231637819360643;  // std dev = 0,000, 690,000 (wgt'ed) examples reached here.  /* #neg=690 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1015963294878362;  // std dev = 4,59e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.10159632948783515;  // std dev = 4,53e-07, 747,000 (wgt'ed) examples reached here.  /* #neg=747 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.09269127618926191;  // std dev = 0,000, 730,000 (wgt'ed) examples reached here.  /* #neg=730 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.08518475138839675;  // std dev = 1,33e-07, 721,000 (wgt'ed) examples reached here.  /* #neg=721 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0787767547310917;  // std dev = 3,07e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.07877675473109282;  // std dev = 0,000, 726,000 (wgt'ed) examples reached here.  /* #neg=726 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07324622576333652;  // std dev = 2,43e-07, 705,000 (wgt'ed) examples reached here.  /* #neg=705 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.06842697784420253;  // std dev = 1,87e-07, 696,000 (wgt'ed) examples reached here.  /* #neg=696 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.06419184008202532;  // std dev = 2,51e-07, 746,000 (wgt'ed) examples reached here.  /* #neg=746 */


Starting fold 1

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos	 examples: 78
Target test neg examples: 2265

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7914822684328456;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.4757959939230417;  // std dev = 2,834, 34,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   else return -0.14185106490048766;  // std dev = 6,14e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6660633000779167;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.3898802932637279;  // std dev = 2,898, 35,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   else return -0.12544463852839158;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.584786610214307;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.37420164919154786;  // std dev = 2,687, 32,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   else return -0.11231637819360636;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3730450355686637;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.25412784180140163;  // std dev = 2,834, 34,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   else return -0.10159632948783634;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.35083356060317694;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.3536849739734484;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   else return -0.09269127618926101;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.27563641906329994;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.12444320756609915;  // std dev = 2,763, 33,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   else return -0.0851847513883968;  // std dev = 2,69e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.22411461855954787;  // std dev = 2,36e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.09343608975159327;  // std dev = 2,763, 33,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   else return -0.07877675473109179;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.12089050798533767;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.0015625305537475152;  // std dev = 3,013, 37,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.16982721436393827;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.1110305322682535;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.06842697784420271;  // std dev = 1,29e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.08054002586082569;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.04293364469191136;  // std dev = 2,763, 33,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   else return -0.06419184008202623;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */


Results
   AUC ROC   = 0.935982
   AUC PR    = 0.358428
   CLL	      = -0.234383
   Precision = 0.157895 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.272727


Total learning time: 1.066 seconds
Total inference time: 1.094 seconds
AUC ROC: 0.935982


Results scoring model
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.241223
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total scoring time: 1.149 seconds
Parameter learned model CLL: -0.241223


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.834, 13, 21], 'true,true': [0.966, 1, 14], 'false': [6.14e-08, 62, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.898, 14, 21], 'true,true': [0.966, 1, 14], 'false': [0.0, 69, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.687, 11, 21], 'true,true': [5.16e-08, 0, 14], 'false': [1.83e-08, 56, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.834, 13, 21], 'true,true': [0.966, 1, 14], 'false': [0.0, 61, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.16, 6, 21], 'true,true': [2.11e-08, 0, 14], 'false': [0.0, 50, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.763, 12, 21], 'true,true': [0.0, 0, 14], 'false': [2.69e-08, 56, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.763, 12, 21], 'true,true': [2.36e-08, 0, 14], 'false': [0.0, 51, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [3.013, 16, 21], 'true,true': [0.966, 1, 14], 'false': [1.05e-08, 55, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'true,true': [0.0, 0, 14], 'false': [1.29e-08, 51, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.763, 12, 21], 'true,true': [0.966, 1, 14], 'false': [0.0, 58, 0]}]]
[{'': [0.20408163265306298, 6.088319812460535e-17], 'true': [0.06222222222222188, 0.23615916955017285]}, {'': [0.2026848478497804, -3.218037752536686e-17], 'true': [0.0622222222222223, 0.23999999999999977]}, {'': [0.1663182984699494, 5.9476233462061954e-18], 'true': [1.9032394707859825e-16, 0.22558593749999994]}, {'': [0.18591693972527967, -1.2740264217009993e-17], 'true': [0.06222222222222224, 0.23615916955017302]}, {'': [0.11382296649871261, -1.5543122344752193e-17], 'true': [3.172065784643304e-17, 0.1728395061728397]}, {'': [0.1672567350823006, 1.2886517250113425e-17], 'true': [-3.172065784643304e-17, 0.23140495867768585]}, {'': [0.16604735558846673, 0.0], 'true': [3.9650822308041306e-17, 0.23140495867768593]}, {'': [0.19550750251086985, 2.0185873175002845e-18], 'true': [0.062222222222222213, 0.24543462381300218]}, {'': [0.1512785527415651, 3.2653618371328133e-18], 'true': [-1.9825411154020653e-17, 0.21852237252861603]}, {'': [0.17883919413986213, -4.785444071660157e-19], 'true': [0.06222222222222221, 0.23140495867768598]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.6273797043302815;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.3875606998053947;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   else return -0.14185106490048766;  // std dev = 6,83e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7304865328997829;  // std dev = 0,065, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( ta(F, A, G) )
%   | | | then return -0.162423652397605;  // std dev = 0,091, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.04135258026587798;  // std dev = 0,839, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(H, B), publication(I, A) )
%   | | | then return 0.13122867176446418;  // std dev = 1,160, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.45130162080294967;  // std dev = 2,446, 27,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   else return -0.1254446385283915;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5665794957580575;  // std dev = 0,082, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.03732062333219055;  // std dev = 1,113, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.723349529662022;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4097324025198681;  // std dev = 2,092, 22,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   else return -0.11231637819360629;  // std dev = 4,34e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.42616283579629916;  // std dev = 0,083, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | | then return 0.3118676802549711;  // std dev = 1,017, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.07973516358824775;  // std dev = 1,255, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.43985970186084966;  // std dev = 1,167, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.18920031803715923;  // std dev = 1,660, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else return -0.10159632948783631;  // std dev = 2,36e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.3307452430664467;  // std dev = 0,061, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.314023014708372;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07517116694708845;  // std dev = 0,880, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(I, A) )
%   | | then if ( projectmember(J, B) )
%   | | | then return 0.2314885821386722;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.06565565010630217;  // std dev = 1,526, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( tempadvisedby(K, B) )
%   | | | then return 0.13469376032292982;  // std dev = 1,750, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.42768925488236587;  // std dev = 0,899, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.09269127618926104;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2704655847258452;  // std dev = 0,106, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | | then return 0.30569986825683115;  // std dev = 0,846, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.12934754363661108;  // std dev = 1,378, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.2827606260163374;  // std dev = 1,276, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.14801084663333572;  // std dev = 1,419, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else return -0.0851847513883968;  // std dev = 2,98e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.22068217020371167;  // std dev = 0,093, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), projectmember(E, B) )
%   | | then return 0.35177000861601454;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(F, A, G), publication(H, A) )
%   | | | then return -0.21640442210253355;  // std dev = 0,931, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.09368581678087438;  // std dev = 2,426, 29,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   else return -0.07877675473109177;  // std dev = 1,29e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.19729759821908466;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11818931361127206;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.1938357562031018;  // std dev = 0,065, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | then return -0.06635671682153943;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.06888945663326475;  // std dev = 1,508, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.30802298288136626;  // std dev = 0,984, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.07324622576333704;  // std dev = 1,49e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17283304140208808;  // std dev = 0,067, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.29789443700029333;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( ta(F, A, G), publication(H, A) )
%   | | | then return -0.07653332773905923;  // std dev = 0,970, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.16916700974098692;  // std dev = 1,897, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   else return -0.0684269778442027;  // std dev = 1,29e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1495477525288358;  // std dev = 0,059, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D) )
%   | | | then return -0.27681484124080447;  // std dev = 0,829, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.05539990318205869;  // std dev = 1,822, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.13494011933841338;  // std dev = 1,363, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.08218475021750757;  // std dev = 1,199, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return -0.06419184008202623;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */


Results
   AUC ROC   = 0.953198
   AUC PR    = 0.43097
   CLL	      = -0.195674
   Precision = 0.244275 at threshold = 0.5
   Recall    = 0.820513
   F1        = 0.376471


Total learning time: 4.473 seconds
Total inference time: 1.564 seconds
AUC ROC: 0.953198


Results scoring model
   AUC ROC   = 0.967042
   AUC PR    = 0.444332
   CLL	      = -0.198644
   Precision = 0.158974 at threshold = 0.5
   Recall    = 0.885714
   F1        = 0.269565


Total scoring time: 1.387 seconds
Refined model CLL: -0.198644


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.953198
   AUC PR    = 0.43097
   CLL	      = -0.195674
   Precision = 0.244275 at threshold = 0.5
   Recall    = 0.820513
   F1        = 0.376471


Total learning time: 8.075 seconds
Total inference time: 1.564 seconds
AUC ROC: 0.953198
Total revision time: 8.075
Best scored revision CLL: -0.198644


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 02:59:45
{'Inference time': 1.564, 'CLL': -0.195674, 'parameter': {'Inference time': 1.094, 'CLL': -0.234383, 'Precision': [0.157895, 0.5], 'AUC ROC': 0.935982, 'Recall': 1.0, 'Learning time': 1.066, 'AUC PR': 0.358428, 'F1': 0.272727}, 'Precision': [0.244275, 0.5], 'AUC ROC': 0.953198, 'Recall': 0.820513, 'Learning time': 8.075, 'AUC PR': 0.43097, 'F1': 0.376471}


Starting fold 2

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos	 examples: 93
Target test neg examples: 3738

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5914822684328456;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   else return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6194734122109542;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.5033699069850942;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   else return -0.1254446385283915;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5799035947890409;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4550424070278708;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.11231637819360638;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.43597198339016163;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.24970244756871157;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.10159632948783633;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.33325539457252024;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.28581502820929183;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.092691276189261;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.16371402476810581;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.008074808759370769;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   else return -0.08518475138839683;  // std dev = 7,45e-09, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2331753619400994;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.07420926293886296;  // std dev = 1,970, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   else return -0.07877675473109176;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.09409115718432057;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.09659783488122548;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.07324622576333702;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17979546188503692;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.09022280448400366;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else return -0.06842697784420265;  // std dev = 1,67e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15478822487544142;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.09505765321394348;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.06419184008202619;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */


Results
   AUC ROC   = 0.932863
   AUC PR    = 0.29479
   CLL	      = -0.245675
   Precision = 0.114251 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.205072


Total learning time: 0.857 seconds
Total inference time: 1.54 seconds
AUC ROC: 0.932863


Results scoring model
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.20674
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total scoring time: 0.715 seconds
Parameter learned model CLL: -0.20674


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.713, 4, 11], 'true,true': [0.0, 0, 9], 'false': [3.94e-08, 38, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.713, 4, 11], 'true,true': [0.949, 1, 9], 'false': [0.0, 41, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.535, 3, 11], 'true,true': [0.0, 0, 9], 'false': [0.0, 43, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.854, 5, 11], 'true,true': [0.0, 0, 9], 'false': [0.0, 38, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.535, 3, 11], 'true,true': [0.0, 0, 9], 'false': [0.0, 35, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.152, 8, 11], 'true,true': [0.949, 1, 9], 'false': [7.45e-09, 35, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.97, 6, 11], 'true,true': [1.49e-08, 0, 9], 'false': [0.0, 33, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.854, 5, 11], 'true,true': [0.949, 1, 9], 'false': [0.0, 25, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.289, 10, 11], 'true,true': [0.0, 0, 9], 'false': [1.67e-08, 31, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.854, 5, 11], 'true,true': [5.27e-09, 0, 9], 'false': [0.0, 34, 0]}]]
[{'': [0.13888888888888906, 4.0902953538821554e-17], 'true': [-2.9605947323337506e-16, 0.1955555555555554]}, {'': [0.15656853907550913, -2.166288828536891e-17], 'true': [0.09000000000000008, 0.19555555555555568]}, {'': [0.10619785549458627, -2.581914010756178e-18], 'true': [-4.9343245538895844e-17, 0.1683673469387755]}, {'': [0.14549403673027178, -1.0225738384705389e-17], 'true': [-2.4671622769447922e-17, 0.21484375000000003]}, {'': [0.10302052901272418, -9.516197353929913e-18], 'true': [-6.167905692361981e-17, 0.16836734693877548]}, {'': [0.19621672643287613, 1.5860328923216522e-18], 'true': [0.09, 0.24376731301939056]}, {'': [0.15504071039531644, -3.3643121958338078e-18], 'true': [2.4671622769447922e-17, 0.2283737024221453]}, {'': [0.16682841028001802, -2.220446049250313e-18], 'true': [0.09000000000000001, 0.21484375]}, {'': [0.18991424607949256, 8.953411488912552e-18], 'true': [-6.1679056923619804e-18, 0.24943310657596376]}, {'': [0.13832200757040852, -8.163404592832033e-19], 'true': [3.0839528461809902e-18, 0.21484375]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(D, F), professor(F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048774;  // std dev = 2,79e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then return 0.7597759609913293;  // std dev = 0,093, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.4694734122109544;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.018868045792307993;  // std dev = 0,882, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.3553664367462845;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(E, A) )
%   | | then if ( publication(E, F), professor(F) )
%   | | | then return -0.17504613943046018;  // std dev = 0,066, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.47020226175428714;  // std dev = 0,935, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.5877251924703192;  // std dev = 0,077, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.31876641278343426;  // std dev = 0,656, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.43941942157664354;  // std dev = 0,073, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.10928342942351915;  // std dev = 0,712, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5197400436459386;  // std dev = 0,063, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(I, A), publication(J, B) )
%   | | | then return -0.14286126309355573;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.11648071647013904;  // std dev = 1,210, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.10159632948783634;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3358352540569486;  // std dev = 0,067, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then if ( ta(F, A, G) )
%   | | | then return -6.479986647548452E-4;  // std dev = 0,812, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.2407850200884815;  // std dev = 0,196, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.38179233770217386;  // std dev = 0,059, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.12314397471776058;  // std dev = 1,192, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.26560335461896356;  // std dev = 0,058, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return -0.1575048123605841;  // std dev = 0,907, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.17239176191141867;  // std dev = 0,930, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.3525183031125182;  // std dev = 0,560, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.08518475138839683;  // std dev = 1,83e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.21718185191892567;  // std dev = 0,051, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A), ta(F, A, G) )
%   | | | then return 0.08604782789545605;  // std dev = 0,669, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.06788897843139247;  // std dev = 1,484, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else return 0.2465968468146055;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07877675473109176;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.18257449419928623;  // std dev = 0,045, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then return 0.19009570687150407;  // std dev = 0,401, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.2908774699965174;  // std dev = 0,095, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.38307187389223113;  // std dev = 0,131, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15692082455115441;  // std dev = 0,040, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.26482324938098095;  // std dev = 0,082, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23522368728995582;  // std dev = 0,082, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, A), publication(H, B) )
%   | | | then return -0.2570635179426131;  // std dev = 0,203, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.12587329012051907;  // std dev = 0,783, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420272;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1372828050722596;  // std dev = 0,036, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.024075357507546358;  // std dev = 0,407, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2241181223792462;  // std dev = 0,072, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(F, B) )
%   | | | then return -0.09054771833859672;  // std dev = 0,614, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.3507873434932394;  // std dev = 0,851, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.06419184008202619;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */


Results
   AUC ROC   = 0.95069
   AUC PR    = 0.245134
   CLL	      = -0.233181
   Precision = 0.158491 at threshold = 0.5
   Recall    = 0.903226
   F1        = 0.269663


Total learning time: 3.796 seconds
Total inference time: 1.658 seconds
AUC ROC: 0.95069


Results scoring model
   AUC ROC   = 0.98563
   AUC PR    = 0.783153
   CLL	      = -0.17356
   Precision = 0.416667 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.588235


Total scoring time: 0.808 seconds
Refined model CLL: -0.17356


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.95069
   AUC PR    = 0.245134
   CLL	      = -0.233181
   Precision = 0.158491 at threshold = 0.5
   Recall    = 0.903226
   F1        = 0.269663


Total learning time: 6.176 seconds
Total inference time: 1.658 seconds
AUC ROC: 0.95069
Total revision time: 6.176
Best scored revision CLL: -0.17356


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 02:59:55
{'Inference time': 1.658, 'CLL': -0.233181, 'parameter': {'Inference time': 1.54, 'CLL': -0.245675, 'Precision': [0.114251, 0.5], 'AUC ROC': 0.932863, 'Recall': 1.0, 'Learning time': 0.857, 'AUC PR': 0.29479, 'F1': 0.205072}, 'Precision': [0.158491, 0.5], 'AUC ROC': 0.95069, 'Recall': 0.903226, 'Learning time': 6.176, 'AUC PR': 0.245134, 'F1': 0.269663}


Starting fold 3

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos	 examples: 104
Target test neg examples: 3988

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.4117811045186465;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.5294994289679313;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.4001426328496085;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.10159632948783628;  // std dev = 5,27e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.40141515145569867;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1279961937055057;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.08518475138839687;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2831309966563065;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.07877675473109172;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.12932713842425902;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.07324622576333703;  // std dev = 4,56e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20727309093816443;  // std dev = 1,67e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.07527198690382184;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.06419184008202619;  // std dev = 7,45e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 0.904213
   AUC PR    = 0.119816
   CLL	      = -0.390492
   Precision = 0.119816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.213992


Total learning time: 0.741 seconds
Total inference time: 1.688 seconds
AUC ROC: 0.904213


Results scoring model
   AUC ROC   = 0.961538
   AUC PR    = 0.5625
   CLL	      = -0.194835
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total scoring time: 0.54 seconds
Parameter learned model CLL: -0.194835


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.0, 0, 9], 'true,true': [0.0, 0, 0], 'false': [0.0, 8, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.664, 4, 9], 'true,true': [0.0, 0, 0], 'false': [5.27e-09, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.949, 1, 9], 'true,true': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.949, 1, 9], 'true,true': [0.0, 0, 0], 'false': [5.27e-09, 16, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.0, 0, 9], 'true,true': [0.0, 0, 0], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.279, 2, 9], 'true,true': [0.0, 0, 0], 'false': [7.45e-09, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.0, 0, 9], 'true,true': [0.0, 0, 0], 'false': [5.27e-09, 15, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.949, 1, 9], 'true,true': [0.0, 0, 0], 'false': [4.56e-09, 10, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.67e-08, 0, 9], 'true,true': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.949, 1, 9], 'true,true': [0.0, 0, 0], 'false': [7.45e-09, 21, 0]}]]
[{'': [-2.9605947323337506e-16, -6.938893903907228e-18], 'true': [nan, -2.9605947323337506e-16]}, {'': [0.21301775147928995, 2.3129646346357427e-18], 'true': [nan, 0.21301775147928995]}, {'': [0.08999999999999986, 0.0], 'true': [nan, 0.08999999999999986]}, {'': [0.08999999999999986, 1.734723475976807e-18], 'true': [nan, 0.08999999999999986]}, {'': [-2.4671622769447922e-17, 3.2653618371328133e-18], 'true': [nan, -2.4671622769447922e-17]}, {'': [0.1487603305785124, 3.2653618371328133e-18], 'true': [nan, 0.1487603305785124]}, {'': [-1.2335811384723961e-17, 1.8503717077085942e-18], 'true': [nan, -1.2335811384723961e-17]}, {'': [0.09, 2.0816681711721684e-18], 'true': [nan, 0.09]}, {'': [3.0839528461809905e-17, -1.5419764230904951e-18], 'true': [nan, 3.0839528461809905e-17]}, {'': [0.09, 2.64338815386942e-18], 'true': [nan, 0.09]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.6081489350995122;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return 0.2551723247302799;  // std dev = 0,977, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.753472376515074;  // std dev = 0,057, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( tempadvisedby(E, B) )
%   | | then return 0.32652384404284557;  // std dev = 0,905, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.021942145234835193;  // std dev = 0,775, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.4596319125032076;  // std dev = 0,938, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.5037004713335962;  // std dev = 0,101, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.542840249996323;  // std dev = 0,132, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.38138215754613264;  // std dev = 0,098, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4101483872654983;  // std dev = 0,130, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D) )
%   | then return -0.012761878738692778;  // std dev = 1,161, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.2986137071782394;  // std dev = 0,095, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.30282110016291947;  // std dev = 0,088, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(F, B) )
%   | | then return -0.43607077891156404;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1227249357481384;  // std dev = 0,825, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109179;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A) )
%   | then return 0.009734511433468632;  // std dev = 0,707, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.2592055610102095;  // std dev = 0,116, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2280691910959948;  // std dev = 0,102, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then return -0.04491340386371337;  // std dev = 0,911, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.34351306620228755;  // std dev = 0,759, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.09169797568751238;  // std dev = 0,694, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.25331837005280683;  // std dev = 0,151, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.200956656410116;  // std dev = 0,133, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.906028
   AUC PR    = 0.119383
   CLL	      = -0.309143
   Precision = 0.119816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.213992


Total learning time: 2.108 seconds
Total inference time: 1.551 seconds
AUC ROC: 0.906028


Results scoring model
   AUC ROC   = 0.986569
   AUC PR    = 0.869785
   CLL	      = -0.161366
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total scoring time: 0.564 seconds
Refined model CLL: -0.161366


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.906028
   AUC PR    = 0.119383
   CLL	      = -0.309143
   Precision = 0.119816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.213992


Total learning time: 3.9530000000000003 seconds
Total inference time: 1.551 seconds
AUC ROC: 0.906028
Total revision time: 3.9530000000000003
Best scored revision CLL: -0.161366


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 03:00:03
{'Inference time': 1.551, 'CLL': -0.309143, 'parameter': {'Inference time': 1.688, 'CLL': -0.390492, 'Precision': [0.119816, 0.5], 'AUC ROC': 0.904213, 'Recall': 1.0, 'Learning time': 0.741, 'AUC PR': 0.119816, 'F1': 0.213992}, 'Precision': [0.119816, 0.5], 'AUC ROC': 0.906028, 'Recall': 1.0, 'Learning time': 3.9530000000000003, 'AUC PR': 0.119383, 'F1': 0.213992}


Starting fold 4

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos	 examples: 80
Target test neg examples: 2591

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7867203636709409;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.3986894756400529;  // std dev = 3,031, 37,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   else return -0.1418510649004877;  // std dev = 3,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7336614886487067;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.4690584332954824;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   else return -0.12544463852839122;  // std dev = 5,48e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4980240338421423;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.38419862916203207;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   else return -0.11231637819360647;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.37418597266651227;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.18923941704593267;  // std dev = 2,981, 36,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   else return -0.10159632948783635;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.28461181133669494;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.21375331747577775;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   else return -0.09269127618926105;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.293757582098277;  // std dev = 2,58e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.12443701664065673;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   else return -0.0851847513883968;  // std dev = 2,58e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.16525270593174998;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.21944145922774447;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   else return -0.07877675473109176;  // std dev = 1,49e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20813336123721002;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.11712531340402574;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return -0.011595809104502683;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | else return 0.06682606200401837;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   else return -0.0684269778442027;  // std dev = 1,29e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.10616289218538112;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.07212585871399488;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   else return -0.06419184008202622;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */


Results
   AUC ROC   = 0.936897
   AUC PR    = 0.369816
   CLL	      = -0.235634
   Precision = 0.142857 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.25


Total learning time: 1.007 seconds
Total inference time: 1.329 seconds
AUC ROC: 0.936897


Results scoring model
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.247232
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total scoring time: 1.074 seconds
Parameter learned model CLL: -0.247232


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [3.031, 17, 20], 'true,true': [0.964, 1, 13], 'false': [3.94e-08, 47, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.582, 10, 20], 'true,true': [0.0, 0, 13], 'false': [5.48e-08, 57, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.582, 10, 20], 'true,true': [0.964, 1, 13], 'false': [0.0, 40, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.981, 16, 20], 'true,true': [0.964, 1, 13], 'false': [0.0, 50, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.739, 12, 20], 'true,true': [0.964, 1, 13], 'false': [0.0, 47, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.87, 14, 20], 'true,true': [2.58e-08, 0, 13], 'false': [2.58e-08, 56, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.39, 8, 20], 'true,true': [0.964, 1, 13], 'false': [1.49e-08, 61, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.582, 10, 20], 'true,true': [0.0, 0, 13], 'false': [1.05e-08, 60, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.664, 11, 20], 'true,true': [1.561, 3, 13], 'false': [1.29e-08, 52, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.582, 10, 20], 'true,true': [0.964, 1, 13], 'false': [0.0, 51, 0]}]]
[{'': [0.22837370242214702, 3.307047307394083e-17], 'true': [0.06632653061224467, 0.24835646457268057]}, {'': [0.16980661420148607, 5.258951169277057e-17], 'true': [-4.099285014000578e-16, 0.22222222222222224]}, {'': [0.1754297984223783, -2.2204460492503132e-17], 'true': [0.06632653061224499, 0.2222222222222223]}, {'': [0.20324498040188732, -2.220446049250313e-18], 'true': [0.06632653061224493, 0.24691358024691348]}, {'': [0.18429284528851061, -7.086529944415892e-18], 'true': [0.06632653061224493, 0.234375]}, {'': [0.18095551025233883, 1.1895246692412391e-17], 'true': [5.124106267500723e-17, 0.24221453287197234]}, {'': [0.15881580330251682, 3.640075490574284e-18], 'true': [0.06632653061224494, 0.2040816326530613]}, {'': [0.15678573711580607, 1.8503717077085942e-18], 'true': [-3.416070845000482e-17, 0.22222222222222232]}, {'': [0.20423779179329213, 3.2025664171879517e-18], 'true': [0.15234375, 0.2289281997918835]}, {'': [0.1728703793607644, 0.0], 'true': [0.0663265306122449, 0.22222222222222218]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( ta(H, A, I) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(J, A, K), publication(L, B) )
%   | | | then return 0.6914822684328455;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1418510649004877;  // std dev = 4,08e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.5194734122109544;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7332857516252523;  // std dev = 0,078, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | then if ( publication(G, H), ta(I, H, J) )
%   | | | then return 0.4998851569324367;  // std dev = 1,206, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.08927086968090003;  // std dev = 1,149, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( publication(K, A), publication(L, B) )
%   | | | then return 0.2641072739982948;  // std dev = 1,193, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.6421388909288283;  // std dev = 0,940, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.12544463852839133;  // std dev = 2,79e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.5915654443651339;  // std dev = 0,092, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.4026527782168177;  // std dev = 0,876, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | then if ( ta(G, A, H), publication(I, B) )
%   | | | then return -0.027145716025899713;  // std dev = 0,782, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.16569800916575045;  // std dev = 0,980, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(J, A) )
%   | | | then return 0.697003928979597;  // std dev = 0,083, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.40385110695440435;  // std dev = 1,803, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.11231637819360633;  // std dev = 2,79e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.45201875210919523;  // std dev = 0,109, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.3816682935599454;  // std dev = 0,869, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.2404162382735945;  // std dev = 0,959, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( ta(I, A, J), publication(K, B) )
%   | | | then return 0.3162921571611709;  // std dev = 1,544, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.5000972243413089;  // std dev = 0,052, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783634;  // std dev = 1,05e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.09950709163898072;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.34310928027999904;  // std dev = 0,099, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(G, B) )
%   | | then if ( publication(G, H), student(H) )
%   | | | then return 0.3377581237561598;  // std dev = 1,335, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return 7.706175735474052E-4;  // std dev = 1,018, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.38259669727634427;  // std dev = 0,915, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.09269127618926105;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2837312176620083;  // std dev = 0,122, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.37476345260807714;  // std dev = 0,158, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.14464872244201282;  // std dev = 1,757, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return -0.09976275732516693;  // std dev = 1,481, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.0851847513883968;  // std dev = 2,79e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return -0.06526492508100042;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.22308836552520328;  // std dev = 0,089, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(G, B) )
%   | | then if ( publication(G, H), ta(I, H, J) )
%   | | | then return 0.20018820405438786;  // std dev = 1,257, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.05256777346091131;  // std dev = 1,801, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else return -0.36672480823946246;  // std dev = 0,900, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.07877675473109179;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2014250360731083;  // std dev = 0,145, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return -0.1293185171221929;  // std dev = 1,088, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( ta(G, A, H), publication(I, A) )
%   | | | then return 0.28704443500347515;  // std dev = 0,084, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15365430106720032;  // std dev = 1,815, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.21563918517515532;  // std dev = 0,053, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return -0.02067836584725924;  // std dev = 0,930, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.15479727965682188;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(G, A) )
%   | | then if ( tempadvisedby(H, B), publication(I, B) )
%   | | | then return 0.18324183623219922;  // std dev = 0,475, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.2005079691647776;  // std dev = 1,525, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( ta(J, A, K) )
%   | | | then return -0.0033720770449103526;  // std dev = 1,796, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.25186630112828645;  // std dev = 0,057, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0684269778442027;  // std dev = 1,97e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return -0.06665406845771632;  // std dev = 0,892, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.14544097874250156;  // std dev = 0,054, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(G, A, H) )
%   | | then if ( ta(G, I, J), tempadvisedby(I, K) )
%   | | | then return 0.2134529131614054;  // std dev = 0,824, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.04691746656130404;  // std dev = 1,396, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( publication(L, A), publication(M, B) )
%   | | | then return 0.11864940069360057;  // std dev = 0,827, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.2490042535503234;  // std dev = 1,335, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.06419184008202623;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 0.943468
   AUC PR    = 0.375386
   CLL	      = -0.239341
   Precision = 0.167939 at threshold = 0.5
   Recall    = 0.825
   F1        = 0.27907


Total learning time: 4.849 seconds
Total inference time: 1.513 seconds
AUC ROC: 0.943468


Results scoring model
   AUC ROC   = 0.965349
   AUC PR    = 0.397261
   CLL	      = -0.237661
   Precision = 0.133047 at threshold = 0.5
   Recall    = 0.939394
   F1        = 0.233083


Total scoring time: 1.27 seconds
Refined model CLL: -0.237661


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.943468
   AUC PR    = 0.375386
   CLL	      = -0.239341
   Precision = 0.167939 at threshold = 0.5
   Recall    = 0.825
   F1        = 0.27907


Total learning time: 8.2 seconds
Total inference time: 1.513 seconds
AUC ROC: 0.943468
Total revision time: 8.2
Best scored revision CLL: -0.237661


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 03:00:14
{'Inference time': 1.513, 'CLL': -0.239341, 'parameter': {'Inference time': 1.329, 'CLL': -0.235634, 'Precision': [0.142857, 0.5], 'AUC ROC': 0.936897, 'Recall': 1.0, 'Learning time': 1.007, 'AUC PR': 0.369816, 'F1': 0.25}, 'Precision': [0.167939, 0.5], 'AUC ROC': 0.943468, 'Recall': 0.825, 'Learning time': 8.2, 'AUC PR': 0.375386, 'F1': 0.27907}


Starting fold 5

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos	 examples: 97
Target test neg examples: 3734

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6081489350995123;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.14185106490048777;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3125265076912673;  // std dev = 2,335, 22,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.22842136363673274;  // std dev = 2,396, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   else return -0.11231637819360636;  // std dev = 1,29e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.28879291377646144;  // std dev = 2,103, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3395511771314394;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.09269127618926094;  // std dev = 1,29e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.255639536498669;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.08518475138839686;  // std dev = 1,18e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.19199226710472223;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.07877675473109175;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.026882484187833636;  // std dev = 2,103, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.011103996045886666;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   else return -0.06842697784420275;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2486810237775637;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.06419184008202619;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */


Results
   AUC ROC   = 0.937621
   AUC PR    = 0.323785
   CLL	      = -0.266419
   Precision = 0.12125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.216276


Total learning time: 0.85 seconds
Total inference time: 1.539 seconds
AUC ROC: 0.937621


Results scoring model
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.26925
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total scoring time: 0.719 seconds
Parameter learned model CLL: -0.26925


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.732, 4, 12], 'true,true': [0.0, 0, 4], 'false': [0.0, 24, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.335, 10, 12], 'true,true': [0.0, 0, 4], 'false': [0.0, 33, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.396, 11, 12], 'true,true': [0.0, 0, 4], 'false': [1.29e-08, 23, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.103, 7, 12], 'true,true': [0.0, 0, 4], 'false': [0.0, 22, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.732, 4, 12], 'true,true': [0.0, 0, 4], 'false': [1.29e-08, 26, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.732, 4, 12], 'true,true': [0.0, 0, 4], 'false': [1.18e-08, 28, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.732, 4, 12], 'true,true': [0.0, 0, 4], 'false': [0.0, 27, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.103, 7, 12], 'true,true': [0.0, 0, 4], 'false': [0.0, 32, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.191, 8, 12], 'true,true': [0.0, 0, 4], 'false': [0.0, 25, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.309, 2, 12], 'true,true': [0.0, 0, 4], 'false': [0.0, 33, 0]}]]
[{'': [0.1599999999999997, 0.0], 'true': [0.0, 0.18749999999999967]}, {'': [0.2313483590692596, 0.0], 'true': [0.0, 0.2479338842975207]}, {'': [0.2260503226002008, 7.240584943207542e-18], 'true': [0.0, 0.24952741020793942]}, {'': [0.1946001046522983, -6.308085367188389e-18], 'true': [0.0, 0.2326869806094183]}, {'': [0.1500567872566027, 6.4051328343759035e-18], 'true': [0.0, 0.1875]}, {'': [0.15000003493817854, 4.956352788505163e-18], 'true': [0.0, 0.18749999999999992]}, {'': [0.1500504977858231, -6.1679056923619804e-18], 'true': [0.0, 0.1875]}, {'': [0.1954614244165643, 0.0], 'true': [0.0, 0.23268698060941825]}, {'': [0.203728627681408, -3.885780586188048e-18], 'true': [0.0, 0.24]}, {'': [0.09751095632277214, -8.410780489584519e-19], 'true': [0.0, 0.12244897959183673]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B), projectmember(E, B) )
%   | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.4831489350995122;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return -0.22940870658788887;  // std dev = 0,053, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( tempadvisedby(E, B), publication(F, B) )
%   | | | then return 0.47259967411984327;  // std dev = 1,430, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.7886573287083125;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.6770159950610561;  // std dev = 0,096, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.44147256668441265;  // std dev = 1,157, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.05093148433369075;  // std dev = 0,714, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.1123163781936064;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( hasposition(B, D) )
%   | | then if ( ta(E, A, F), projectmember(G, B) )
%   | | | then return -0.0941233601417835;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3435468239086425;  // std dev = 1,241, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return -0.1471023433999021;  // std dev = 0,902, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.10159632948783633;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(F, G, E), publication(H, G) )
%   | | | then return 0.45613122541739326;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16302028891520984;  // std dev = 1,139, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.4742641937462646;  // std dev = 0,222, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926094;  // std dev = 1,05e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | | then return 0.1544980607937573;  // std dev = 1,265, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.026969634958716293;  // std dev = 1,077, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.21284309389310047;  // std dev = 0,562, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.08518475138839687;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E), projectmember(F, B) )
%   | | then return -0.3664773644294242;  // std dev = 1,007, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.004988961546464985;  // std dev = 1,617, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.31820406306832155;  // std dev = 0,203, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07877675473109175;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( ta(F, A, G), ta(H, D, G) )
%   | | | then return -0.30463546270660896;  // std dev = 0,845, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3868236645535236;  // std dev = 0,251, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( ta(I, A, J), publication(K, B) )
%   | | | then return 0.023152410849404375;  // std dev = 0,846, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.21051021554806532;  // std dev = 1,098, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(F, G, E), publication(H, G) )
%   | | | then return 0.2623272892363697;  // std dev = 0,077, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.41610370221754367;  // std dev = 0,159, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.11701182060473339;  // std dev = 0,821, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420274;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E), projectmember(F, B) )
%   | | then return -0.21387847393007772;  // std dev = 0,783, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(G, B) )
%   | | | then return -0.05204040419963332;  // std dev = 1,508, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.27431177079814467;  // std dev = 0,189, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06419184008202616;  // std dev = 6,45e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.950181
   AUC PR    = 0.344095
   CLL	      = -0.235689
   Precision = 0.159132 at threshold = 0.5
   Recall    = 0.907216
   F1        = 0.270769


Total learning time: 3.55 seconds
Total inference time: 1.812 seconds
AUC ROC: 0.950181


Results scoring model
   AUC ROC   = 0.968025
   AUC PR    = 0.673119
   CLL	      = -0.249488
   Precision = 0.216216 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.355556


Total scoring time: 0.822 seconds
Refined model CLL: -0.249488


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.950181
   AUC PR    = 0.344095
   CLL	      = -0.235689
   Precision = 0.159132 at threshold = 0.5
   Recall    = 0.907216
   F1        = 0.270769


Total learning time: 5.941 seconds
Total inference time: 1.812 seconds
AUC ROC: 0.950181
Total revision time: 5.941
Best scored revision CLL: -0.249488


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 03:00:24
{'Inference time': 1.812, 'CLL': -0.235689, 'parameter': {'Inference time': 1.539, 'CLL': -0.266419, 'Precision': [0.12125, 0.5], 'AUC ROC': 0.937621, 'Recall': 1.0, 'Learning time': 0.85, 'AUC PR': 0.323785, 'F1': 0.216276}, 'Precision': [0.159132, 0.5], 'AUC ROC': 0.950181, 'Recall': 0.907216, 'Learning time': 5.941, 'AUC PR': 0.344095, 'F1': 0.270769}


