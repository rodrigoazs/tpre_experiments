Starting experiment #3 for 1_imdb_uwcse

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.1418510649004891;  // std dev = 0,000, 712,000 (wgt'ed) examples reached here.  /* #neg=712 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.12544463852839233;  // std dev = 0,000, 663,000 (wgt'ed) examples reached here.  /* #neg=663 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360633;  // std dev = 2,36e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else return -0.1123163781936064;  // std dev = 0,000, 674,000 (wgt'ed) examples reached here.  /* #neg=674 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783621;  // std dev = 3,65e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.10159632948783524;  // std dev = 4,17e-07, 695,000 (wgt'ed) examples reached here.  /* #neg=695 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.09269127618926186;  // std dev = 0,000, 735,000 (wgt'ed) examples reached here.  /* #neg=735 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.08518475138839675;  // std dev = 1,30e-07, 671,000 (wgt'ed) examples reached here.  /* #neg=671 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109169;  // std dev = 3,33e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.07877675473109282;  // std dev = 0,000, 721,000 (wgt'ed) examples reached here.  /* #neg=721 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.07324622576333656;  // std dev = 2,31e-07, 707,000 (wgt'ed) examples reached here.  /* #neg=707 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 2,89e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.06842697784420256;  // std dev = 1,85e-07, 708,000 (wgt'ed) examples reached here.  /* #neg=708 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06419184008202533;  // std dev = 2,51e-07, 696,000 (wgt'ed) examples reached here.  /* #neg=696 */


Starting fold 1

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos	 examples: 78
Target test neg examples: 2265

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7914822684328456;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.5581489350995122;  // std dev = 2,510, 30,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6660633000779167;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.6158860545469176;  // std dev = 1,833, 25,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   else return -0.12544463852839155;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.584786610214307;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.25157397849198015;  // std dev = 2,898, 35,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   else return -0.11231637819360632;  // std dev = 3,65e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.43971170223533035;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.3166575099314854;  // std dev = 2,407, 29,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   else return -0.10159632948783635;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.21080528231358825;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else return 0.19184872759373187;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.09269127618926098;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.29052221027674563;  // std dev = 3,33e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.06652136491980717;  // std dev = 2,898, 35,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   else return -0.08518475138839682;  // std dev = 2,24e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2344465558543066;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.017576013489459686;  // std dev = 3,013, 37,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   else return -0.07877675473109175;  // std dev = 1,29e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.19500389135330012;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.12308165321327079;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.04119720938085658;  // std dev = 1,323, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else return 0.1932729034282565;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   else return -0.0684269778442027;  // std dev = 1,67e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.16056650572107894;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.06298012605266216;  // std dev = 3,013, 37,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   else return -0.0641918400820262;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 0.935982
   AUC PR    = 0.358428
   CLL	      = -0.239071
   Precision = 0.157895 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.272727


Total learning time: 1.06 seconds
Total inference time: 1.298 seconds
AUC ROC: 0.935982


Results scoring model
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.246581
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total scoring time: 1.191 seconds
Parameter learned model CLL: -0.246581


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.51, 9, 21], 'true,true': [0.966, 1, 14], 'false': [5.16e-08, 54, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.833, 4, 21], 'true,true': [0.966, 1, 14], 'false': [0.0, 60, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.898, 14, 21], 'true,true': [5.16e-08, 0, 14], 'false': [3.65e-08, 62, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.407, 8, 21], 'true,true': [0.0, 0, 14], 'false': [0.0, 57, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'true,true': [1.323, 2, 14], 'false': [0.0, 56, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.898, 14, 21], 'true,true': [3.33e-08, 0, 14], 'false': [2.24e-08, 46, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [3.013, 16, 21], 'true,true': [0.0, 0, 14], 'false': [1.29e-08, 62, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'true,true': [0.0, 0, 14], 'false': [1.29e-08, 60, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.16, 6, 21], 'true,true': [1.323, 2, 14], 'false': [1.67e-08, 63, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [3.013, 16, 21], 'true,true': [0.0, 0, 14], 'false': [0.0, 54, 0]}]]
[{'': [0.17283950617284127, 4.9343245538895844e-17], 'true': [0.06222222222222188, 0.2099999999999998]}, {'': [0.10792343238858652, -2.7755575615628914e-17], 'true': [0.0622222222222223, 0.1343999999999999]}, {'': [0.19408788937537103, 2.1488187573390126e-17], 'true': [1.9032394707859825e-16, 0.24000000000000007]}, {'': [0.13804826175161888, -3.895519384649672e-18], 'true': [0.0, 0.19976218787158154]}, {'': [0.18144650740323667, -6.938893903907228e-18], 'true': [0.10937500000000003, 0.21852237252861606]}, {'': [0.18166864871849456, 1.0860877414811314e-17], 'true': [7.930164461608261e-17, 0.24000000000000002]}, {'': [0.1874271980724982, 2.6860234466737657e-18], 'true': [-3.9650822308041306e-17, 0.24543462381300218]}, {'': [0.15164627580077836, 2.7755575615628915e-18], 'true': [0.0, 0.218522372528616]}, {'': [0.1546281978851845, 4.4056469231157e-18], 'true': [0.109375, 0.17283950617283955]}, {'': [0.1880127639993158, -1.02798428206033e-18], 'true': [-3.96508223080413e-18, 0.24543462381300218]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3581489350995123;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( projectmember(G, B), publication(H, A) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5081489350995123;  // std dev = 2,133, 20,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   else return -0.14185106490048766;  // std dev = 6,32e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.38614007887762103;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(E, B), publication(F, A) )
%   | | then if ( projectmember(G, B) )
%   | | | then return 0.2194734122109545;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.13831535640726036;  // std dev = 0,083, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( ta(H, A, I), publication(J, B) )
%   | | | then return 0.18931649621274757;  // std dev = 1,087, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4592206028082289;  // std dev = 2,307, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   else return -0.12544463852839152;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.3874036882853249;  // std dev = 0,934, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(F, B), publication(G, A) )
%   | | then if ( tempadvisedby(H, B) )
%   | | | then return -0.11103953824079753;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.2103668063457623;  // std dev = 1,028, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.12762984559519838;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5099889110250555;  // std dev = 1,809, 21,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   else return -0.11231637819360638;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.44119750939746966;  // std dev = 0,163, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.10054298116025114;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1668699552759942;  // std dev = 0,878, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return 0.14542678485864688;  // std dev = 1,396, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.3526632942092486;  // std dev = 1,965, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   else return -0.10159632948783634;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), projectmember(E, B) )
%   | | then return 0.46498875259253386;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(F, B), publication(F, A) )
%   | | | then return 0.2715673867247013;  // std dev = 0,926, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.07005099318172345;  // std dev = 1,926, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else if ( publication(G, B) )
%   | | then if ( publication(G, H), tempadvisedby(I, H) )
%   | | | then return 0.1899144908300357;  // std dev = 1,462, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.18728207104586395;  // std dev = 0,947, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(J, A) )
%   | | | then return -0.34083820544571036;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.10750487211237705;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.09269127618926094;  // std dev = 1,67e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.28128600029793566;  // std dev = 0,138, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.5036830515575795;  // std dev = 0,229, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.18858128150986866;  // std dev = 1,679, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return -0.05420440765072736;  // std dev = 2,073, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   else return -0.0851847513883968;  // std dev = 1,49e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.22836475640698753;  // std dev = 0,122, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | | then return 0.14552216242381555;  // std dev = 0,791, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.21256812487716598;  // std dev = 1,306, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.22874829494208368;  // std dev = 1,680, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.45518010296555655;  // std dev = 0,154, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109176;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.19852822108238916;  // std dev = 0,101, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.1743070697292295;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.06629907548372083;  // std dev = 0,877, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | then return -0.03500397340880232;  // std dev = 0,759, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( publication(K, A), ta(L, A, M) )
%   | | | then return -0.15369152261946836;  // std dev = 0,824, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.17513795487681105;  // std dev = 2,187, 23,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A), publication(D, B) )
%   | | then return 0.1691351428432965;  // std dev = 0,105, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(E, C) )
%   | | | then return -0.25575150084397547;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.06976143059587579;  // std dev = 1,673, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else if ( publication(F, A) )
%   | | then return 0.47405002986207556;  // std dev = 0,323, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.18407758361608895;  // std dev = 0,903, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.0445292219934054;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06842697784420271;  // std dev = 1,05e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1457559765527259;  // std dev = 0,095, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, B), publication(F, A) )
%   | | | then return -0.1351713131511337;  // std dev = 0,113, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.22925862573786882;  // std dev = 1,108, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.045109666140090744;  // std dev = 0,758, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1543810587849989;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   else return -0.06419184008202622;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 0.948933
   AUC PR    = 0.391439
   CLL	      = -0.205158
   Precision = 0.20649 at threshold = 0.5
   Recall    = 0.897436
   F1        = 0.335731


Total learning time: 5.741 seconds
Total inference time: 1.683 seconds
AUC ROC: 0.948933


Results scoring model
   AUC ROC   = 0.966003
   AUC PR    = 0.39392
   CLL	      = -0.206572
   Precision = 0.138075 at threshold = 0.5
   Recall    = 0.942857
   F1        = 0.240876


Total scoring time: 1.275 seconds
Refined model CLL: -0.206572


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.948933
   AUC PR    = 0.391439
   CLL	      = -0.205158
   Precision = 0.20649 at threshold = 0.5
   Recall    = 0.897436
   F1        = 0.335731


Total learning time: 9.267 seconds
Total inference time: 1.683 seconds
AUC ROC: 0.948933
Total revision time: 9.267
Best scored revision CLL: -0.206572


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 02:25:37
{'Learning time': 9.267, 'F1': 0.335731, 'parameter': {'Learning time': 1.06, 'F1': 0.272727, 'Recall': 1.0, 'CLL': -0.239071, 'AUC PR': 0.358428, 'Inference time': 1.298, 'Precision': [0.157895, 0.5], 'AUC ROC': 0.935982}, 'Recall': 0.897436, 'CLL': -0.205158, 'AUC PR': 0.391439, 'Inference time': 1.683, 'Precision': [0.20649, 0.5], 'AUC ROC': 0.948933}


Starting fold 2

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos	 examples: 93
Target test neg examples: 3738

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7043027812533584;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3284003945813621;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   else return -0.12544463852839127;  // std dev = 3,80e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.45536643674628463;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.4162691859762599;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   else return -0.1123163781936064;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.44201487127714406;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5035334229662706;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.10159632948783635;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.33737734566538485;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.308101123949771;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.092691276189261;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2665141436362597;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.07434185811991201;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.08518475138839683;  // std dev = 2,11e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.21773835309323258;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.0806365917835292;  // std dev = 2,225, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   else return -0.07877675473109179;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.18292816258003286;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.121669331626369;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   else return -0.07324622576333704;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15715352101032687;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.1618813582929624;  // std dev = 2,396, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   else return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1374402456538738;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.05207060882417007;  // std dev = 2,225, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   else return -0.0641918400820262;  // std dev = 9,13e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */


Results
   AUC ROC   = 0.932863
   AUC PR    = 0.29479
   CLL	      = -0.235372
   Precision = 0.114251 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.205072


Total learning time: 0.858 seconds
Total inference time: 1.549 seconds
AUC ROC: 0.932863


Results scoring model
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.199656
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total scoring time: 0.707 seconds
Parameter learned model CLL: -0.199656


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'true,true': [0.0, 0, 9], 'false': [3.49e-08, 35, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.152, 8, 11], 'true,true': [2.98e-08, 0, 9], 'false': [3.8e-08, 45, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.713, 4, 11], 'true,true': [0.949, 1, 9], 'false': [0.0, 33, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [0.957, 1, 11], 'true,true': [0.0, 0, 9], 'false': [0.0, 33, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.301, 2, 11], 'true,true': [1.49e-08, 0, 9], 'false': [0.0, 23, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.854, 5, 11], 'true,true': [0.0, 0, 9], 'false': [2.11e-08, 41, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.225, 9, 11], 'true,true': [0.0, 0, 9], 'false': [0.0, 31, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.713, 4, 11], 'true,true': [0.0, 0, 9], 'false': [0.0, 33, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.396, 12, 11], 'true,true': [0.0, 0, 9], 'false': [0.0, 31, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.225, 9, 11], 'true,true': [0.0, 0, 9], 'false': [9.13e-09, 37, 0]}]]
[{'': [0.08264462809917356, 3.489272363107635e-17], 'true': [-2.9605947323337506e-16, 0.13017751479289916]}, {'': [0.19877120727229472, 3.20731096002823e-17], 'true': [9.868649107779169e-17, 0.24376731301939078]}, {'': [0.1537001961375992, -6.7286243916676156e-18], 'true': [0.08999999999999986, 0.19555555555555557]}, {'': [0.04457761786351089, -3.3643121958338078e-18], 'true': [-7.401486830834377e-17, 0.07638888888888888]}, {'': [0.07713026776497602, -3.620292471603771e-18], 'true': [2.4671622769447922e-17, 0.13017751479289946]}, {'': [0.1460087151586609, 1.0831444142684454e-17], 'true': [0.0, 0.21484374999999997]}, {'': [0.18974431556651353, 0.0], 'true': [-3.0839528461809905e-17, 0.24749999999999997]}, {'': [0.12310174824639637, 0.0], 'true': [-6.1679056923619804e-18, 0.19555555555555554]}, {'': [0.19992315188959067, -4.476705744456276e-18], 'true': [-3.0839528461809902e-18, 0.2495274102079395]}, {'': [0.178376439374197, 2.250452076942885e-18], 'true': [-3.0839528461809902e-18, 0.2475]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(E, B), ta(F, A, G) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.02481560176617888;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then if ( tempadvisedby(G, B), publication(D, G) )
%   | | | then return 0.06867292888621022;  // std dev = 0,798, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6236537310924294;  // std dev = 0,911, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.5033803635396507;  // std dev = 0,749, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.02571230634556159;  // std dev = 0,930, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.12544463852839133;  // std dev = 2,36e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(D, E), student(E) )
%   | | | then return -0.04691915117365813;  // std dev = 0,799, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.37619347856550966;  // std dev = 0,642, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then return 0.621595028989633;  // std dev = 0,097, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7221989430319677;  // std dev = 0,159, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11231637819360639;  // std dev = 1,05e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.25015193954435344;  // std dev = 0,604, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5418991393717099;  // std dev = 0,137, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(J, A), publication(K, B) )
%   | | | then return -0.20924277112112102;  // std dev = 0,008, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.13128662839621083;  // std dev = 1,243, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.10159632948783635;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B), publication(E, A) )
%   | | then return -0.034198500427288246;  // std dev = 0,839, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.28333513219628326;  // std dev = 0,854, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.1550679902363928;  // std dev = 1,049, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.09269127618926097;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.44099947254118693;  // std dev = 0,047, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3347656097254023;  // std dev = 0,112, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.1048595223948928;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.013224015864041242;  // std dev = 0,842, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.08518475138839685;  // std dev = 1,39e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.33697132367996524;  // std dev = 0,043, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2656127186251632;  // std dev = 0,099, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.3312347837965006;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10924244110102296;  // std dev = 0,887, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   else return -0.07877675473109175;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return -0.02290350225472264;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(E, B), publication(F, E) )
%   | | then return -0.2691959411717399;  // std dev = 1,022, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( ta(G, A, H), tempadvisedby(I, B) )
%   | | | then return 0.2192017405169194;  // std dev = 0,064, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.062455045968309;  // std dev = 1,379, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.16506170886356764;  // std dev = 0,041, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then if ( publication(D, G), tempadvisedby(G, H) )
%   | | | then return 0.29172520692131026;  // std dev = 0,100, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18417631663564005;  // std dev = 0,056, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.15833121668988726;  // std dev = 0,454, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.20722184815222755;  // std dev = 1,052, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return -0.06842697784420275;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1435779452523287;  // std dev = 0,037, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(G, F, H) )
%   | | | then return -0.24326252046004831;  // std dev = 0,918, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1652934071208584;  // std dev = 0,043, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.23858594742773648;  // std dev = 0,085, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.05005418934293357;  // std dev = 0,862, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.0641918400820262;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */


Results
   AUC ROC   = 0.946461
   AUC PR    = 0.222781
   CLL	      = -0.23495
   Precision = 0.165865 at threshold = 0.5
   Recall    = 0.741935
   F1        = 0.27112


Total learning time: 4.453 seconds
Total inference time: 1.979 seconds
AUC ROC: 0.946461


Results scoring model
   AUC ROC   = 0.983431
   AUC PR    = 0.696709
   CLL	      = -0.161909
   Precision = 0.558824 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.703704


Total scoring time: 0.875 seconds
Refined model CLL: -0.161909


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.946461
   AUC PR    = 0.222781
   CLL	      = -0.23495
   Precision = 0.165865 at threshold = 0.5
   Recall    = 0.741935
   F1        = 0.27112


Total learning time: 6.893000000000001 seconds
Total inference time: 1.979 seconds
AUC ROC: 0.946461
Total revision time: 6.893000000000001
Best scored revision CLL: -0.161909


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 02:25:48
{'Learning time': 6.893000000000001, 'F1': 0.27112, 'parameter': {'Learning time': 0.858, 'F1': 0.205072, 'Recall': 1.0, 'CLL': -0.235372, 'AUC PR': 0.29479, 'Inference time': 1.549, 'Precision': [0.114251, 0.5], 'AUC ROC': 0.932863}, 'Recall': 0.741935, 'CLL': -0.23495, 'AUC PR': 0.222781, 'Inference time': 1.979, 'Precision': [0.165865, 0.5], 'AUC ROC': 0.946461}


Starting fold 3

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos	 examples: 104
Target test neg examples: 3988

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.7581489350995123;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.7392070123615109;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.3932705680386897;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.3773588652861153;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.10159632948783631;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.3850931876646709;  // std dev = 2,11e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.19878745655522825;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.25886693382372267;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.07877675473109172;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.21236421943495332;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17900589685686163;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.0541907909439394;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.06419184008202619;  // std dev = 7,45e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 0.904213
   AUC PR    = 0.119816
   CLL	      = -0.410821
   Precision = 0.119816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.213992


Total learning time: 0.772 seconds
Total inference time: 1.467 seconds
AUC ROC: 0.904213


Results scoring model
   AUC ROC   = 0.961538
   AUC PR    = 0.5625
   CLL	      = -0.200798
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total scoring time: 0.594 seconds
Parameter learned model CLL: -0.200798


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.949, 1, 9], 'true,true': [0.0, 0, 0], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.0, 0, 9], 'true,true': [0.0, 0, 0], 'false': [5.27e-09, 12, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.279, 2, 9], 'true,true': [0.0, 0, 0], 'false': [1.29e-08, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.949, 1, 9], 'true,true': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [2.11e-08, 0, 9], 'true,true': [0.0, 0, 0], 'false': [0.0, 11, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.949, 1, 9], 'true,true': [0.0, 0, 0], 'false': [3.73e-09, 14, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.49e-08, 0, 9], 'true,true': [0.0, 0, 0], 'false': [0.0, 17, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.0, 0, 9], 'true,true': [0.0, 0, 0], 'false': [3.73e-09, 16, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.0, 0, 9], 'true,true': [0.0, 0, 0], 'false': [3.73e-09, 15, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.949, 1, 9], 'true,true': [0.0, 0, 0], 'false': [7.45e-09, 22, 0]}]]
[{'': [0.08999999999999977, -3.2653618371328133e-18], 'true': [nan, 0.08999999999999977]}, {'': [0.0, 2.3129646346357427e-18], 'true': [nan, 0.0]}, {'': [0.14876033057851232, 7.569702440626067e-18], 'true': [nan, 0.14876033057851232]}, {'': [0.0899999999999999, -6.033820786006285e-18], 'true': [nan, 0.0899999999999999]}, {'': [4.9343245538895844e-17, 0.0], 'true': [nan, 4.9343245538895844e-17]}, {'': [0.09000000000000001, 9.912705577010326e-19], 'true': [nan, 0.09000000000000001]}, {'': [2.4671622769447922e-17, 0.0], 'true': [nan, 2.4671622769447922e-17]}, {'': [0.0, 8.673617379884035e-19], 'true': [nan, 0.0]}, {'': [0.0, 9.251858538542971e-19], 'true': [nan, 0.0]}, {'': [0.09, 2.523234146875356e-18], 'true': [nan, 0.09]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.7194734122109544;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.4694734122109544;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.5957530524383111;  // std dev = 0,086, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.11231637819360638;  // std dev = 9,13e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.23231348096863497;  // std dev = 0,855, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.46919521471255604;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.1030432486040874;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3653716389110701;  // std dev = 0,051, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.32987905376539495;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.039757657360194446;  // std dev = 0,426, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then return -0.050239799972639276;  // std dev = 0,773, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.27412575941936596;  // std dev = 0,049, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.07877675473109172;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.026636417055513208;  // std dev = 0,904, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.23967146124055166;  // std dev = 0,058, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.2100047543554403;  // std dev = 0,080, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.1905345839641765;  // std dev = 0,043, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.0026061000567874637;  // std dev = 0,901, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06419184008202619;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.906255
   AUC PR    = 0.123281
   CLL	      = -0.367567
   Precision = 0.119816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.213992


Total learning time: 1.503 seconds
Total inference time: 1.225 seconds
AUC ROC: 0.906255


Results scoring model
   AUC ROC   = 0.97558
   AUC PR    = 0.692979
   CLL	      = -0.189121
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total scoring time: 0.538 seconds
Refined model CLL: -0.189121


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.906255
   AUC PR    = 0.123281
   CLL	      = -0.367567
   Precision = 0.119816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.213992


Total learning time: 3.407 seconds
Total inference time: 1.225 seconds
AUC ROC: 0.906255
Total revision time: 3.407
Best scored revision CLL: -0.189121


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 02:25:55
{'Learning time': 3.407, 'F1': 0.213992, 'parameter': {'Learning time': 0.772, 'F1': 0.213992, 'Recall': 1.0, 'CLL': -0.410821, 'AUC PR': 0.119816, 'Inference time': 1.467, 'Precision': [0.119816, 0.5], 'AUC ROC': 0.904213}, 'Recall': 1.0, 'CLL': -0.367567, 'AUC PR': 0.123281, 'Inference time': 1.225, 'Precision': [0.119816, 0.5], 'AUC ROC': 0.906255}


Starting fold 4

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos	 examples: 80
Target test neg examples: 2591

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.6581489350995123;  // std dev = 2,000, 25,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else return -0.14185106490048768;  // std dev = 4,71e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.6480448407823828;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.32944790605042606;  // std dev = 2,928, 35,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   else return -0.12544463852839155;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5729277032086343;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.2640499377567101;  // std dev = 2,928, 35,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   else return -0.11231637819360632;  // std dev = 3,33e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2973358369789606;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else return 0.374494182131196;  // std dev = 2,277, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   else return -0.10159632948783635;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2264148385958812;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else return 0.14941621174635628;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   else return -0.09269127618926096;  // std dev = 1,29e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3094114726074827;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.13111040258439277;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   else return -0.0851847513883968;  // std dev = 2,98e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.24744539501805726;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.044786933447575804;  // std dev = 2,928, 35,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   else return -0.07877675473109179;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20428434679140792;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.05044387907533068;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.10164293733270949;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.07469616481270663;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   else return -0.0684269778442027;  // std dev = 2,24e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15900416556997315;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.013155580637440982;  // std dev = 2,981, 36,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   else return -0.06419184008202622;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */


Results
   AUC ROC   = 0.936897
   AUC PR    = 0.369816
   CLL	      = -0.218136
   Precision = 0.142857 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.25


Total learning time: 0.981 seconds
Total inference time: 1.261 seconds
AUC ROC: 0.936897


Results scoring model
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.229308
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total scoring time: 1.042 seconds
Parameter learned model CLL: -0.229308


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 5, 20], 'true,true': [0.0, 0, 13], 'false': [4.71e-08, 49, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.928, 15, 20], 'true,true': [0.964, 1, 13], 'false': [0.0, 49, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.928, 15, 20], 'true,true': [0.0, 0, 13], 'false': [3.33e-08, 60, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.277, 7, 20], 'true,true': [1.317, 2, 13], 'false': [0.0, 54, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.807, 13, 20], 'true,true': [1.317, 2, 13], 'false': [1.29e-08, 51, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.739, 12, 20], 'true,true': [0.0, 0, 13], 'false': [2.98e-08, 65, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.928, 15, 20], 'true,true': [0.0, 0, 13], 'false': [7.45e-09, 54, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.87, 14, 20], 'true,true': [0.0, 0, 13], 'false': [1.05e-08, 54, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.739, 12, 20], 'true,true': [0.964, 1, 13], 'false': [2.24e-08, 68, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.981, 16, 20], 'true,true': [0.0, 0, 13], 'false': [7.45e-09, 43, 0]}]]
[{'': [0.11426592797784099, 4.531522549490435e-17], 'true': [-2.7328566760003855e-16, 0.15999999999999973]}, {'': [0.21459265445318443, -3.172065784643304e-17], 'true': [0.06632653061224499, 0.2448979591836733]}, {'': [0.1974123533395319, 1.850371707708594e-17], 'true': [-1.3664283380001927e-16, 0.2448979591836736]}, {'': [0.16609348578206568, -2.05596856412066e-18], 'true': [0.11555555555555548, 0.1920438957475993]}, {'': [0.20152628841470957, 3.2653618371328133e-18], 'true': [0.1155555555555555, 0.2387511478420568]}, {'': [0.17319761430799677, 1.3664283380001927e-17], 'true': [-3.416070845000482e-17, 0.23437499999999994]}, {'': [0.18668212982185473, 1.02798428206033e-18], 'true': [-5.978123978750843e-17, 0.24489795918367352]}, {'': [0.17995454445067924, 2.05596856412066e-18], 'true': [-3.416070845000482e-17, 0.24221453287197225]}, {'': [0.18338354976575957, 7.34706413354883e-18], 'true': [0.0663265306122449, 0.234375]}, {'': [0.1871830892793842, 1.290957005378089e-18], 'true': [-1.708035422500241e-17, 0.24691358024691354]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.5010060779566552;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else return -0.14185106490048768;  // std dev = 4,71e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( ta(C, E, F), publication(G, E) )
%   | | then if ( publication(G, B), ta(H, E, D) )
%   | | | then return 0.7415374791666755;  // std dev = 0,076, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4247521960501328;  // std dev = 1,650, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else return 0.752569512644536;  // std dev = 0,066, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(I, A), publication(I, B) )
%   | | then if ( tempadvisedby(J, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3861400788776211;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(K, A), tempadvisedby(L, B) )
%   | | | then return -0.09588311662118666;  // std dev = 0,898, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.5108025743589213;  // std dev = 1,150, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.12544463852839158;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return 0.22021482908585507;  // std dev = 0,821, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5825076388794891;  // std dev = 0,133, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( publication(G, H), ta(I, H, J) )
%   | | | then return 0.35282609781969226;  // std dev = 1,065, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.04688901452704665;  // std dev = 0,914, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tempadvisedby(K, B) )
%   | | | then return 0.6093104370800143;  // std dev = 0,133, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.49482311199807993;  // std dev = 1,283, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.11231637819360632;  // std dev = 3,16e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( publication(F, A), ta(G, A, H) )
%   | | then return 0.4590145925808588;  // std dev = 0,131, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(I, A, E) )
%   | | | then return -0.5498544346369991;  // std dev = 0,066, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.065599878819247;  // std dev = 0,785, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( publication(J, A), publication(J, B) )
%   | | then return 0.45620602885755407;  // std dev = 0,144, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.14858754273138813;  // std dev = 1,479, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.33364925033626025;  // std dev = 1,588, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.10159632948783633;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( publication(E, A) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.3014774776022758;  // std dev = 0,000483, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.4481281478237996;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( publication(E, G), ta(H, G, I) )
%   | | | then return 0.28344537655762214;  // std dev = 1,316, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.06087575422038278;  // std dev = 1,312, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( publication(J, A), tempadvisedby(K, B) )
%   | | then if ( publication(J, B) )
%   | | | then return 0.3392851407122491;  // std dev = 0,090, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.033299899109232256;  // std dev = 1,006, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( publication(L, A) )
%   | | | then return 0.3283586073961767;  // std dev = 0,731, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.4979923164598972;  // std dev = 0,117, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926096;  // std dev = 1,05e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.0742954525034533;  // std dev = 0,941, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.28574471461896855;  // std dev = 0,098, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(F, B) )
%   | | then if ( ta(G, A, H), ta(I, F, J) )
%   | | | then return -0.2395591998123609;  // std dev = 0,812, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.006097756583188674;  // std dev = 1,737, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( ta(K, A, L) )
%   | | | then return 0.4429010304917656;  // std dev = 0,116, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.005729935972040551;  // std dev = 1,251, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.08518475138839682;  // std dev = 2,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2426382610916642;  // std dev = 0,172, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.37699773568462536;  // std dev = 0,788, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(F, A, G), tempadvisedby(H, B) )
%   | | | then return -0.11561951714779091;  // std dev = 1,606, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.0498669525415235;  // std dev = 2,111, 23,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   else return -0.07877675473109176;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.18209648152329305;  // std dev = 0,061, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.06063867325712757;  // std dev = 0,465, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( tempadvisedby(E, B), publication(F, E) )
%   | | then return -0.2996628417445712;  // std dev = 0,784, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(G, A), ta(H, A, I) )
%   | | | then return 0.24960571952618998;  // std dev = 0,767, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.02917202620846001;  // std dev = 2,291, 25,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   else return -0.07324622576333704;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.15659678916575473;  // std dev = 0,054, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.24291472376084017;  // std dev = 0,113, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(D, F), ta(G, F, H) )
%   | | | then return 0.00970817729315324;  // std dev = 1,222, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.2541008575032226;  // std dev = 0,971, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( ta(I, A, J), tempadvisedby(K, B) )
%   | | then return 0.40482761786340155;  // std dev = 0,116, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( ta(L, A, M) )
%   | | | then return 0.08102814047039497;  // std dev = 1,183, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.136697000465633;  // std dev = 0,996, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.0684269778442027;  // std dev = 1,49e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.13705608904607475;  // std dev = 0,048, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.2015747279329588;  // std dev = 0,100, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(E, A, F) )
%   | | then if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return -0.09415137000001132;  // std dev = 1,408, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.2062471708127614;  // std dev = 0,960, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( publication(I, A) )
%   | | | then return -0.20504794057649944;  // std dev = 1,339, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.011680337759032175;  // std dev = 1,100, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.0641918400820262;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */


Results
   AUC ROC   = 0.948326
   AUC PR    = 0.38778
   CLL	      = -0.218086
   Precision = 0.194521 at threshold = 0.5
   Recall    = 0.8875
   F1        = 0.319101


Total learning time: 7.516 seconds
Total inference time: 1.488 seconds
AUC ROC: 0.948326


Results scoring model
   AUC ROC   = 0.964993
   AUC PR    = 0.371415
   CLL	      = -0.210732
   Precision = 0.179191 at threshold = 0.5
   Recall    = 0.939394
   F1        = 0.300971


Total scoring time: 1.34 seconds
Refined model CLL: -0.210732


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.948326
   AUC PR    = 0.38778
   CLL	      = -0.218086
   Precision = 0.194521 at threshold = 0.5
   Recall    = 0.8875
   F1        = 0.319101


Total learning time: 10.879 seconds
Total inference time: 1.488 seconds
AUC ROC: 0.948326
Total revision time: 10.879
Best scored revision CLL: -0.210732


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 02:26:10
{'Learning time': 10.879, 'F1': 0.319101, 'parameter': {'Learning time': 0.981, 'F1': 0.25, 'Recall': 1.0, 'CLL': -0.218136, 'AUC PR': 0.369816, 'Inference time': 1.261, 'Precision': [0.142857, 0.5], 'AUC ROC': 0.936897}, 'Recall': 0.8875, 'CLL': -0.218086, 'AUC PR': 0.38778, 'Inference time': 1.488, 'Precision': [0.194521, 0.5], 'AUC ROC': 0.948326}


Starting fold 5

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos	 examples: 97
Target test neg examples: 3734

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(A), director(B).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5640312880406888;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3748615308145669;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5028919243003198;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.11231637819360638;  // std dev = 1,29e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.338608329515595;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.10159632948783631;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1715682414731931;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   else return -0.09269127618926096;  // std dev = 1,29e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.09366155722437408;  // std dev = 2,103, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.08518475138839686;  // std dev = 1,05e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.18890115122221446;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.07877675473109176;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10695344422606541;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.12471420895130506;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08944319464765657;  // std dev = 2,396, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   else return -0.06419184008202618;  // std dev = 3,73e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.937621
   AUC PR    = 0.323785
   CLL	      = -0.232314
   Precision = 0.12125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.216276


Total learning time: 0.804 seconds
Total inference time: 1.398 seconds
AUC ROC: 0.937621


Results scoring model
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.234621
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total scoring time: 0.759 seconds
Parameter learned model CLL: -0.234621


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'true,true': [0.0, 0, 4], 'false': [0.0, 18, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.191, 8, 12], 'true,true': [0.0, 0, 4], 'false': [0.0, 21, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.549, 3, 12], 'true,true': [0.0, 0, 4], 'false': [1.29e-08, 26, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.732, 4, 12], 'true,true': [0.0, 0, 4], 'false': [0.0, 30, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 6, 12], 'true,true': [0.0, 0, 4], 'false': [1.29e-08, 43, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.103, 7, 12], 'true,true': [0.0, 0, 4], 'false': [1.05e-08, 26, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.732, 4, 12], 'true,true': [0.0, 0, 4], 'false': [0.0, 35, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.449, 12, 12], 'true,true': [0.0, 0, 4], 'false': [5.27e-09, 27, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'true,true': [0.0, 0, 4], 'false': [3.73e-09, 22, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.396, 11, 12], 'true,true': [0.0, 0, 4], 'false': [3.73e-09, 24, 0]}]]
[{'': [0.1814058956916096, -9.25185853854297e-18], 'true': [0.0, 0.20761245674740464]}, {'': [0.21649407622216088, 0.0], 'true': [0.0, 0.23999999999999977]}, {'': [0.12677344727807902, 6.4051328343759035e-18], 'true': [0.0, 0.15999999999999998]}, {'': [0.15099616627363704, -5.551115123125783e-18], 'true': [0.0, 0.1874999999999999]}, {'': [0.1851271791083597, 3.872871016134267e-18], 'true': [0.0, 0.22222222222222232]}, {'': [0.19596734185036893, 4.270088556250602e-18], 'true': [0.0, 0.2326869806094183]}, {'': [0.15006959940464024, -2.3790493384824783e-18], 'true': [0.0, 0.18749999999999992]}, {'': [0.2241654330041539, 1.02798428206033e-18], 'true': [0.0, 0.25]}, {'': [0.16818837193318495, 6.30808536718839e-19], 'true': [0.0, 0.2076124567474049]}, {'': [0.21886156653745945, 5.782411586589357e-19], 'true': [0.0, 0.24952741020793953]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.5854216623722396;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.7711080304712916;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.7573841052178191;  // std dev = 0,093, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21004521665131679;  // std dev = 1,248, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( projectmember(D, B), ta(E, A, F) )
%   | | then return -0.15754019245105005;  // std dev = 0,887, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.5975925717667688;  // std dev = 0,126, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3280490763045261;  // std dev = 1,584, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   else return -0.11231637819360638;  // std dev = 1,29e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.501315282900608;  // std dev = 0,214, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.26906237760648677;  // std dev = 1,453, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.04159444230672471;  // std dev = 0,740, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return -0.5188607107676989;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.2382913972872551;  // std dev = 1,454, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.40502217394136164;  // std dev = 0,267, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926096;  // std dev = 1,05e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( projectmember(D, B) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.0910574256096937;  // std dev = 0,771, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.24217056489199149;  // std dev = 0,916, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.280999635860074;  // std dev = 0,670, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5314816737212598;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.08518475138839687;  // std dev = 7,45e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( publication(F, G), inphase(G, H) )
%   | | | then return 0.3620238841925852;  // std dev = 0,084, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.13652589557365374;  // std dev = 0,626, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( ta(I, A, J) )
%   | | | then return -0.5797468621419037;  // std dev = 0,156, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.16294773689603;  // std dev = 0,633, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.10904174784122729;  // std dev = 1,235, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.21460606463767276;  // std dev = 0,617, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.26361815540442984;  // std dev = 0,096, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.27249888532043337;  // std dev = 0,128, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.23241545891348062;  // std dev = 0,124, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.09679724884644436;  // std dev = 0,998, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.06842697784420274;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.009598000730940887;  // std dev = 0,774, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return -0.20451225446327642;  // std dev = 1,368, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.01942447386095273;  // std dev = 0,924, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06419184008202618;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */


Results
   AUC ROC   = 0.951834
   AUC PR    = 0.350415
   CLL	      = -0.192658
   Precision = 0.197568 at threshold = 0.5
   Recall    = 0.670103
   F1        = 0.305164


Total learning time: 3.4 seconds
Total inference time: 1.772 seconds
AUC ROC: 0.951834


Results scoring model
   AUC ROC   = 0.974819
   AUC PR    = 0.678372
   CLL	      = -0.226717
   Precision = 0.253968 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.405063


Total scoring time: 0.818 seconds
Refined model CLL: -0.226717


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.951834
   AUC PR    = 0.350415
   CLL	      = -0.192658
   Precision = 0.197568 at threshold = 0.5
   Recall    = 0.670103
   F1        = 0.305164


Total learning time: 5.781 seconds
Total inference time: 1.772 seconds
AUC ROC: 0.951834
Total revision time: 5.781
Best scored revision CLL: -0.226717


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 02:26:19
{'Learning time': 5.781, 'F1': 0.305164, 'parameter': {'Learning time': 0.804, 'F1': 0.216276, 'Recall': 1.0, 'CLL': -0.232314, 'AUC PR': 0.323785, 'Inference time': 1.398, 'Precision': [0.12125, 0.5], 'AUC ROC': 0.937621}, 'Recall': 0.670103, 'CLL': -0.192658, 'AUC PR': 0.350415, 'Inference time': 1.772, 'Precision': [0.197568, 0.5], 'AUC ROC': 0.951834}


