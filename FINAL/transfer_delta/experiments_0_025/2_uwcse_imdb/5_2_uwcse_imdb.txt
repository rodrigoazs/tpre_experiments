Starting experiment #5 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D), publication(E, B) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7672398441904213;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | then if ( publication(K, H) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6914822684328453;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | else if ( publication(L, A) )
%   | | | then return 0.35814893509951234;  // std dev = 2,828, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.5664822684328447;  // std dev = 3,149, 48,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=34 */
%   else return -0.14185106490048816;  // std dev = 0,000, 186,000 (wgt'ed) examples reached here.  /* #neg=186 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.7319732075872571;  // std dev = 0,137, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | | then return 0.7973634421329485;  // std dev = 0,051, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1654819275112794;  // std dev = 2,795, 33,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( tempadvisedby(H, B), publication(I, H) )
%   | | | then return 0.2341258750515204;  // std dev = 1,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.5268649206061293;  // std dev = 3,496, 67,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=51 */
%   else return -0.12544463852839147;  // std dev = 0,000, 199,000 (wgt'ed) examples reached here.  /* #neg=199 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.5522777079064422;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.37179006112858626;  // std dev = 0,918, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5708552554815649;  // std dev = 0,165, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | then if ( publication(I, K), ta(L, K, M) )
%   | | | then return 0.33429977937614463;  // std dev = 1,772, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.24405166963642488;  // std dev = 0,106, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( ta(N, A, P), tempadvisedby(Q, B) )
%   | | | then return 0.25587601179522257;  // std dev = 2,562, 27,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | | else return 0.37299003838013917;  // std dev = 3,862, 71,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=48 */
%   else return -0.11231637819360622;  // std dev = 8,43e-08, 158,000 (wgt'ed) examples reached here.  /* #neg=158 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.4325464305024379;  // std dev = 0,213, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return -0.3010187488935416;  // std dev = 0,262, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.29226250344157445;  // std dev = 2,060, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else if ( ta(I, A, J) )
%   | | | then return 0.296458971507781;  // std dev = 2,950, 41,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=29 */
%   | | | else return 0.37609175662912786;  // std dev = 2,669, 41,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=32 */
%   else return -0.10159632948783646;  // std dev = 0,000, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then if ( publication(F, B), ta(G, A, H) )
%   | | | then return 0.06931110427358982;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.32172653153374536;  // std dev = 0,055, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3294807116737941;  // std dev = 0,158, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( ta(I, A, J), publication(K, B) )
%   | | then if ( ta(I, L, J), tempadvisedby(L, M) )
%   | | | then return -0.05434804963548513;  // std dev = 1,313, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.29604315719538965;  // std dev = 2,675, 40,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   | | else if ( projectmember(N, B) )
%   | | | then return 0.39333105958379827;  // std dev = 0,972, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.046968524940955686;  // std dev = 3,766, 63,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=31 */
%   else if ( ta(P, A, Q) )
%   | then return -0.10049537121276654;  // std dev = 0,055, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.09161120222648446;  // std dev = 0,058, 152,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B) )
%   | then if ( publication(D, E), tempadvisedby(F, E) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.16331212006066123;  // std dev = 2,603, 65,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=50 */
%   | | | else return 0.28030742209831316;  // std dev = 2,925, 58,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=47 */
%   | | else return -0.13809776627071543;  // std dev = 1,001, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | then return 0.3787042015864463;  // std dev = 0,038, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(K, A), ta(L, A, M) )
%   | | | then return -0.2319544839855364;  // std dev = 0,784, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.036201657198437;  // std dev = 2,087, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else if ( ta(N, A, P) )
%   | then if ( publication(Q, B) )
%   | | then return -0.0845785569401131;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.11179648131643412;  // std dev = 0,098, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.0807760098202419;  // std dev = 0,052, 133,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=1 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( sameperson(B, D) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.510423926923329;  // std dev = 0,058, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16636405825427447;  // std dev = 0,862, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.13830150747162318;  // std dev = 4,166, 119,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=90 */
%   | | | else return -0.10244773474889438;  // std dev = 1,536, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( tempadvisedby(H, B) )
%   | | then return -0.3166612155328876;  // std dev = 0,927, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( ta(I, A, J), publication(K, B) )
%   | | | then return 0.45027895970211274;  // std dev = 0,198, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11725298726608323;  // std dev = 1,450, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else if ( professor(B) )
%   | then return -0.0924586624575397;  // std dev = 0,160, 27,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
%   | else return -0.07875530832724968;  // std dev = 0,011, 163,000 (wgt'ed) examples reached here.  /* #neg=163 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(G, D, H) )
%   | | | then return 0.1970348574763722;  // std dev = 0,001, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.061113668860367586;  // std dev = 1,160, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.15385503456575367;  // std dev = 0,992, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.2294084762010469;  // std dev = 0,106, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( ta(J, A, K), hasposition(B, L) )
%   | | then if ( tempadvisedby(M, B), ta(N, M, P) )
%   | | | then return 0.2064080861680364;  // std dev = 1,280, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.0857945689308001;  // std dev = 2,705, 36,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | else if ( tempadvisedby(Q, B) )
%   | | | then return -0.054245146210610454;  // std dev = 2,754, 37,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | | else return 0.05540481038268756;  // std dev = 2,616, 30,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   else return -0.07315904620124392;  // std dev = 0,012, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, B) )
%   | then if ( publication(D, A) )
%   | | then if ( publication(D, C) )
%   | | | then return 0.01668498206469915;  // std dev = 0,946, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.18244908280850858;  // std dev = 0,133, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( publication(E, A) )
%   | | | then return -0.23792597700974638;  // std dev = 1,599, 21,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.015492739340176429;  // std dev = 3,025, 41,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=27 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( publication(F, H), professor(H) )
%   | | | then return 0.020564027000369755;  // std dev = 1,961, 23,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return 0.5051488159881051;  // std dev = 0,057, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.04872545657709465;  // std dev = 0,776, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.24592025380651153;  // std dev = 2,011, 37,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=31 */
%   else return -0.06825536290739032;  // std dev = 0,011, 178,000 (wgt'ed) examples reached here.  /* #neg=178 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( publication(F, B), publication(F, A) )
%   | | then return 0.1725944731077988;  // std dev = 0,045, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else if ( publication(G, A), publication(H, B) )
%   | | | then return -0.11293176553319235;  // std dev = 2,322, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.1321936593439634;  // std dev = 3,298, 68,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=54 */
%   | else if ( publication(I, A), publication(I, B) )
%   | | then return 0.21193227265230927;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(J, B), ta(K, A, L) )
%   | | | then return 0.11405723178726015;  // std dev = 0,827, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.2626485711481632;  // std dev = 1,508, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   else if ( ta(M, A, N) )
%   | then if ( publication(P, B) )
%   | | then return -0.06377753831176121;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.08593111113178972;  // std dev = 0,098, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.060286148476509;  // std dev = 0,047, 131,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=1 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
0;true,false,true;publication(K, H).;false;false
0;true,false,false;publication(L, A).;false;false
0;true,true,true;publication(E, D), publication(E, B).;false;false
0;true,true,false;ta(F, A, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(D, A).;true;true
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
1;true,false,true;tempadvisedby(E, B), ta(F, A, G).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true,false;publication(I, A), tempadvisedby(J, B).;true;true
2;true,false,true;publication(I, K), ta(L, K, M).;false;false
2;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
2;true,true,true;ta(G, D, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false;publication(D, A), publication(E, B).;true;true
3;true;publication(C, B), publication(C, A).;false;true
3;true,false,false;ta(I, A, J).;false;false
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,false;ta(I, A, J), publication(K, B).;true;true
4;true,false,true;ta(I, L, J), tempadvisedby(L, M).;false;false
4;true,false,false;projectmember(N, B).;false;false
4;true,true,true;publication(F, B), ta(G, A, H).;false;false
4;false;ta(P, A, Q).;false;false
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B), publication(F, E).;true;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, H, J).;false;true
5;true,false,false;publication(K, A), ta(L, A, M).;false;false
5;true,true,true;publication(G, A).;false;false
5;false;ta(N, A, P).;true;false
5;true;publication(D, B).;true;true
5;false,true;publication(Q, B).;false;false
5;true,true;publication(D, E), tempadvisedby(F, E).;true;false
6;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
6;true,false;tempadvisedby(H, B).;false;true
6;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;true,true,true;publication(F, A).;false;false
6;false;professor(B).;false;false
6;true,true,false;publication(G, B).;false;false
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;sameperson(B, D).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false;ta(J, A, K), hasposition(B, L).;true;true
7;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
7;true,false,false;tempadvisedby(Q, B).;false;false
7;true,true,true;ta(G, D, H).;false;false
7;true,true,false;tempadvisedby(I, B).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false;publication(F, A), publication(G, B).;true;true
8;true,false,true;publication(F, H), professor(H).;false;false
8;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
8;true,true,true;publication(D, C).;false;false
8;true,true,false;publication(E, A).;false;false
8;true;tempadvisedby(C, B), publication(D, B).;true;true
8;true,true;publication(D, A).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false;publication(I, A), publication(I, B).;false;true
9;true,false,false;publication(J, B), ta(K, A, L).;false;false
9;false;ta(M, A, N).;true;false
9;true,true,false;publication(G, A), publication(H, B).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true
9;false,true;publication(P, B).;false;false
9;true,true;publication(F, B), publication(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,49e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1123163781936062;  // std dev = 8,43e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 3,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926083;  // std dev = 6,59e-09, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return 0.24343579450197633;  // std dev = 0,473, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839682;  // std dev = 5,87e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.16769551454217455;  // std dev = 0,885, 65,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return -0.0787767547310918;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.07877675473109158;  // std dev = 6,14e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18507340305686154;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( genre(B, D) )
%   | | then return -0.12316775770979925;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 4,94e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.15876860627991815;  // std dev = 2,98e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.11047128793492757;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 5,11e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.13869307308941162;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(F, A), movie(G, B) )
%   | | | then return -0.10007356785164087;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.06419184008202626;  // std dev = 2,69e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067691
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.421 seconds
Total inference time: 2.86 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064578
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.489 seconds
Parameter learned model CLL: -0.064578


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, G)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0], 'true,true,true': [0.0, 0, 56], 'false': [8.69e-08, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,true': [0.0, 0, 56], 'false': [0.0, 105, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,true': [1.49e-08, 0, 56], 'true,false,true,false': [0.0, 0, 0], 'false': [8.43e-08, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A), movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,true': [0.0, 0, 56], 'false': [3.94e-08, 99, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, B)', 'true': 'movie(D, A), movie(D, B)', 'true,true,true': 'movie(E, B)', 'true,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 7, 0], 'true,true,true,true': [0.0, 0, 56], 'true,true,true,false': [0.0, 0, 0], 'false': [6.59e-09, 121, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,true': 'movie(F, A)', 'true,true': 'movie(D, E)', 'false': 'movie(G, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,true': [0.473, 2, 56], 'true,true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [5.87e-08, 106, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A)', 'false': 'director(B)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.885, 9, 56], 'false,false': [6.14e-08, 106, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'genre(B, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,true': [0.0, 0, 56], 'false': [4.94e-08, 109, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(E, A)', 'true': 'movie(C, B)', 'true,true,true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [2.98e-08, 0, 56], 'true,true,false,true': [0.0, 1, 0], 'false': [5.11e-08, 105, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,false': 'movie(F, A), movie(G, B)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'false': 'movie(H, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'true,true,false,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true': [2.69e-08, 103, 0], 'true,true,false,false': [0.0, 0, 0]}]]
[{'': [0.07524858908895435, 7.190015778524824e-17], 'true,false': [-2.7755575615628915e-18, nan], 'true': [-1.2688263138573217e-16, -2.7755575615628915e-18], 'true,true': [-1.2688263138573217e-16, nan]}, {'': [0.03445358635281509, -8.458842092382146e-18], 'true,false': [0.0, nan], 'true': [-1.9032394707859825e-16, 0.0]}, {'': [0.007683847065712494, 6.40128590774865e-17], 'true,false': [0.0, nan], 'true': [1.9032394707859825e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.008971822673578602, 1.570012358055777e-17], 'true,false': [0.0, nan], 'true': [-3.489272363107635e-16, 0.0]}, {'': [0.016879223940251514, 4.404190510909712e-17], 'true,false': [0.0, nan], 'true': [-1.2688263138573217e-16, 0.0], 'true,true,true': [-1.2688263138573217e-16, nan], 'true,true': [-1.2688263138573217e-16, nan]}, {'': [0.0038568379707602193, 3.2468786569226275e-17], 'true': [0.0038568379707602193, nan], 'true,true,true': [0.0038568379707602193, nan], 'true,true': [0.0038568379707602193, nan], 'false': [3.2468786569226275e-17, nan]}, {'': [0.012054028873498285, 3.4240523189373984e-17], 'true': [0.012054028873498285, nan], 'true,true': [0.012054028873498285, nan], 'false': [0.0, 3.561092720495785e-17]}, {'': [0.00458549813733137, 2.2408171139223344e-17], 'true,false': [0.0, nan], 'true': [-8.326672684688674e-17, 0.0]}, {'': [0.0012494449848144203, 2.4847848646372552e-17], 'true,true,false': [0.0, nan], 'true': [0.0012494449848144203, nan], 'true,true,true': [1.586032892321652e-17, nan], 'true,true': [1.586032892321652e-17, 0.0]}, {'': [0.0009826200351711822, 7.00626180588691e-18], 'true,true,false': [0.0, nan], 'true': [0.0009826200351711822, nan], 'true,true': [-4.3615904538845435e-17, 0.0], 'false': [7.00626180588691e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true;movie(E, B), movie(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283914;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1123163781936062;  // std dev = 8,16e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783628;  // std dev = 3,65e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926085;  // std dev = 7,30e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.24920106723689517;  // std dev = 0,337, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   else return -0.0851847513883968;  // std dev = 6,05e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.2107492095705297;  // std dev = 6,66e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10671932118263243;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07877675473109158;  // std dev = 6,23e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17782337056633318;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09696441179525311;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333707;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.14464880829675789;  // std dev = 0,045, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.14522522379058003;  // std dev = 0,043, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.06842697784420271;  // std dev = 9,13e-09, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.13544647532005483;  // std dev = 7,45e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13537899082897817;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.1012557298368746;  // std dev = 4,28e-05, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202626;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068171
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.481 seconds
Total inference time: 2.408 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064577
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.223 seconds
Refined model CLL: -0.064577


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068171
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.614 seconds
Total inference time: 2.408 seconds
AUC ROC: 1.0
Total revision time: 5.614
Best scored revision CLL: -0.064577


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 03:50:10
{'Learning time': 5.614, 'F1': 1.0, 'parameter': {'Learning time': 1.421, 'F1': 1.0, 'Recall': 1.0, 'CLL': -0.067691, 'AUC PR': 1.0, 'Inference time': 2.86, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}, 'Recall': 1.0, 'CLL': -0.068171, 'AUC PR': 1.0, 'Inference time': 2.408, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
0;true,false,true;publication(K, H).;false;false
0;true,false,false;publication(L, A).;false;false
0;true,true,true;publication(E, D), publication(E, B).;false;false
0;true,true,false;ta(F, A, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(D, A).;true;true
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
1;true,false,true;tempadvisedby(E, B), ta(F, A, G).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true,false;publication(I, A), tempadvisedby(J, B).;true;true
2;true,false,true;publication(I, K), ta(L, K, M).;false;false
2;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
2;true,true,true;ta(G, D, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false;publication(D, A), publication(E, B).;true;true
3;true;publication(C, B), publication(C, A).;false;true
3;true,false,false;ta(I, A, J).;false;false
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,false;ta(I, A, J), publication(K, B).;true;true
4;true,false,true;ta(I, L, J), tempadvisedby(L, M).;false;false
4;true,false,false;projectmember(N, B).;false;false
4;true,true,true;publication(F, B), ta(G, A, H).;false;false
4;false;ta(P, A, Q).;false;false
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B), publication(F, E).;true;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, H, J).;false;true
5;true,false,false;publication(K, A), ta(L, A, M).;false;false
5;true,true,true;publication(G, A).;false;false
5;false;ta(N, A, P).;true;false
5;true;publication(D, B).;true;true
5;false,true;publication(Q, B).;false;false
5;true,true;publication(D, E), tempadvisedby(F, E).;true;false
6;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
6;true,false;tempadvisedby(H, B).;false;true
6;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;true,true,true;publication(F, A).;false;false
6;false;professor(B).;false;false
6;true,true,false;publication(G, B).;false;false
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;sameperson(B, D).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false;ta(J, A, K), hasposition(B, L).;true;true
7;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
7;true,false,false;tempadvisedby(Q, B).;false;false
7;true,true,true;ta(G, D, H).;false;false
7;true,true,false;tempadvisedby(I, B).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false;publication(F, A), publication(G, B).;true;true
8;true,false,true;publication(F, H), professor(H).;false;false
8;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
8;true,true,true;publication(D, C).;false;false
8;true,true,false;publication(E, A).;false;false
8;true;tempadvisedby(C, B), publication(D, B).;true;true
8;true,true;publication(D, A).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false;publication(I, A), publication(I, B).;false;true
9;true,false,false;publication(J, B), ta(K, A, L).;false;false
9;false;ta(M, A, N).;true;false
9;true,true,false;publication(G, A), publication(H, B).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true
9;false,true;publication(P, B).;false;false
9;true,true;publication(F, B), publication(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048785;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839105;  // std dev = 8,16e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1,29e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 8,43e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 4,93e-09, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return 0.21391684936247313;  // std dev = 0,902, 66,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.0851847513883968;  // std dev = 6,50e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.20600873169679648;  // std dev = 0,445, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return -0.0787767547310918;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.07877675473109158;  // std dev = 6,14e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1837507118438088;  // std dev = 5,89e-09, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( genre(B, D) )
%   | | then return -0.12412066853217961;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.1577732358259573;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.11124419480814876;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 5,48e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.13792125114093512;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(F, A), movie(G, B) )
%   | | | then return -0.10071194666161538;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067594
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.474 seconds
Total inference time: 2.271 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065068
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.657 seconds
Parameter learned model CLL: -0.065068


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, G)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true,true': [0.0, 0, 58], 'false': [0.0, 127, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true': [0.0, 0, 58], 'false': [8.16e-08, 121, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,true': [1.29e-08, 0, 58], 'true,false,true,false': [0.0, 0, 0], 'false': [8.43e-08, 119, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A), movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0], 'true,true': [0.0, 0, 58], 'false': [0.0, 113, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, B)', 'true': 'movie(D, A), movie(D, B)', 'true,true,true': 'movie(E, B)', 'true,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,true,true,true': [0.0, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'false': [4.93e-09, 101, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,true': 'movie(F, A)', 'true,true': 'movie(D, E)', 'false': 'movie(G, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,true': [0.902, 8, 58], 'true,true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [6.5e-08, 123, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A)', 'false': 'director(B)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.445, 2, 58], 'false,false': [6.14e-08, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'genre(B, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 6, 0], 'true,true': [5.89e-09, 0, 58], 'false': [0.0, 109, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(E, A)', 'true': 'movie(C, B)', 'true,true,true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 58], 'true,true,false,true': [0.0, 5, 0], 'false': [5.48e-08, 116, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,false': 'movie(F, A), movie(G, B)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'false': 'movie(H, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'true,true,false,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'false,true': [0.0, 116, 0], 'true,true,false,false': [0.0, 0, 0]}]]
[{'': [0.06035379812695064, -2.4477358023231797e-17], 'true,false': [0.0, nan], 'true': [-3.675221047035001e-16, 0.0], 'true,true': [-3.675221047035001e-16, nan]}, {'': [0.04308576245887642, 5.50523813863714e-17], 'true,false': [0.0, nan], 'true': [-1.2250736823450003e-16, 0.0]}, {'': [0.03257296522956836, 5.970947359328573e-17], 'true,false': [0.0, nan], 'true': [2.4501473646900006e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.01968953885342776, -1.1789979022568034e-17], 'true,false': [0.0, nan], 'true': [-3.3689526264487507e-16, 0.0]}, {'': [0.007991661590093457, 2.41830757839143e-17], 'true,false': [1.1564823173178713e-18, nan], 'true': [-1.5313421029312505e-16, 1.1564823173178713e-18], 'true,true,true': [-1.5313421029312505e-16, nan], 'true,true': [-1.5313421029312505e-16, nan]}, {'': [0.012339554147825189, 3.429957311850077e-17], 'true': [0.012339554147825189, nan], 'true,true,true': [0.012339554147825189, nan], 'true,true': [0.012339554147825189, nan], 'false': [3.429957311850077e-17, nan]}, {'': [0.0033012078350297108, 3.2468786569226275e-17], 'true': [0.0033012078350297108, nan], 'true,true': [0.0033012078350297108, nan], 'false': [0.0, 3.595007889262412e-17]}, {'': [0.008053004351905962, -3.0556597008031833e-18], 'true,false': [-2.3129646346357427e-18, nan], 'true': [3.828355257328126e-17, -2.3129646346357427e-18]}, {'': [0.005287833110517264, 2.584139798696485e-17], 'true,true,false': [0.0, nan], 'true': [0.005287833110517264, nan], 'true,true,true': [-3.062684205862501e-17, nan], 'true,true': [-3.062684205862501e-17, 0.0]}, {'': [0.0026628781881924083, -1.7706143065142584e-17], 'true,true,false': [-1.1564823173178713e-18, nan], 'true': [0.0026628781881924083, nan], 'true,true': [-7.656710514656252e-18, -1.1564823173178713e-18], 'false': [-1.7706143065142584e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true;movie(E, B), movie(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048763;  // std dev = 8,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839133;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360621;  // std dev = 7,60e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783633;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926082;  // std dev = 7,45e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08518475138839682;  // std dev = 5,77e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( director(B) )
%   | then return -0.0787767547310918;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.07877675473109157;  // std dev = 6,66e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(B) )
%   | then return -0.07324622576333707;  // std dev = 1,39e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333709;  // std dev = 9,13e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07324622576333707;  // std dev = 3,23e-09, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13263741846295504;  // std dev = 0,064, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.14168531629677716;  // std dev = 0,048, 40,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A) )
%   | then return -0.06842697784420275;  // std dev = 1,05e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( female(B) )
%   | | then return -0.0684269778442028;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420274;  // std dev = 1,39e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.06842697784420276;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.13635758325494196;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.13529556636300058;  // std dev = 5,27e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.07784453213000311;  // std dev = 0,000293, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202626;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066712
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.682 seconds
Total inference time: 2.271 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064044
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.469 seconds
Refined model CLL: -0.064044


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066712
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.282000000000001 seconds
Total inference time: 2.271 seconds
AUC ROC: 1.0
Total revision time: 6.282000000000001
Best scored revision CLL: -0.064044


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 03:50:22
{'Learning time': 6.282000000000001, 'F1': 1.0, 'parameter': {'Learning time': 1.474, 'F1': 1.0, 'Recall': 1.0, 'CLL': -0.067594, 'AUC PR': 1.0, 'Inference time': 2.271, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}, 'Recall': 1.0, 'CLL': -0.066712, 'AUC PR': 1.0, 'Inference time': 2.271, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
0;true,false,true;publication(K, H).;false;false
0;true,false,false;publication(L, A).;false;false
0;true,true,true;publication(E, D), publication(E, B).;false;false
0;true,true,false;ta(F, A, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(D, A).;true;true
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
1;true,false,true;tempadvisedby(E, B), ta(F, A, G).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true,false;publication(I, A), tempadvisedby(J, B).;true;true
2;true,false,true;publication(I, K), ta(L, K, M).;false;false
2;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
2;true,true,true;ta(G, D, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false;publication(D, A), publication(E, B).;true;true
3;true;publication(C, B), publication(C, A).;false;true
3;true,false,false;ta(I, A, J).;false;false
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,false;ta(I, A, J), publication(K, B).;true;true
4;true,false,true;ta(I, L, J), tempadvisedby(L, M).;false;false
4;true,false,false;projectmember(N, B).;false;false
4;true,true,true;publication(F, B), ta(G, A, H).;false;false
4;false;ta(P, A, Q).;false;false
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B), publication(F, E).;true;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, H, J).;false;true
5;true,false,false;publication(K, A), ta(L, A, M).;false;false
5;true,true,true;publication(G, A).;false;false
5;false;ta(N, A, P).;true;false
5;true;publication(D, B).;true;true
5;false,true;publication(Q, B).;false;false
5;true,true;publication(D, E), tempadvisedby(F, E).;true;false
6;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
6;true,false;tempadvisedby(H, B).;false;true
6;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;true,true,true;publication(F, A).;false;false
6;false;professor(B).;false;false
6;true,true,false;publication(G, B).;false;false
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;sameperson(B, D).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false;ta(J, A, K), hasposition(B, L).;true;true
7;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
7;true,false,false;tempadvisedby(Q, B).;false;false
7;true,true,true;ta(G, D, H).;false;false
7;true,true,false;tempadvisedby(I, B).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false;publication(F, A), publication(G, B).;true;true
8;true,false,true;publication(F, H), professor(H).;false;false
8;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
8;true,true,true;publication(D, C).;false;false
8;true,true,false;publication(E, A).;false;false
8;true;tempadvisedby(C, B), publication(D, B).;true;true
8;true,true;publication(D, A).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false;publication(I, A), publication(I, B).;false;true
9;true,false,false;publication(J, B), ta(K, A, L).;false;false
9;false;ta(M, A, N).;true;false
9;true,true,false;publication(G, A), publication(H, B).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true
9;false,true;publication(P, B).;false;false
9;true,true;publication(F, B), publication(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048816;  // std dev = 0,000, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then return -0.1254446385283916;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839177;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 4,41e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360628;  // std dev = 4,47e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360643;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.10159632948783617;  // std dev = 5,74e-09, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0,000, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.3207118471601498;  // std dev = 1,69e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.03980158155709069;  // std dev = 0,138, 383,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=49 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return 0.1841775321733661;  // std dev = 1,766, 163,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.03238878092234017;  // std dev = 2,725, 360,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.14115683605511273;  // std dev = 1,831, 172,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.1412070041731892;  // std dev = 2,014, 91,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=49 */
%   | else return -0.08679599870030462;  // std dev = 9,31e-08, 246,000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.22795745236487452;  // std dev = 0,048, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( genre(B, D) )
%   | | then return -0.11419742809376023;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.09866099417229802;  // std dev = 2,95e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.08181274186712052;  // std dev = 0,092, 302,000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.19077063436796896;  // std dev = 0,567, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.09823269954986034;  // std dev = 0,053, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07667336323781428;  // std dev = 0,108, 332,000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.1400016008823894;  // std dev = 1,26e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( movie(F, A), movie(G, B) )
%   | | | then return -0.09440523097305228;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.03047203947224377;  // std dev = 1,928, 353,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07191
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.231 seconds
Total inference time: 2.278 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078727
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.732 seconds
Parameter learned model CLL: -0.078727


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, G)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [5.77e-08, 55, 0], 'true,true,true': [1.09e-06, 0, 178], 'false': [0.0, 285, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 62, 0], 'true,true': [0.0, 0, 178], 'false': [0.0, 298, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [4.47e-08, 60, 0], 'true,true': [4.41e-08, 0, 178], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 313, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A), movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [5.74e-09, 67, 0], 'true,true': [3.77e-07, 0, 178], 'false': [0.0, 291, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, B)', 'true': 'movie(D, A), movie(D, B)', 'true,true,true': 'movie(E, B)', 'true,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 30, 0], 'true,true,true,true': [1.69e-07, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'false': [0.138, 334, 49], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,true': 'movie(F, A)', 'true,true': 'movie(D, E)', 'false': 'movie(G, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,true': [1.766, 34, 129], 'true,true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [2.725, 311, 49]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A)', 'false': 'director(B)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [2.014, 42, 49], 'true,false': [0.0, 0, 0], 'true,true,true': [1.831, 43, 129], 'false,false': [9.31e-08, 246, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'genre(B, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,false': [2.95e-09, 28, 0], 'true,false,true': [0.0, 31, 0], 'true,true': [0.048, 0, 178], 'false': [0.092, 302, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(E, A)', 'true': 'movie(C, B)', 'true,true,true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.567, 0, 178], 'true,true,false,true': [0.053, 71, 0], 'false': [0.108, 332, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,false': 'movie(F, A), movie(G, B)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'false': 'movie(H, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true': [1.26e-07, 0, 129], 'true,true,false,true': [0.0, 42, 0], 'false,false': [0.0, 0, 0], 'false,true': [1.928, 304, 49], 'true,true,false,false': [0.0, 0, 0]}]]
[{'': [0.18033119048058202, -9.349246523159212e-17], 'true,false': [6.055761952500853e-17, nan], 'true': [6.706246045376226e-15, 6.055761952500853e-17], 'true,true': [6.706246045376226e-15, nan]}, {'': [0.13677867277023462, -5.066789642584607e-17], 'true,false': [-4.118569284899774e-17, nan], 'true': [-3.193450497798203e-15, -4.118569284899774e-17]}, {'': [0.08405387412240725, -1.2769338302397966e-17], 'true,false': [3.3306690738754695e-17, nan], 'true': [1.9559884299013994e-15, 3.3306690738754695e-17], 'true,false,true': [3.3306690738754695e-17, nan]}, {'': [0.05354035937971738, -5.646495108059215e-17], 'true,false': [3.314098580970616e-17, nan], 'true': [7.983626244495507e-16, 3.314098580970616e-17]}, {'': [0.02616159531145301, 0.0190674451556516], 'true,false': [-1.1102230246251566e-17, nan], 'true': [2.2032332891786052e-16, -1.1102230246251566e-17], 'true,true,true': [2.2032332891786052e-16, nan], 'true,true': [2.2032332891786052e-16, nan]}, {'': [0.01912329731310585, 0.02062773465205845], 'true': [0.01912329731310585, nan], 'true,true,true': [0.01912329731310585, nan], 'true,true': [0.01912329731310585, nan], 'false': [0.020627734652058423, nan]}, {'': [0.019494574611185804, 0.02227924781859875], 'true': [0.019494574611185804, nan], 'true,true': [0.019494574611185804, nan], 'false': [0.044558887987997585, 3.5202193463724476e-17]}, {'': [0.022702105436598757, 2.787024492711145e-05], 'true,false': [-1.2534776084477573e-17, 5.9476233462061954e-18], 'true': [0.002305547240201178, 6.018917442357779e-05]}, {'': [0.018326652181313057, 3.503157171662648e-05], 'true,true,false': [3.9317708615561746e-05, nan], 'true': [0.018326652181313057, nan], 'true,true,true': [0.0018052640336529105, nan], 'true,true': [0.0018052640336529105, 3.9317708615561746e-05]}, {'': [0.010180926690656988, 0.010524948682291597], 'true,true,false': [-1.850371707708594e-17, nan], 'true': [0.010180926690656988, nan], 'true,true': [1.2393187251629654e-16, -1.850371707708594e-17], 'false': [0.010524948682291594, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true,false;genre(B, D).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true;movie(E, B), movie(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.1418510649004881;  // std dev = 0,000, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.1254446385283918;  // std dev = 0,000, 288,000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360628;  // std dev = 4,47e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.11231637819360639;  // std dev = 0,000, 326,000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.10159632948783659;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3207118471601498;  // std dev = 1,69e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( female(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601498;  // std dev = 6,66e-08, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014994;  // std dev = 1,49e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.09269127618926072;  // std dev = 8,94e-08, 275,000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08518475138839679;  // std dev = 2,24e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( director(B), female(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.07876292131371966;  // std dev = 0,892, 371,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253534;  // std dev = 2,09e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.2184249238508228;  // std dev = 0,149, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.0792440556722392;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.0791452035500735;  // std dev = 0,001, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.07924405567223908;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17886191916528751;  // std dev = 0,137, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( genre(B, D) )
%   | | then return -0.07324622576333704;  // std dev = 9,13e-09, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.07350525639585495;  // std dev = 0,000932, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return -0.07365183717790204;  // std dev = 2,70e-05, 300,000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.08364723095463322;  // std dev = 0,102, 129,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=89 */
%   | | else return 0.10095011403948186;  // std dev = 0,097, 118,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06878202563546412;  // std dev = 2,85e-05, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.14201507399696653;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return 0.13991980392440279;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | else if ( female(A) )
%   | | then return -0.0739554000412446;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07514917576444781;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.14096227561300206;  // std dev = 3,65e-08, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.07391243797089507;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then return -0.0645045494535751;  // std dev = 0,000, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.06920783334178544;  // std dev = 0,446, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.06809928549147273;  // std dev = 0,033, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064408
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.899 seconds
Total inference time: 2.739 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067898
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.504 seconds
Refined model CLL: -0.067898


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064408
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.366 seconds
Total inference time: 2.739 seconds
AUC ROC: 1.0
Total revision time: 8.366
Best scored revision CLL: -0.067898


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 03:50:36
{'Learning time': 8.366, 'F1': 1.0, 'parameter': {'Learning time': 2.231, 'F1': 1.0, 'Recall': 1.0, 'CLL': -0.07191, 'AUC PR': 1.0, 'Inference time': 2.278, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}, 'Recall': 1.0, 'CLL': -0.064408, 'AUC PR': 1.0, 'Inference time': 2.739, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
0;true,false,true;publication(K, H).;false;false
0;true,false,false;publication(L, A).;false;false
0;true,true,true;publication(E, D), publication(E, B).;false;false
0;true,true,false;ta(F, A, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(D, A).;true;true
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
1;true,false,true;tempadvisedby(E, B), ta(F, A, G).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true,false;publication(I, A), tempadvisedby(J, B).;true;true
2;true,false,true;publication(I, K), ta(L, K, M).;false;false
2;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
2;true,true,true;ta(G, D, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false;publication(D, A), publication(E, B).;true;true
3;true;publication(C, B), publication(C, A).;false;true
3;true,false,false;ta(I, A, J).;false;false
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,false;ta(I, A, J), publication(K, B).;true;true
4;true,false,true;ta(I, L, J), tempadvisedby(L, M).;false;false
4;true,false,false;projectmember(N, B).;false;false
4;true,true,true;publication(F, B), ta(G, A, H).;false;false
4;false;ta(P, A, Q).;false;false
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B), publication(F, E).;true;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, H, J).;false;true
5;true,false,false;publication(K, A), ta(L, A, M).;false;false
5;true,true,true;publication(G, A).;false;false
5;false;ta(N, A, P).;true;false
5;true;publication(D, B).;true;true
5;false,true;publication(Q, B).;false;false
5;true,true;publication(D, E), tempadvisedby(F, E).;true;false
6;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
6;true,false;tempadvisedby(H, B).;false;true
6;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;true,true,true;publication(F, A).;false;false
6;false;professor(B).;false;false
6;true,true,false;publication(G, B).;false;false
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;sameperson(B, D).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false;ta(J, A, K), hasposition(B, L).;true;true
7;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
7;true,false,false;tempadvisedby(Q, B).;false;false
7;true,true,true;ta(G, D, H).;false;false
7;true,true,false;tempadvisedby(I, B).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false;publication(F, A), publication(G, B).;true;true
8;true,false,true;publication(F, H), professor(H).;false;false
8;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
8;true,true,true;publication(D, C).;false;false
8;true,true,false;publication(E, A).;false;false
8;true;tempadvisedby(C, B), publication(D, B).;true;true
8;true,true;publication(D, A).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false;publication(I, A), publication(I, B).;false;true
9;true,false,false;publication(J, B), ta(K, A, L).;false;false
9;false;ta(M, A, N).;true;false
9;true,true,false;publication(G, A), publication(H, B).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true
9;false,true;publication(P, B).;false;false
9;true,true;publication(F, B), publication(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 6,66e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783621;  // std dev = 5,05e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 1,32e-09, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return 0.24068896623085617;  // std dev = 0,471, 47,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839679;  // std dev = 1,67e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.18036063528771953;  // std dev = 0,675, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07877675473109158;  // std dev = 5,77e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18358218399982024;  // std dev = 7,45e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( genre(B, D) )
%   | | then return -0.1242429177478173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.15764631067638543;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.11134327743191937;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420268;  // std dev = 2,79e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.1378227648668817;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(F, A), movie(G, B) )
%   | | | then return -0.1007937317852678;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067153
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.246 seconds
Total inference time: 2.791 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065958
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.173 seconds
Parameter learned model CLL: -0.065958


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, G)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 6, 0], 'true,true,true': [2.23e-07, 0, 45], 'false': [8.69e-08, 102, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 7, 0], 'true,true': [0.0, 0, 45], 'false': [0.0, 77, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false': [6.66e-08, 89, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A), movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0], 'true,true': [0.0, 0, 45], 'false': [5.05e-08, 90, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, B)', 'true': 'movie(D, A), movie(D, B)', 'true,true,true': 'movie(E, B)', 'true,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 7, 0], 'true,true,true,true': [2.98e-08, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'false': [1.32e-09, 84, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,true': 'movie(F, A)', 'true,true': 'movie(D, E)', 'false': 'movie(G, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,true': [0.471, 2, 45], 'true,true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [1.67e-08, 68, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A)', 'false': 'director(B)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.675, 5, 45], 'false,false': [5.77e-08, 101, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'genre(B, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,true': [7.45e-09, 0, 45], 'false': [0.0, 78, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(E, A)', 'true': 'movie(C, B)', 'true,true,true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 45], 'true,true,false,true': [0.0, 4, 0], 'false': [2.79e-08, 66, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,false': 'movie(F, A), movie(G, B)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'false': 'movie(H, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'true,true,false,true': [0.0, 6, 0], 'false,false': [0.0, 0, 0], 'false,true': [0.0, 90, 0], 'true,true,false,false': [0.0, 0, 0]}]]
[{'': [0.10380622837370317, 7.401486830834377e-17], 'true,false': [-6.938893903907228e-18, nan], 'true': [1.105288700071267e-15, -6.938893903907228e-18], 'true,true': [1.105288700071267e-15, nan]}, {'': [0.0831635545216455, -2.5953265510717945e-17], 'true,false': [-1.982541115402065e-18, nan], 'true': [-9.473903143468002e-16, -1.982541115402065e-18]}, {'': [0.04627685204491952, 4.989766402809692e-17], 'true,false': [0.0, nan], 'true': [-3.947459643111668e-17, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.024252759220113572, 2.837236618486511e-17], 'true,false': [0.0, nan], 'true': [-4.144832625267251e-16, 0.0]}, {'': [0.019909088333742615, 0.0], 'true,false': [0.0, nan], 'true': [1.973729821555834e-17, 0.0], 'true,true,true': [1.973729821555834e-17, nan], 'true,true': [1.973729821555834e-17, nan]}, {'': [0.00471971910377743, 4.081702296416017e-18], 'true': [0.00471971910377743, nan], 'true,true,true': [0.00471971910377743, nan], 'true,true': [0.00471971910377743, nan], 'false': [4.081702296416017e-18, nan]}, {'': [0.009105689363565279, 2.802504722354764e-17], 'true': [0.009105689363565279, nan], 'true,true': [0.009105689363565279, nan], 'false': [0.0, 3.29769215235195e-17]}, {'': [0.0038606004499479596, -6.4051328343759035e-18], 'true,false': [0.0, nan], 'true': [5.921189464667501e-17, 0.0]}, {'': [0.0054243947238323525, 1.1775092685418327e-17], 'true,true,false': [0.0, nan], 'true': [0.0054243947238323525, nan], 'true,true,true': [-2.960594732333751e-17, nan], 'true,true': [-2.960594732333751e-17, 0.0]}, {'': [0.0059105016409562155, -1.2335811384723961e-17], 'true,true,false': [-2.3129646346357427e-18, nan], 'true': [0.0059105016409562155, nan], 'true,true': [-3.700743415417188e-17, -2.3129646346357427e-18], 'false': [-1.2335811384723961e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true;movie(E, B), movie(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 8,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839144;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360625;  // std dev = 5,58e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783616;  // std dev = 5,58e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926107;  // std dev = 1,05e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839682;  // std dev = 4,83e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B) )
%   | then return -0.0787767547310918;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.07877675473109166;  // std dev = 3,94e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07324622576333707;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13431295509884797;  // std dev = 0,061, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.15274385809367083;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then return -0.06842697784420276;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420274;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.06842697784420271;  // std dev = 1,39e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.1361603852337414;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13400703000801115;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.07882908541119708;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202625;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066306
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.4 seconds
Total inference time: 2.828 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064659
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.046 seconds
Refined model CLL: -0.064659


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066306
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.865 seconds
Total inference time: 2.828 seconds
AUC ROC: 1.0
Total revision time: 4.865
Best scored revision CLL: -0.064659


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 03:50:47
{'Learning time': 4.865, 'F1': 1.0, 'parameter': {'Learning time': 1.246, 'F1': 1.0, 'Recall': 1.0, 'CLL': -0.067153, 'AUC PR': 1.0, 'Inference time': 2.791, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}, 'Recall': 1.0, 'CLL': -0.066306, 'AUC PR': 1.0, 'Inference time': 2.828, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
0;true,false,true;publication(K, H).;false;false
0;true,false,false;publication(L, A).;false;false
0;true,true,true;publication(E, D), publication(E, B).;false;false
0;true,true,false;ta(F, A, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,true;tempadvisedby(D, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(D, A).;true;true
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,false;tempadvisedby(H, B), publication(I, H).;false;false
1;true,false,true;tempadvisedby(E, B), ta(F, A, G).;false;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true,false;publication(I, A), tempadvisedby(J, B).;true;true
2;true,false,true;publication(I, K), ta(L, K, M).;false;false
2;true,false,false;ta(N, A, P), tempadvisedby(Q, B).;false;false
2;true,true,true;ta(G, D, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false;publication(D, A), publication(E, B).;true;true
3;true;publication(C, B), publication(C, A).;false;true
3;true,false,false;ta(I, A, J).;false;false
3;true,false,true;tempadvisedby(F, B), ta(G, F, H).;false;false
4;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
4;true,false;ta(I, A, J), publication(K, B).;true;true
4;true,false,true;ta(I, L, J), tempadvisedby(L, M).;false;false
4;true,false,false;projectmember(N, B).;false;false
4;true,true,true;publication(F, B), ta(G, A, H).;false;false
4;false;ta(P, A, Q).;false;false
4;true;publication(D, A), publication(D, B).;true;true
4;true,true;tempadvisedby(E, B), publication(F, E).;true;false
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,false;tempadvisedby(H, B), ta(I, H, J).;false;true
5;true,false,false;publication(K, A), ta(L, A, M).;false;false
5;true,true,true;publication(G, A).;false;false
5;false;ta(N, A, P).;true;false
5;true;publication(D, B).;true;true
5;false,true;publication(Q, B).;false;false
5;true,true;publication(D, E), tempadvisedby(F, E).;true;false
6;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
6;true,false;tempadvisedby(H, B).;false;true
6;true,false,false;ta(I, A, J), publication(K, B).;false;false
6;true,true,true;publication(F, A).;false;false
6;false;professor(B).;false;false
6;true,true,false;publication(G, B).;false;false
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;true,true;sameperson(B, D).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false;ta(J, A, K), hasposition(B, L).;true;true
7;true,false,true;tempadvisedby(M, B), ta(N, M, P).;false;false
7;true,false,false;tempadvisedby(Q, B).;false;false
7;true,true,true;ta(G, D, H).;false;false
7;true,true,false;tempadvisedby(I, B).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B), ta(E, A, F).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false;publication(F, A), publication(G, B).;true;true
8;true,false,true;publication(F, H), professor(H).;false;false
8;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
8;true,true,true;publication(D, C).;false;false
8;true,true,false;publication(E, A).;false;false
8;true;tempadvisedby(C, B), publication(D, B).;true;true
8;true,true;publication(D, A).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false;publication(I, A), publication(I, B).;false;true
9;true,false,false;publication(J, B), ta(K, A, L).;false;false
9;false;ta(M, A, N).;true;false
9;true,true,false;publication(G, A), publication(H, B).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true
9;false,true;publication(P, B).;false;false
9;true,true;publication(F, B), publication(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, G) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360625;  // std dev = 5,87e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.3207118471601495;  // std dev = 2,98e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then return -0.09269127618926094;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.052555050621357104;  // std dev = 0,122, 103,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return 0.23677456722041465;  // std dev = 0,468, 37,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.04454913467004477;  // std dev = 1,259, 96,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.2039801419686544;  // std dev = 0,314, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.27104656309712366;  // std dev = 0,551, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return -0.08484148975388868;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20362627770691896;  // std dev = 0,043, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( genre(B, D) )
%   | | then return -0.1264028870570624;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07848192225332509;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(C, D) )
%   | | | then return 0.17290114706030787;  // std dev = 0,257, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(E, A) )
%   | | | then return -0.11152498282169847;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07299039915009152;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B), movie(E, A) )
%   | | then return 0.13141600980672138;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( movie(F, A), movie(G, B) )
%   | | | then return -0.1023783997983575;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.04028128332179688;  // std dev = 0,848, 100,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073156
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.326 seconds
Total inference time: 2.754 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071071
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.232 seconds
Parameter learned model CLL: -0.071071


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, G)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E), movie(D, B)'}, {'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true,true': [2.23e-07, 0, 45], 'false': [8.16e-08, 90, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,true': [0.0, 0, 45], 'false': [0.0, 93, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false': [5.87e-08, 79, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A), movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 45], 'false': [0.0, 111, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, B)', 'true': 'movie(D, A), movie(D, B)', 'true,true,true': 'movie(E, B)', 'true,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [1.32e-09, 3, 0], 'true,true,true,true': [2.98e-08, 0, 35], 'true,true,true,false': [0.0, 0, 0], 'false': [0.122, 93, 10], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'true,true,true': 'movie(F, A)', 'true,true': 'movie(D, E)', 'false': 'movie(G, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,true': [0.468, 2, 35], 'true,true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [1.259, 86, 10]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A)', 'false': 'director(B)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [0.551, 2, 10], 'true,false': [0.0, 0, 0], 'true,true,true': [0.314, 1, 35], 'false,false': [0.0, 76, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'genre(B, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,true': [0.043, 0, 45], 'false': [0.0, 87, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(E, A)', 'true': 'movie(C, B)', 'true,true,true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.257, 0, 45], 'true,true,false,true': [0.004, 3, 0], 'false': [0.0, 79, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true,false': 'movie(F, A), movie(G, B)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B), movie(E, A)', 'false': 'movie(H, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 35], 'true,true,false,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true': [0.848, 90, 10], 'true,true,false,false': [0.0, 0, 0]}]]
[{'': [0.07496876301541104, 7.401486830834377e-17], 'true,false': [0.0, nan], 'true': [1.105288700071267e-15, 0.0], 'true,true': [1.105288700071267e-15, nan]}, {'': [0.02908546225525768, -1.4325458382260084e-17], 'true,false': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0]}, {'': [0.026121113751917464, 4.356571362453146e-17], 'true,false': [2.3129646346357427e-18, nan], 'true': [-3.947459643111668e-17, 2.3129646346357427e-18], 'true,false,true': [2.3129646346357427e-18, nan]}, {'': [0.005730803218362994, -8.001607384685813e-18], 'true,false': [0.0, nan], 'true': [-4.144832625267251e-16, 0.0]}, {'': [0.012427094841745171, 0.014981524406390214], 'true,false': [2.3129646346357427e-18, nan], 'true': [2.5376526277146434e-17, 2.3129646346357427e-18], 'true,true,true': [2.5376526277146434e-17, nan], 'true,true': [2.5376526277146434e-17, nan]}, {'': [0.005923303019374292, 0.01651055457567835], 'true': [0.005923303019374292, nan], 'true,true,true': [0.005923303019374292, nan], 'true,true': [0.005923303019374292, nan], 'false': [0.01651055457567835, nan]}, {'': [0.00273722893114413, 0.01837039812516188], 'true': [0.00273722893114413, nan], 'true,true': [0.00273722893114413, nan], 'false': [0.025331261232416958, -2.921639538487254e-17]}, {'': [0.008114614734537179, -2.5522368382187506e-18], 'true,false': [2.3129646346357427e-18, nan], 'true': [0.0018481359504972823, 2.3129646346357427e-18]}, {'': [0.006114240811973847, -9.134746405143692e-18], 'true,true,false': [4.905896883356427e-06, nan], 'true': [0.006114240811973847, nan], 'true,true,true': [0.0014653908463347193, nan], 'true,true': [0.0014653908463347193, 4.905896883356427e-06]}, {'': [0.0014761527073229525, 0.007193236545508996], 'true,true,false': [0.0, nan], 'true': [0.0014761527073229525, nan], 'true,true': [-9.516197353929913e-18, 0.0], 'false': [0.007193236545508996, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;true;movie(D, A), movie(D, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
6;false;director(B).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;true;movie(E, B), movie(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839147;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360624;  // std dev = 6,50e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1015963294878362;  // std dev = 5,37e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3207118471601495;  // std dev = 2,98e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2380312224902675;  // std dev = 0,370, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 4,08e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( female(A) )
%   | | then return 0.2010885910590162;  // std dev = 0,132, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.27120181822575506;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( female(A) )
%   | then return 0.1937280228345563;  // std dev = 0,066, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.19457169087655524;  // std dev = 0,064, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.2188633044605095;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.0989140142031234;  // std dev = 0,423, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.07877675473109164;  // std dev = 4,47e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18219217536615165;  // std dev = 0,048, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13063466832608817;  // std dev = 0,074, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return 0.15515886075667393;  // std dev = 0,008, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.133337639863662;  // std dev = 0,061, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1379809008924803;  // std dev = 0,067, 24,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06895042327963807;  // std dev = 0,043, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.1359855615502301;  // std dev = 0,006, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.07382753332883117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06416040323373907;  // std dev = 1,83e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( female(A) )
%   | | then return 0.13841501793480016;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.05183553469761846;  // std dev = 0,365, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069272
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.582 seconds
Total inference time: 2.706 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06631
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.101 seconds
Refined model CLL: -0.06631


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069272
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.241 seconds
Total inference time: 2.706 seconds
AUC ROC: 1.0
Total revision time: 5.241
Best scored revision CLL: -0.06631


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 03:50:58
{'Learning time': 5.241, 'F1': 1.0, 'parameter': {'Learning time': 1.326, 'F1': 1.0, 'Recall': 1.0, 'CLL': -0.073156, 'AUC PR': 1.0, 'Inference time': 2.754, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}, 'Recall': 1.0, 'CLL': -0.069272, 'AUC PR': 1.0, 'Inference time': 2.706, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


