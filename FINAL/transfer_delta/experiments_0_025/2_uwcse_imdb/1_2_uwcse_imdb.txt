Starting experiment #1 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.4652917922423695;  // std dev = 2,584, 28,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.6658412427918196;  // std dev = 2,010, 26,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | | else return 0.5664822684328452;  // std dev = 3,149, 48,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=34 */
%   else return -0.14185106490048807;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #neg=178 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.636140078877621;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.2194734122109545;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return 0.6083623010998434;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.7194734122109544;  // std dev = 4,21e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( publication(I, A) )
%   | | then if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | | then return -0.07301451381199393;  // std dev = 0,928, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.366008968301924;  // std dev = 2,602, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | | else if ( projectmember(M, B) )
%   | | | then return 0.7601711862439247;  // std dev = 0,016, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.525796601216747;  // std dev = 3,484, 66,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=50 */
%   else return -0.12544463852839147;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.5706464342661015;  // std dev = 0,061, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.3397970440333062;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(G, B), publication(H, A) )
%   | | then if ( ta(I, A, J) )
%   | | | then return 0.2666541648980313;  // std dev = 1,502, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.05012477377651161;  // std dev = 1,497, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( ta(K, A, L), publication(M, B) )
%   | | | then return 0.5521434628070896;  // std dev = 1,856, 34,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=30 */
%   | | | else return 0.3498040907897842;  // std dev = 3,251, 50,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=34 */
%   else return -0.11231637819360633;  // std dev = 7,88e-08, 178,000 (wgt'ed) examples reached here.  /* #neg=178 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then return 0.434285470870734;  // std dev = 0,242, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( hasposition(E, C), projectmember(F, E) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return 0.1842523762206577;  // std dev = 3,914, 68,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=40 */
%   | | | else return 0.36597030596691976;  // std dev = 2,258, 31,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=24 */
%   | | else if ( ta(H, A, I), publication(J, B) )
%   | | | then return 0.3953966045030606;  // std dev = 0,715, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.17258300310250457;  // std dev = 1,532, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   else if ( professor(B), student(A) )
%   | then return -0.16146388527912692;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.10159632948783646;  // std dev = 0,000, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return 0.18964473281029673;  // std dev = 2,384, 61,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=46 */
%   | | | else return 0.5897945478960961;  // std dev = 0,164, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(C, F), tempadvisedby(F, B) )
%   | | | then return 0.12330504856407824;  // std dev = 1,060, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.32900576604159504;  // std dev = 2,586, 52,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=44 */
%   | else if ( ta(G, A, H) )
%   | | then if ( tempadvisedby(I, B), publication(J, A) )
%   | | | then return 0.17455768973175612;  // std dev = 1,005, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.2509915784826329;  // std dev = 0,887, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( projectmember(K, B) )
%   | | | then return 0.38073863017938997;  // std dev = 1,013, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.11654978721824552;  // std dev = 1,671, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else return -0.09269127618926067;  // std dev = 8,16e-08, 195,000 (wgt'ed) examples reached here.  /* #neg=195 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | | then return 0.2873123797296316;  // std dev = 0,040, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.18531298439708518;  // std dev = 1,584, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return -0.23720208839822332;  // std dev = 0,113, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.09019075504647928;  // std dev = 2,607, 33,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | else if ( ta(I, A, J), publication(K, B) )
%   | | then if ( ta(I, L, M), publication(N, L) )
%   | | | then return 0.11236511993260463;  // std dev = 1,872, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.308407818365077;  // std dev = 0,978, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( tempadvisedby(P, B) )
%   | | | then return 0.30146470040179696;  // std dev = 1,573, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return 0.2442788399484774;  // std dev = 1,539, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.08518475138839678;  // std dev = 6,66e-08, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | then if ( publication(G, B) )
%   | | then if ( ta(H, D, F) )
%   | | | then return 0.05388151203435704;  // std dev = 1,178, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.25910604270652177;  // std dev = 1,234, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.5867037982883457;  // std dev = 0,100, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(I, A), publication(I, B) )
%   | | then if ( tempadvisedby(J, B) )
%   | | | then return 0.0964494115477058;  // std dev = 1,579, 21,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | | else return 0.2674129295785483;  // std dev = 0,198, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( tempadvisedby(K, B), publication(L, K) )
%   | | | then return -0.18192804643779759;  // std dev = 1,111, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.06109534752287875;  // std dev = 3,891, 75,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=48 */
%   else if ( publication(M, A), ta(N, A, P) )
%   | then return -0.08550640011826399;  // std dev = 0,036, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.07702368807238871;  // std dev = 0,063, 135,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=1 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( tempadvisedby(G, B) )
%   | | | then return 0.21080622330292925;  // std dev = 0,051, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.2875147369446394;  // std dev = 0,112, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(H, B), publication(I, H) )
%   | | | then return 0.23269519596783403;  // std dev = 0,022, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15179245612653133;  // std dev = 0,956, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( ta(J, A, K), publication(L, B) )
%   | | then if ( tempadvisedby(M, B), ta(J, M, N) )
%   | | | then return -0.3603059888938224;  // std dev = 0,765, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.0937746058713723;  // std dev = 2,639, 43,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=32 */
%   | | else if ( projectmember(P, B) )
%   | | | then return 0.1820152357195071;  // std dev = 1,243, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.04657974671351207;  // std dev = 3,733, 65,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=32 */
%   else return -0.07329714271879705;  // std dev = 0,002, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), tempadvisedby(E, D) )
%   | then if ( ta(F, A, G) )
%   | | then if ( ta(F, E, H), ta(I, A, H) )
%   | | | then return -0.11347935602328281;  // std dev = 1,270, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.1446510671385935;  // std dev = 2,369, 48,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=41 */
%   | | else if ( publication(J, A), publication(J, D) )
%   | | | then return 0.15105726287944962;  // std dev = 1,140, 29,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | | else return 0.27129146606867865;  // std dev = 1,608, 37,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | else if ( publication(K, B) )
%   | | then if ( publication(K, L), student(L) )
%   | | | then return 0.04066789971114217;  // std dev = 0,864, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.3777021950189407;  // std dev = 0,833, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.07207901738140508;  // std dev = 1,230, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( professor(A) )
%   | then return -0.06853556065049683;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return -0.06840709314943225;  // std dev = 0,076, 105,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( hasposition(B, C), publication(D, A) )
%   then if ( publication(D, B), student(A) )
%   | then return 0.16235526594054808;  // std dev = 0,022, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(E, B), tempadvisedby(F, B) )
%   | | then return -0.11367278783775821;  // std dev = 0,299, 20,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( projectmember(G, B) )
%   | | | then return 0.44180160203327445;  // std dev = 0,124, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.021405563864206976;  // std dev = 1,722, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   else if ( publication(H, B), professor(B) )
%   | then if ( publication(H, I), student(I) )
%   | | then if ( inphase(I, J) )
%   | | | then return 5.4286786627071113E-5;  // std dev = 3,240, 57,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=37 */
%   | | | else return 0.23476671310300543;  // std dev = 0,092, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(K, A, L) )
%   | | | then return -0.171806100031637;  // std dev = 1,366, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.0421197088033193;  // std dev = 0,943, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.06533652716703463;  // std dev = 0,147, 187,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=8 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(D, A).;true;true
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false,true;tempadvisedby(E, B), publication(F, E).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(I, A).;true;true
1;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
1;true,false,false;projectmember(M, B).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;ta(D, A, E).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(G, B), publication(H, A).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;ta(K, A, L), publication(M, B).;false;false
2;true,true,false;ta(E, A, F).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B).;false;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,false;hasposition(E, C), projectmember(F, E).;true;true
3;true,false,true;tempadvisedby(G, B).;false;false
3;true,false,false;ta(H, A, I), publication(J, B).;false;false
3;false;professor(B), student(A).;false;false
3;true;publication(D, B), publication(D, A).;false;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,false;ta(G, A, H).;true;true
4;true,false,true;tempadvisedby(I, B), publication(J, A).;false;false
4;true,false,false;projectmember(K, B).;false;false
4;true,true,true;publication(D, E), professor(E).;false;false
4;true,true,false;publication(C, F), tempadvisedby(F, B).;false;false
4;true;publication(C, B).;true;true
4;true,true;publication(D, A).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false;ta(I, A, J), publication(K, B).;true;true
5;true,false,true;ta(I, L, M), publication(N, L).;false;false
5;true,false,false;tempadvisedby(P, B).;false;false
5;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true;publication(C, A).;true;true
5;true,true;publication(C, B).;true;true
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,false;publication(I, A), publication(I, B).;true;true
6;true,false,true;tempadvisedby(J, B).;false;false
6;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
6;true,true,true;ta(H, D, F).;false;false
6;false;publication(M, A), ta(N, A, P).;false;false
6;true;tempadvisedby(D, B), ta(E, A, F).;true;true
6;true,true;publication(G, B).;true;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;tempadvisedby(M, B), ta(J, M, N).;false;false
7;true,false,false;projectmember(P, B).;false;false
7;true,true,true;tempadvisedby(G, B).;false;false
7;true,true,false;tempadvisedby(H, B), publication(I, H).;false;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,false;publication(K, B).;true;false
8;true,false,true;publication(K, L), student(L).;false;false
8;true,true,true;ta(F, E, H), ta(I, A, H).;false;false
8;false;professor(A).;false;false
8;true,true,false;publication(J, A), publication(J, D).;false;false
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;ta(F, A, G).;true;true
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true,false;publication(E, B), tempadvisedby(F, B).;false;true
9;true,false,false;projectmember(G, B).;false;false
9;false;publication(H, B), professor(B).;true;false
9;false,true,true;inphase(I, J).;false;false
9;true;publication(D, B), student(A).;false;true
9;false,true,false;ta(K, A, L).;false;false
9;false,true;publication(H, I), student(I).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,49e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360638;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8,43e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( genre(E, C) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.1015963294878363;  // std dev = 2,11e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return 0.299691349362722;  // std dev = 0,698, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0926912761892609;  // std dev = 6,05e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.2591879034608539;  // std dev = 1,12e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.12115721111617933;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,87e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1911618392081856;  // std dev = 0,080, 60,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.07877675473109157;  // std dev = 6,50e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.18234448262752062;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12881103342665723;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then return 0.1428957802244669;  // std dev = 0,459, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(A) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.06842697784420265;  // std dev = 4,28e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( movie(D, B), actor(A) )
%   | then return 0.13874131826038652;  // std dev = 3,65e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, B) )
%   | | then return -0.11715827725047712;  // std dev = 0,059, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069716
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.441 seconds
Total inference time: 2.991 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065521
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.516 seconds
Parameter learned model CLL: -0.065521


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,true': [0.0, 0, 56], 'true,false,true,false': [0.0, 0, 0], 'false': [8.69e-08, 98, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true,true': [0.0, 0, 56], 'false': [0.0, 122, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [1.86e-09, 5, 0], 'true,true': [1.49e-08, 0, 56], 'false': [8.43e-08, 114, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'genre(E, C)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B), actor(A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 56], 'false,false': [2.11e-08, 104, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,true': 'movie(D, E), director(E)', 'true,true': 'movie(D, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.698, 3, 56], 'true,true,true,false': [0.0, 0, 0], 'false': [6.05e-08, 107, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,true,true': [1.12e-08, 0, 56], 'true,true,false,true': [2.63e-09, 3, 0], 'false': [5.87e-08, 108, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'false,true': [6.5e-08, 112, 0], 'true,true': [0.08, 4, 56], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 56], 'false': [0.0, 104, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'false': 'director(A)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.459, 3, 56], 'false,false': [4.28e-08, 89, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true,false': 'movie(E, B)', 'true': 'movie(D, B), actor(A)', 'false': 'movie(F, B), director(B)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.059, 5, 0], 'false,true': [0.0, 0, 0], 'true,true': [3.65e-08, 0, 56], 'false,false': [0.0, 104, 0]}]]
[{'': [0.03329369797859664, 7.703588334133739e-17], 'true,false': [0.0, nan], 'true': [-1.2688263138573217e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.044419605220055364, -3.640075490574284e-18], 'true,false': [0.0, nan], 'true': [-1.9032394707859825e-16, 0.0], 'true,true': [-1.9032394707859825e-16, nan]}, {'': [0.03354584670317022, 6.232831015439475e-17], 'true,false': [0.0, nan], 'true': [1.9032394707859825e-16, 0.0]}, {'': [0.008971822673578602, 4.270088556250602e-18], 'true,false': [0.0, nan], 'true': [-3.489272363107635e-16, 0.0], 'false': [nan, 4.270088556250602e-18]}, {'': [0.008248078116164221, 3.4240523189373984e-17], 'true': [0.008248078116164221, nan], 'true,true,true': [0.008248078116164221, nan], 'true,true': [0.008248078116164221, nan]}, {'': [0.006981696132915829, 3.1867512743870234e-17], 'true,true,false': [2.3129646346357427e-18, nan], 'true': [0.006981696132915829, nan], 'true,true': [1.427429603089487e-16, 2.3129646346357427e-18]}, {'': [0.0064285288643891976, 3.766828119263924e-17], 'true': [0.0064285288643891976, nan], 'false': [3.766828119263924e-17, nan]}, {'': [0.001668757860748729, -4.270088556250602e-18], 'true,false': [0.0, nan], 'true': [-3.9650822308041306e-17, 0.0], 'true,true': [-3.9650822308041306e-17, nan]}, {'': [0.003563982196389646, 2.1973164029039556e-17], 'true': [0.003563982196389646, nan], 'true,true': [0.003563982196389646, nan], 'false': [-9.912705577010326e-19, 2.0582786411589982e-17]}, {'': [0.004985112577114101, -1.6012832085939756e-17], 'true,false': [0.0007013608665798587, nan], 'true': [2.3790493384824782e-17, 0.0007013608665798587], 'false': [nan, -1.6012832085939756e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(D, B), movie(D, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;movie(D, B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283913;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.11231637819360646;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.11231637819360642;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360647;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( female(B) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return -0.11231637819360642;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.11231637819360646;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.11231637819360649;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.09269127618926101;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.09269127618926104;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( female(B) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948895;  // std dev = 1,12e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.23272943490763426;  // std dev = 0,085, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.0851847513883968;  // std dev = 3,73e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.08518475138839682;  // std dev = 1,83e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325355;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.2135020552443682;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.11466418586013612;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527747;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.17983796025669188;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.10380742479756043;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.07324622576333704;  // std dev = 7,45e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.15482036701884763;  // std dev = 3,23e-09, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.09543888070189385;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( director(A) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( movie(D, B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801087;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13562604867115005;  // std dev = 5,27e-09, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.08644245123959368;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202622;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202622;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.0641918400820262;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067557
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.975 seconds
Total inference time: 2.978 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064122
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.748 seconds
Refined model CLL: -0.064122


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067557
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.680000000000001 seconds
Total inference time: 2.978 seconds
AUC ROC: 1.0
Total revision time: 7.680000000000001
Best scored revision CLL: -0.064122


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:39:06
{'Learning time': 7.680000000000001, 'F1': 1.0, 'parameter': {'Learning time': 1.441, 'F1': 1.0, 'Recall': 1.0, 'CLL': -0.069716, 'AUC PR': 1.0, 'Inference time': 2.991, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}, 'Recall': 1.0, 'CLL': -0.067557, 'AUC PR': 1.0, 'Inference time': 2.978, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(D, A).;true;true
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false,true;tempadvisedby(E, B), publication(F, E).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(I, A).;true;true
1;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
1;true,false,false;projectmember(M, B).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;ta(D, A, E).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(G, B), publication(H, A).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;ta(K, A, L), publication(M, B).;false;false
2;true,true,false;ta(E, A, F).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B).;false;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,false;hasposition(E, C), projectmember(F, E).;true;true
3;true,false,true;tempadvisedby(G, B).;false;false
3;true,false,false;ta(H, A, I), publication(J, B).;false;false
3;false;professor(B), student(A).;false;false
3;true;publication(D, B), publication(D, A).;false;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,false;ta(G, A, H).;true;true
4;true,false,true;tempadvisedby(I, B), publication(J, A).;false;false
4;true,false,false;projectmember(K, B).;false;false
4;true,true,true;publication(D, E), professor(E).;false;false
4;true,true,false;publication(C, F), tempadvisedby(F, B).;false;false
4;true;publication(C, B).;true;true
4;true,true;publication(D, A).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false;ta(I, A, J), publication(K, B).;true;true
5;true,false,true;ta(I, L, M), publication(N, L).;false;false
5;true,false,false;tempadvisedby(P, B).;false;false
5;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true;publication(C, A).;true;true
5;true,true;publication(C, B).;true;true
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,false;publication(I, A), publication(I, B).;true;true
6;true,false,true;tempadvisedby(J, B).;false;false
6;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
6;true,true,true;ta(H, D, F).;false;false
6;false;publication(M, A), ta(N, A, P).;false;false
6;true;tempadvisedby(D, B), ta(E, A, F).;true;true
6;true,true;publication(G, B).;true;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;tempadvisedby(M, B), ta(J, M, N).;false;false
7;true,false,false;projectmember(P, B).;false;false
7;true,true,true;tempadvisedby(G, B).;false;false
7;true,true,false;tempadvisedby(H, B), publication(I, H).;false;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,false;publication(K, B).;true;false
8;true,false,true;publication(K, L), student(L).;false;false
8;true,true,true;ta(F, E, H), ta(I, A, H).;false;false
8;false;professor(A).;false;false
8;true,true,false;publication(J, A), publication(J, D).;false;false
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;ta(F, A, G).;true;true
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true,false;publication(E, B), tempadvisedby(F, B).;false;true
9;true,false,false;projectmember(G, B).;false;false
9;false;publication(H, B), professor(B).;true;false
9;false,true,true;inphase(I, J).;false;false
9;true;publication(D, B), student(A).;false;true
9;false,true,false;ta(K, A, L).;false;false
9;false,true;publication(H, I), student(I).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1,29e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360638;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 7,45e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( genre(E, C) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.10159632948783637;  // std dev = 0,000, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return 0.27619151079944404;  // std dev = 1,033, 65,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 5,48e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.2637255665353048;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.11867718515231344;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6,32e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1949691176190656;  // std dev = 0,079, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.07877675473109155;  // std dev = 6,75e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.18461488794810893;  // std dev = 3,73e-09, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12689177406705243;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333709;  // std dev = 0,000, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then return 0.14088115171517385;  // std dev = 0,526, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.11348606988407882;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(A) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.06842697784420265;  // std dev = 5,05e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( movie(D, B), actor(A) )
%   | then return 0.1405312474648906;  // std dev = 5,77e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, B) )
%   | | then return -0.10980324870341164;  // std dev = 0,061, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069417
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.505 seconds
Total inference time: 2.609 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065784
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.679 seconds
Parameter learned model CLL: -0.065784


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,true': [0.0, 0, 58], 'true,false,true,false': [0.0, 0, 0], 'false': [8.69e-08, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true,true': [0.0, 0, 58], 'false': [0.0, 99, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [1.86e-09, 10, 0], 'true,true': [1.29e-08, 0, 58], 'false': [7.45e-08, 92, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'genre(E, C)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B), actor(A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 58], 'false,false': [0.0, 124, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,true': 'movie(D, E), director(E)', 'true,true': 'movie(D, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [1.033, 7, 58], 'true,true,true,false': [0.0, 0, 0], 'false': [5.48e-08, 103, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'true,true,false,true': [0.0, 3, 0], 'false': [6.32e-08, 117, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'false,true': [6.75e-08, 118, 0], 'true,true': [0.079, 4, 58], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 6, 0], 'true,true,true': [3.73e-09, 0, 58], 'false': [0.0, 112, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'false': 'director(A)'}, {'true,true,false': [0.0, 2, 0], 'false,true': [0.0, 10, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.526, 4, 58], 'false,false': [5.05e-08, 105, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true,false': 'movie(E, B)', 'true': 'movie(D, B), actor(A)', 'false': 'movie(F, B), director(B)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.061, 9, 0], 'false,true': [0.0, 0, 0], 'true,true': [5.77e-08, 0, 58], 'false,false': [0.0, 98, 0]}]]
[{'': [0.07306626354245364, 7.190015778524824e-17], 'true,false': [-2.7755575615628915e-18, nan], 'true': [-3.675221047035001e-16, -2.7755575615628915e-18], 'true,false,true': [-2.7755575615628915e-18, nan]}, {'': [0.04308576245887642, -1.1214373986112692e-17], 'true,false': [0.0, nan], 'true': [-1.2250736823450003e-16, 0.0], 'true,true': [-1.2250736823450003e-16, nan]}, {'': [0.055917862887610956, 6.033820786006285e-17], 'true,false': [0.0, nan], 'true': [2.4501473646900006e-16, 0.0]}, {'': [0.0228948573366958, -2.1488187573390126e-17], 'true,false': [-2.3129646346357427e-18, nan], 'true': [-3.3689526264487507e-16, -2.3129646346357427e-18], 'false': [nan, -2.1488187573390126e-17]}, {'': [0.01642278575441154, 2.910293365522255e-17], 'true': [0.01642278575441154, nan], 'true,true,true': [0.01642278575441154, nan], 'true,true': [0.01642278575441154, nan]}, {'': [0.006838039350362099, 3.416070845000482e-17], 'true,true,false': [-2.3129646346357427e-18, nan], 'true': [0.006838039350362099, nan], 'true,true': [-6.125368411725002e-17, -2.3129646346357427e-18]}, {'': [0.006280946693080744, 3.8575545770874085e-17], 'true': [0.006280946693080744, nan], 'false': [3.8575545770874085e-17, nan]}, {'': [0.008244303556391653, -4.956352788505163e-18], 'true,false': [0.0, nan], 'true': [1.5313421029312504e-17, 0.0], 'true,true': [1.5313421029312504e-17, nan]}, {'': [0.006281581233558268, 2.6066105795547154e-17], 'true': [0.006281581233558268, nan], 'true,true': [0.004462254029249838, 0.0], 'false': [0.0, 2.4319171015598667e-17]}, {'': [0.007342168083389309, -1.4727448285843914e-17], 'true,false': [0.00040900600503328586, nan], 'true': [5.74253288599219e-17, 0.00040900600503328586], 'false': [nan, -1.4727448285843914e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(D, B), movie(D, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(E, A), movie(E, D).;true;true
8;false;director(A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;movie(D, B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1123163781936062;  // std dev = 8,43e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783633;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09269127618926085;  // std dev = 7,30e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.21077785205324345;  // std dev = 0,115, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else return 0.23026807227988816;  // std dev = 0,089, 41,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6,50e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.2150520920551098;  // std dev = 0,012, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10440884364313183;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.07877675473109158;  // std dev = 5,87e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18097047670172806;  // std dev = 0,010, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09551862498478969;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.0732462257633372;  // std dev = 2,36e-08, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return 0.15567663882323887;  // std dev = 0,009, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08696110375816782;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(A) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.06842697784420267;  // std dev = 3,80e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( movie(D, B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13779912421259827;  // std dev = 4,56e-09, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.13549978558384454;  // std dev = 5,59e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.0784301714986789;  // std dev = 0,005, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06419184008202626;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067007
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.387 seconds
Total inference time: 2.022 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064171
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.383 seconds
Refined model CLL: -0.064171


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067007
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.954 seconds
Total inference time: 2.022 seconds
AUC ROC: 1.0
Total revision time: 5.954
Best scored revision CLL: -0.064171


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:39:17
{'Learning time': 5.954, 'F1': 1.0, 'parameter': {'Learning time': 1.505, 'F1': 1.0, 'Recall': 1.0, 'CLL': -0.069417, 'AUC PR': 1.0, 'Inference time': 2.609, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}, 'Recall': 1.0, 'CLL': -0.067007, 'AUC PR': 1.0, 'Inference time': 2.022, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(D, A).;true;true
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false,true;tempadvisedby(E, B), publication(F, E).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(I, A).;true;true
1;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
1;true,false,false;projectmember(M, B).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;ta(D, A, E).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(G, B), publication(H, A).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;ta(K, A, L), publication(M, B).;false;false
2;true,true,false;ta(E, A, F).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B).;false;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,false;hasposition(E, C), projectmember(F, E).;true;true
3;true,false,true;tempadvisedby(G, B).;false;false
3;true,false,false;ta(H, A, I), publication(J, B).;false;false
3;false;professor(B), student(A).;false;false
3;true;publication(D, B), publication(D, A).;false;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,false;ta(G, A, H).;true;true
4;true,false,true;tempadvisedby(I, B), publication(J, A).;false;false
4;true,false,false;projectmember(K, B).;false;false
4;true,true,true;publication(D, E), professor(E).;false;false
4;true,true,false;publication(C, F), tempadvisedby(F, B).;false;false
4;true;publication(C, B).;true;true
4;true,true;publication(D, A).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false;ta(I, A, J), publication(K, B).;true;true
5;true,false,true;ta(I, L, M), publication(N, L).;false;false
5;true,false,false;tempadvisedby(P, B).;false;false
5;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true;publication(C, A).;true;true
5;true,true;publication(C, B).;true;true
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,false;publication(I, A), publication(I, B).;true;true
6;true,false,true;tempadvisedby(J, B).;false;false
6;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
6;true,true,true;ta(H, D, F).;false;false
6;false;publication(M, A), ta(N, A, P).;false;false
6;true;tempadvisedby(D, B), ta(E, A, F).;true;true
6;true,true;publication(G, B).;true;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;tempadvisedby(M, B), ta(J, M, N).;false;false
7;true,false,false;projectmember(P, B).;false;false
7;true,true,true;tempadvisedby(G, B).;false;false
7;true,true,false;tempadvisedby(H, B), publication(I, H).;false;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,false;publication(K, B).;true;false
8;true,false,true;publication(K, L), student(L).;false;false
8;true,true,true;ta(F, E, H), ta(I, A, H).;false;false
8;false;professor(A).;false;false
8;true,true,false;publication(J, A), publication(J, D).;false;false
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;ta(F, A, G).;true;true
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true,false;publication(E, B), tempadvisedby(F, B).;false;true
9;true,false,false;projectmember(G, B).;false;false
9;false;publication(H, B), professor(B).;true;false
9;false,true,true;inphase(I, J).;false;false
9;true;publication(D, B), student(A).;false;true
9;false,true,false;ta(K, A, L).;false;false
9;false,true;publication(H, I), student(I).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.14185106490048766;  // std dev = 6,99e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.141851064900488;  // std dev = 0,000, 310,000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283918;  // std dev = 0,000, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 4,41e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360628;  // std dev = 5,74e-09, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360692;  // std dev = 0,000, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( genre(E, C) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then return 0.27246816711012234;  // std dev = 1,921, 68,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=49 */
%   | else return -0.10159632948783656;  // std dev = 0,000, 312,000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return 0.20857245441902833;  // std dev = 3,082, 246,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926051;  // std dev = 1,62e-07, 328,000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.2853133760724855;  // std dev = 0,013, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.13004316596901286;  // std dev = 0,156, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 9,88e-08, 310,000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.14718000522409433;  // std dev = 0,137, 169,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=129 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.03840507907542909;  // std dev = 2,192, 359,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2151163188212446;  // std dev = 0,026, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12077970426243793;  // std dev = 0,010, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07603436166211698;  // std dev = 4,47e-08, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then return 0.1263529895815644;  // std dev = 1,188, 152,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=129 */
%   | | else return -0.10190097545442213;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(A) )
%   | then return -0.07086193886530333;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else return -0.023409575609630355;  // std dev = 1,893, 264,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( movie(D, B), actor(A) )
%   | then return 0.15019946085180144;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, B) )
%   | | then return -0.0909104309806186;  // std dev = 0,151, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), director(B) )
%   | then if ( movie(F, G), actor(G) )
%   | | then return 0.067817602369508;  // std dev = 0,160, 95,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06841464204794354;  // std dev = 0,023, 267,000 (wgt'ed) examples reached here.  /* #neg=267 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070306
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.969 seconds
Total inference time: 2.468 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079236
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.823 seconds
Parameter learned model CLL: -0.079236


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [6.99e-08, 72, 0], 'true,true': [1.09e-06, 0, 178], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 310, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 56, 0], 'true,true,true': [0.0, 0, 178], 'false': [0.0, 270, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [5.74e-09, 59, 0], 'true,true': [4.41e-08, 0, 178], 'false': [0.0, 301, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'genre(E, C)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B), actor(A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 32, 0], 'false,true': [1.921, 19, 49], 'true,true': [3.77e-07, 0, 129], 'false,false': [0.0, 312, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,true': 'movie(D, E), director(E)', 'true,true': 'movie(D, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [3.082, 68, 178], 'true,true,true,false': [0.0, 0, 0], 'false': [1.62e-07, 328, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,true,true': [0.013, 0, 178], 'true,true,false,true': [0.156, 54, 0], 'false': [9.88e-08, 310, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'false,true': [2.192, 310, 49], 'true,true': [0.137, 40, 129], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.01, 70, 0], 'true,true,true': [0.026, 0, 178], 'false': [4.47e-08, 316, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'false': 'director(A)'}, {'true,true,false': [0.0, 13, 0], 'false,true': [0.0, 116, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [1.188, 23, 129], 'false,false': [1.893, 215, 49]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true,false': 'movie(E, B)', 'true': 'movie(D, B), actor(A)', 'false,true': 'movie(F, G), actor(G)', 'false': 'movie(F, B), director(B)'}, {'true,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,false,true': [0.151, 54, 0], 'false,true,true': [0.16, 46, 49], 'false,false': [0.023, 267, 0], 'true,true': [0.0, 0, 129]}]]
[{'': [0.20505600000000557, -3.724619179387622e-17], 'true,false': [6.78469626159818e-17, nan], 'true': [6.706246045376226e-15, 6.78469626159818e-17], 'true,false,true': [6.78469626159818e-17, nan]}, {'': [0.12995873979568842, -5.921189464667501e-17], 'true,false': [-3.766828119263924e-17, nan], 'true': [-3.193450497798203e-15, -3.766828119263924e-17], 'true,true': [-3.193450497798203e-15, nan]}, {'': [0.08335194119579264, -9.442428382194023e-17], 'true,false': [3.198947698072485e-17, nan], 'true': [1.9559884299013994e-15, 3.198947698072485e-17]}, {'': [0.04291474954268352, 0.030267428577333683], 'true,false': [-1.734723475976807e-18, nan], 'true': [1.1016166445893026e-15, -1.734723475976807e-18], 'false': [0.05425634091197156, -5.2664425527090757e-17]}, {'': [0.038601322227067296, 7.988190055229785e-17], 'true': [0.038601322227067296, nan], 'true,true,true': [0.038601322227067296, nan], 'true,true': [0.038601322227067296, nan]}, {'': [0.031051218926145114, 3.1516008440972186e-17], 'true,true,false': [0.00044930974892825335, nan], 'true': [0.031051218926145114, nan], 'true,true': [0.0001791809110327328, 0.00044930974892825335]}, {'': [0.018870089317858278, 0.013379031031603336], 'true': [0.018870089317858278, nan], 'false': [0.013379031031603317, nan]}, {'': [0.02336545305301473, 6.324055203561018e-18], 'true,false': [9.54443001513594e-05, nan], 'true': [0.0006704926606559046, 9.54443001513594e-05], 'true,true': [0.0006704926606559046, nan]}, {'': [0.012338681073766598, 0.009903189068519773], 'true': [0.012338681073766598, nan], 'true,true': [0.009289124564007484, -2.135044278125301e-18], 'false': [-2.1055953915304692e-17, 0.013567221098763847]}, {'': [0.012217253740741944, 0.010342447496560067], 'true,false': [0.0004232246777534838, nan], 'true': [-7.917869632985613e-17, 0.00042322467775348895], 'false,true': [0.0257160754507854, nan], 'false': [0.0257160754507854, 1.9153640653116707e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(D, B), movie(D, A).;true;true
3;false;director(B), actor(A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(E, A), movie(E, D).;true;true
8;false;director(A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;movie(D, B), actor(A).;true;true
9;false;movie(F, B), director(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.14185106490048813;  // std dev = 0,000, 290,000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.12544463852839188;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360632;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.11231637819360683;  // std dev = 0,000, 300,000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583106;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.10159632948783655;  // std dev = 0,000, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601491;  // std dev = 3,86e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.09269127618926051;  // std dev = 8,94e-08, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.18053255091205853;  // std dev = 0,141, 114,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=89 */
%   | | else return 0.17822196567466325;  // std dev = 0,142, 115,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 9,19e-08, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.22265207491891115;  // std dev = 0,002, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10026560777112442;  // std dev = 0,000585, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( female(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.22239791168826278;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.1003477057560003;  // std dev = 9,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.07326516350100568;  // std dev = 0,796, 321,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18839079119876825;  // std dev = 0,128, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0921622293133994;  // std dev = 0,007, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07362124039881467;  // std dev = 0,000, 282,000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( female(A) )
%   | | then return 0.06842513166833938;  // std dev = 0,118, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | else return 0.1263380703435145;  // std dev = 0,084, 95,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(A) )
%   | then return -0.06875513425281166;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( female(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15942193391782394;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.0842559996034199;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( actor(B) )
%   | | | then return -0.06875513425281145;  // std dev = 5,87e-08, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | | | else return -0.011083078450161323;  // std dev = 0,660, 27,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( movie(D, B), actor(A) )
%   | then return 0.14600244200577722;  // std dev = 0,038, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.0792896012590115;  // std dev = 0,090, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( movie(E, B), director(B) )
%   | then if ( female(A) )
%   | | then return 0.11609514106593088;  // std dev = 0,067, 47,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=42 */
%   | | else if ( director(A) )
%   | | | then return -0.06448129388916225;  // std dev = 5,89e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.03434902160668285;  // std dev = 0,590, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else return -0.06448129388916247;  // std dev = 0,000, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065251
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.472 seconds
Total inference time: 2.994 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070704
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.465 seconds
Refined model CLL: -0.070704


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065251
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.728999999999999 seconds
Total inference time: 2.994 seconds
AUC ROC: 1.0
Total revision time: 7.728999999999999
Best scored revision CLL: -0.070704


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:39:31
{'Learning time': 7.728999999999999, 'F1': 1.0, 'parameter': {'Learning time': 1.969, 'F1': 1.0, 'Recall': 1.0, 'CLL': -0.070306, 'AUC PR': 1.0, 'Inference time': 2.468, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}, 'Recall': 1.0, 'CLL': -0.065251, 'AUC PR': 1.0, 'Inference time': 2.994, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(D, A).;true;true
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false,true;tempadvisedby(E, B), publication(F, E).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(I, A).;true;true
1;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
1;true,false,false;projectmember(M, B).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;ta(D, A, E).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(G, B), publication(H, A).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;ta(K, A, L), publication(M, B).;false;false
2;true,true,false;ta(E, A, F).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B).;false;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,false;hasposition(E, C), projectmember(F, E).;true;true
3;true,false,true;tempadvisedby(G, B).;false;false
3;true,false,false;ta(H, A, I), publication(J, B).;false;false
3;false;professor(B), student(A).;false;false
3;true;publication(D, B), publication(D, A).;false;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,false;ta(G, A, H).;true;true
4;true,false,true;tempadvisedby(I, B), publication(J, A).;false;false
4;true,false,false;projectmember(K, B).;false;false
4;true,true,true;publication(D, E), professor(E).;false;false
4;true,true,false;publication(C, F), tempadvisedby(F, B).;false;false
4;true;publication(C, B).;true;true
4;true,true;publication(D, A).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false;ta(I, A, J), publication(K, B).;true;true
5;true,false,true;ta(I, L, M), publication(N, L).;false;false
5;true,false,false;tempadvisedby(P, B).;false;false
5;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true;publication(C, A).;true;true
5;true,true;publication(C, B).;true;true
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,false;publication(I, A), publication(I, B).;true;true
6;true,false,true;tempadvisedby(J, B).;false;false
6;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
6;true,true,true;ta(H, D, F).;false;false
6;false;publication(M, A), ta(N, A, P).;false;false
6;true;tempadvisedby(D, B), ta(E, A, F).;true;true
6;true,true;publication(G, B).;true;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;tempadvisedby(M, B), ta(J, M, N).;false;false
7;true,false,false;projectmember(P, B).;false;false
7;true,true,true;tempadvisedby(G, B).;false;false
7;true,true,false;tempadvisedby(H, B), publication(I, H).;false;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,false;publication(K, B).;true;false
8;true,false,true;publication(K, L), student(L).;false;false
8;true,true,true;ta(F, E, H), ta(I, A, H).;false;false
8;false;professor(A).;false;false
8;true,true,false;publication(J, A), publication(J, D).;false;false
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;ta(F, A, G).;true;true
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true,false;publication(E, B), tempadvisedby(F, B).;false;true
9;true,false,false;projectmember(G, B).;false;false
9;false;publication(H, B), professor(B).;true;false
9;false,true,true;inphase(I, J).;false;false
9;true;publication(D, B), student(A).;false;true
9;false,true,false;ta(K, A, L).;false;false
9;false,true;publication(H, I), student(I).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 7,30e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( genre(E, C) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.10159632948783619;  // std dev = 5,58e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return 0.27207618558963065;  // std dev = 0,951, 51,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 5,37e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.2645254339252669;  // std dev = 1,18e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.11824742632246286;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,05e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.19616793172182947;  // std dev = 0,078, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.07877675473109168;  // std dev = 3,80e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1849337237716186;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.126616521684882;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then return 0.12667210954232053;  // std dev = 0,626, 51,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(A) )
%   | then return -0.06842697784420274;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.06842697784420265;  // std dev = 4,15e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( movie(D, B), actor(A) )
%   | then return 0.14247573728989762;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, B) )
%   | | then return -0.12662266898335225;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202626;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068739
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.236 seconds
Total inference time: 2.718 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067432
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.131 seconds
Parameter learned model CLL: -0.067432


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,true': [2.23e-07, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false': [7.88e-08, 83, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,true,true': [0.0, 0, 45], 'false': [0.0, 91, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 6, 0], 'true,true': [0.0, 0, 45], 'false': [7.3e-08, 93, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'genre(E, C)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B), actor(A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'false,false': [5.58e-08, 85, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,true': 'movie(D, E), director(E)', 'true,true': 'movie(D, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.951, 6, 45], 'true,true,true,false': [0.0, 0, 0], 'false': [5.37e-08, 102, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,true,true': [1.18e-08, 0, 45], 'true,true,false,true': [0.0, 4, 0], 'false': [5.05e-08, 87, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'false,true': [3.8e-08, 73, 0], 'true,true': [0.078, 3, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 6, 0], 'true,true,true': [0.0, 0, 45], 'false': [0.0, 91, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'false': 'director(A)'}, {'true,true,false': [0.0, 0, 0], 'false,true': [2.63e-09, 11, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.626, 6, 45], 'false,false': [4.15e-08, 87, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true,false': 'movie(E, B)', 'true': 'movie(D, B), actor(A)', 'false': 'movie(F, B), director(B)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 45], 'false,false': [0.0, 94, 0]}]]
[{'': [0.12815948736205124, 7.490661370964911e-17], 'true,false': [-6.938893903907228e-18, nan], 'true': [1.105288700071267e-15, -6.938893903907228e-18], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.04182928783975578, -1.4640303621430636e-17], 'true,false': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0], 'true,true': [-9.473903143468002e-16, nan]}, {'': [0.04627685204491952, 5.730183352904034e-17], 'true,false': [0.0, nan], 'true': [-3.947459643111668e-17, 0.0]}, {'': [0.024252759220113572, 3.657205257588751e-17], 'true,false': [0.0, nan], 'true': [-4.144832625267251e-16, 0.0], 'false': [nan, 3.657205257588751e-17]}, {'': [0.01774070682301534, 2.829980258848438e-17], 'true': [0.01774070682301534, nan], 'true,true,true': [0.01774070682301534, nan], 'true,true': [0.01774070682301534, nan]}, {'': [0.010984053001916403, 2.9350723639515634e-17], 'true,true,false': [0.0, nan], 'true': [0.010984053001916403, nan], 'true,true': [1.3816108750890837e-16, 0.0]}, {'': [0.00610573935377431, 1.977109495907813e-17], 'true': [0.00610573935377431, nan], 'false': [1.977109495907813e-17, nan]}, {'': [0.010075801603183962, -7.93016446160826e-18], 'true,false': [-4.625929269271485e-18, nan], 'true': [-3.947459643111668e-17, -4.625929269271485e-18], 'true,true': [-3.947459643111668e-17, nan]}, {'': [0.007675896689398901, 2.209117242876587e-17], 'true': [0.007675896689398901, nan], 'true,true': [0.007675896689398901, nan], 'false': [6.30808536718839e-19, 1.9779835496195318e-17]}, {'': [0.008435796953225936, -1.299197156476247e-17], 'true,false': [-3.96508223080413e-18, nan], 'true': [-1.973729821555834e-17, -3.96508223080413e-18], 'false': [nan, -1.299197156476247e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(D, B), movie(D, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;movie(D, B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048763;  // std dev = 8,56e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1254446385283914;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360622;  // std dev = 6,83e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783615;  // std dev = 5,96e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09269127618926097;  // std dev = 4,83e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.20280962811442999;  // std dev = 0,123, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.2193451905739226;  // std dev = 0,104, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 4,01e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.21644529203600787;  // std dev = 0,008, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10360047477957213;  // std dev = 0,001, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0787767547310916;  // std dev = 5,77e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18198645935380312;  // std dev = 0,007, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0946483513198456;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07324622576333707;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15644352549731524;  // std dev = 0,006, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08684320720264802;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( director(A) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06842697784420267;  // std dev = 3,94e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( movie(D, B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13836947149623632;  // std dev = 3,23e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1364098091365001;  // std dev = 4,56e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.07466137782399361;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202626;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066564
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.34 seconds
Total inference time: 2.253 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064805
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.129 seconds
Refined model CLL: -0.064805


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066564
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.836 seconds
Total inference time: 2.253 seconds
AUC ROC: 1.0
Total revision time: 4.836
Best scored revision CLL: -0.064805


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:39:42
{'Learning time': 4.836, 'F1': 1.0, 'parameter': {'Learning time': 1.236, 'F1': 1.0, 'Recall': 1.0, 'CLL': -0.068739, 'AUC PR': 1.0, 'Inference time': 2.718, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}, 'Recall': 1.0, 'CLL': -0.066564, 'AUC PR': 1.0, 'Inference time': 2.253, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(D, A).;true;true
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;tempadvisedby(G, B), ta(H, G, I).;false;false
0;true,false,true;tempadvisedby(E, B), publication(F, E).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(I, A).;true;true
1;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
1;true,false,false;projectmember(M, B).;false;false
1;true,true,true;tempadvisedby(F, B).;false;false
1;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,true;ta(D, A, E).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(G, B), publication(H, A).;true;true
2;true,false,true;ta(I, A, J).;false;false
2;true,false,false;ta(K, A, L), publication(M, B).;false;false
2;true,true,false;ta(E, A, F).;false;false
2;true;publication(C, B), publication(C, A).;true;true
2;true,true;tempadvisedby(D, B).;false;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,false;hasposition(E, C), projectmember(F, E).;true;true
3;true,false,true;tempadvisedby(G, B).;false;false
3;true,false,false;ta(H, A, I), publication(J, B).;false;false
3;false;professor(B), student(A).;false;false
3;true;publication(D, B), publication(D, A).;false;true
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,false;ta(G, A, H).;true;true
4;true,false,true;tempadvisedby(I, B), publication(J, A).;false;false
4;true,false,false;projectmember(K, B).;false;false
4;true,true,true;publication(D, E), professor(E).;false;false
4;true,true,false;publication(C, F), tempadvisedby(F, B).;false;false
4;true;publication(C, B).;true;true
4;true,true;publication(D, A).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false;ta(I, A, J), publication(K, B).;true;true
5;true,false,true;ta(I, L, M), publication(N, L).;false;false
5;true,false,false;tempadvisedby(P, B).;false;false
5;true,true,true;tempadvisedby(D, B), ta(E, D, F).;false;false
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true;publication(C, A).;true;true
5;true,true;publication(C, B).;true;true
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,false;publication(I, A), publication(I, B).;true;true
6;true,false,true;tempadvisedby(J, B).;false;false
6;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
6;true,true,true;ta(H, D, F).;false;false
6;false;publication(M, A), ta(N, A, P).;false;false
6;true;tempadvisedby(D, B), ta(E, A, F).;true;true
6;true,true;publication(G, B).;true;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false;ta(J, A, K), publication(L, B).;true;true
7;true,false,true;tempadvisedby(M, B), ta(J, M, N).;false;false
7;true,false,false;projectmember(P, B).;false;false
7;true,true,true;tempadvisedby(G, B).;false;false
7;true,true,false;tempadvisedby(H, B), publication(I, H).;false;false
7;true;publication(C, B), publication(C, A).;true;true
7;true,true;publication(C, D), ta(E, D, F).;true;true
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,false;publication(K, B).;true;false
8;true,false,true;publication(K, L), student(L).;false;false
8;true,true,true;ta(F, E, H), ta(I, A, H).;false;false
8;false;professor(A).;false;false
8;true,true,false;publication(J, A), publication(J, D).;false;false
8;true;hasposition(D, C), tempadvisedby(E, D).;true;true
8;true,true;ta(F, A, G).;true;true
9;;advisedby(A, B) :- hasposition(B, C), publication(D, A).;true;true
9;true,false;publication(E, B), tempadvisedby(F, B).;false;true
9;true,false,false;projectmember(G, B).;false;false
9;false;publication(H, B), professor(B).;true;false
9;false,true,true;inphase(I, J).;false;false
9;true;publication(D, B), student(A).;false;true
9;false,true,false;ta(K, A, L).;false;false
9;false,true;publication(H, I), student(I).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 7,15e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.4175135841583102;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( genre(E, C) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then return 0.37032177382684206;  // std dev = 0,495, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return -0.10159632948783628;  // std dev = 2,98e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return 0.28711981008444015;  // std dev = 0,845, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926104;  // std dev = 2,79e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.2636575064060641;  // std dev = 0,004, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(D, E) )
%   | | | then return -0.13465426582776352;  // std dev = 0,051, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 4,47e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then return 0.1811000734029838;  // std dev = 0,097, 39,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.05337606928053783;  // std dev = 0,920, 112,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.19535276763192186;  // std dev = 0,019, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.12481061511788293;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07498925563030409;  // std dev = 3,80e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, D) )
%   | | then return 0.14991819979069362;  // std dev = 0,265, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else return -0.11180317503905662;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(A) )
%   | then return -0.06995051287419687;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.03917137448148441;  // std dev = 0,803, 85,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( movie(D, B), actor(A) )
%   | then return 0.13851837653038537;  // std dev = 3,16e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, B) )
%   | | then return -0.1275791242385498;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B), director(B) )
%   | then if ( movie(F, G), actor(G) )
%   | | then return 0.1484450063720949;  // std dev = 0,126, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0672392484400878;  // std dev = 0,006, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072089
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.129 seconds
Total inference time: 2.911 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069689
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.286 seconds
Parameter learned model CLL: -0.069689


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,true': [2.23e-07, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false': [7.6e-08, 79, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,true,true': [0.0, 0, 45], 'false': [0.0, 94, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true': [0.0, 0, 45], 'false': [7.15e-08, 87, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'genre(E, C)', 'true': 'movie(D, B), movie(D, A)', 'false': 'director(B), actor(A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'false,true': [0.495, 1, 10], 'true,true': [0.0, 0, 35], 'false,false': [2.98e-08, 102, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true,true': 'movie(D, E), director(E)', 'true,true': 'movie(D, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.845, 4, 45], 'true,true,true,false': [0.0, 0, 0], 'false': [2.79e-08, 90, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true,false': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,true,true': [0.004, 0, 45], 'true,true,false,true': [0.051, 4, 0], 'false': [4.47e-08, 75, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'true,false': [0.0, 0, 0], 'false,true': [0.92, 102, 10], 'true,true': [0.097, 4, 35], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,true,true': [0.019, 0, 45], 'false': [3.8e-08, 84, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'true,true': 'movie(E, A), movie(E, D)', 'false': 'director(A)'}, {'true,true,false': [0.0, 3, 0], 'false,true': [2.63e-09, 5, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.265, 1, 35], 'false,false': [0.803, 75, 10]}], ['workedunder(A, B)', {'': 'genre(B, C), movie(D, A)', 'true,false': 'movie(E, B)', 'true': 'movie(D, B), actor(A)', 'false,true': 'movie(F, G), actor(G)', 'false': 'movie(F, B), director(B)'}, {'true,false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'false,true,true': [0.126, 2, 10], 'false,false': [0.006, 93, 0], 'true,true': [3.16e-08, 0, 35]}]]
[{'': [0.04074241738343243, 7.307797124114954e-17], 'true,false': [0.0, nan], 'true': [1.105288700071267e-15, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.04182928783975578, -1.4173059888831785e-17], 'true,false': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0], 'true,true': [-9.473903143468002e-16, nan]}, {'': [0.03342110014406096, 5.870144727903127e-17], 'true,false': [0.0, nan], 'true': [-3.947459643111668e-17, 0.0]}, {'': [0.013778858415777454, 0.021736968871413704], 'true,false': [0.0, nan], 'true': [-2.791417890486108e-16, 0.0], 'false': [0.02227066962361243, 8.707631565687502e-18]}, {'': [0.014559838810995512, 8.635067969306773e-18], 'true': [0.014559838810995512, nan], 'true,true,true': [0.014559838810995512, nan], 'true,true': [0.014559838810995512, nan]}, {'': [0.011961306841840704, 2.6645352591003756e-17], 'true,true,false': [0.000659723202351057, nan], 'true': [0.011961306841840704, nan], 'true,true': [1.4686511378345398e-05, 0.000659723202351057]}, {'': [0.009442122677220178, 0.007550181330979168], 'true': [0.009442122677220178, nan], 'false': [0.007550181330979168, nan]}, {'': [0.004530731937390747, 1.7182023000151233e-17], 'true,false': [0.0, nan], 'true': [0.00037020028409189524, 0.0], 'true,true': [0.00037020028409189524, nan]}, {'': [0.006670311572719863, 0.007209694514582046], 'true': [0.006670311572719863, nan], 'true,true': [0.0019570879440792433, 0.0], 'false': [1.3877787807814458e-18, 0.007581163338566081]}, {'': [0.005148772431526838, 0.006520539097559417], 'true,false': [-2.3129646346357427e-18, nan], 'false,true': [0.015848842181841804, nan], 'true': [2.8548592061789737e-17, -2.3129646346357427e-18], 'false': [0.015848842181841804, 3.5019824007272145e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(D, B), movie(D, A).;true;true
3;false;director(B), actor(A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, B).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;true;movie(E, A), movie(E, D).;true;true
8;false;director(A).;true;true
9;;workedunder(A, B) :- genre(B, C), movie(D, A).;true;true
9;true;movie(D, B), actor(A).;true;true
9;false;movie(F, B), director(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8,94e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839144;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360622;  // std dev = 6,99e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.4175135841583102;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3433550250660033;  // std dev = 0,182, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.3136916014290807;  // std dev = 0,464, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.10159632948783616;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3249407447619899;  // std dev = 0,054, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.103892098532053;  // std dev = 0,039, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926107;  // std dev = 1,05e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.25807311722434767;  // std dev = 0,047, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.0970136304284316;  // std dev = 0,044, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 5,37e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.19270611595363843;  // std dev = 0,065, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.19354149586695443;  // std dev = 0,064, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.17302156589692985;  // std dev = 0,118, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.15851531605227892;  // std dev = 0,303, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.07877675473109164;  // std dev = 5,27e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18226860425052638;  // std dev = 0,049, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09200399121361799;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333707;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, E) )
%   | then if ( female(A) )
%   | | then return 0.15335954888749953;  // std dev = 2,11e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.12945941609140904;  // std dev = 0,071, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(A) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420267;  // std dev = 4,01e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( female(A) )
%   | | | then return 0.12454015702060837;  // std dev = 0,268, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.17214823582084182;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), movie(D, A) )
%   then if ( movie(D, B), actor(A) )
%   | then return 0.1358799131845706;  // std dev = 0,008, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.09725950054043725;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( movie(E, B), director(B) )
%   | then if ( female(A) )
%   | | then return 0.14941610321084242;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.09149234723523747;  // std dev = 0,257, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.06419184008202626;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068083
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.453 seconds
Total inference time: 2.467 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066173
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.255 seconds
Refined model CLL: -0.066173


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068083
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.123 seconds
Total inference time: 2.467 seconds
AUC ROC: 1.0
Total revision time: 5.123
Best scored revision CLL: -0.066173


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:39:53
{'Learning time': 5.123, 'F1': 1.0, 'parameter': {'Learning time': 1.129, 'F1': 1.0, 'Recall': 1.0, 'CLL': -0.072089, 'AUC PR': 1.0, 'Inference time': 2.911, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}, 'Recall': 1.0, 'CLL': -0.068083, 'AUC PR': 1.0, 'Inference time': 2.467, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


