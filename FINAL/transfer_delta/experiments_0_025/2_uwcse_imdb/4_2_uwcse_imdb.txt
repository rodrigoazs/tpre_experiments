Starting experiment #4 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return 0.24276431971489695;  // std dev = 2,481, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.7331489350995123;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( publication(F, B), ta(G, A, H) )
%   | | | then return 0.6968586125188665;  // std dev = 2,048, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return 0.5325675397506746;  // std dev = 3,073, 43,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=29 */
%   else return -0.14185106490048827;  // std dev = 0,000, 209,000 (wgt'ed) examples reached here.  /* #neg=209 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.7194734122109546;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4694734122109545;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.7194734122109546;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( tempadvisedby(I, B), publication(J, I) )
%   | | then if ( publication(K, A) )
%   | | | then return -0.17404366681621206;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.43224224405559747;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(L, B), publication(M, A) )
%   | | | then return 0.2298944968946423;  // std dev = 2,452, 25,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.5535259529552614;  // std dev = 3,517, 73,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=57 */
%   else return -0.12544463852839127;  // std dev = 5,16e-08, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(E, A), publication(E, B) )
%   | | then if ( publication(D, B) )
%   | | | then return 0.3795984061615005;  // std dev = 0,924, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( ta(F, C, G), publication(D, B) )
%   | | | then return 0.3402867268060794;  // std dev = 0,831, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.07547567205651169;  // std dev = 1,194, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( publication(H, B), publication(H, A) )
%   | | then if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.4705114176307945;  // std dev = 1,324, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else if ( ta(L, A, M), publication(N, B) )
%   | | | then return 0.46352300141432107;  // std dev = 2,409, 39,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=31 */
%   | | | else return 0.3124518494658531;  // std dev = 3,685, 60,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=37 */
%   else return -0.11231637819360622;  // std dev = 8,69e-08, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then if ( publication(F, A) )
%   | | | then return 0.5023773168139009;  // std dev = 0,051, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.316016248864678;  // std dev = 0,908, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.4382663264400785;  // std dev = 0,144, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( projectmember(G, B), publication(H, A) )
%   | | then return 0.6662466895040475;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | | then return 0.09424970971829459;  // std dev = 1,568, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.2888769738051155;  // std dev = 4,274, 90,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=63 */
%   else if ( student(B) )
%   | then return -0.1015963294878365;  // std dev = 0,000, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | else if ( publication(K, A) )
%   | | then return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.0213429548687181;  // std dev = 0,740, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, B), publication(D, A) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then if ( publication(F, B) )
%   | | | then return 0.04122959360686127;  // std dev = 1,177, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.3432137858974365;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.33508564921523365;  // std dev = 0,132, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(G, A), tempadvisedby(H, B) )
%   | | then if ( ta(I, H, J) )
%   | | | then return -0.2358508750331197;  // std dev = 0,941, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.0917789623451495;  // std dev = 1,703, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( ta(K, A, L), tempadvisedby(M, B) )
%   | | | then return 0.07952206057606588;  // std dev = 2,515, 26,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | | else return 0.24020224042217034;  // std dev = 3,608, 67,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=47 */
%   else if ( ta(N, A, P) )
%   | then return -0.10542349795381144;  // std dev = 0,057, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.08756282890060102;  // std dev = 0,062, 125,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( ta(F, E, G) )
%   | | | then return 0.2506810236181988;  // std dev = 3,417, 109,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=91 */
%   | | | else return 0.048186248358728555;  // std dev = 1,294, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else return -0.05401892877204123;  // std dev = 0,982, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( projectmember(H, B) )
%   | | then if ( publication(I, A) )
%   | | | then return 0.23331425470808145;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4681370978161694;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(J, A, K) )
%   | | | then return 0.23782847560070197;  // std dev = 0,903, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.09017011971689545;  // std dev = 1,880, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   else return -0.08539890669140106;  // std dev = 0,019, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F) )
%   | | | then return 0.21416315914480444;  // std dev = 0,075, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.26841439901694986;  // std dev = 0,166, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( ta(G, A, H) )
%   | | | then return -0.06872777726348374;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22453647789741749;  // std dev = 0,054, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( ta(I, A, J), publication(K, B) )
%   | | then if ( ta(L, M, J), publication(K, M) )
%   | | | then return 0.41190561081416777;  // std dev = 0,264, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.10318636310566075;  // std dev = 2,629, 36,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | else if ( publication(N, B), publication(P, A) )
%   | | | then return -0.08412460612893566;  // std dev = 1,471, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.052941059776594634;  // std dev = 3,689, 57,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=35 */
%   else return -0.0790681712555232;  // std dev = 0,020, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, D), professor(D) )
%   | | then if ( publication(C, B) )
%   | | | then return 0.13211162401861015;  // std dev = 1,621, 44,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return -0.13773284151823775;  // std dev = 2,459, 38,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.48661159146504945;  // std dev = 0,069, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.37434103855302137;  // std dev = 0,138, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(F, B), publication(G, B) )
%   | | then if ( ta(H, F, I), ta(J, A, K) )
%   | | | then return 0.3452127596298542;  // std dev = 0,087, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.019736805625532643;  // std dev = 2,566, 28,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | else if ( ta(L, A, M) )
%   | | | then return 0.07671732184040891;  // std dev = 1,607, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.30618749022589287;  // std dev = 1,337, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else return -0.07332439211844287;  // std dev = 0,013, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(D, A) )
%   | | then return 0.2510140622139418;  // std dev = 0,053, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(E, A), publication(D, B) )
%   | | | then return -0.3923184875910386;  // std dev = 0,949, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.006498924002954072;  // std dev = 1,504, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | else if ( publication(F, B) )
%   | | then if ( publication(G, A), tempadvisedby(H, B) )
%   | | | then return 0.09369587481178766;  // std dev = 1,270, 28,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=22 */
%   | | | else return 0.21796344547571403;  // std dev = 2,359, 69,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=62 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.4062062055051993;  // std dev = 0,347, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1658678640326061;  // std dev = 1,804, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else return -0.06859362700390763;  // std dev = 0,014, 207,000 (wgt'ed) examples reached here.  /* #neg=207 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( tempadvisedby(C, B), ta(D, C, E) )
%   then if ( student(A) )
%   | then if ( publication(F, B) )
%   | | then if ( publication(G, C) )
%   | | | then return 0.2188059931739877;  // std dev = 0,249, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.11130837107010103;  // std dev = 1,698, 34,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=29 */
%   | | else return 0.32536825873987824;  // std dev = 0,297, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.06612595138801182;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( professor(B), publication(H, A) )
%   | then if ( student(A), publication(H, B) )
%   | | then return 0.17006728489623385;  // std dev = 0,043, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | | then return -0.0604996416877647;  // std dev = 1,250, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.04250106538083562;  // std dev = 1,920, 26,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | else if ( professor(B), ta(K, A, L) )
%   | | then return 0.020258608351841966;  // std dev = 0,436, 23,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | else return -0.08872553415593183;  // std dev = 0,218, 192,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=17 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(D, A).;true;true
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;publication(F, B), ta(G, A, H).;false;false
0;true,false,true;publication(D, E), professor(E).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
1;true,false,true;publication(K, A).;false;false
1;true,false,false;publication(L, B), publication(M, A).;false;false
1;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E).;true;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true,false;publication(H, B), publication(H, A).;true;true
2;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
2;true,false,false;ta(L, A, M), publication(N, B).;false;false
2;true,true,true;publication(D, B).;false;false
2;true,true,false;ta(F, C, G), publication(D, B).;false;false
2;true;tempadvisedby(C, B), publication(D, C).;true;true
2;true,true;publication(E, A), publication(E, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,false;projectmember(G, B), publication(H, A).;false;true
3;true,false,false;publication(I, A), tempadvisedby(J, B).;false;false
3;true,true,true;publication(F, A).;false;false
3;false;student(B).;false;true
3;true;publication(D, B), publication(D, A).;true;true
3;false,false;publication(K, A).;false;false
3;true,true;tempadvisedby(E, B), publication(F, E).;true;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,false;publication(G, A), tempadvisedby(H, B).;true;true
4;true,false,true;ta(I, H, J).;false;false
4;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false
4;true,true,true;publication(F, B).;false;false
4;false;ta(N, A, P).;false;false
4;true;publication(D, B), publication(D, A).;true;true
4;true,true;tempadvisedby(E, B), publication(F, E).;true;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false;projectmember(H, B).;true;true
5;true,false,true;publication(I, A).;false;false
5;true,false,false;ta(J, A, K).;false;false
5;true,true,true;ta(F, E, G).;false;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false;ta(I, A, J), publication(K, B).;true;true
6;true,false,true;ta(L, M, J), publication(K, M).;false;false
6;true,false,false;publication(N, B), publication(P, A).;false;false
6;true,true,true;ta(E, D, F).;false;false
6;true,true,false;ta(G, A, H).;false;false
6;true;publication(C, B), publication(C, A).;true;true
6;true,true;tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false;tempadvisedby(F, B), publication(G, B).;true;true
7;true,false,true;ta(H, F, I), ta(J, A, K).;false;false
7;true,false,false;ta(L, A, M).;false;false
7;true,true,true;publication(C, B).;false;false
7;true,true,false;tempadvisedby(E, B).;false;false
7;true;publication(C, A).;true;true
7;true,true;publication(C, D), professor(D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false;publication(F, B).;true;true
8;true,false,true;publication(G, A), tempadvisedby(H, B).;false;false
8;true,false,false;tempadvisedby(I, B).;false;false
8;true,true,false;publication(E, A), publication(D, B).;false;false
8;true;tempadvisedby(C, B), publication(D, C).;true;true
8;true,true;publication(D, A).;false;true
9;;advisedby(A, B) :- tempadvisedby(C, B), ta(D, C, E).;true;true
9;false,true,false;tempadvisedby(I, B), publication(J, B).;false;false
9;true,true,true;publication(G, C).;false;false
9;false;professor(B), publication(H, A).;true;true
9;true;student(A).;true;false
9;false,false;professor(B), ta(K, A, L).;false;false
9;false,true;student(A), publication(H, B).;false;true
9;true,true;publication(F, B).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8,16e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.10159632948783628;  // std dev = 2,98e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.09269127618926094;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926104;  // std dev = 4,37e-09, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.21735479879639116;  // std dev = 0,107, 63,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08525848493783418;  // std dev = 0,008, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2160951185038047;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10372120990722282;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877140398151126;  // std dev = 6,14e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.18173091508608044;  // std dev = 2,98e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.09446760351081564;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324158399117835;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.14005446410796107;  // std dev = 0,469, 60,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842291480159354;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 6.611138379541368E-4;  // std dev = 1,260, 172,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( director(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06418825524423485;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072845
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.428 seconds
Total inference time: 4.387 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068791
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.758 seconds
Parameter learned model CLL: -0.068791


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,true': [0.0, 0, 56], 'true,false,true,false': [0.0, 0, 0], 'false': [8.69e-08, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(F, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,true': [0.0, 0, 56], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 109, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true,false': 'movie(C, B)', 'true': 'movie(C, D)', 'true,true,true': 'movie(C, B)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.03e-07, 0, 56], 'true,true,false,true': [0.0, 2, 0], 'false': [8.16e-08, 107, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, A)', 'true,true,true': 'movie(E, A)', 'false': 'actor(B)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 5, 0], 'true,true,true,true': [0.0, 0, 56], 'true,true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [2.98e-08, 102, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,false': 'movie(G, A)', 'true': 'movie(D, B), movie(D, A)', 'true,true,true': 'movie(E, B)', 'true,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [1.32e-09, 3, 0], 'true,true,true,true': [0.0, 0, 56], 'true,true,true,false': [0.0, 0, 0], 'false': [4.37e-09, 98, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.107, 7, 56], 'false': [0.008, 112, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,true': [0.0, 0, 56], 'true,false,true,false': [0.0, 0, 0], 'false': [6.14e-08, 105, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,true': 'movie(C, B)', 'true,true': 'movie(C, D), director(D)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [2.98e-08, 0, 56], 'true,true,true,false': [0.0, 3, 0], 'false': [0.0, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.469, 4, 56], 'false': [0.0, 120, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, B)', 'false': 'director(B), movie(F, A)', 'true,true': 'movie(D, E)', 'false,false': 'director(B)'}, {'false,false,false': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [1.26, 116, 56], 'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}]]
[{'': [0.03329369797859664, 7.190015778524824e-17], 'true,false': [0.0, nan], 'true': [-1.2688263138573217e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.05371895283263886, -8.148425868808489e-18], 'true,false': [0.0, nan], 'true': [-1.9032394707859825e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.014842341924197077, 6.22554967079527e-17], 'true,true,false': [0.0, nan], 'true': [0.014842341924197077, nan], 'true,true,true': [1.9032394707859825e-16, nan], 'true,true': [1.9032394707859825e-16, 0.0]}, {'': [0.020277621253640864, 8.707631565687502e-18], 'true,false': [0.0, nan], 'true,true,true': [-3.489272363107635e-16, nan], 'false': [8.707631565687502e-18, nan], 'true': [-3.489272363107635e-16, 0.0], 'true,true': [-3.489272363107635e-16, nan]}, {'': [0.008248078116164221, 9.063045098980869e-18], 'true,false': [2.3129646346357427e-18, nan], 'true': [-1.2688263138573217e-16, 2.3129646346357427e-18], 'true,true,true': [-1.2688263138573217e-16, nan], 'true,true': [-1.2688263138573217e-16, nan]}, {'': [0.011441272428251709, 6.034666307338668e-07], 'true': [0.011441272428251709, nan], 'true,true': [0.011441272428251709, nan]}, {'': [0.006364243443805854, 3.595007889262412e-17], 'true,false': [0.0, nan], 'true': [-9.516197353929913e-17, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.003681696191157789, -3.100622861565752e-17], 'true': [0.003681696191157789, nan], 'true,true,true': [1.586032892321652e-17, -1.1564823173178713e-18], 'true,true': [0.003681696191157789, nan]}, {'': [0.0036723688697011146, -1.2027416100105863e-17], 'true': [0.0036723688697011146, nan], 'true,true': [0.0036723688697011146, nan]}, {'': [0.009232552219422057, 0.0], 'true': [0.009232552219422057, nan], 'false,false': [nan, 0.0], 'true,true': [0.009232552219422057, nan], 'false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(E, A), movie(E, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(D, B), movie(D, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, B), movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839136;  // std dev = 0,000, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1123163781936062;  // std dev = 8,16e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783634;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926105;  // std dev = 1,83e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839678;  // std dev = 4,59e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109154;  // std dev = 7,15e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333713;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.1384747719041306;  // std dev = 0,054, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return -0.06842697784420264;  // std dev = 5,16e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801087;  // std dev = 2,79e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.1285559183715966;  // std dev = 0,038, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067695
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.359 seconds
Total inference time: 3.158 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064416
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.303 seconds
Refined model CLL: -0.064416


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067695
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.848 seconds
Total inference time: 3.158 seconds
AUC ROC: 1.0
Total revision time: 5.848
Best scored revision CLL: -0.064416


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 03:12:47
{'Learning time': 5.848, 'F1': 1.0, 'parameter': {'Learning time': 1.428, 'F1': 1.0, 'Recall': 1.0, 'CLL': -0.072845, 'AUC PR': 1.0, 'Inference time': 4.387, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}, 'Recall': 1.0, 'CLL': -0.067695, 'AUC PR': 1.0, 'Inference time': 3.158, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(D, A).;true;true
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;publication(F, B), ta(G, A, H).;false;false
0;true,false,true;publication(D, E), professor(E).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
1;true,false,true;publication(K, A).;false;false
1;true,false,false;publication(L, B), publication(M, A).;false;false
1;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E).;true;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true,false;publication(H, B), publication(H, A).;true;true
2;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
2;true,false,false;ta(L, A, M), publication(N, B).;false;false
2;true,true,true;publication(D, B).;false;false
2;true,true,false;ta(F, C, G), publication(D, B).;false;false
2;true;tempadvisedby(C, B), publication(D, C).;true;true
2;true,true;publication(E, A), publication(E, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,false;projectmember(G, B), publication(H, A).;false;true
3;true,false,false;publication(I, A), tempadvisedby(J, B).;false;false
3;true,true,true;publication(F, A).;false;false
3;false;student(B).;false;true
3;true;publication(D, B), publication(D, A).;true;true
3;false,false;publication(K, A).;false;false
3;true,true;tempadvisedby(E, B), publication(F, E).;true;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,false;publication(G, A), tempadvisedby(H, B).;true;true
4;true,false,true;ta(I, H, J).;false;false
4;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false
4;true,true,true;publication(F, B).;false;false
4;false;ta(N, A, P).;false;false
4;true;publication(D, B), publication(D, A).;true;true
4;true,true;tempadvisedby(E, B), publication(F, E).;true;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false;projectmember(H, B).;true;true
5;true,false,true;publication(I, A).;false;false
5;true,false,false;ta(J, A, K).;false;false
5;true,true,true;ta(F, E, G).;false;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false;ta(I, A, J), publication(K, B).;true;true
6;true,false,true;ta(L, M, J), publication(K, M).;false;false
6;true,false,false;publication(N, B), publication(P, A).;false;false
6;true,true,true;ta(E, D, F).;false;false
6;true,true,false;ta(G, A, H).;false;false
6;true;publication(C, B), publication(C, A).;true;true
6;true,true;tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false;tempadvisedby(F, B), publication(G, B).;true;true
7;true,false,true;ta(H, F, I), ta(J, A, K).;false;false
7;true,false,false;ta(L, A, M).;false;false
7;true,true,true;publication(C, B).;false;false
7;true,true,false;tempadvisedby(E, B).;false;false
7;true;publication(C, A).;true;true
7;true,true;publication(C, D), professor(D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false;publication(F, B).;true;true
8;true,false,true;publication(G, A), tempadvisedby(H, B).;false;false
8;true,false,false;tempadvisedby(I, B).;false;false
8;true,true,false;publication(E, A), publication(D, B).;false;false
8;true;tempadvisedby(C, B), publication(D, C).;true;true
8;true,true;publication(D, A).;false;true
9;;advisedby(A, B) :- tempadvisedby(C, B), ta(D, C, E).;true;true
9;false,true,false;tempadvisedby(I, B), publication(J, B).;false;false
9;true,true,true;publication(G, C).;false;false
9;false;professor(B), publication(H, A).;true;true
9;true;student(A).;true;false
9;false,false;professor(B), ta(K, A, L).;false;false
9;false,true;student(A), publication(H, B).;false;true
9;true,true;publication(F, B).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048768;  // std dev = 6,32e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 7,88e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.10159632948783641;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0927648716710673;  // std dev = 0,000806, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2232637743859378;  // std dev = 0,099, 64,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08525340971045157;  // std dev = 0,008, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21509582905157903;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10427181441148639;  // std dev = 6,45e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07876643185204224;  // std dev = 5,87e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.1810019617697822;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09492697430634957;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0733706366166517;  // std dev = 0,010, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.1476074994990691;  // std dev = 0,338, 60,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06847159090853905;  // std dev = 0,007, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.0043045900425323965;  // std dev = 1,257, 167,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( director(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06417376372012973;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072959
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.527 seconds
Total inference time: 4.35 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069503
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.562 seconds
Parameter learned model CLL: -0.069503


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,true': [0.0, 0, 58], 'true,false,true,false': [0.0, 0, 0], 'false': [6.32e-08, 116, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(F, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,true': [0.0, 0, 58], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 111, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true,false': 'movie(C, B)', 'true': 'movie(C, D)', 'true,true,true': 'movie(C, B)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.19e-07, 0, 58], 'true,true,false,true': [7.45e-09, 11, 0], 'false': [7.88e-08, 103, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, A)', 'true,true,true': 'movie(E, A)', 'false': 'actor(B)', 'true': 'movie(D, B), movie(D, A)', 'true,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,true,true,true': [0.0, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 134, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,false': 'movie(G, A)', 'true': 'movie(D, B), movie(D, A)', 'true,true,true': 'movie(E, B)', 'true,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 7, 0], 'true,true,true,true': [0.0, 0, 58], 'true,true,true,false': [0.0, 0, 0], 'false': [0.000806, 121, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.099, 6, 58], 'false': [0.008, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [6.45e-09, 8, 0], 'true,true': [0.0, 0, 58], 'true,false,true,false': [0.0, 0, 0], 'false': [5.87e-08, 106, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,true': 'movie(C, B)', 'true,true': 'movie(C, D), director(D)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 58], 'true,true,true,false': [0.0, 4, 0], 'false': [0.01, 108, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.338, 2, 58], 'false': [0.007, 111, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, B)', 'false': 'director(B), movie(F, A)', 'true,true': 'movie(D, E)', 'false,false': 'director(B)'}, {'false,false,false': [0.0, 6, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [1.257, 109, 58], 'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}]]
[{'': [0.10651974288337872, 3.4455197315953135e-17], 'true,false': [-6.938893903907228e-18, nan], 'true': [-3.675221047035001e-16, -6.938893903907228e-18], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.06860069208541114, -6.00120553851436e-18], 'true,false': [-1.982541115402065e-18, nan], 'true': [-1.2250736823450003e-16, -1.982541115402065e-18], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.059739680275476624, 6.036164017379492e-17], 'true,true,false': [5.046468293750712e-18, nan], 'true': [0.059739680275476624, nan], 'true,true,true': [2.4501473646900006e-16, nan], 'true,true': [2.4501473646900006e-16, 5.046468293750712e-18]}, {'': [0.012601093207619572, -4.142623226213271e-17], 'true,false': [-1.1564823173178713e-18, nan], 'true,true,true': [-3.3689526264487507e-16, nan], 'false': [-4.142623226213271e-17, nan], 'true': [-3.3689526264487507e-16, -1.1564823173178713e-18], 'true,true': [-3.3689526264487507e-16, nan]}, {'': [0.01642278575441154, 6.499553931130563e-07], 'true,false': [0.0, nan], 'true': [-1.5313421029312505e-16, 0.0], 'true,true,true': [-1.5313421029312505e-16, nan], 'true,true': [-1.5313421029312505e-16, nan]}, {'': [0.009842119970933802, 6.087802413830541e-07], 'true': [0.009842119970933802, nan], 'true,true': [0.009842119970933802, nan]}, {'': [0.0108645548541538, 3.2468786569226275e-17], 'true,false': [5.204170427930421e-18, nan], 'true': [-1.148506577198438e-16, 5.204170427930421e-18], 'true,false,true': [5.204170427930421e-18, nan]}, {'': [0.004595143715211392, 9.426836953715831e-07], 'true': [0.004595143715211392, nan], 'true,true,true': [-1.914177628664063e-17, 0.0], 'true,true': [0.004595143715211392, nan]}, {'': [0.0018992314415176089, 4.0866198008565265e-07], 'true': [0.0018992314415176089, nan], 'true,true': [0.0018992314415176089, nan]}, {'': [0.009456165998170927, 0.0], 'true': [0.009456165998170927, nan], 'false,false': [nan, 0.0], 'true,true': [0.009456165998170927, nan], 'false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(E, A), movie(E, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(D, B), movie(D, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, B), movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.12544463852839133;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1123163781936062;  // std dev = 8,94e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783623;  // std dev = 4,94e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926104;  // std dev = 2,79e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0851847513883968;  // std dev = 6,14e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109155;  // std dev = 6,66e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1543380683354034;  // std dev = 0,072, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.15877873748854962;  // std dev = 0,065, 41,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15533052775506953;  // std dev = 0,002, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08464416088267211;  // std dev = 0,000377, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06842697784420264;  // std dev = 5,48e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.13602318888444406;  // std dev = 0,002, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07844052539056019;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06419184008202622;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066262
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.366 seconds
Total inference time: 2.481 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064072
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.302 seconds
Refined model CLL: -0.064072


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066262
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.757 seconds
Total inference time: 2.481 seconds
AUC ROC: 1.0
Total revision time: 5.757
Best scored revision CLL: -0.064072


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 03:13:01
{'Learning time': 5.757, 'F1': 1.0, 'parameter': {'Learning time': 1.527, 'F1': 1.0, 'Recall': 1.0, 'CLL': -0.072959, 'AUC PR': 1.0, 'Inference time': 4.35, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}, 'Recall': 1.0, 'CLL': -0.066262, 'AUC PR': 1.0, 'Inference time': 2.481, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(D, A).;true;true
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;publication(F, B), ta(G, A, H).;false;false
0;true,false,true;publication(D, E), professor(E).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
1;true,false,true;publication(K, A).;false;false
1;true,false,false;publication(L, B), publication(M, A).;false;false
1;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E).;true;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true,false;publication(H, B), publication(H, A).;true;true
2;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
2;true,false,false;ta(L, A, M), publication(N, B).;false;false
2;true,true,true;publication(D, B).;false;false
2;true,true,false;ta(F, C, G), publication(D, B).;false;false
2;true;tempadvisedby(C, B), publication(D, C).;true;true
2;true,true;publication(E, A), publication(E, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,false;projectmember(G, B), publication(H, A).;false;true
3;true,false,false;publication(I, A), tempadvisedby(J, B).;false;false
3;true,true,true;publication(F, A).;false;false
3;false;student(B).;false;true
3;true;publication(D, B), publication(D, A).;true;true
3;false,false;publication(K, A).;false;false
3;true,true;tempadvisedby(E, B), publication(F, E).;true;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,false;publication(G, A), tempadvisedby(H, B).;true;true
4;true,false,true;ta(I, H, J).;false;false
4;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false
4;true,true,true;publication(F, B).;false;false
4;false;ta(N, A, P).;false;false
4;true;publication(D, B), publication(D, A).;true;true
4;true,true;tempadvisedby(E, B), publication(F, E).;true;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false;projectmember(H, B).;true;true
5;true,false,true;publication(I, A).;false;false
5;true,false,false;ta(J, A, K).;false;false
5;true,true,true;ta(F, E, G).;false;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false;ta(I, A, J), publication(K, B).;true;true
6;true,false,true;ta(L, M, J), publication(K, M).;false;false
6;true,false,false;publication(N, B), publication(P, A).;false;false
6;true,true,true;ta(E, D, F).;false;false
6;true,true,false;ta(G, A, H).;false;false
6;true;publication(C, B), publication(C, A).;true;true
6;true,true;tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false;tempadvisedby(F, B), publication(G, B).;true;true
7;true,false,true;ta(H, F, I), ta(J, A, K).;false;false
7;true,false,false;ta(L, A, M).;false;false
7;true,true,true;publication(C, B).;false;false
7;true,true,false;tempadvisedby(E, B).;false;false
7;true;publication(C, A).;true;true
7;true,true;publication(C, D), professor(D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false;publication(F, B).;true;true
8;true,false,true;publication(G, A), tempadvisedby(H, B).;false;false
8;true,false,false;tempadvisedby(I, B).;false;false
8;true,true,false;publication(E, A), publication(D, B).;false;false
8;true;tempadvisedby(C, B), publication(D, C).;true;true
8;true,true;publication(D, A).;false;true
9;;advisedby(A, B) :- tempadvisedby(C, B), ta(D, C, E).;true;true
9;false,true,false;tempadvisedby(I, B), publication(J, B).;false;false
9;true,true,true;publication(G, C).;false;false
9;false;professor(B), publication(H, A).;true;true
9;true;student(A).;true;false
9;false,false;professor(B), ta(K, A, L).;false;false
9;false,true;student(A), publication(H, B).;false;true
9;true,true;publication(F, B).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.141851064900488;  // std dev = 0,000, 311,000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.1254446385283916;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0,000, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.11231637819360626;  // std dev = 4,71e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 0,000, 274,000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.10159632948783662;  // std dev = 0,000, 277,000 (wgt'ed) examples reached here.  /* #neg=277 */
%   | else if ( movie(H, A) )
%   | | then return 0.14298430290313646;  // std dev = 2,643, 104,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.3207118471601498;  // std dev = 2,49e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.029260216176048744;  // std dev = 0,167, 349,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=49 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.20187174414266024;  // std dev = 0,173, 232,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09307834249444534;  // std dev = 0,131, 315,000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2530236958623159;  // std dev = 0,056, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.11690953763754605;  // std dev = 0,122, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0856984551342087;  // std dev = 0,123, 302,000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.20888758273083552;  // std dev = 0,656, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.10254698271112103;  // std dev = 0,121, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07927434397078423;  // std dev = 0,114, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.11272170904895867;  // std dev = 1,870, 232,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07326295360709367;  // std dev = 0,099, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.02426651415717875;  // std dev = 2,484, 421,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then if ( actor(A), movie(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B) )
%   | | | then return -0.08338630008537212;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( director(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06649728680845267;  // std dev = 2,89e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07295
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.432 seconds
Total inference time: 3.61 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081972
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.809 seconds
Parameter learned model CLL: -0.081972


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [5.96e-08, 57, 0], 'true,true': [1.09e-06, 0, 178], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 311, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(F, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 65, 0], 'true,true': [0.0, 0, 178], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 299, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true,false': 'movie(C, B)', 'true': 'movie(C, D)', 'true,true,true': 'movie(C, B)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [5.9e-07, 0, 178], 'true,true,false,true': [4.71e-08, 62, 0], 'false': [0.0, 274, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, A)', 'true,true,true': 'movie(E, A)', 'false': 'actor(B)', 'true': 'movie(D, B), movie(D, A)', 'false,false': 'movie(H, A)', 'true,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 27, 0], 'true,true,true,true': [3.77e-07, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [0.0, 277, 0], 'false,false,true': [2.643, 55, 49]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,false': 'movie(G, A)', 'true': 'movie(D, B), movie(D, A)', 'true,true,true': 'movie(E, B)', 'true,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 30, 0], 'true,true,true,true': [2.49e-07, 0, 129], 'true,true,true,false': [0.0, 0, 0], 'false': [0.167, 300, 49], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.173, 54, 178], 'false': [0.131, 315, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.122, 59, 0], 'true,true': [0.056, 0, 178], 'true,false,true,false': [0.0, 0, 0], 'false': [0.123, 302, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,true': 'movie(C, B)', 'true,true': 'movie(C, D), director(D)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.656, 0, 178], 'true,true,true,false': [0.121, 75, 0], 'false': [0.114, 296, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [1.87, 54, 178], 'false': [0.099, 295, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'false,true,false': 'movie(G, B)', 'false,false': 'director(B)', 'true': 'movie(C, B)', 'false': 'director(B), movie(F, A)', 'false,true': 'actor(A), movie(F, B)', 'true,true': 'movie(D, E)'}, {'false,false,false': [2.89e-08, 76, 0], 'true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [2.484, 243, 178], 'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [1.29e-08, 22, 0]}]]
[{'': [0.18372114078769256, -3.427054995627493e-17], 'true,false': [6.232831015439475e-17, nan], 'true': [6.706246045376226e-15, 6.232831015439475e-17], 'true,false,true': [6.232831015439475e-17, nan]}, {'': [0.1398781850534626, -6.832141690000964e-17], 'true,false': [-3.75767792950053e-17, nan], 'true': [-3.193450497798203e-15, -3.75767792950053e-17], 'true,false,true': [-3.75767792950053e-17, nan]}, {'': [0.08541410707145755, 0.0], 'true,true,false': [3.581364595565021e-17, nan], 'true': [0.08541410707145755, nan], 'true,true,true': [1.9559884299013994e-15, nan], 'true,true': [1.9559884299013994e-15, 3.581364595565021e-17]}, {'': [0.03856762745802177, 0.030199715947030012], 'true,false': [-2.05596856412066e-18, nan], 'true,true,true': [1.1016166445893026e-15, nan], 'false,false': [0.06714454521922984, nan], 'true': [1.1016166445893026e-15, -2.05596856412066e-18], 'false': [-5.77155651790695e-17, 0.06714454521922984], 'true,true': [1.1016166445893026e-15, nan]}, {'': [0.02616159531145322, 0.02785087132661809], 'true,false': [-1.8503717077085942e-18, nan], 'true': [4.819572820078199e-16, -1.8503717077085942e-18], 'true,true,true': [4.819572820078199e-16, nan], 'true,true': [4.819572820078199e-16, nan]}, {'': [0.029800994934938402, 5.4621792287025955e-05], 'true': [0.029800994934938402, nan], 'true,true': [0.029800994934938402, nan]}, {'': [0.02797566588421797, 4.9759863157572485e-05], 'true,false': [0.00025328770952687355, nan], 'true': [0.0030962519014212705, 0.00025328770952687355], 'true,false,true': [0.00025328770952687355, nan]}, {'': [0.02199031652347521, 4.396644872916983e-05], 'true': [0.02199031652347521, nan], 'true,true,true': [0.0024208396828518356, 0.00019613722814797304], 'true,true': [0.02199031652347521, nan]}, {'': [0.01507494177650839, 3.291939114240979e-05], 'true': [0.01507494177650839, nan], 'true,true': [0.01507494177650839, nan]}, {'': [0.014650340394110466, 4.965839468455379e-05], 'false,true,false': [7.569702440626067e-18, nan], 'false,false': [nan, 1.0956148269327203e-17], 'true': [0.014650340394110466, nan], 'false': [7.569702440626067e-18, 1.0956148269327203e-17], 'false,true': [nan, 7.569702440626067e-18], 'true,true': [0.014650340394110466, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(E, A), movie(E, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(D, B), movie(D, A).;true;true
3;false;actor(B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, B), movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A).;true;true
9;false;director(B), movie(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.14185106490048796;  // std dev = 0,000, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.12544463852839177;  // std dev = 0,000, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.11231637819360651;  // std dev = 0,000, 337,000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.4175135841583092;  // std dev = 3,77e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( actor(B) )
%   | then return -0.10159632948783662;  // std dev = 0,000, 271,000 (wgt'ed) examples reached here.  /* #neg=271 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.4175135841583106;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.10159632948783626;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.10159632948783624;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.3207118471601498;  // std dev = 2,49e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( actor(B) )
%   | then return -0.0926912761892605;  // std dev = 1,21e-07, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.32071184716014944;  // std dev = 9,88e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.0926912761892609;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926105;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,37e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.08518475138839678;  // std dev = 9,19e-08, 274,000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253506;  // std dev = 2,94e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.07877675473109148;  // std dev = 5,16e-08, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.10219080094742496;  // std dev = 0,115, 127,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=89 */
%   | | else return 0.1221967776775995;  // std dev = 0,104, 114,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0732462257633368;  // std dev = 1,20e-07, 281,000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.16133829022483165;  // std dev = 0,018, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08095546210565686;  // std dev = 0,006, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.06842697784420262;  // std dev = 8,02e-08, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0.1406816043564178;  // std dev = 0,016, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0674217896984372;  // std dev = 0,073, 201,000 (wgt'ed) examples reached here.  /* #neg=201 */
%   else if ( director(B), movie(D, A) )
%   | then return -0.06419184008202622;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064031
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.369 seconds
Total inference time: 2.437 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067432
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.565 seconds
Refined model CLL: -0.067432


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064031
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.174999999999999 seconds
Total inference time: 2.437 seconds
AUC ROC: 1.0
Total revision time: 8.174999999999999
Best scored revision CLL: -0.067432


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 03:13:16
{'Learning time': 8.174999999999999, 'F1': 1.0, 'parameter': {'Learning time': 2.432, 'F1': 1.0, 'Recall': 1.0, 'CLL': -0.07295, 'AUC PR': 1.0, 'Inference time': 3.61, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}, 'Recall': 1.0, 'CLL': -0.064031, 'AUC PR': 1.0, 'Inference time': 2.437, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(D, A).;true;true
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;publication(F, B), ta(G, A, H).;false;false
0;true,false,true;publication(D, E), professor(E).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
1;true,false,true;publication(K, A).;false;false
1;true,false,false;publication(L, B), publication(M, A).;false;false
1;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E).;true;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true,false;publication(H, B), publication(H, A).;true;true
2;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
2;true,false,false;ta(L, A, M), publication(N, B).;false;false
2;true,true,true;publication(D, B).;false;false
2;true,true,false;ta(F, C, G), publication(D, B).;false;false
2;true;tempadvisedby(C, B), publication(D, C).;true;true
2;true,true;publication(E, A), publication(E, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,false;projectmember(G, B), publication(H, A).;false;true
3;true,false,false;publication(I, A), tempadvisedby(J, B).;false;false
3;true,true,true;publication(F, A).;false;false
3;false;student(B).;false;true
3;true;publication(D, B), publication(D, A).;true;true
3;false,false;publication(K, A).;false;false
3;true,true;tempadvisedby(E, B), publication(F, E).;true;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,false;publication(G, A), tempadvisedby(H, B).;true;true
4;true,false,true;ta(I, H, J).;false;false
4;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false
4;true,true,true;publication(F, B).;false;false
4;false;ta(N, A, P).;false;false
4;true;publication(D, B), publication(D, A).;true;true
4;true,true;tempadvisedby(E, B), publication(F, E).;true;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false;projectmember(H, B).;true;true
5;true,false,true;publication(I, A).;false;false
5;true,false,false;ta(J, A, K).;false;false
5;true,true,true;ta(F, E, G).;false;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false;ta(I, A, J), publication(K, B).;true;true
6;true,false,true;ta(L, M, J), publication(K, M).;false;false
6;true,false,false;publication(N, B), publication(P, A).;false;false
6;true,true,true;ta(E, D, F).;false;false
6;true,true,false;ta(G, A, H).;false;false
6;true;publication(C, B), publication(C, A).;true;true
6;true,true;tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false;tempadvisedby(F, B), publication(G, B).;true;true
7;true,false,true;ta(H, F, I), ta(J, A, K).;false;false
7;true,false,false;ta(L, A, M).;false;false
7;true,true,true;publication(C, B).;false;false
7;true,true,false;tempadvisedby(E, B).;false;false
7;true;publication(C, A).;true;true
7;true,true;publication(C, D), professor(D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false;publication(F, B).;true;true
8;true,false,true;publication(G, A), tempadvisedby(H, B).;false;false
8;true,false,false;tempadvisedby(I, B).;false;false
8;true,true,false;publication(E, A), publication(D, B).;false;false
8;true;tempadvisedby(C, B), publication(D, C).;true;true
8;true,true;publication(D, A).;false;true
9;;advisedby(A, B) :- tempadvisedby(C, B), ta(D, C, E).;true;true
9;false,true,false;tempadvisedby(I, B), publication(J, B).;false;false
9;true,true,true;publication(G, C).;false;false
9;false;professor(B), publication(H, A).;true;true
9;true;student(A).;true;false
9;false,false;professor(B), ta(K, A, L).;false;false
9;false,true;student(A), publication(H, B).;false;true
9;true,true;publication(F, B).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360625;  // std dev = 5,58e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.10159632948783616;  // std dev = 5,77e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( movie(H, A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.221136543173701;  // std dev = 0,102, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 5,37e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21545518633020164;  // std dev = 1,09e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.10407329989682691;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109166;  // std dev = 3,87e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.18126417965554878;  // std dev = 3,33e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.094761396396285;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.12732910596439428;  // std dev = 0,559, 51,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 4,28e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.004374747225006965;  // std dev = 1,125, 131,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( director(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06419184008202622;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072042
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.405 seconds
Total inference time: 4.203 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070377
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.358 seconds
Parameter learned model CLL: -0.070377


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 8, 0], 'true,true': [2.23e-07, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false': [8.16e-08, 87, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(F, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 94, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true,false': 'movie(C, B)', 'true': 'movie(C, D)', 'true,true,true': 'movie(C, B)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 45], 'true,true,false,true': [0.0, 5, 0], 'false': [5.58e-08, 76, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, A)', 'true,true,true': 'movie(E, A)', 'false': 'actor(B)', 'true': 'movie(D, B), movie(D, A)', 'false,false': 'movie(H, A)', 'true,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 4, 0], 'true,true,true,true': [0.0, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [5.77e-08, 82, 0], 'false,false,true': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,false': 'movie(G, A)', 'true': 'movie(D, B), movie(D, A)', 'true,true,true': 'movie(E, B)', 'true,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 6, 0], 'true,true,true,true': [2.98e-08, 0, 45], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 82, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.102, 5, 45], 'false': [5.37e-08, 92, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, B)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,true': [1.09e-08, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false': [3.87e-08, 74, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,true': 'movie(C, B)', 'true,true': 'movie(C, D), director(D)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [3.33e-08, 0, 45], 'true,true,true,false': [0.0, 5, 0], 'false': [0.0, 86, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.559, 6, 45], 'false': [4.28e-08, 89, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, B)', 'false': 'director(B), movie(F, A)', 'true,true': 'movie(D, E)', 'false,false': 'director(B)'}, {'false,false,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [1.125, 86, 45], 'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}]]
[{'': [0.12815948736205124, 7.656710514656253e-17], 'true,false': [-6.938893903907228e-18, nan], 'true': [1.105288700071267e-15, -6.938893903907228e-18], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.05351918877289897, -1.4173059888831785e-17], 'true,false': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.040122030722945186, 4.0902953538821554e-17], 'true,true,false': [0.0, nan], 'true': [0.040122030722945186, nan], 'true,true,true': [-3.947459643111668e-17, nan], 'true,true': [-3.947459643111668e-17, 0.0]}, {'': [0.020202215093805483, 4.0490486780446883e-17], 'true,false': [0.0, nan], 'true,true,true': [-4.144832625267251e-16, nan], 'false,false': [-1.1564823173178713e-18, nan], 'true': [-4.144832625267251e-16, 0.0], 'false': [4.06179155350667e-17, -1.1564823173178713e-18], 'true,true': [-4.144832625267251e-16, nan]}, {'': [0.01774070682301534, 0.0], 'true,false': [1.1564823173178713e-18, nan], 'true': [1.973729821555834e-17, 1.1564823173178713e-18], 'true,true,true': [1.973729821555834e-17, nan], 'true,true': [1.973729821555834e-17, nan]}, {'': [0.010425859500244368, 3.137586808723268e-17], 'true': [0.010425859500244368, nan], 'true,true': [0.010425859500244368, nan]}, {'': [0.011893865701116583, 2.0254068692485963e-17], 'true,false': [0.0, nan], 'true': [1.1842378929335003e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.0068571106771272115, -7.10026352957949e-18], 'true': [0.0068571106771272115, nan], 'true,true,true': [2.4671622769447922e-17, 0.0], 'true,true': [0.0068571106771272115, nan]}, {'': [0.006121434337400716, 2.0582786411589982e-17], 'true': [0.006121434337400716, nan], 'true,true': [0.006121434337400716, nan]}, {'': [0.009653468536239234, 0.0], 'true': [0.009653468536239234, nan], 'false,false': [nan, 0.0], 'true,true': [0.009653468536239234, nan], 'false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(E, A), movie(E, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(D, B), movie(D, A).;true;true
3;false;actor(B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, B), movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048766;  // std dev = 7,74e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.12544463852839144;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.11231637819360625;  // std dev = 6,32e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.1015963294878362;  // std dev = 5,37e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09368072655576935;  // std dev = 0,003, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08518475138839679;  // std dev = 2,24e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.08603306824542076;  // std dev = 0,003, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.07864348936659109;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1562346041195595;  // std dev = 0,069, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.16318856866146558;  // std dev = 0,057, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return -0.07314178886301632;  // std dev = 6,12e-05, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15546326381156383;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.15455243287610446;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.08494453592667149;  // std dev = 0,000624, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.0684269778442027;  // std dev = 1,39e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( female(B) )
%   | | then return -0.06838806463979986;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06832505254668891;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13612646519899863;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.1354173779489124;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.07861236470904133;  // std dev = 0,000218, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(B) )
%   | then return -0.06415750582171054;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06501215379859908;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066133
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.951 seconds
Total inference time: 2.441 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06473
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.343 seconds
Refined model CLL: -0.06473


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066133
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.057 seconds
Total inference time: 2.441 seconds
AUC ROC: 1.0
Total revision time: 6.057
Best scored revision CLL: -0.06473


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 03:13:29
{'Learning time': 6.057, 'F1': 1.0, 'parameter': {'Learning time': 1.405, 'F1': 1.0, 'Recall': 1.0, 'CLL': -0.072042, 'AUC PR': 1.0, 'Inference time': 4.203, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}, 'Recall': 1.0, 'CLL': -0.066133, 'AUC PR': 1.0, 'Inference time': 2.441, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(D, A).;true;true
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,false;publication(F, B), ta(G, A, H).;false;false
0;true,false,true;publication(D, E), professor(E).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;tempadvisedby(I, B), publication(J, I).;true;true
1;true,false,true;publication(K, A).;false;false
1;true,false,false;publication(L, B), publication(M, A).;false;false
1;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
1;true;publication(C, B), publication(C, A).;true;true
1;true,true;ta(D, A, E).;true;false
2;;advisedby(A, B) :- student(A), professor(B).;true;false
2;true,false;publication(H, B), publication(H, A).;true;true
2;true,false,true;tempadvisedby(I, B), ta(J, I, K).;false;false
2;true,false,false;ta(L, A, M), publication(N, B).;false;false
2;true,true,true;publication(D, B).;false;false
2;true,true,false;ta(F, C, G), publication(D, B).;false;false
2;true;tempadvisedby(C, B), publication(D, C).;true;true
2;true,true;publication(E, A), publication(E, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,false;projectmember(G, B), publication(H, A).;false;true
3;true,false,false;publication(I, A), tempadvisedby(J, B).;false;false
3;true,true,true;publication(F, A).;false;false
3;false;student(B).;false;true
3;true;publication(D, B), publication(D, A).;true;true
3;false,false;publication(K, A).;false;false
3;true,true;tempadvisedby(E, B), publication(F, E).;true;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,false;publication(G, A), tempadvisedby(H, B).;true;true
4;true,false,true;ta(I, H, J).;false;false
4;true,false,false;ta(K, A, L), tempadvisedby(M, B).;false;false
4;true,true,true;publication(F, B).;false;false
4;false;ta(N, A, P).;false;false
4;true;publication(D, B), publication(D, A).;true;true
4;true,true;tempadvisedby(E, B), publication(F, E).;true;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,false;projectmember(H, B).;true;true
5;true,false,true;publication(I, A).;false;false
5;true,false,false;ta(J, A, K).;false;false
5;true,true,true;ta(F, E, G).;false;false
5;true;publication(C, B).;true;true
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false;ta(I, A, J), publication(K, B).;true;true
6;true,false,true;ta(L, M, J), publication(K, M).;false;false
6;true,false,false;publication(N, B), publication(P, A).;false;false
6;true,true,true;ta(E, D, F).;false;false
6;true,true,false;ta(G, A, H).;false;false
6;true;publication(C, B), publication(C, A).;true;true
6;true,true;tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,false;tempadvisedby(F, B), publication(G, B).;true;true
7;true,false,true;ta(H, F, I), ta(J, A, K).;false;false
7;true,false,false;ta(L, A, M).;false;false
7;true,true,true;publication(C, B).;false;false
7;true,true,false;tempadvisedby(E, B).;false;false
7;true;publication(C, A).;true;true
7;true,true;publication(C, D), professor(D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false;publication(F, B).;true;true
8;true,false,true;publication(G, A), tempadvisedby(H, B).;false;false
8;true,false,false;tempadvisedby(I, B).;false;false
8;true,true,false;publication(E, A), publication(D, B).;false;false
8;true;tempadvisedby(C, B), publication(D, C).;true;true
8;true,true;publication(D, A).;false;true
9;;advisedby(A, B) :- tempadvisedby(C, B), ta(D, C, E).;true;true
9;false,true,false;tempadvisedby(I, B), publication(J, B).;false;false
9;true,true,true;publication(G, C).;false;false
9;false;professor(B), publication(H, A).;true;true
9;true;student(A).;true;false
9;false,false;professor(B), ta(K, A, L).;false;false
9;false,true;student(A), publication(H, B).;false;true
9;true,true;publication(F, B).;true;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, E) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839144;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360625;  // std dev = 6,50e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.4175135841583102;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1015963294878362;  // std dev = 5,37e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( movie(H, A) )
%   | | then return 0.2977189887015069;  // std dev = 0,789, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.3207118471601495;  // std dev = 2,98e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then return -0.09269127618926094;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05375437301161538;  // std dev = 0,126, 112,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2539568603222658;  // std dev = 0,104, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08914888245747558;  // std dev = 0,053, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2307355560018773;  // std dev = 0,039, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08175325638755722;  // std dev = 0,035, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, D), director(D) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.19262597230585443;  // std dev = 0,231, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12373960559763941;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07544804852595996;  // std dev = 2,89e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.1483346085093057;  // std dev = 0,483, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0703508120329246;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.004046974527477126;  // std dev = 1,200, 130,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then if ( actor(A), movie(F, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(G, B) )
%   | | | then return -0.09514708352419347;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( director(B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06588653711082902;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0758
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.321 seconds
Total inference time: 4.293 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072956
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.324 seconds
Parameter learned model CLL: -0.072956


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,true': [2.23e-07, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false': [7.88e-08, 84, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, E)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(F, A)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 90, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true,false': 'movie(C, B)', 'true': 'movie(C, D)', 'true,true,true': 'movie(C, B)', 'true,true': 'movie(E, A), movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 45], 'true,true,false,true': [0.0, 8, 0], 'false': [6.5e-08, 91, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(G, A)', 'true,true,true': 'movie(E, A)', 'false': 'actor(B)', 'true': 'movie(D, B), movie(D, A)', 'false,false': 'movie(H, A)', 'true,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,true,true,true': [0.0, 0, 35], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true': [5.37e-08, 87, 0], 'false,false,true': [0.789, 3, 10]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,false': 'movie(G, A)', 'true': 'movie(D, B), movie(D, A)', 'true,true,true': 'movie(E, B)', 'true,true': 'movie(E, F)'}, {'true,false,false': [0.0, 0, 0], 'true,false,true': [1.32e-09, 3, 0], 'true,true,true,true': [2.98e-08, 0, 35], 'true,true,true,false': [0.0, 0, 0], 'false': [0.126, 102, 10], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.104, 3, 45], 'false': [0.053, 86, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false': [0.0, 0, 0], 'true,true': [0.039, 0, 45], 'false': [0.035, 88, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true,true': 'movie(C, B)', 'true,true': 'movie(C, D), director(D)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.231, 0, 45], 'true,true,true,false': [0.041, 3, 0], 'false': [2.89e-08, 76, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.483, 3, 45], 'false': [0.0, 97, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'false,true,false': 'movie(G, B)', 'false,false': 'director(B)', 'true': 'movie(C, B)', 'false': 'director(B), movie(F, A)', 'false,true': 'actor(A), movie(F, B)', 'true,true': 'movie(D, E)'}, {'false,false,false': [0.0, 7, 0], 'true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [1.2, 85, 45], 'true,true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [1.86e-09, 3, 0]}]]
[{'': [0.07496876301541104, 7.401486830834377e-17], 'true,false': [0.0, nan], 'true': [1.105288700071267e-15, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.07410586634586562, -1.973729821555834e-17], 'true,false': [-2.3129646346357427e-18, nan], 'true': [-9.473903143468002e-16, -2.3129646346357427e-18], 'true,false,true': [-2.3129646346357427e-18, nan]}, {'': [0.05713354321530112, 4.636096146786368e-17], 'true,true,false': [-1.734723475976807e-18, nan], 'true': [0.05713354321530112, nan], 'true,true,true': [-3.947459643111668e-17, nan], 'true,true': [-3.947459643111668e-17, -1.734723475976807e-18]}, {'': [0.019594796230470345, 0.02425275922011391], 'true,false': [-1.1564823173178713e-18, nan], 'true,true,true': [-2.791417890486108e-16, nan], 'false,false': [0.047835817002196974, nan], 'true': [-2.791417890486108e-16, -1.1564823173178713e-18], 'false': [3.317907889684376e-17, 0.047835817002196974], 'true,true': [-2.791417890486108e-16, nan]}, {'': [0.012427094841745171, 0.015786797537799584], 'true,false': [2.3129646346357427e-18, nan], 'true': [2.5376526277146434e-17, 2.3129646346357427e-18], 'true,true,true': [2.5376526277146434e-17, nan], 'true,true': [2.5376526277146434e-17, nan]}, {'': [0.010743173457531766, 3.2556355905866916e-05], 'true': [0.010743173457531766, nan], 'true,true': [0.010743173457531766, nan]}, {'': [0.0015107924458428357, 1.3976610956911464e-05], 'true': [0.0015107924458428357, nan]}, {'': [0.007008621325638255, 1.0956148269327203e-17], 'true': [0.007008621325638255, nan], 'true,true,true': [0.0011838228014840013, 0.0005488689858786089], 'true,true': [0.007008621325638255, nan]}, {'': [0.004857398026163441, -2.0602076745621462e-17], 'true': [0.004857398026163441, nan], 'true,true': [0.004857398026163441, nan]}, {'': [0.011070509139080243, 0.00017979771104581626], 'false,true,false': [1.1564823173178713e-18, nan], 'false': [1.1564823173178713e-18, -1.982541115402065e-18], 'true': [0.011070509139080243, nan], 'false,false': [nan, -1.982541115402065e-18], 'false,true': [nan, 1.1564823173178713e-18], 'true,true': [0.011070509139080243, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- actor(A), director(B).;true;true
2;true;movie(E, A), movie(E, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;true;movie(D, B), movie(D, A).;true;true
3;false;actor(B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, B), movie(D, A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- actor(A).;true;true
9;false;director(B), movie(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048766;  // std dev = 7,30e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283915;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360626;  // std dev = 5,96e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.4175135841583102;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.10159632948783617;  // std dev = 5,77e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( female(A) )
%   | | then return 0.3433550250660033;  // std dev = 0,182, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B), movie(D, A) )
%   | then return 0.3207118471601495;  // std dev = 2,98e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2692817601378457;  // std dev = 0,166, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09318518844969063;  // std dev = 0,054, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25845133098405576;  // std dev = 0,056, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10705056722779234;  // std dev = 0,076, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08514626952592687;  // std dev = 4,47e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21208616775794611;  // std dev = 0,049, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10409903821183235;  // std dev = 0,066, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07874371004165662;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17881184162190958;  // std dev = 0,043, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.13754070701144694;  // std dev = 0,076, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07321755887551504;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15405012495243892;  // std dev = 0,039, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09127387018901797;  // std dev = 0,082, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06887816819423954;  // std dev = 0,041, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06414110401887109;  // std dev = 2,11e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.135030307055533;  // std dev = 0,035, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.0795047260328231;  // std dev = 0,080, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( director(B), movie(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06414110401887112;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066203
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.478 seconds
Total inference time: 2.302 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064667
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.072 seconds
Refined model CLL: -0.064667


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066203
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.195 seconds
Total inference time: 2.302 seconds
AUC ROC: 1.0
Total revision time: 5.195
Best scored revision CLL: -0.064667


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 03:13:42
{'Learning time': 5.195, 'F1': 1.0, 'parameter': {'Learning time': 1.321, 'F1': 1.0, 'Recall': 1.0, 'CLL': -0.0758, 'AUC PR': 1.0, 'Inference time': 4.293, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}, 'Recall': 1.0, 'CLL': -0.066203, 'AUC PR': 1.0, 'Inference time': 2.302, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


