Starting experiment #5 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21958095236496353;  // std dev = 0,480, 7.877,000 (wgt'ed) examples reached here.  /* #neg=5.030 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.16723984419042145;  // std dev = 0,462, 55,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.06745126068090805;  // std dev = 8,003, 387,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=81 */
%   | | | else return -0.05200731490048784;  // std dev = 4,575, 256,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=23 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.010931844844777626;  // std dev = 6,391, 359,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=47 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7838093116999733;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.36351043249698456;  // std dev = 4,262, 73,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=39 */
%   | | | else return 0.004588532479194079;  // std dev = 4,719, 154,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=27 */
%   | else return 0.18700851042739733;  // std dev = 0,479, 7.715,000 (wgt'ed) examples reached here.  /* #neg=4.955 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), venue(K, B) )
%   | | | then return 0.2365474016904309;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.17745649259952223;  // std dev = 3,144, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | else return -0.031026129946970314;  // std dev = 0,308, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | then return 0.09329794298749518;  // std dev = 0,425, 71,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | | else return -0.009575402052246404;  // std dev = 0,339, 1.008,000 (wgt'ed) examples reached here.  /* #neg=874 #pos=134 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.16118046895952134;  // std dev = 0,479, 7.906,000 (wgt'ed) examples reached here.  /* #neg=5.059 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7608905956420734;  // std dev = 2,689, 92,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=84 */
%   | | | else return -0.14780035898945812;  // std dev = 1,027, 337,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.12996226736747715;  // std dev = 3,196, 47,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return -0.052053424765420395;  // std dev = 4,394, 250,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.006330676110553311;  // std dev = 6,368, 353,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=47 */
%   | | | else return -0.09700807628455115;  // std dev = 1,385, 46,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=2 */
%   | | else return -0.12414037572825401;  // std dev = 0,003, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.6082649651552448;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.20761453947628072;  // std dev = 5,801, 142,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=61 */
%   | | | else return -0.13730302766427005;  // std dev = 2,103, 73,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=5 */
%   | else return 0.1337240857324961;  // std dev = 0,480, 7.677,000 (wgt'ed) examples reached here.  /* #neg=4.917 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.6876033905061816;  // std dev = 1,697, 87,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=84 */
%   | | | else return -0.12897469006229662;  // std dev = 1,021, 299,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=1 */
%   | | else if ( haswordtitle(I, L), haswordauthor(M, L) )
%   | | | then return -0.06224546960092835;  // std dev = 3,758, 184,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=17 */
%   | | | else return 0.026772244246024104;  // std dev = 4,007, 122,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=19 */
%   | else return -0.021540194988471074;  // std dev = 0,319, 422,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=49 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11119895125268216;  // std dev = 0,479, 7.877,000 (wgt'ed) examples reached here.  /* #neg=5.030 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6866704696853937;  // std dev = 0,281, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13953040295859115;  // std dev = 0,021, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.048790173373210004;  // std dev = 2,241, 56,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | | else return -0.13372787009990825;  // std dev = 0,031, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.00984725627383225;  // std dev = 6,326, 512,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=82 */
%   | | | else return 0.03581374221236206;  // std dev = 4,137, 124,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=21 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.009242820067870382;  // std dev = 6,460, 382,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=48 */
%   | | | else return -0.10937831995699131;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08771201497215758;  // std dev = 0,479, 7.923,000 (wgt'ed) examples reached here.  /* #neg=5.076 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.050568970828716364;  // std dev = 0,748, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.16843580881845044;  // std dev = 3,041, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.017816585308146605;  // std dev = 5,659, 412,000 (wgt'ed) examples reached here.  /* #neg=329 #pos=83 */
%   | | | else return -0.03583970593184186;  // std dev = 4,340, 225,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.009200932232354127;  // std dev = 6,384, 370,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=47 */
%   | | | else return -0.09523781415407077;  // std dev = 1,395, 64,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=2 */
%   | | else return -0.09901128735494684;  // std dev = 0,002, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07330688895408194;  // std dev = 0,479, 7.854,000 (wgt'ed) examples reached here.  /* #neg=5.007 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.04165120673182047;  // std dev = 0,742, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.18842132831654443;  // std dev = 2,923, 36,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.4870861075574622;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.10297293058842324;  // std dev = 0,035, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.016792184603929367;  // std dev = 7,581, 584,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=66 */
%   | | | else return 0.005664016016072748;  // std dev = 3,885, 197,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=37 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.016032159934840112;  // std dev = 4,420, 239,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=48 */
%   | | | else return -0.0906687532113821;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05700873227485857;  // std dev = 0,479, 7.877,000 (wgt'ed) examples reached here.  /* #neg=5.030 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.08690114458326598;  // std dev = 0,456, 48,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.15929989521555032;  // std dev = 1,189, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.09617403779375334;  // std dev = 0,034, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.01241354537059725;  // std dev = 5,686, 407,000 (wgt'ed) examples reached here.  /* #neg=324 #pos=83 */
%   | | | else return -0.041660731857436725;  // std dev = 4,369, 255,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=21 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.011286223340276737;  // std dev = 6,411, 395,000 (wgt'ed) examples reached here.  /* #neg=348 #pos=47 */
%   | | | else return -0.08415521850188118;  // std dev = 0,008, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, A), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.02311160462339262;  // std dev = 0,472, 7.682,000 (wgt'ed) examples reached here.  /* #neg=5.073 #pos=2.609 */
%   | | else return 0.023346094066058566;  // std dev = 0,354, 759,000 (wgt'ed) examples reached here.  /* #neg=624 #pos=135 */
%   | else if ( title(F, D), venue(F, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.10965016171022975;  // std dev = 4,625, 131,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=27 */
%   | | | else return -0.1043304252256558;  // std dev = 1,050, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.4331229071294001;  // std dev = 4,330, 103,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=78 */
%   | | | else return 0.03995895749004341;  // std dev = 4,529, 208,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=49 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then return 0.519448955029301;  // std dev = 0,366, 44,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   | | else return 0.6750323603899112;  // std dev = 0,254, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else return -0.0037857134016504998;  // std dev = 0,274, 271,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=49 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.3934130403433923;  // std dev = 0,218, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.20658787957705896;  // std dev = 4,285, 74,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=39 */
%   | | | else return -0.052728264822217756;  // std dev = 4,436, 101,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=27 */
%   | else return 0.03392849246963957;  // std dev = 0,476, 7.729,000 (wgt'ed) examples reached here.  /* #neg=4.969 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.5668295283140544;  // std dev = 0,268, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2884206158533764;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(L, H) )
%   | | | then return 0.0606465158110254;  // std dev = 3,087, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return -0.09347604529948998;  // std dev = 0,046, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.007771398288647007;  // std dev = 0,296, 1.049,000 (wgt'ed) examples reached here.  /* #neg=898 #pos=151 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,true;title(J, I), venue(J, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,true;author(K, I), venue(K, B).;false;false
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,false;haswordvenue(A, L), haswordauthor(M, L).;false;false
1;false,true;haswordtitle(J, H).;true;false
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;haswordauthor(H, D).;false;false
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;false,true;title(F, E), venue(F, A).;true;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,false,true;title(K, J), venue(K, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true,false;haswordtitle(I, L), haswordauthor(M, L).;false;false
3;false,true,true;samebib(J, K), venue(K, B).;false;false
3;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
3;true,true,false;haswordtitle(G, D).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;false,true;title(J, I), venue(J, A).;true;true
3;true,true;haswordauthor(F, C).;false;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;title(H, E), venue(H, A).;false;false
5;false,true,true;author(G, F), title(G, E).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true;haswordauthor(F, D).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(H, E), venue(H, A).;false;false
6;false,true,true;author(G, E), title(G, F).;false;false
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true;haswordtitle(F, D).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
6;false,false,true;title(K, J), venue(K, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(G, E), venue(G, A).;false;false
7;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,true;haswordtitle(F, D).;false;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,true;title(J, I), venue(J, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(F, D), venue(F, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, G), haswordvenue(B, G).;true;false
8;true;venue(E, A), title(E, D).;true;true
8;false,true;haswordvenue(B, H), haswordtitle(I, H).;false;false
8;true,true;haswordvenue(B, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;false,true,false;haswordtitle(L, H).;false;false
9;false,true,true;samebib(J, K), venue(K, B).;false;false
9;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
9;true,true,false;author(G, E), venue(G, B).;false;false
9;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
9;false,true;author(J, I), venue(J, A).;true;true
9;true,true;haswordauthor(F, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4945125714631494;  // std dev = 4,513, 88,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048766;  // std dev = 7,30e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21324294031064794;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.4867570596893514;  // std dev = 4,099, 80,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(B, G) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.33909762458628434;  // std dev = 4,451, 87,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360628;  // std dev = 5,89e-09, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.20712867454408146;  // std dev = 0,487, 96,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783616;  // std dev = 6,32e-09, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.21683090720332585;  // std dev = 4,406, 87,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=56 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926107;  // std dev = 1,32e-09, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1845456228943157;  // std dev = 4,275, 84,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839679;  // std dev = 1,83e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07734024661197957;  // std dev = 4,644, 93,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.083878083219333;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109165;  // std dev = 4,15e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14424279685482594;  // std dev = 4,107, 81,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07290069435651524;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.41349288393542855;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07617508216150329;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.4132719669461121;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.06842697784420275;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5867280330538879;  // std dev = 1,26e-07, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.06842697784420267;  // std dev = 2,89e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.3066827199152142;  // std dev = 0,630, 57,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.43735456984476473;  // std dev = 0,121, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.07601601533157323;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06344479572695595;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978388
   AUC PR    = 0.863056
   CLL	      = -0.157514
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.900506


Total learning time: 1.211 seconds
Total inference time: 2.354 seconds
AUC ROC: 0.978388


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.161721
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.306 seconds
Parameter learned model CLL: -0.161721


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [7.3e-08, 75, 0], 'true': [4.513, 32, 56], 'false,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(B, G)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)'}, {'false,true,false': [0.0, 93, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 5, 0], 'true,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.099, 24, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [5.89e-09, 61, 0], 'true': [4.451, 31, 56], 'false,true,true,false': [2.63e-09, 3, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true,true': 'genre(B, G)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [6.32e-09, 72, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.487, 40, 56], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)', 'false': 'movie(D, A)'}, {'false,true,false': [1.32e-09, 82, 0], 'true': [4.406, 31, 56], 'false,true,true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [1.83e-08, 71, 0], 'true': [4.275, 28, 56], 'false,true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [4.15e-08, 79, 0], 'true': [4.644, 37, 56], 'false,true,true': [0.012, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 77, 0], 'true': [4.107, 25, 56], 'false,true,true': [0.0, 8, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, E)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 2, 0], 'true,false,true,false': [1.32e-09, 3, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.015, 5, 0], 'true,false,false,false': [2.89e-08, 70, 0], 'true,false,false,true': [1.26e-07, 35, 0], 'true,false,true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'false,true,false': [0.0, 70, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 5, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.121, 32, 0], 'false,true,true,true': [0.0, 1, 0], 'true,true,true': [0.63, 1, 56]}]]
[{'': [0.23140495867768565, 7.209240419643874e-17], 'false,true': [0.0, 7.105427357601002e-17], 'false': [7.209240419643874e-17, nan]}, {'': [0.2165377751338497, -1.3594567648471304e-17], 'true': [0.2165377751338497, nan], 'false,true': [0.0, -1.4325458382260084e-17], 'true,true': [0.0, 0.2100000000000007], 'false': [-1.3594567648471304e-17, nan]}, {'': [0.22766793519262982, 3.8163916471489756e-17], 'false,true': [2.3129646346357427e-18, 3.45807171604557e-17], 'false,true,true': [nan, 2.3129646346357427e-18], 'false': [3.8163916471489756e-17, nan]}, {'': [0.23676444913395414, 1.4544374108885845e-06], 'true': [0.23676444913395414, nan], 'false,true,true': [0.0, 0.0], 'false,true': [1.5961033924177803e-05, 4.0091387000352874e-17], 'false': [1.4544374108885845e-06, nan]}, {'': [0.2231768796686184, 0.0], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.2175808724129412, 7.401486830834377e-18], 'false,true': [0.0, 4.6910832026415064e-18], 'false': [7.401486830834377e-18, nan]}, {'': [0.23190398534346365, 2.8214113116619713e-06], 'false,true': [5.2047104689883585e-05, 2.178285681226573e-17], 'false': [2.8214113116619713e-06, nan]}, {'': [0.20821271332443428, 1.0179300078666846e-08], 'false,true': [-1.734723475976807e-18, -4.325544251786324e-18], 'false': [1.0179300078666846e-08, nan]}, {'': [0.1301203866212041, nan], 'true,false': [0.011198417332155357, 0.05969688529588293], 'true,false,true': [-2.220446049250313e-16, 5.782411586589357e-19], 'true,false,false': [4.567774729886358e-16, 1.1895246692412391e-17], 'true': [0.02325194474744661, 0.1336600019779186], 'true,true': [0.0, 4.3208533970089116e-05]}, {'': [0.1321056654114548, 1.8650073716939157e-06], 'false,true,true': [0.0, 0.0], 'false': [1.8650073716939157e-06, nan], 'true': [0.1321056654114548, nan], 'false,true': [2.194938365937711e-05, -6.3441315692866086e-18], 'true,true': [0.006968080106332639, 0.00045963139864890756]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(A, E).;true;true
1;false;genre(B, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,true;genre(B, G).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;true;genre(B, E).;true;true
9;false,true;genre(B, H).;true;true
9;false;genre(A, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048766;  // std dev = 6,32e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.17713862161527616;  // std dev = 0,127, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(B, E) )
%   | then return -0.1254446385283914;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then return -0.12544463852839158;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( female(B) )
%   | | | then return -0.11063251171615511;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10175012672429004;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.10089658444796121;  // std dev = 0,006, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11396255561686974;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( female(B) )
%   | | | then return -0.09282003462426339;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0927501412445314;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08529401666701646;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08493123796661387;  // std dev = 0,004, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.08518475138839679;  // std dev = 2,58e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.078870570783536;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07861209150529187;  // std dev = 0,004, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.08555722992503145;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07332240366134357;  // std dev = 2,10e-05, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.06992550554547305;  // std dev = 5,27e-05, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.0787497278402766;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.07100822553153512;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420265;  // std dev = 2,04e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.06844583777785745;  // std dev = 0,000224, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801087;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.1069326736428035;  // std dev = 0,146, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 6,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.0642503719309565;  // std dev = 2,16e-06, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06854771641625103;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202622;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( female(B) )
%   | | | then return -0.06419070715159103;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.06419091313894289;  // std dev = 1,45e-06, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.999923
   AUC PR    = 0.997625
   CLL	      = -0.079235
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.819 seconds
Total inference time: 2.897 seconds
AUC ROC: 0.999923


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06458
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.528 seconds
Refined model CLL: -0.06458


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999923
   AUC PR    = 0.997625
   CLL	      = -0.079235
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 6.864000000000001 seconds
Total inference time: 2.897 seconds
AUC ROC: 0.999923
Total revision time: 6.864000000000001
Best scored revision CLL: -0.06458


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 03:47:43
{'Learning time': 6.864000000000001, 'F1': 0.847854, 'parameter': {'Learning time': 1.211, 'F1': 0.900506, 'Recall': 0.819018, 'CLL': -0.157514, 'AUC PR': 0.863056, 'Inference time': 2.354, 'Precision': [1.0, 0.5], 'AUC ROC': 0.978388}, 'Recall': 1.0, 'CLL': -0.079235, 'AUC PR': 0.997625, 'Inference time': 2.897, 'Precision': [0.735892, 0.5], 'AUC ROC': 0.999923}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,true;title(J, I), venue(J, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,true;author(K, I), venue(K, B).;false;false
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,false;haswordvenue(A, L), haswordauthor(M, L).;false;false
1;false,true;haswordtitle(J, H).;true;false
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;haswordauthor(H, D).;false;false
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;false,true;title(F, E), venue(F, A).;true;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,false,true;title(K, J), venue(K, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true,false;haswordtitle(I, L), haswordauthor(M, L).;false;false
3;false,true,true;samebib(J, K), venue(K, B).;false;false
3;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
3;true,true,false;haswordtitle(G, D).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;false,true;title(J, I), venue(J, A).;true;true
3;true,true;haswordauthor(F, C).;false;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;title(H, E), venue(H, A).;false;false
5;false,true,true;author(G, F), title(G, E).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true;haswordauthor(F, D).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(H, E), venue(H, A).;false;false
6;false,true,true;author(G, E), title(G, F).;false;false
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true;haswordtitle(F, D).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
6;false,false,true;title(K, J), venue(K, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(G, E), venue(G, A).;false;false
7;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,true;haswordtitle(F, D).;false;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,true;title(J, I), venue(J, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(F, D), venue(F, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, G), haswordvenue(B, G).;true;false
8;true;venue(E, A), title(E, D).;true;true
8;false,true;haswordvenue(B, H), haswordtitle(I, H).;false;false
8;true,true;haswordvenue(B, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;false,true,false;haswordtitle(L, H).;false;false
9;false,true,true;samebib(J, K), venue(K, B).;false;false
9;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
9;true,true,false;author(G, E), venue(G, B).;false;false
9;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
9;false,true;author(J, I), venue(J, A).;true;true
9;true,true;haswordauthor(F, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5172398441904221;  // std dev = 4,447, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21708075029492324;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.49896863242112516;  // std dev = 4,058, 81,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(B, G) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3338534548083762;  // std dev = 4,508, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360625;  // std dev = 6,59e-09, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.26971541818925276;  // std dev = 0,474, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.10159632948783617;  // std dev = 6,18e-09, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22511720003115485;  // std dev = 4,277, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13564546986390005;  // std dev = 4,480, 91,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08706138258861286;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839679;  // std dev = 2,79e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15801803632446446;  // std dev = 4,128, 83,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07864067337982937;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07877675473109162;  // std dev = 4,94e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.043624475638881145;  // std dev = 4,631, 93,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07372240027234916;  // std dev = 0,006, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.41730005721645774;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07058775709100198;  // std dev = 0,008, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.40560060505041784;  // std dev = 1,58e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5943993949495817;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.06842697784420267;  // std dev = 2,89e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.3126448710881497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.43563701180314734;  // std dev = 0,209, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06392937910797399;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.06419184008202626;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.977686
   AUC PR    = 0.861626
   CLL	      = -0.161564
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total learning time: 1.233 seconds
Total inference time: 2.519 seconds
AUC ROC: 0.977686


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.156614
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.815 seconds
Parameter learned model CLL: -0.156614


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [7.6e-08, 80, 0], 'true': [4.447, 30, 58], 'false,true,true': [0.0, 6, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(B, G)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)'}, {'false,true,false': [0.0, 71, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 5, 0], 'true,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.058, 23, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [6.59e-09, 69, 0], 'true': [4.508, 32, 58], 'false,true,true,false': [0.0, 8, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true,true': 'genre(B, G)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [6.18e-09, 83, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.474, 30, 58], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)', 'false': 'movie(D, A)'}, {'false,true,false': [0.0, 72, 0], 'true': [4.277, 28, 58], 'false,true,true,false': [0.0, 6, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [2.79e-08, 75, 0], 'true': [4.48, 33, 58], 'false,true,true': [0.007, 4, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [4.94e-08, 88, 0], 'true': [4.128, 25, 58], 'false,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 82, 0], 'true': [4.631, 35, 58], 'false,true,true': [0.006, 11, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, E)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 1, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.008, 8, 0], 'true,false,false,false': [2.89e-08, 70, 0], 'true,false,false,true': [0.0, 29, 0], 'true,false,true,true': [1.58e-07, 0, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'false,true,false': [0.0, 90, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.209, 33, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58]}]]
[{'': [0.2246900826446277, 7.229359230117299e-17], 'false,true': [-6.938893903907228e-18, 7.216449660063518e-17], 'false': [7.229359230117299e-17, nan]}, {'': [0.21048047612135262, -2.6294755846385285e-17], 'true': [0.21048047612135262, nan], 'false,true': [0.0, -3.1273888017610045e-17], 'true,true': [0.0, 0.20332266422801384], 'false': [-2.6294755846385285e-17, nan]}, {'': [0.2257553443877689, 4.981769982292369e-17], 'false,true': [-1.5419764230904951e-18, 4.344350965924526e-17], 'false,true,true': [0.0, -1.734723475976807e-18], 'false': [4.981769982292369e-17, nan]}, {'': [0.22469008264462842, 2.837236618486511e-17], 'true': [0.22469008264462842, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 4.01285430587406e-17], 'false': [2.837236618486511e-17, nan]}, {'': [0.21272213757111824, 9.91090849470819e-07], 'false,true': [9.710200928629961e-06, 0.0], 'false,true,true': [0.0, 0.0], 'false': [9.91090849470819e-07, nan]}, {'': [0.22056956971136074, 7.042360739920355e-07], 'false,true': [1.0565233984873718e-05, 1.0362081563168128e-17], 'false': [7.042360739920355e-07, nan]}, {'': [0.20528735951732424, 4.0236936375374435e-10], 'false,true': [0.0, 2.7755575615628914e-17], 'false': [4.0236936375374435e-10, nan]}, {'': [0.2306185412421387, 4.41313419093913e-07], 'false,true': [3.531181163909431e-06, -5.415722071342227e-18], 'false': [4.41313419093913e-07, nan]}, {'': [0.12175455508294798, nan], 'true,false': [0.0037439599718490776, 0.05729959969574717], 'true,false,true': [4.2877578882075013e-16, 0.0], 'true,false,false': [-1.2250736823450003e-16, 1.1895246692412391e-17], 'true': [0.011880385537802516, 0.12726083921420878], 'true,true': [0.0, 8.831612440703997e-06]}, {'': [0.1298966591149884, 1.4649618637739498e-09], 'false,true,true': [nan, 0.0], 'false': [1.4649618637739498e-09, nan], 'true': [0.1298966591149884, nan], 'false,true': [0.0, -1.2335811384723961e-17], 'true,true': [-1.9907447338106256e-16, 0.0013241086790466124]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(A, E).;true;true
1;false;genre(B, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, F).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;true;genre(B, E).;true;true
9;false;genre(A, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048763;  // std dev = 8,56e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(B, E) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360638;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926101;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694892;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2551722425694892;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then return -0.08518475138839679;  // std dev = 1,61e-09, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return -0.08518475138839687;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 7,45e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.07324622576333704;  // std dev = 1,05e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1238954881887308;  // std dev = 0,357, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return 0.14168531629677716;  // std dev = 0,305, 40,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.06842697784420268;  // std dev = 2,69e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.13739034612737094;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.13529556636300058;  // std dev = 5,27e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, E) )
%   | then return -0.06419184008202618;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else return -0.07760638234393828;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.999579
   AUC PR    = 0.986436
   CLL	      = -0.080144
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.62 seconds
Total inference time: 2.448 seconds
AUC ROC: 0.999579


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065425
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.886 seconds
Refined model CLL: -0.065425


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999579
   AUC PR    = 0.986436
   CLL	      = -0.080144
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 7.554 seconds
Total inference time: 2.448 seconds
AUC ROC: 0.999579
Total revision time: 7.554
Best scored revision CLL: -0.065425


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 03:47:56
{'Learning time': 7.554, 'F1': 0.848168, 'parameter': {'Learning time': 1.233, 'F1': 0.89983, 'Recall': 0.817901, 'CLL': -0.161564, 'AUC PR': 0.861626, 'Inference time': 2.519, 'Precision': [1.0, 0.5], 'AUC ROC': 0.977686}, 'Recall': 1.0, 'CLL': -0.080144, 'AUC PR': 0.986436, 'Inference time': 2.448, 'Precision': [0.736364, 0.5], 'AUC ROC': 0.999579}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,true;title(J, I), venue(J, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,true;author(K, I), venue(K, B).;false;false
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,false;haswordvenue(A, L), haswordauthor(M, L).;false;false
1;false,true;haswordtitle(J, H).;true;false
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;haswordauthor(H, D).;false;false
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;false,true;title(F, E), venue(F, A).;true;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,false,true;title(K, J), venue(K, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true,false;haswordtitle(I, L), haswordauthor(M, L).;false;false
3;false,true,true;samebib(J, K), venue(K, B).;false;false
3;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
3;true,true,false;haswordtitle(G, D).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;false,true;title(J, I), venue(J, A).;true;true
3;true,true;haswordauthor(F, C).;false;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;title(H, E), venue(H, A).;false;false
5;false,true,true;author(G, F), title(G, E).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true;haswordauthor(F, D).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(H, E), venue(H, A).;false;false
6;false,true,true;author(G, E), title(G, F).;false;false
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true;haswordtitle(F, D).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
6;false,false,true;title(K, J), venue(K, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(G, E), venue(G, A).;false;false
7;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,true;haswordtitle(F, D).;false;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,true;title(J, I), venue(J, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(F, D), venue(F, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, G), haswordvenue(B, G).;true;false
8;true;venue(E, A), title(E, D).;true;true
8;false,true;haswordvenue(B, H), haswordtitle(I, H).;false;false
8;true,true;haswordvenue(B, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;false,true,false;haswordtitle(L, H).;false;false
9;false,true,true;samebib(J, K), venue(K, B).;false;false
9;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
9;true,true,false;author(G, E), venue(G, B).;false;false
9;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
9;false,true;author(J, I), venue(J, A).;true;true
9;true,true;haswordauthor(F, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5401412722642597;  // std dev = 7,524, 261,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.14185106490048832;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.22099821241238868;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.5495645581503855;  // std dev = 6,391, 231,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(B, G) )
%   | | then return -0.12544463852839124;  // std dev = 4,47e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.12544463852839174;  // std dev = 0,000, 219,000 (wgt'ed) examples reached here.  /* #neg=219 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.39054336343529716;  // std dev = 6,976, 250,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.11231637819360642;  // std dev = 3,73e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360632;  // std dev = 3,16e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.1123163781936067;  // std dev = 0,000, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3101852155412702;  // std dev = 0,434, 247,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.10159632948783658;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2119328005085114;  // std dev = 7,082, 255,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=178 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.09269127618926049;  // std dev = 4,93e-09, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1765691641429818;  // std dev = 6,853, 249,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839686;  // std dev = 2,11e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.08518475138839678;  // std dev = 8,56e-08, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1044156228806807;  // std dev = 7,185, 261,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109177;  // std dev = 1,05e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.07877675473109144;  // std dev = 6,99e-08, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.057682883088592034;  // std dev = 7,488, 268,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 1,05e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.07324622576333667;  // std dev = 1,27e-07, 227,000 (wgt'ed) examples reached here.  /* #neg=227 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.44286862865754856;  // std dev = 4,21e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.0684269778442027;  // std dev = 1,05e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3679468756538919;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.06842697784420264;  // std dev = 2,04e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.1945531243461088;  // std dev = 5,250, 112,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=49 */
%   | | | else return -0.06842697784420261;  // std dev = 6,23e-08, 191,000 (wgt'ed) examples reached here.  /* #neg=191 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.2638810573642389;  // std dev = 1,372, 134,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=129 */
%   | | else return -0.17452979247751194;  // std dev = 5,303, 130,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.06419184008202626;  // std dev = 1,32e-09, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993692
   AUC PR    = 0.961008
   CLL	      = -0.254267
   Precision = 0.069012 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.129114


Total learning time: 1.637 seconds
Total inference time: 2.215 seconds
AUC ROC: 0.993692


Results scoring model
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.211343
   Precision = 0.226752 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.369678


Total scoring time: 1.796 seconds
Parameter learned model CLL: -0.211343


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 242, 0], 'true': [7.524, 83, 178], 'false,true,true': [4.71e-08, 45, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(B, G)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)'}, {'false,true,false': [0.0, 219, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [4.47e-08, 53, 0], 'true,true,true': [0.0, 19, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [6.391, 53, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 212, 0], 'true': [6.976, 72, 178], 'false,true,true,false': [3.16e-08, 51, 0], 'false,true,true,true': [3.73e-09, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true,true': 'genre(B, G)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [0.0, 242, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.434, 69, 178], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 9, 0], 'false,true,true,false': [0.0, 43, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)', 'false': 'movie(D, A)'}, {'false,true,false': [4.93e-09, 225, 0], 'true': [7.082, 77, 178], 'false,true,true,false': [0.0, 46, 0], 'false,true,true,true': [0.0, 8, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [8.56e-08, 229, 0], 'true': [6.853, 71, 178], 'false,true,true': [2.11e-08, 41, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [6.99e-08, 224, 0], 'true': [7.185, 83, 178], 'false,true,true': [1.05e-08, 53, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [1.27e-07, 227, 0], 'true': [7.488, 90, 178], 'false,true,true': [1.05e-08, 51, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, E)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [4.21e-08, 26, 0], 'true,false,true,false': [2.04e-08, 41, 0], 'false': [0.0, 0, 0], 'true,true,false': [1.05e-08, 47, 0], 'true,false,false,false': [6.23e-08, 191, 0], 'true,false,false,true': [5.25, 63, 49], 'true,false,true,true': [0.0, 0, 129]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'false,true,false': [1.32e-09, 239, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 47, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [5.303, 81, 49], 'false,true,true,true': [0.0, 4, 0], 'true,true,true': [1.372, 5, 129]}]]
[{'': [0.21687878921331705, -3.0946983264812726e-18], 'false,true': [4.9343245538895844e-17, -1.5781682664093133e-16], 'false': [-3.0946983264812726e-18, nan]}, {'': [0.2050559999999995, -7.18379604169219e-17], 'true': [0.2050559999999995, nan], 'false,true': [3.77056876287789e-17, -4.663950605731251e-17], 'true,true': [-2.337311630789803e-17, 0.17679578718539665], 'false': [-7.18379604169219e-17, nan]}, {'': [0.1946538396571078, -1.0855514018557086e-16], 'false,true': [3.062684205862501e-17, -5.86532918669894e-17], 'false,true,true': [1.982541115402065e-18, 1.959217102279688e-17], 'false': [-1.0855514018557086e-16, nan]}, {'': [0.18813936277399776, -5.437827059388522e-17], 'true': [0.18813936277399776, nan], 'false,true,true': [-6.1679056923619804e-18, -1.290957005378089e-18], 'false,true': [1.708035422500241e-17, -7.156809580228281e-17], 'false': [-5.437827059388522e-17, nan]}, {'': [0.1966987303139848, 7.162729191130042e-17], 'false,true': [-1.9531701359146273e-17, 2.1711028037114173e-17], 'false,true,true': [0.0, -2.413528314402514e-17], 'false': [7.162729191130042e-17, nan]}, {'': [0.18863606741250602, 3.454027187722709e-17], 'false,true': [1.0831444142684454e-17, 3.199769415950233e-17], 'false': [3.454027187722709e-17, nan]}, {'': [0.19779566201334517, 9.619260863178251e-18], 'false,true': [2.09476042382105e-18, 2.1807952269422717e-17], 'false': [9.619260863178251e-18, nan]}, {'': [0.2091893165852661, 4.153352322338715e-17], 'false,true': [2.1769078914218755e-18, 7.140641479967967e-17], 'false': [4.153352322338715e-17, nan]}, {'': [0.10188228553152243, nan], 'true,false': [0.034849228323485644, 0.09467195221551024], 'true,false,true': [-2.7540416114732565e-16, 1.0154478883766675e-17], 'true,false,false': [0.24609375000000058, 2.0344400974806533e-17], 'true': [0.032150948383109945, 0.10602470939020765], 'true,true': [6.832141690000964e-17, 2.362176648138631e-18]}, {'': [0.16168317483118125, 3.675221047035001e-17], 'false,true,true': [0.0, -2.362176648138631e-18], 'false': [3.675221047035001e-17, nan], 'true': [0.16168317483118125, nan], 'false,true': [-2.7211348642773444e-18, 1.3935853865587739e-18], 'true,true': [0.014039270287476499, 0.21631184065189518]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(A, E).;true;true
1;false;genre(B, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, F).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,true;genre(B, G).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;true;genre(B, E).;true;true
9;false,true;genre(B, H).;true;true
9;false;genre(A, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1418510649004877;  // std dev = 4,47e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.1418510649004883;  // std dev = 0,000, 244,000 (wgt'ed) examples reached here.  /* #neg=244 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( female(A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.12544463852839133;  // std dev = 1,83e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( genre(B, E) )
%   | then if ( female(A) )
%   | | then return -0.12544463852839136;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return -0.1254446385283917;  // std dev = 0,000, 210,000 (wgt'ed) examples reached here.  /* #neg=210 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.11231637819360675;  // std dev = 0,000, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.10159632948783656;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.09269127618926068;  // std dev = 0,000, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | | else return -0.09269127618926082;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then return -0.08518475138839679;  // std dev = 2,46e-09, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839679;  // std dev = 1,61e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return -0.08518475138839678;  // std dev = 1,83e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.0787767547310915;  // std dev = 7,30e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | | else return -0.07877675473109166;  // std dev = 1,67e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.07877675473109168;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.07324622576333704;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | | else return -0.07324622576333702;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06842697784420265;  // std dev = 3,09e-09, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.10198333837022448;  // std dev = 0,726, 61,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=47 */
%   | | | else return 0.10266744240962379;  // std dev = 0,953, 106,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=82 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.07051367550138456;  // std dev = 0,944, 78,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=49 */
%   | | | else return -0.06842697784420262;  // std dev = 5,77e-08, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.14000794140480124;  // std dev = 3,80e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return 0.13992559165057536;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.14384016711664857;  // std dev = 6,72e-09, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( genre(A, E) )
%   | then return -0.06419184008202625;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( actor(B) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 154,000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else if ( actor(A) )
%   | | | then return -0.07397880543506573;  // std dev = 0,008, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.0752686202564624;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064107
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.527 seconds
Total inference time: 3.006 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067488
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.08 seconds
Refined model CLL: -0.067488


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064107
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.04 seconds
Total inference time: 3.006 seconds
AUC ROC: 1.0
Total revision time: 9.04
Best scored revision CLL: -0.067488


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 03:48:11
{'Learning time': 9.04, 'F1': 1.0, 'parameter': {'Learning time': 1.637, 'F1': 0.129114, 'Recall': 1.0, 'CLL': -0.254267, 'AUC PR': 0.961008, 'Inference time': 2.215, 'Precision': [0.069012, 0.5], 'AUC ROC': 0.993692}, 'Recall': 1.0, 'CLL': -0.064107, 'AUC PR': 1.0, 'Inference time': 3.006, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,true;title(J, I), venue(J, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,true;author(K, I), venue(K, B).;false;false
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,false;haswordvenue(A, L), haswordauthor(M, L).;false;false
1;false,true;haswordtitle(J, H).;true;false
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;haswordauthor(H, D).;false;false
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;false,true;title(F, E), venue(F, A).;true;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,false,true;title(K, J), venue(K, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true,false;haswordtitle(I, L), haswordauthor(M, L).;false;false
3;false,true,true;samebib(J, K), venue(K, B).;false;false
3;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
3;true,true,false;haswordtitle(G, D).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;false,true;title(J, I), venue(J, A).;true;true
3;true,true;haswordauthor(F, C).;false;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;title(H, E), venue(H, A).;false;false
5;false,true,true;author(G, F), title(G, E).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true;haswordauthor(F, D).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(H, E), venue(H, A).;false;false
6;false,true,true;author(G, E), title(G, F).;false;false
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true;haswordtitle(F, D).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
6;false,false,true;title(K, J), venue(K, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(G, E), venue(G, A).;false;false
7;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,true;haswordtitle(F, D).;false;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,true;title(J, I), venue(J, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(F, D), venue(F, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, G), haswordvenue(B, G).;true;false
8;true;venue(E, A), title(E, D).;true;true
8;false,true;haswordvenue(B, H), haswordtitle(I, H).;false;false
8;true,true;haswordvenue(B, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;false,true,false;haswordtitle(L, H).;false;false
9;false,true,true;samebib(J, K), venue(K, B).;false;false
9;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
9;true,true,false;author(G, E), venue(G, B).;false;false
9;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
9;false,true;author(J, I), venue(J, A).;true;true
9;true,true;haswordauthor(F, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5612739350995126;  // std dev = 3,655, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.22465781041568822;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.40034218958431206;  // std dev = 4,108, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(B, G) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3851213210508834;  // std dev = 3,727, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360628;  // std dev = 5,89e-09, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.15514979726220574;  // std dev = 0,491, 84,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.10159632948783623;  // std dev = 5,10e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24773773909184207;  // std dev = 3,822, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16911615215002526;  // std dev = 3,912, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08612306698850486;  // std dev = 0,007, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08518475138839679;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07649272661443017;  // std dev = 4,185, 75,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08010654920083395;  // std dev = 0,006, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07877675473109166;  // std dev = 3,80e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.03776769140446487;  // std dev = 4,306, 77,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07309241263881275;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.40323630780479863;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.06829232548046058;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.44201172215944945;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5579882778405506;  // std dev = 7,88e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.0684269778442027;  // std dev = 1,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.3373751952854445;  // std dev = 7,88e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.40339942321160477;  // std dev = 0,200, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06407302290966725;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978805
   AUC PR    = 0.865091
   CLL	      = -0.154085
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.904065


Total learning time: 1.271 seconds
Total inference time: 2.973 seconds
AUC ROC: 0.978805


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.159678
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.218 seconds
Parameter learned model CLL: -0.159678


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [5.37e-08, 52, 0], 'true': [3.655, 19, 45], 'false,true,true': [0.0, 8, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(B, G)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)'}, {'false,true,false': [0.0, 55, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 4, 0], 'true,true,true': [7.45e-09, 6, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.108, 27, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [5.89e-09, 61, 0], 'true': [3.727, 21, 45], 'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true,true': 'genre(B, G)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [5.1e-09, 56, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.491, 39, 45], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)', 'false': 'movie(D, A)'}, {'false,true,false': [0.0, 62, 0], 'true': [3.822, 22, 45], 'false,true,true,false': [0.0, 6, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [1.83e-08, 57, 0], 'true': [3.912, 24, 45], 'false,true,true': [0.007, 8, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [3.8e-08, 72, 0], 'true': [4.185, 30, 45], 'false,true,true': [0.006, 5, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 64, 0], 'true': [4.306, 32, 45], 'false,true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, E)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 2, 0], 'true,false,true,false': [0.0, 9, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 10, 0], 'true,false,false,false': [1.58e-08, 53, 0], 'true,false,false,true': [7.88e-08, 22, 0], 'true,false,true,true': [0.0, 0, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'false,true,false': [0.0, 66, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 6, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.2, 27, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [7.88e-08, 0, 45]}]]
[{'': [0.20874023437500033, 6.29126380620922e-17], 'false,true': [-6.938893903907228e-18, 5.551115123125783e-17], 'false': [6.29126380620922e-17, nan]}, {'': [0.24408284023668586, -3.198947698072485e-17], 'true': [0.24408284023668586, nan], 'false,true': [0.0, -3.027880976250427e-17], 'true,true': [9.25185853854297e-18, 0.23437499999999942], 'false': [-3.198947698072485e-17, nan]}, {'': [0.2104438186619828, 4.142623226213271e-17], 'false,true': [0.0, 3.45807171604557e-17], 'false,true,true': [0.0, 0.0], 'false': [4.142623226213271e-17, nan]}, {'': [0.24114719422439915, 3.348291661567932e-17], 'true': [0.24114719422439915, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 2.577303450022685e-17], 'false': [3.348291661567932e-17, nan]}, {'': [0.21799344521560732, 1.1326188298741242e-06], 'false,true': [9.710200928629961e-06, -5.3720468933475315e-18], 'false,true,true': [0.0, 0.0], 'false': [1.1326188298741242e-06, nan]}, {'': [0.22180192898691992, 8.535542091168648e-07], 'false,true': [6.163053157839243e-06, 5.843279076974508e-18], 'false': [8.535542091168648e-07, nan]}, {'': [0.23353391147527347, 6.149089837026733e-07], 'false,true': [7.816073155389459e-06, 2.0045693500176437e-17], 'false': [6.149089837026733e-07, nan]}, {'': [0.24083505007227707, 1.3098118888518913e-09], 'false,true': [0.0, -1.734723475976807e-18], 'false': [1.3098118888518913e-09, nan]}, {'': [0.11545077334064041, nan], 'true,false': [0.036187175897419266, 0.04968098323297728], 'true,false,true': [-2.7632217501781674e-16, 0.0], 'true,false,false': [2.8260222445003984e-16, 4.7132109535973624e-18], 'true': [0.015581593235456449, 0.12281943590353768], 'true,true': [0.0, -1.3877787807814458e-18]}, {'': [0.12916883838873122, 1.0784216953083379e-09], 'false,true,true': [nan, 0.0], 'false': [1.0784216953083379e-09, nan], 'true': [0.12916883838873122, nan], 'false,true': [0.0, -5.046468293750712e-18], 'true,true': [1.3816108750890837e-16, 0.0014833385723772286]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(A, E).;true;true
1;false;genre(B, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, F).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(A, F).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;true;genre(B, E).;true;true
9;false;genre(A, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, E) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.1482167103184899;  // std dev = 0,124, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10136559827538726;  // std dev = 0,000832, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.10516967905642631;  // std dev = 0,012, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( actor(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09271068241643338;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.0897347444484657;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.10225050080654143;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.09239119598033056;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(B) )
%   | | then return -0.0851957311500922;  // std dev = 1,90e-05, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08486040812249916;  // std dev = 0,000859, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(A, D) )
%   | then return -0.08493001714671249;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,67e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07878516029320856;  // std dev = 1,68e-05, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07881180206788822;  // std dev = 2,66e-05, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.07645219029497327;  // std dev = 2,05e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(A, D) )
%   | then return -0.07984866462057298;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0732563867175837;  // std dev = 1,81e-05, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07327584844023259;  // std dev = 3,17e-05, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.21311715771569215;  // std dev = 0,348, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07296904561723379;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07296904561723379;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 9,13e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06327077166561411;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.15274385809367078;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.12946271746863158;  // std dev = 0,418, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842998778158584;  // std dev = 2,12e-05, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06843406370880359;  // std dev = 9,55e-05, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.12379674213663443;  // std dev = 0,082, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419922227784175;  // std dev = 1,08e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06421648479576404;  // std dev = 2,84e-05, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.05497311317094166;  // std dev = 1,59e-05, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, E) )
%   | then return -0.06427255947269145;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419165927156913;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06419141442661268;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.07715501441864746;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071422
   Precision = 0.870801 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930939


Total learning time: 2.443 seconds
Total inference time: 3.025 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065658
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.647 seconds
Refined model CLL: -0.065658


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071422
   Precision = 0.870801 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930939


Total learning time: 6.579000000000001 seconds
Total inference time: 3.025 seconds
AUC ROC: 1.0
Total revision time: 6.579000000000001
Best scored revision CLL: -0.065658


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 03:48:25
{'Learning time': 6.579000000000001, 'F1': 0.930939, 'parameter': {'Learning time': 1.271, 'F1': 0.904065, 'Recall': 0.824926, 'CLL': -0.154085, 'AUC PR': 0.865091, 'Inference time': 2.973, 'Precision': [1.0, 0.5], 'AUC ROC': 0.978805}, 'Recall': 1.0, 'CLL': -0.071422, 'AUC PR': 1.0, 'Inference time': 3.025, 'Precision': [0.870801, 0.5], 'AUC ROC': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,true;title(J, I), venue(J, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,true;author(K, I), venue(K, B).;false;false
1;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,false;haswordvenue(A, L), haswordauthor(M, L).;false;false
1;false,true;haswordtitle(J, H).;true;false
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;haswordauthor(H, D).;false;false
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
2;false,true;title(F, E), venue(F, A).;true;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
2;false,false,true;title(K, J), venue(K, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true,false;haswordtitle(I, L), haswordauthor(M, L).;false;false
3;false,true,true;samebib(J, K), venue(K, B).;false;false
3;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
3;true,true,false;haswordtitle(G, D).;false;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;false,true;title(J, I), venue(J, A).;true;true
3;true,true;haswordauthor(F, C).;false;true
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,true,true;samebib(F, G), venue(G, A).;false;false
4;false,false,false;haswordvenue(A, M), haswordtitle(N, M).;false;false
4;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;author(F, E), venue(F, B).;true;true
4;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
4;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;title(H, E), venue(H, A).;false;false
5;false,true,true;author(G, F), title(G, E).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true;haswordauthor(F, D).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(H, E), venue(H, A).;false;false
6;false,true,true;author(G, E), title(G, F).;false;false
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true;haswordtitle(F, D).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
6;false,false,true;title(K, J), venue(K, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(G, E), venue(G, A).;false;false
7;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,true;haswordtitle(F, D).;false;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,true;title(J, I), venue(J, A).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(F, D), venue(F, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, G), haswordvenue(B, G).;true;false
8;true;venue(E, A), title(E, D).;true;true
8;false,true;haswordvenue(B, H), haswordtitle(I, H).;false;false
8;true,true;haswordvenue(B, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;false,true,false;haswordtitle(L, H).;false;false
9;false,true,true;samebib(J, K), venue(K, B).;false;false
9;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
9;true,true,false;author(G, E), venue(G, B).;false;false
9;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
9;false,true;author(J, I), venue(J, A).;true;true
9;true,true;haswordauthor(F, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5199136409818657;  // std dev = 3,901, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048766;  // std dev = 6,66e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.2175355237199808;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.49675019056573344;  // std dev = 3,586, 63,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(B, G) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3721811382730149;  // std dev = 3,741, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360626;  // std dev = 6,04e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.2983996232834843;  // std dev = 0,455, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783623;  // std dev = 5,10e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18276148643421264;  // std dev = 3,932, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14681760389511517;  // std dev = 3,876, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839679;  // std dev = 2,11e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09388708468251009;  // std dev = 3,960, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08721772361314895;  // std dev = 0,021, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109176;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0657984007781285;  // std dev = 4,009, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07267530250828118;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07324622576333704;  // std dev = 7,45e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06792700467693806;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.4069691182185233;  // std dev = 9,88e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2989132347226531;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.06842697784420267;  // std dev = 2,89e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.29329515343831863;  // std dev = 0,720, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else return -0.2629210150101835;  // std dev = 2,712, 41,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0637505300911612;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.982257
   AUC PR    = 0.888508
   CLL	      = -0.205549
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.9216


Total learning time: 1.17 seconds
Total inference time: 2.857 seconds
AUC ROC: 0.982257


Results scoring model
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.211231
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.875


Total scoring time: 1.377 seconds
Parameter learned model CLL: -0.211231


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [6.66e-08, 66, 0], 'true': [3.901, 23, 45], 'false,true,true': [0.0, 6, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(B, G)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)'}, {'false,true,false': [0.0, 71, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [3.586, 18, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [6.04e-09, 62, 0], 'true': [3.741, 21, 45], 'false,true,true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true,true': 'genre(B, G)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [5.1e-09, 56, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.455, 20, 45], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)', 'false': 'movie(D, A)'}, {'false,true,false': [0.0, 54, 0], 'true': [3.932, 24, 45], 'false,true,true,false': [1.86e-09, 3, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [2.11e-08, 73, 0], 'true': [3.876, 23, 45], 'false,true,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [1.83e-08, 56, 0], 'true': [3.96, 25, 45], 'false,true,true': [0.021, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [7.45e-09, 53, 0], 'true': [4.009, 25, 45], 'false,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, E)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)', 'true': 'genre(A, D)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 4, 0], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 1, 0], 'true,false,false,false': [2.89e-08, 70, 0], 'true,false,false,true': [2.657, 24, 10], 'true,false,true,true': [9.88e-08, 0, 35]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'false,true,false': [0.0, 52, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [2.712, 31, 10], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [0.72, 1, 35]}]]
[{'': [0.22383217993079618, 6.78469626159818e-17], 'false,true': [-6.938893903907228e-18, 6.728624391667616e-17], 'false': [6.78469626159818e-17, nan]}, {'': [0.20874023437499958, -3.0839528461809905e-17], 'true': [0.20874023437499958, nan], 'false,true': [0.0, -3.1273888017610045e-17], 'true,true': [0.0, 0.20408163265306078], 'false': [-3.0839528461809905e-17, nan]}, {'': [0.21203922263857056, 3.8163916471489756e-17], 'false,true': [0.0, 3.581364595565021e-17], 'false,true,true': [nan, 0.0], 'false': [3.8163916471489756e-17, nan]}, {'': [0.2071763860191408, 2.871266442996095e-17], 'true': [0.2071763860191408, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 2.577303450022685e-17], 'false': [2.871266442996095e-17, nan]}, {'': [0.22407648108444866, -2.921639538487254e-18], 'false,true': [1.1564823173178713e-18, -3.0839528461809902e-18], 'false,true,true': [nan, 1.1564823173178713e-18], 'false': [-2.921639538487254e-18, nan]}, {'': [0.2208955246871412, 7.304098846218135e-18], 'false,true': [-1.1564823173178713e-18, 6.083413833562501e-18], 'false': [7.304098846218135e-18, nan]}, {'': [0.22399012204257662, 1.0684423113658964e-05], 'false,true': [0.00014249991133571602, 5.9476233462061954e-18], 'false': [1.0684423113658964e-05, nan]}, {'': [0.22959183673469374, 1.1421836859143947e-08], 'false,true': [0.0, 1.047380211910525e-18], 'false': [1.1421836859143947e-08, nan]}, {'': [0.11275669281669828, nan], 'true,false': [0.020802237173724914, 0.07956292195176047], 'true,false,true': [2.791417890486108e-16, 0.0], 'true,false,false': [0.2076124567474049, 1.1895246692412391e-17], 'true': [0.0, 0.11351931444313586], 'true,true': [nan, 0.0]}, {'': [0.17928104145336812, 1.2917390834060738e-08], 'false,true,true': [nan, 0.0], 'false': [1.2917390834060738e-08, nan], 'true': [0.17928104145336812, nan], 'false,true': [0.0, -2.6688053476566264e-18], 'true,true': [0.014388451199990623, 0.17942125537231268]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(A, E).;true;true
1;false;genre(B, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(B, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;false,true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;true;genre(B, E).;true;true
9;false;genre(A, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, E) )
%   | then return -0.1254446385283914;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.23934049535190832;  // std dev = 0,508, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, D) )
%   | then return -0.09269127618926096;  // std dev = 2,63e-09, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.0744301220122623;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 7,45e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.0851847513883968;  // std dev = 1,49e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.08518475138839686;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.06946226143018085;  // std dev = 2,28e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(A), female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07121079123633525;  // std dev = 0,010, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0684269778442027;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1404565894304556;  // std dev = 0,215, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.14110328778115117;  // std dev = 0,215, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06844010998169237;  // std dev = 0,000369, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | | else return 0.08955219068284981;  // std dev = 0,374, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.13543938037796566;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.09878268823073337;  // std dev = 0,155, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06422164577436872;  // std dev = 0,000260, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.05710391315841162;  // std dev = 5,77e-07, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return 0.14151143159362523;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.14151143159362523;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( genre(A, E) )
%   | then return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.06419105122265624;  // std dev = 2,79e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.06419105122265627;  // std dev = 2,08e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075633
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 3.013 seconds
Total inference time: 3.367 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065685
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.513 seconds
Refined model CLL: -0.065685


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075633
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 7.0729999999999995 seconds
Total inference time: 3.367 seconds
AUC ROC: 1.0
Total revision time: 7.0729999999999995
Best scored revision CLL: -0.065685


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 03:48:39
{'Learning time': 7.0729999999999995, 'F1': 0.852086, 'parameter': {'Learning time': 1.17, 'F1': 0.9216, 'Recall': 0.854599, 'CLL': -0.205549, 'AUC PR': 0.888508, 'Inference time': 2.857, 'Precision': [1.0, 0.5], 'AUC ROC': 0.982257}, 'Recall': 1.0, 'CLL': -0.075633, 'AUC PR': 1.0, 'Inference time': 3.367, 'Precision': [0.742291, 0.5], 'AUC ROC': 1.0}


