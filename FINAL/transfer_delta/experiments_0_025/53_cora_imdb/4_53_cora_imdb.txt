Starting experiment #4 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21939750761568527;  // std dev = 0,480, 7.881,000 (wgt'ed) examples reached here.  /* #neg=5.034 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7812258581764349;  // std dev = 2,542, 91,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=84 */
%   | | | else return -0.13849536020250133;  // std dev = 0,998, 298,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.23314893509951234;  // std dev = 3,062, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return -0.058185726255069424;  // std dev = 4,387, 251,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.013785669805120079;  // std dev = 6,402, 367,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=47 */
%   | | | else return -0.11010503315445595;  // std dev = 1,392, 63,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18650438324752136;  // std dev = 0,479, 7.970,000 (wgt'ed) examples reached here.  /* #neg=5.123 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6680670817180587;  // std dev = 2,366, 90,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=84 */
%   | | | else return -0.12244624671691882;  // std dev = 0,998, 297,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.176171448520433;  // std dev = 3,125, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return -0.05320259825316428;  // std dev = 4,391, 257,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.015842591102564405;  // std dev = 6,415, 378,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=47 */
%   | | | else return -0.0986660223751506;  // std dev = 1,393, 66,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7557911316215082;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.15589683986675132;  // std dev = 6,274, 172,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=61 */
%   | | | else return -0.14128305855613027;  // std dev = 2,171, 87,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=5 */
%   | else return 0.16113614519442593;  // std dev = 0,480, 7.669,000 (wgt'ed) examples reached here.  /* #neg=4.909 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then return 0.03805214537998392;  // std dev = 0,304, 374,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=85 */
%   | | else return -0.026033430222651574;  // std dev = 0,311, 318,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=36 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.004574579025919599;  // std dev = 6,347, 329,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=47 */
%   | | | else return -0.07480682802449704;  // std dev = 1,383, 46,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=2 */
%   | | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.12583887772408228;  // std dev = 0,477, 8.101,000 (wgt'ed) examples reached here.  /* #neg=5.254 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.07037239366224111;  // std dev = 0,852, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.14929337435273002;  // std dev = 3,129, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.361171424525351;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.130511685870777;  // std dev = 0,056, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.030750117358390644;  // std dev = 2,510, 69,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   | | | else return 0.07929612516377535;  // std dev = 0,834, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.02229691003740313;  // std dev = 8,259, 750,000 (wgt'ed) examples reached here.  /* #neg=662 #pos=88 */
%   | | | else return -0.0062202548201798265;  // std dev = 4,512, 277,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=46 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11111836469062339;  // std dev = 0,479, 7.923,000 (wgt'ed) examples reached here.  /* #neg=5.076 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6862009008515947;  // std dev = 0,252, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.15607670946608745;  // std dev = 0,064, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09879075426151875;  // std dev = 3,175, 49,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.11730312767325965;  // std dev = 0,036, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.04057871251195566;  // std dev = 2,439, 65,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | | | else return -0.014379125150724712;  // std dev = 0,887, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.005881642723707561;  // std dev = 8,181, 669,000 (wgt'ed) examples reached here.  /* #neg=581 #pos=88 */
%   | | | else return 0.010719691679476099;  // std dev = 4,431, 247,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=46 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.719283034920852;  // std dev = 0,295, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return -0.2520847030245179;  // std dev = 0,175, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.4411171683927766;  // std dev = 1,589, 19,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.06601374634660863;  // std dev = 4,455, 137,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=25 */
%   | else return 0.09338245152536218;  // std dev = 0,481, 7.601,000 (wgt'ed) examples reached here.  /* #neg=4.841 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then if ( author(L, J), title(L, K) )
%   | | | then return -0.013662299395257434;  // std dev = 0,650, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.07466182008694061;  // std dev = 3,204, 49,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | else return -0.049602881280619834;  // std dev = 0,204, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else return -0.006412291055542328;  // std dev = 0,300, 1.051,000 (wgt'ed) examples reached here.  /* #neg=900 #pos=151 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07213329714536108;  // std dev = 0,478, 7.897,000 (wgt'ed) examples reached here.  /* #neg=5.050 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.12389491799845828;  // std dev = 0,447, 47,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.2809686321071969;  // std dev = 0,830, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.10159405917015893;  // std dev = 0,032, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.035656854710117675;  // std dev = 5,688, 370,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=83 */
%   | | | else return -0.037059991791325055;  // std dev = 4,383, 245,000 (wgt'ed) examples reached here.  /* #neg=224 #pos=21 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0032871116269665517;  // std dev = 6,386, 367,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=47 */
%   | | | else return -0.10173521721729677;  // std dev = 0,005, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05786783731155121;  // std dev = 0,478, 7.878,000 (wgt'ed) examples reached here.  /* #neg=5.031 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4770454754116557;  // std dev = 2,700, 92,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=84 */
%   | | | else return -0.1172268037012311;  // std dev = 1,016, 329,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.06459250312316352;  // std dev = 3,585, 182,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=17 */
%   | | | else return 0.021943126787626988;  // std dev = 4,043, 135,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=19 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.011471993109922052;  // std dev = 6,358, 380,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=47 */
%   | | | else return -0.07173483568422821;  // std dev = 1,390, 57,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=2 */
%   | | else return -0.09280770405126006;  // std dev = 0,005, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, B), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03555682443624447;  // std dev = 0,475, 7.427,000 (wgt'ed) examples reached here.  /* #neg=4.818 #pos=2.609 */
%   | | else return 0.046612283761824636;  // std dev = 0,372, 661,000 (wgt'ed) examples reached here.  /* #neg=527 #pos=134 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.18080242266489158;  // std dev = 0,304, 288,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=30 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.40671113561425587;  // std dev = 4,574, 107,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=78 */
%   | | | else return 0.025503027801106238;  // std dev = 4,174, 214,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=49 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.07376957536250683;  // std dev = 4,978, 234,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=68 */
%   | | | else return 0.0736451716799632;  // std dev = 2,571, 56,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | else return -0.17202967944601677;  // std dev = 0,083, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.4771498514438444;  // std dev = 0,337, 42,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=31 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.038982403876249384;  // std dev = 0,477, 7.847,000 (wgt'ed) examples reached here.  /* #neg=5.000 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(B, F) )
%   | | | then return 0.028511185739734417;  // std dev = 3,257, 52,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return -0.022011751553088463;  // std dev = 8,041, 721,000 (wgt'ed) examples reached here.  /* #neg=637 #pos=84 */
%   | | else if ( haswordtitle(E, H), haswordvenue(B, H) )
%   | | | then return 0.027993212439046074;  // std dev = 2,231, 87,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=21 */
%   | | | else return -0.10268990884081626;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.013032981608920037;  // std dev = 3,515, 229,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=47 */
%   | | | else return -0.05762437039780567;  // std dev = 1,391, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else return -0.13023098378362774;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true;title(F, E), venue(F, A).;true;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,false,true;title(K, J), venue(K, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false,true;title(M, L), venue(M, B).;false;false
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
2;true,true,false;haswordtitle(G, D).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
2;false,true;title(J, I), venue(J, A).;false;false
2;true,true;haswordauthor(F, C).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;author(H, E), venue(H, A).;false;false
3;false,true,true;author(G, E), venue(G, A).;false;false
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,true;haswordtitle(F, D).;true;true
3;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
3;false,false,true;haswordtitle(K, I).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,true,true;samebib(F, G), venue(G, B).;false;false
4;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,true;author(F, E), venue(F, A).;true;true
4;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
4;false,false,true;haswordtitle(K, I).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,true;author(L, J), title(L, K).;false;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
5;true,true,false;haswordauthor(H, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,true;haswordtitle(K, I).;true;false
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(G, E), venue(G, A).;false;false
6;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
6;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
6;false,true;haswordtitle(F, D).;false;true
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,false,true;title(J, I), venue(J, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true;title(F, E), venue(F, A).;true;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(F, D), venue(F, A).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
8;false,true,true;author(K, J), venue(K, B).;false;false
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordtitle(H, I), haswordauthor(J, I).;true;false
8;true,true;haswordvenue(B, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,true,false;haswordtitle(E, H), haswordvenue(B, H).;false;false
9;false,true,true;haswordvenue(B, F).;false;false
9;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
9;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
9;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
9;false,false,true;title(K, J), venue(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4602994727339217;  // std dev = 4,720, 93,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4146629111672587;  // std dev = 4,600, 90,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1254446385283916;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.39899427105804813;  // std dev = 0,465, 82,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360625;  // std dev = 5,67e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.27972260389291526;  // std dev = 4,420, 86,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783613;  // std dev = 5,96e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.169966355865511;  // std dev = 4,681, 92,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.11774989839822231;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5190793278601584;  // std dev = 2,38e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.4809206721398412;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839679;  // std dev = 3,09e-09, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08103362882635698;  // std dev = 3,621, 95,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.0787767547310917;  // std dev = 2,79e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07649445244062686;  // std dev = 3,535, 92,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3542858080397148;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(A, E) )
%   | | then return -0.21111818724078374;  // std dev = 0,436, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.40137313310289174;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.06842697784420268;  // std dev = 2,69e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06376429478087314;  // std dev = 2,659, 88,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=56 */
%   else if ( movie(D, A) )
%   | then if ( movie(E, B) )
%   | | then return -0.06364745196828218;  // std dev = 0,017, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.973966
   AUC PR    = 0.853081
   CLL	      = -0.160506
   Precision = 0.799401 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.809091


Total learning time: 1.246 seconds
Total inference time: 2.749 seconds
AUC ROC: 0.973966


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.15987
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.376 seconds
Parameter learned model CLL: -0.15987


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [8.12e-09, 62, 0], 'true': [4.72, 37, 56], 'false,true,true,false': [0.0, 3, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 58, 0], 'true': [4.6, 34, 56], 'false,true,true,false': [0.0, 3, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [5.67e-08, 71, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 3, 0], 'true,true': [0.465, 26, 56], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 1, 0], 'true': [4.42, 30, 56], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [5.96e-08, 79, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 74, 0], 'true': [4.681, 36, 56], 'false,true,true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true,true': 'genre(A, F)', 'true,true': 'genre(B, E)', 'false': 'movie(G, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [2.38e-07, 0, 56], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 24, 0], 'false,true': [3.09e-09, 79, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [2.79e-08, 63, 0], 'true': [3.621, 39, 56], 'false,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 73, 0], 'true': [3.535, 36, 56], 'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)'}, {'true,false,true': [0.436, 7, 0], 'true,true,true': [0.0, 0, 56], 'false': [0.0, 0, 0], 'true,true,false': [1.86e-09, 5, 0], 'true,false,false,false': [2.69e-08, 67, 0], 'true,false,false,true': [0.0, 28, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, B)', 'false': 'movie(D, A)'}, {'false,true,false': [0.0, 0, 0], 'true': [2.659, 32, 56], 'false,true,true': [0.017, 74, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.23956526766100097, 6.832141690000964e-17], 'false,true': [0.0, 6.446456272017038e-17], 'false,true,true': [nan, 0.0], 'false': [6.832141690000964e-17, nan]}, {'': [0.23506172839506193, -3.45807171604557e-17], 'false,true': [0.0, -4.0197730201945323e-17], 'false,true,true': [nan, 0.0], 'false': [-3.45807171604557e-17, nan]}, {'': [0.2165377751338496, 4.650934292348629e-17], 'true': [0.2165377751338496, nan], 'false,true': [2.3129646346357427e-18, 4.5347137625534564e-17], 'false': [4.650934292348629e-17, nan]}, {'': [0.22714981070849033, 4.4408920985006264e-17], 'false,true,false': [nan, 4.4971059225322796e-17], 'false,true': [0.0, 4.4971059225322796e-17], 'false': [4.4408920985006264e-17, nan]}, {'': [0.23818525519848777, 8.049085102524466e-06], 'false,true': [0.0001395410104469893, 0.0], 'false,true,true': [0.0, 0.0], 'false': [8.049085102524466e-06, nan]}, {'': [0.21000000000000035, 9.837419205539362e-18], 'true': [0.21000000000000035, nan], 'true,true,true': [nan, 1.0150610510858574e-15], 'true,true': [1.0150610510858574e-15, -2.590520390792032e-16], 'false': [9.837419205539362e-18, nan]}, {'': [0.1380415908015951, 1.3877787807814457e-17], 'false,true': [0.0, 1.2335811384723961e-17], 'false': [1.3877787807814457e-17, nan]}, {'': [0.13581249104790324, -4.325544251786324e-18], 'false,true': [0.0, -3.802133645976563e-18], 'false,true,true': [nan, 0.0], 'false': [-4.325544251786324e-18, nan]}, {'': [0.0757630892327779, nan], 'true,false': [0.027147708318745245, 0.0230427141227363], 'true': [0.013445876865876814, 0.023451342388090775], 'true,false,false': [0.0, 1.0770820388154504e-17], 'true,true': [-1.5860328923216522e-16, 6.938893903907229e-19]}, {'': [0.08031884294809738, 4.089746173721073e-06], 'false,true': [4.089746173721073e-06, nan], 'false': [4.089746173721073e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(B, F).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.14185106490048766;  // std dev = 6,99e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( actor(B) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.092691276189261;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926098;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839685;  // std dev = 2,63e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08518475138839685;  // std dev = 2,63e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 1,49e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.0851847513883968;  // std dev = 1,67e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.08518475138839683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.11270187189446261;  // std dev = 0,167, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 7,45e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.07324622576333704;  // std dev = 1,05e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.07324622576333703;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.06965701869625066;  // std dev = 0,006, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.06760275647758555;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(D, B) )
%   | | then return -0.0680958174736868;  // std dev = 0,000842, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06292535656812279;  // std dev = 0,001, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0.1340070300080109;  // std dev = 5,89e-09, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.06421173616995723;  // std dev = 9,31e-10, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( female(B) )
%   | | | then return -0.06421173616995723;  // std dev = 3,73e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.06421420564549056;  // std dev = 4,01e-05, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.06411798959100297;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.99889
   AUC PR    = 0.966568
   CLL	      = -0.081226
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.24 seconds
Total inference time: 2.829 seconds
AUC ROC: 0.99889


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064745
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.609 seconds
Refined model CLL: -0.064745


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.99889
   AUC PR    = 0.966568
   CLL	      = -0.081226
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 6.471 seconds
Total inference time: 2.829 seconds
AUC ROC: 0.99889
Total revision time: 6.471
Best scored revision CLL: -0.064745


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 03:10:24
{'Learning time': 6.471, 'F1': 0.847854, 'parameter': {'Learning time': 1.246, 'F1': 0.809091, 'Recall': 0.819018, 'CLL': -0.160506, 'AUC PR': 0.853081, 'Inference time': 2.749, 'Precision': [0.799401, 0.5], 'AUC ROC': 0.973966}, 'Recall': 1.0, 'CLL': -0.081226, 'AUC PR': 0.966568, 'Inference time': 2.829, 'Precision': [0.735892, 0.5], 'AUC ROC': 0.99889}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true;title(F, E), venue(F, A).;true;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,false,true;title(K, J), venue(K, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false,true;title(M, L), venue(M, B).;false;false
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
2;true,true,false;haswordtitle(G, D).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
2;false,true;title(J, I), venue(J, A).;false;false
2;true,true;haswordauthor(F, C).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;author(H, E), venue(H, A).;false;false
3;false,true,true;author(G, E), venue(G, A).;false;false
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,true;haswordtitle(F, D).;true;true
3;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
3;false,false,true;haswordtitle(K, I).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,true,true;samebib(F, G), venue(G, B).;false;false
4;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,true;author(F, E), venue(F, A).;true;true
4;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
4;false,false,true;haswordtitle(K, I).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,true;author(L, J), title(L, K).;false;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
5;true,true,false;haswordauthor(H, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,true;haswordtitle(K, I).;true;false
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(G, E), venue(G, A).;false;false
6;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
6;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
6;false,true;haswordtitle(F, D).;false;true
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,false,true;title(J, I), venue(J, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true;title(F, E), venue(F, A).;true;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(F, D), venue(F, A).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
8;false,true,true;author(K, J), venue(K, B).;false;false
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordtitle(H, I), haswordauthor(J, I).;true;false
8;true,true;haswordvenue(B, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,true,false;haswordtitle(E, H), haswordvenue(B, H).;false;false
9;false,true,true;haswordvenue(B, F).;false;false
9;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
9;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
9;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
9;false,false,true;title(K, J), venue(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4499856697933907;  // std dev = 4,866, 98,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 8,33e-09, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3982986376692506;  // std dev = 4,791, 96,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3805509958113586;  // std dev = 0,474, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360621;  // std dev = 7,15e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.35508126209857105;  // std dev = 4,058, 81,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783623;  // std dev = 4,83e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22047830676424493;  // std dev = 4,397, 87,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.49890128373426207;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.5010987162657385;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839679;  // std dev = 2,63e-09, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11376029619869427;  // std dev = 3,394, 89,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07965110371424501;  // std dev = 0,007, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07877675473109165;  // std dev = 4,08e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06096971274959373;  // std dev = 3,562, 94,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07318689603258417;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3367019844393045;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(A, E) )
%   | | then return -0.20910293958286616;  // std dev = 0,385, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.4201947845542093;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.06842697784420267;  // std dev = 3,25e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.03588606899241851;  // std dev = 2,849, 94,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=58 */
%   else if ( movie(D, A) )
%   | then if ( movie(E, B) )
%   | | then return -0.06343057174206741;  // std dev = 0,022, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.973223
   AUC PR    = 0.851779
   CLL	      = -0.165174
   Precision = 0.800604 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.80916


Total learning time: 1.173 seconds
Total inference time: 2.405 seconds
AUC ROC: 0.973223


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.15582
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.582 seconds
Parameter learned model CLL: -0.15582


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [8.33e-09, 79, 0], 'true': [4.866, 40, 58], 'false,true,true,false': [0.0, 3, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 70, 0], 'true': [4.791, 38, 58], 'false,true,true,false': [0.0, 6, 0], 'false,true,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [7.15e-08, 87, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 7, 0], 'true,true': [0.474, 30, 58], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [3.73e-09, 10, 0], 'true': [4.058, 23, 58], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [4.83e-08, 92, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 74, 0], 'true': [4.397, 29, 58], 'false,true,true,false': [2.63e-09, 6, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true,true': 'genre(A, F)', 'true,true': 'genre(B, E)', 'false': 'movie(G, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 58], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 28, 0], 'false,true': [2.63e-09, 76, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [4.08e-08, 75, 0], 'true': [3.394, 31, 58], 'false,true,true': [0.007, 8, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 76, 0], 'true': [3.562, 36, 58], 'false,true,true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)'}, {'true,false,true': [0.385, 5, 0], 'true,true,true': [0.0, 0, 58], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 2, 0], 'true,false,false,false': [3.25e-08, 74, 0], 'true,false,false,true': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, B)', 'false': 'movie(D, A)'}, {'false,true,false': [0.0, 0, 0], 'true': [2.849, 36, 58], 'false,true,true': [0.022, 84, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.24156601416076598, 7.490661370964911e-17], 'false,true': [0.0, 7.307797124114954e-17], 'false,true,true': [0.0, 0.0], 'false': [7.490661370964911e-17, nan]}, {'': [0.23914930555555372, -2.5620531337503614e-17], 'false,true': [0.0, -3.172065784643304e-17], 'false,true,true': [0.0, -2.3129646346357427e-18], 'false': [-2.5620531337503614e-17, nan]}, {'': [0.2246900826446285, 6.141659285160441e-17], 'true': [0.2246900826446285, nan], 'false,true': [-1.982541115402065e-18, 5.870144727903127e-17], 'false': [6.141659285160441e-17, nan]}, {'': [0.2033226642280139, 8.707631565687502e-18], 'false,true,false': [nan, 2.5342047301226398e-17], 'false,true': [1.3877787807814458e-18, 2.5342047301226398e-17], 'false': [8.707631565687502e-18, nan]}, {'': [0.2222222222222224, 0.0], 'false,true': [1.1564823173178713e-18, 0.0], 'false,true,true': [nan, 1.1564823173178713e-18], 'false': [0.0, nan]}, {'': [0.2195781503515413, 7.304098846218135e-18], 'true': [0.2195781503515413, nan], 'true,true,true': [nan, -1.2250736823450003e-16], 'true,true': [-1.2250736823450003e-16, -3.489272363107635e-16], 'false': [7.304098846218135e-18, nan]}, {'': [0.12941894833893033, 5.823810837087414e-07], 'false,true': [5.351403010386141e-06, 2.2204460492503132e-17], 'false': [5.823810837087414e-07, nan]}, {'': [0.13501036661000718, 8.794256419952226e-11], 'false,true': [0.0, -4.382459307730881e-18], 'false,true,true': [nan, 0.0], 'false': [8.794256419952226e-11, nan]}, {'': [0.07038737552320333, nan], 'true,false': [0.029706511342270335, 0.02288247475546875], 'true': [0.005288616451495706, 0.023351070942832126], 'true,false,false': [-3.700743415417188e-17, 1.4252863153971603e-17], 'true,true': [-3.675221047035001e-16, 0.0]}, {'': [0.08634798848065481, 5.505530111521703e-06], 'false,true': [5.505530111521703e-06, nan], 'false': [5.505530111521703e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, F).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048766;  // std dev = 7,88e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.23934049535190835;  // std dev = 0,508, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09627107936196976;  // std dev = 0,009, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694892;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2551722425694892;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 1,61e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08322936422909967;  // std dev = 0,014, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,29e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.08518475138839679;  // std dev = 1,29e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.08496190813128775;  // std dev = 0,000249, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.0917350921898281;  // std dev = 0,010, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07829233081643378;  // std dev = 0,010, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.07866320464743931;  // std dev = 0,000318, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.0783026997817113;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07287510461036599;  // std dev = 0,002, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( genre(A, D) )
%   | then return -0.0730610351228016;  // std dev = 8,49e-05, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return -0.07283482814173893;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.14222906710162186;  // std dev = 0,047, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.14170332755201945;  // std dev = 0,048, 40,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06690421302550488;  // std dev = 0,008, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06843223580104592;  // std dev = 5,11e-05, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.06846091831318132;  // std dev = 0,000604, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.06420267283802182;  // std dev = 1,11e-05, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(B) )
%   | | | then return -0.06418980126586286;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.0634472978206256;  // std dev = 0,008, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return 0.13523196520292663;  // std dev = 3,23e-09, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.13529345922791391;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06419152423072176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.06418980126586284;  // std dev = 1,67e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.06417136212474352;  // std dev = 0,000176, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07764334890809862;  // std dev = 4,61e-05, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080112
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.363 seconds
Total inference time: 2.806 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065852
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.696 seconds
Refined model CLL: -0.065852


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080112
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 6.814 seconds
Total inference time: 2.806 seconds
AUC ROC: 1.0
Total revision time: 6.814
Best scored revision CLL: -0.065852


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 03:10:37
{'Learning time': 6.814, 'F1': 0.848168, 'parameter': {'Learning time': 1.173, 'F1': 0.80916, 'Recall': 0.817901, 'CLL': -0.165174, 'AUC PR': 0.851779, 'Inference time': 2.405, 'Precision': [0.800604, 0.5], 'AUC ROC': 0.973223}, 'Recall': 1.0, 'CLL': -0.080112, 'AUC PR': 1.0, 'Inference time': 2.806, 'Precision': [0.736364, 0.5], 'AUC ROC': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true;title(F, E), venue(F, A).;true;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,false,true;title(K, J), venue(K, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false,true;title(M, L), venue(M, B).;false;false
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
2;true,true,false;haswordtitle(G, D).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
2;false,true;title(J, I), venue(J, A).;false;false
2;true,true;haswordauthor(F, C).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;author(H, E), venue(H, A).;false;false
3;false,true,true;author(G, E), venue(G, A).;false;false
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,true;haswordtitle(F, D).;true;true
3;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
3;false,false,true;haswordtitle(K, I).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,true,true;samebib(F, G), venue(G, B).;false;false
4;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,true;author(F, E), venue(F, A).;true;true
4;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
4;false,false,true;haswordtitle(K, I).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,true;author(L, J), title(L, K).;false;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
5;true,true,false;haswordauthor(H, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,true;haswordtitle(K, I).;true;false
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(G, E), venue(G, A).;false;false
6;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
6;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
6;false,true;haswordtitle(F, D).;false;true
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,false,true;title(J, I), venue(J, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true;title(F, E), venue(F, A).;true;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(F, D), venue(F, A).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
8;false,true,true;author(K, J), venue(K, B).;false;false
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordtitle(H, I), haswordauthor(J, I).;true;false
8;true,true;haswordvenue(B, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,true,false;haswordtitle(E, H), haswordvenue(B, H).;false;false
9;false,true,true;haswordvenue(B, F).;false;false
9;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
9;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
9;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
9;false,false,true;title(K, J), venue(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5507559389905593;  // std dev = 7,397, 257,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.1418510649004877;  // std dev = 3,49e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.1418510649004884;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.45141140132925445;  // std dev = 7,615, 264,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.12544463852839127;  // std dev = 3,94e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.1254446385283917;  // std dev = 0,000, 209,000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.40437011298296244;  // std dev = 0,451, 249,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.11231637819360633;  // std dev = 2,36e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.11231637819360676;  // std dev = 0,000, 230,000 (wgt'ed) examples reached here.  /* #neg=230 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.28972296218685273;  // std dev = 7,397, 257,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783624;  // std dev = 3,65e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783658;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2524422743102068;  // std dev = 6,977, 245,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.09269127618926105;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.09269127618926047;  // std dev = 6,04e-09, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.5371073197006316;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.4628926802993688;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.14510731970063137;  // std dev = 0,488, 125,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839678;  // std dev = 5,89e-09, 277,000 (wgt'ed) examples reached here.  /* #neg=277 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14094892719448282;  // std dev = 6,374, 248,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109177;  // std dev = 1,29e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.07877675473109143;  // std dev = 6,50e-08, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09405922721121399;  // std dev = 6,542, 254,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07324622576333704;  // std dev = 7,45e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.07324622576333673;  // std dev = 8,01e-09, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2662848648630436;  // std dev = 1,824, 135,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=129 */
%   | | else return -0.06842697784420264;  // std dev = 2,24e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( genre(A, E) )
%   | | then return -0.209884987282855;  // std dev = 1,708, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.09710533024671764;  // std dev = 5,133, 106,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=49 */
%   | | | else return -0.06842697784420261;  // std dev = 6,41e-08, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07044695327396493;  // std dev = 6,085, 248,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=178 */
%   else if ( movie(D, A) )
%   | then if ( movie(E, B) )
%   | | then return -0.06306710078003969;  // std dev = 0,046, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993692
   AUC PR    = 0.961008
   CLL	      = -0.266691
   Precision = 0.064496 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.121176


Total learning time: 1.694 seconds
Total inference time: 2.47 seconds
AUC ROC: 0.993692


Results scoring model
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.23144
   Precision = 0.183316 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.309835


Total scoring time: 1.75 seconds
Parameter learned model CLL: -0.23144


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 202, 0], 'true': [7.397, 79, 178], 'false,true,true,false': [3.49e-08, 35, 0], 'false,true,true,true': [0.0, 6, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 209, 0], 'true': [7.615, 86, 178], 'false,true,true,false': [3.94e-08, 44, 0], 'false,true,true,true': [0.0, 9, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [0.0, 230, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [2.36e-08, 46, 0], 'true,true': [0.451, 71, 178], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [3.65e-08, 54, 0], 'true': [7.397, 79, 178], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 242, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [6.04e-09, 245, 0], 'true': [6.977, 67, 178], 'false,true,true,false': [0.0, 47, 0], 'false,true,true,true': [0.0, 10, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true,true': 'genre(A, F)', 'true,true': 'genre(B, E)', 'false': 'movie(G, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,true': [2.11e-08, 7, 0], 'true,true,true,false': [0.0, 0, 129], 'false,false': [0.0, 0, 0], 'true,true,false': [0.488, 76, 49], 'false,true': [5.89e-09, 277, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [6.5e-08, 239, 0], 'true': [6.374, 70, 178], 'false,true,true': [1.29e-08, 54, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [8.01e-09, 238, 0], 'true': [6.542, 76, 178], 'false,true,true,false': [7.45e-09, 31, 0], 'false,true,true,true': [2.63e-09, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)'}, {'true,false,true': [1.708, 59, 0], 'true,true,true': [1.824, 6, 129], 'false': [0.0, 0, 0], 'true,true,false': [2.24e-08, 46, 0], 'true,false,false,false': [6.41e-08, 196, 0], 'true,false,false,true': [5.133, 57, 49]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, B)', 'false': 'movie(D, A)'}, {'false,true,false': [0.0, 0, 0], 'true': [6.085, 70, 178], 'false,true,true': [0.046, 270, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.21290254205211834, -1.5716737467944603e-16], 'false,true': [4.603363760640893e-17, -2.374338349693404e-16], 'false,true,true': [-6.938893903907228e-18, 3.489272363107635e-17], 'false': [-1.5716737467944603e-16, nan]}, {'': [0.21963957759412206, -8.135985523970613e-17], 'false,true': [5.44637710193473e-17, -5.737037639211336e-17], 'false,true,true': [0.0, 3.532527805625498e-17], 'false': [-8.135985523970613e-17, nan]}, {'': [0.20383542200932436, -1.1102230246251565e-16], 'true': [0.20383542200932436, nan], 'false,true': [1.206764157201257e-17, -7.530208340935844e-17], 'false': [-1.1102230246251565e-16, nan]}, {'': [0.2129025420521094, -5.551115123125783e-17], 'false,true,false': [nan, -7.340317518182853e-17], 'false,true': [2.4671622769447922e-17, -7.340317518182853e-17], 'false': [-5.551115123125783e-17, nan]}, {'': [0.1986838817159525, 8.234766805166724e-17], 'false,true': [-1.947759692324836e-18, 3.6252180395923476e-17], 'false,true,true': [0.0, -3.543264972207946e-18], 'false': [8.234766805166724e-17, nan]}, {'': [0.2168787892133124, 3.366741302112388e-17], 'true': [0.2168787892133124, nan], 'true,true,true': [6.344131569286608e-17, -7.986720673272444e-16], 'true,true': [0.04882136678200625, 0.23833600000000055], 'false': [3.366741302112388e-17, nan]}, {'': [0.16380166628494447, 7.578314161263867e-18], 'false,true': [3.0839528461809902e-18, 1.7652081563077803e-17], 'false': [7.578314161263867e-18, nan]}, {'': [0.16850517472710236, 4.1834490782976914e-17], 'false,true': [2.921639538487254e-18, 6.344131569286608e-17], 'false,true,true': [9.912705577010326e-19, 1.7906822977825105e-18], 'false': [4.1834490782976914e-17, nan]}, {'': [0.08649084212639921, nan], 'true,false': [0.049437380837795745, 0.08743588298580982], 'true': [0.039622405467429185, 0.08358598754238393], 'true,false,false': [0.2485760056959768, 2.095829179139326e-17], 'true,true': [0.02465114777660628, 1.0860877414811314e-17]}, {'': [0.14928031776175593, 7.723392931710024e-06], 'false,true': [7.723392931710024e-06, nan], 'false': [7.723392931710024e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, F).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false,true;genre(B, F).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
5;true,true;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 5,77e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return -0.14185106490048838;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.12544463852839174;  // std dev = 0,000, 219,000 (wgt'ed) examples reached here.  /* #neg=219 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.11231637819360671;  // std dev = 0,000, 218,000 (wgt'ed) examples reached here.  /* #neg=218 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.10159632948783653;  // std dev = 0,000, 210,000 (wgt'ed) examples reached here.  /* #neg=210 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926101;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926089;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else return -0.09269127618926067;  // std dev = 0,000, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.25517224256948967;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.0851847513883968;  // std dev = 2,08e-09, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( female(A) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return -0.08518475138839678;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839678;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109173;  // std dev = 2,08e-09, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109148;  // std dev = 7,81e-08, 142,000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109168;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07877675473109165;  // std dev = 1,05e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( actor(A) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | | else return -0.07324622576333702;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.0759484289485759;  // std dev = 0,893, 72,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=47 */
%   | | | else return 0.11663433385891574;  // std dev = 0,809, 98,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=82 */
%   | | else return -0.06842697784420267;  // std dev = 1,32e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.07231809957080777;  // std dev = 0,934, 77,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=49 */
%   | | | else return -0.06842697784420262;  // std dev = 5,77e-08, 217,000 (wgt'ed) examples reached here.  /* #neg=217 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.14338260689459145;  // std dev = 0,000223, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.13867512510886534;  // std dev = 0,001, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.06419184008202618;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.06419184008202623;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else return -0.06419184008202622;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.073338265332059;  // std dev = 0,000705, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.07447925920612593;  // std dev = 0,008, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.06419184008202618;  // std dev = 1,32e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064109
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.035 seconds
Total inference time: 2.855 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067226
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.528 seconds
Refined model CLL: -0.067226


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064109
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.007 seconds
Total inference time: 2.855 seconds
AUC ROC: 1.0
Total revision time: 9.007
Best scored revision CLL: -0.067226


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 03:10:52
{'Learning time': 9.007, 'F1': 1.0, 'parameter': {'Learning time': 1.694, 'F1': 0.121176, 'Recall': 1.0, 'CLL': -0.266691, 'AUC PR': 0.961008, 'Inference time': 2.47, 'Precision': [0.064496, 0.5], 'AUC ROC': 0.993692}, 'Recall': 1.0, 'CLL': -0.064109, 'AUC PR': 1.0, 'Inference time': 2.855, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true;title(F, E), venue(F, A).;true;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,false,true;title(K, J), venue(K, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false,true;title(M, L), venue(M, B).;false;false
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
2;true,true,false;haswordtitle(G, D).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
2;false,true;title(J, I), venue(J, A).;false;false
2;true,true;haswordauthor(F, C).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;author(H, E), venue(H, A).;false;false
3;false,true,true;author(G, E), venue(G, A).;false;false
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,true;haswordtitle(F, D).;true;true
3;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
3;false,false,true;haswordtitle(K, I).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,true,true;samebib(F, G), venue(G, B).;false;false
4;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,true;author(F, E), venue(F, A).;true;true
4;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
4;false,false,true;haswordtitle(K, I).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,true;author(L, J), title(L, K).;false;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
5;true,true,false;haswordauthor(H, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,true;haswordtitle(K, I).;true;false
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(G, E), venue(G, A).;false;false
6;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
6;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
6;false,true;haswordtitle(F, D).;false;true
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,false,true;title(J, I), venue(J, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true;title(F, E), venue(F, A).;true;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(F, D), venue(F, A).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
8;false,true,true;author(K, J), venue(K, B).;false;false
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordtitle(H, I), haswordauthor(J, I).;true;false
8;true,true;haswordvenue(B, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,true,false;haswordtitle(E, H), haswordvenue(B, H).;false;false
9;false,true,true;haswordvenue(B, F).;false;false
9;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
9;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
9;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
9;false,false,true;title(K, J), venue(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5612739350995126;  // std dev = 3,655, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14185106490048768;  // std dev = 7,21e-09, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3917805457486956;  // std dev = 4,155, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1254446385283916;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.299926003126898;  // std dev = 0,490, 75,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360632;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3050856109424765;  // std dev = 3,844, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783623;  // std dev = 3,33e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15229543775392437;  // std dev = 4,284, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09269127618926103;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.522394623670774;  // std dev = 1,40e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.47760537632922595;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839679;  // std dev = 2,08e-09, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16105563598386735;  // std dev = 2,811, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07241553106078434;  // std dev = 3,104, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.33934212023145927;  // std dev = 8,94e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( genre(A, E) )
%   | | then return -0.20798536949327753;  // std dev = 0,382, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.4173229569668899;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.0684269778442027;  // std dev = 1,97e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.018823339337091446;  // std dev = 2,608, 77,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( movie(E, B) )
%   | | then return -0.06313189200279481;  // std dev = 0,022, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.974863
   AUC PR    = 0.856178
   CLL	      = -0.160349
   Precision = 0.80814 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.816446


Total learning time: 1.149 seconds
Total inference time: 2.425 seconds
AUC ROC: 0.974863


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.164616
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.216 seconds
Parameter learned model CLL: -0.164616


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [7.21e-09, 46, 0], 'true': [3.655, 19, 45], 'false,true,true,false': [0.0, 5, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 64, 0], 'true': [4.155, 28, 45], 'false,true,true,false': [0.0, 5, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [2.98e-08, 50, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 7, 0], 'true,true': [0.49, 30, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 5, 0], 'true': [3.844, 22, 45], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [3.33e-08, 56, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 52, 0], 'true': [4.284, 31, 45], 'false,true,true,false': [0.0, 8, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true,true': 'genre(A, F)', 'true,true': 'genre(B, E)', 'false': 'movie(G, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [1.4e-07, 0, 45], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 30, 0], 'false,true': [2.08e-09, 64, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [1.49e-08, 55, 0], 'true': [2.811, 20, 45], 'false,true,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 59, 0], 'true': [3.104, 27, 45], 'false,true,true,false': [2.63e-09, 7, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)'}, {'true,false,true': [0.382, 5, 0], 'true,true,true': [8.94e-08, 0, 45], 'false': [0.0, 0, 0], 'true,true,false': [2.63e-09, 10, 0], 'true,false,false,false': [1.97e-08, 59, 0], 'true,false,false,true': [0.0, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, B)', 'false': 'movie(D, A)'}, {'false,true,false': [0.0, 0, 0], 'true': [2.608, 32, 45], 'false,true,true': [0.022, 67, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.20874023437500033, 5.551115123125783e-17], 'false,true': [-6.938893903907228e-18, 5.3097622916855314e-17], 'false,true,true': [0.0, -2.7755575615628915e-18], 'false': [5.551115123125783e-17, nan]}, {'': [0.23644210921373557, -3.539841527790354e-17], 'false,true': [0.0, -3.8163916471489756e-17], 'false,true,true': [nan, 0.0], 'false': [-3.539841527790354e-17, nan]}, {'': [0.24000000000000005, 2.921639538487254e-17], 'true': [0.24000000000000005, nan], 'false,true': [-1.982541115402065e-18, 1.7763568394002505e-17], 'false': [2.921639538487254e-17, nan]}, {'': [0.22053909556694173, 2.7300566179307128e-17], 'false,true,false': [nan, 1.9825411154020653e-17], 'false,true': [0.0, 1.9825411154020653e-17], 'false': [2.7300566179307128e-17, nan]}, {'': [0.24151662049861425, -2.4054832200211726e-17], 'false,true': [0.0, -2.1350442781253012e-17], 'false,true,true': [nan, 0.0], 'false': [-2.4054832200211726e-17, nan]}, {'': [0.23999999999999985, 4.336808689942018e-18], 'true': [0.23999999999999985, nan], 'true,true,true': [nan, 4.3422056074228343e-16], 'true,true': [4.3422056074228343e-16, -1.4802973661668753e-16], 'false': [4.336808689942018e-18, nan]}, {'': [0.12153528731806869, 7.656710514656252e-18], 'false,true': [0.0, 4.037174635000569e-18], 'false': [7.656710514656252e-18, nan]}, {'': [0.13380750378008066, -1.6821560979169039e-18], 'false,true': [9.912705577010326e-19, 0.0], 'false,true,true': [nan, 9.912705577010326e-19], 'false': [-1.6821560979169039e-18, nan]}, {'': [0.07160715801037554, nan], 'true,false': [0.029214817019514828, 0.025845172611266242], 'true': [0.024735218778660396, 0.026088951824011122], 'true,false,false': [-2.7328566760003855e-16, 6.586068790149234e-18], 'true,true': [1.7763568394002506e-16, 6.938893903907229e-19]}, {'': [0.0883392757926162, 7.240268442074107e-06], 'false,true': [7.240268442074107e-06, nan], 'false': [7.240268442074107e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.12749544182490344;  // std dev = 0,005, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( genre(A, D) )
%   | then return -0.11708406716989343;  // std dev = 0,017, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360636;  // std dev = 2,95e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.26189302493912087;  // std dev = 0,393, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.10324659257085494;  // std dev = 0,012, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09178918416689351;  // std dev = 0,003, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, D) )
%   | then return -0.09198150973061259;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.08522694627872819;  // std dev = 7,70e-05, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B), actor(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0831225373016484;  // std dev = 0,015, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.0851847513883968;  // std dev = 1,75e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.08458204934849674;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.0876397561395689;  // std dev = 0,005, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.07877624438608859;  // std dev = 2,80e-06, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07896665191142026;  // std dev = 5,70e-05, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(A, D) )
%   | then return -0.07825897898755059;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(B) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.07859877677347395;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324554435864801;  // std dev = 3,51e-06, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.0733971317822368;  // std dev = 0,000275, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.06323577869173906;  // std dev = 3,65e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.07611077774708892;  // std dev = 0,011, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.07309180853386739;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.1343242202056123;  // std dev = 0,061, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.11457431013245227;  // std dev = 0,084, 41,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06546885323378908;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( movie(D, B) )
%   | | then if ( female(B) )
%   | | | then return -0.06842657177261235;  // std dev = 4,19e-06, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.06846163089561065;  // std dev = 0,000471, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419193606521116;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06432854350863984;  // std dev = 0,000202, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.0560174782149015;  // std dev = 3,76e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.1361590602290379;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13849877686463063;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0641918644752576;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06418975846142681;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.06379979709907782;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07618543664336351;  // std dev = 0,001, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077034
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 2.18 seconds
Total inference time: 2.764 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067589
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.451 seconds
Refined model CLL: -0.067589


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077034
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 5.996 seconds
Total inference time: 2.764 seconds
AUC ROC: 1.0
Total revision time: 5.996
Best scored revision CLL: -0.067589


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 03:11:04
{'Learning time': 5.996, 'F1': 0.853165, 'parameter': {'Learning time': 1.149, 'F1': 0.816446, 'Recall': 0.824926, 'CLL': -0.160349, 'AUC PR': 0.856178, 'Inference time': 2.425, 'Precision': [0.80814, 0.5], 'AUC ROC': 0.974863}, 'Recall': 1.0, 'CLL': -0.077034, 'AUC PR': 1.0, 'Inference time': 2.764, 'Precision': [0.743929, 0.5], 'AUC ROC': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;haswordauthor(H, D).;false;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true;title(F, E), venue(F, A).;true;true
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,false,true;title(K, J), venue(K, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,false,true;title(M, L), venue(M, B).;false;false
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
2;true,true,false;haswordtitle(G, D).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
2;false,true;title(J, I), venue(J, A).;false;false
2;true,true;haswordauthor(F, C).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;author(H, E), venue(H, A).;false;false
3;false,true,true;author(G, E), venue(G, A).;false;false
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,true;haswordtitle(F, D).;true;true
3;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
3;false,false,true;haswordtitle(K, I).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(H, D).;false;false
4;false,true,true;samebib(F, G), venue(G, B).;false;false
4;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,true;author(F, E), venue(F, A).;true;true
4;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
4;false,false,true;haswordtitle(K, I).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,true;author(L, J), title(L, K).;false;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
5;true,true,false;haswordauthor(H, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,true;haswordtitle(K, I).;true;false
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(G, E), venue(G, A).;false;false
6;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
6;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
6;false,true;haswordtitle(F, D).;false;true
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,false,true;title(J, I), venue(J, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true;title(F, E), venue(F, A).;true;true
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(F, D), venue(F, A).;false;true
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
8;false,true,true;author(K, J), venue(K, B).;false;false
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordtitle(H, I), haswordauthor(J, I).;true;false
8;true,true;haswordvenue(B, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,true,false;haswordtitle(E, H), haswordvenue(B, H).;false;false
9;false,true,true;haswordvenue(B, F).;false;false
9;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
9;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
9;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
9;false,false,true;title(K, J), venue(K, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.510322848142991;  // std dev = 3,956, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.14185106490048766;  // std dev = 8,33e-09, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.44585724464916865;  // std dev = 3,901, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839155;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3514430352207769;  // std dev = 0,476, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360628;  // std dev = 4,47e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22877431068476567;  // std dev = 4,199, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783623;  // std dev = 3,80e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18196003020714352;  // std dev = 4,155, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926107;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5203993030645823;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.1092303265650476;  // std dev = 0,483, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839679;  // std dev = 2,28e-09, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08211735628261438;  // std dev = 3,717, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09408074019581554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109173;  // std dev = 2,36e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11808749892513598;  // std dev = 3,409, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08636271757394182;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3454813026925839;  // std dev = 7,30e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(A, E) )
%   | | then return -0.2910601487269855;  // std dev = 0,423, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.18983298245603467;  // std dev = 2,622, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return -0.0684269778442027;  // std dev = 1,97e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0517209234156712;  // std dev = 3,244, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( movie(E, B) )
%   | | then return -0.06399614529611897;  // std dev = 0,006, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.982257
   AUC PR    = 0.888508
   CLL	      = -0.216514
   Precision = 0.808989 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.831169


Total learning time: 1.113 seconds
Total inference time: 2.604 seconds
AUC ROC: 0.982257


Results scoring model
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.220411
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total scoring time: 1.42 seconds
Parameter learned model CLL: -0.220411


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [8.33e-09, 70, 0], 'true': [3.956, 24, 45], 'false,true,true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 71, 0], 'true': [3.901, 23, 45], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [4.47e-08, 60, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'true,true': [0.476, 24, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 1, 0], 'true': [4.199, 29, 45], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [3.8e-08, 56, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 62, 0], 'true': [4.155, 28, 45], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'true,true,true': 'genre(A, F)', 'true,true': 'genre(B, E)', 'false': 'movie(G, B)'}, {'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 35], 'false,false': [0.0, 0, 0], 'true,true,false': [0.483, 17, 10], 'false,true': [2.28e-09, 59, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [2.36e-08, 60, 0], 'true': [3.717, 29, 45], 'false,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [9.31e-10, 56, 0], 'true': [3.409, 22, 45], 'false,true,true,false': [2.63e-09, 5, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,false,false': 'movie(C, B)', 'true,true': 'movie(C, B)'}, {'true,false,true': [0.423, 4, 0], 'true,true,true': [7.3e-08, 0, 35], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 2, 0], 'true,false,false,false': [1.97e-08, 59, 0], 'true,false,false,true': [2.622, 22, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, B)', 'false': 'movie(D, A)'}, {'false,true,false': [0.0, 0, 0], 'true': [3.244, 25, 45], 'false,true,true': [0.006, 68, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.2268431001890362, 6.880255363874209e-17], 'false,true': [0.0, 6.97854472621527e-17], 'false,true,true': [nan, 0.0], 'false': [6.880255363874209e-17, nan]}, {'': [0.22383217993079688, -3.1273888017610045e-17], 'false,true': [nan, -3.1273888017610045e-17], 'false': [-3.1273888017610045e-17, nan]}, {'': [0.2268431001890353, 7.816381833051064e-06], 'true': [0.2268431001890353, nan], 'false,true': [0.0, 3.3306690738754695e-17], 'false': [7.816381833051064e-06, nan]}, {'': [0.23831263696128593, 1.9807598886801115e-06], 'false,true,false': [nan, 2.577303450022685e-17], 'false,true': [0.0, 2.577303450022685e-17], 'false': [1.9807598886801115e-06, nan]}, {'': [0.23644210921373648, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.19901144640998938, 5.645201820127915e-18], 'true': [0.19901144640998938, nan], 'true,true,true': [nan, -2.5376526277146434e-16], 'true,true': [-2.5376526277146434e-16, 0.2331961591220852], 'false': [5.645201820127915e-18, nan]}, {'': [0.1866841214961771, 3.7765972228713007e-06], 'false,true': [0.0, 9.25185853854297e-18], 'false': [3.7765972228713007e-06, nan]}, {'': [0.17348800713247642, 1.294594465921524e-05], 'false,true': [1.3877787807814458e-18, 9.912705577010326e-19], 'false,true,true': [nan, 1.3877787807814458e-18], 'false': [1.294594465921524e-05, nan]}, {'': [0.09852432569457047, nan], 'true,false': [0.0446362102719024, 0.07890991680963244], 'true': [0.008759974089689196, 0.07877272620629547], 'true,false,false': [0.21484375000000003, 6.586068790149234e-18], 'true,true': [1.5225915766287861e-16, 0.0]}, {'': [0.15037341832833787, 6.127431876955329e-07], 'false,true': [6.127431876955329e-07, nan], 'false': [6.127431876955329e-07, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.12544463852839155;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.09269127618926104;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.2500955028989253;  // std dev = 0,571, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839679;  // std dev = 1,05e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253565;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( female(B) )
%   | | | then return -0.07505450506187582;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0773809111051358;  // std dev = 0,010, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07346412841373703;  // std dev = 0,000197, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06293795440917037;  // std dev = 0,000112, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.06537909133411109;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.07733148978782177;  // std dev = 0,697, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06365900620624486;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.06378880639476796;  // std dev = 0,000257, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.055863120092435194;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.06365900620624482;  // std dev = 1,32e-09, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(B) )
%   | | | then return -0.06365900620624484;  // std dev = 5,27e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.06374326121807626;  // std dev = 0,000951, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.0678511514143189;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.996799
   AUC PR    = 0.810741
   CLL	      = -0.080696
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.043 seconds
Total inference time: 2.928 seconds
AUC ROC: 0.996799


Results scoring model
   AUC ROC   = 0.99941
   AUC PR    = 0.947324
   CLL	      = -0.065977
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.524 seconds
Refined model CLL: -0.065977


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.996799
   AUC PR    = 0.810741
   CLL	      = -0.080696
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 6.1000000000000005 seconds
Total inference time: 2.928 seconds
AUC ROC: 0.996799
Total revision time: 6.1000000000000005
Best scored revision CLL: -0.065977


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 03:11:16
{'Learning time': 6.1000000000000005, 'F1': 0.852086, 'parameter': {'Learning time': 1.113, 'F1': 0.831169, 'Recall': 0.854599, 'CLL': -0.216514, 'AUC PR': 0.888508, 'Inference time': 2.604, 'Precision': [0.808989, 0.5], 'AUC ROC': 0.982257}, 'Recall': 1.0, 'CLL': -0.080696, 'AUC PR': 0.810741, 'Inference time': 2.928, 'Precision': [0.742291, 0.5], 'AUC ROC': 0.996799}


