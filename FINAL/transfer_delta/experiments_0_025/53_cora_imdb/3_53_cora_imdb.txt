Starting experiment #3 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21242967178442498;  // std dev = 0,478, 8.036,000 (wgt'ed) examples reached here.  /* #neg=5.189 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.10814893509951218;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2152917922423695;  // std dev = 3,105, 42,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10008441897048011;  // std dev = 3,372, 62,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | | else return -0.0189460369675271;  // std dev = 8,785, 716,000 (wgt'ed) examples reached here.  /* #neg=628 #pos=88 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.066844587273425;  // std dev = 6,163, 230,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=48 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7848194451708216;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.4123635428641738;  // std dev = 4,037, 67,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return -0.005091863033169415;  // std dev = 4,749, 164,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=27 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.3502739906253679;  // std dev = 4,327, 75,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=39 */
%   | | | else return 0.06921204372271252;  // std dev = 4,533, 113,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=27 */
%   | | else return 0.18995356338900013;  // std dev = 0,480, 7.490,000 (wgt'ed) examples reached here.  /* #neg=4.796 #pos=2.694 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( title(M, L), venue(M, A) )
%   | | then return 0.05571699671718744;  // std dev = 0,402, 418,000 (wgt'ed) examples reached here.  /* #neg=333 #pos=85 */
%   | | else return -0.02952123259667626;  // std dev = 0,317, 311,000 (wgt'ed) examples reached here.  /* #neg=275 #pos=36 */
%   | else return -0.020410745141207078;  // std dev = 0,323, 411,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=49 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( author(E, D), venue(E, A) )
%   | | then return 0.6905626139572013;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordtitle(F, C) )
%   | | | then return 0.4597933831879706;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.5477054711000584;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.16015751373090636;  // std dev = 0,479, 7.891,000 (wgt'ed) examples reached here.  /* #neg=5.065 #pos=2.826 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.7989861840671387;  // std dev = 1,961, 88,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=84 */
%   | | | else return -0.1516197723265723;  // std dev = 1,014, 295,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=1 */
%   | | else if ( haswordauthor(K, G) )
%   | | | then return 0.1603957554444599;  // std dev = 3,178, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return -0.05323819952477744;  // std dev = 4,388, 249,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=21 */
%   | else return -0.019526741318642567;  // std dev = 0,321, 417,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=49 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.20615262499748357;  // std dev = 5,864, 153,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=69 */
%   | | | else return 0.8072912735741185;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.06536240523760364;  // std dev = 0,320, 77,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | else return 0.13271740203733118;  // std dev = 0,479, 7.718,000 (wgt'ed) examples reached here.  /* #neg=4.958 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.6429505208046306;  // std dev = 2,371, 90,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=84 */
%   | | | else return -0.13279879332148248;  // std dev = 1,016, 318,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=1 */
%   | | else if ( haswordauthor(K, G) )
%   | | | then return 0.16810930490620427;  // std dev = 3,104, 42,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return -0.04400418068353341;  // std dev = 4,383, 238,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=21 */
%   | else return -0.012306814028285422;  // std dev = 0,328, 398,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=49 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.4523669105519804;  // std dev = 0,285, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.2172672084459306;  // std dev = 4,290, 76,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=39 */
%   | | | else return -0.04922810427050897;  // std dev = 4,583, 163,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=27 */
%   | else return 0.11231228795768229;  // std dev = 0,480, 7.642,000 (wgt'ed) examples reached here.  /* #neg=4.882 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.6694061652453452;  // std dev = 0,242, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14824621652476344;  // std dev = 0,071, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(L, H) )
%   | | | then return 0.0777572980985305;  // std dev = 3,243, 52,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | | else return -0.1091177736127247;  // std dev = 0,031, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.010030909191037734;  // std dev = 0,297, 1.057,000 (wgt'ed) examples reached here.  /* #neg=906 #pos=151 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.10970982470613896;  // std dev = 5,863, 169,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=69 */
%   | | | else return 0.6624969726829755;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordtitle(G, C) )
%   | | | then return -0.11032893046323773;  // std dev = 2,483, 92,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=10 */
%   | | | else return 0.4552803767045715;  // std dev = 0,029, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.08879023119735223;  // std dev = 0,480, 7.683,000 (wgt'ed) examples reached here.  /* #neg=4.923 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return 0.14602245895946953;  // std dev = 0,466, 44,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | else if ( title(K, I), venue(K, A) )
%   | | | then return 0.026319249563900547;  // std dev = 5,619, 386,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=83 */
%   | | | else return -0.04494488165884767;  // std dev = 4,397, 261,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=21 */
%   | else return -0.02553553268057108;  // std dev = 0,307, 456,000 (wgt'ed) examples reached here.  /* #neg=407 #pos=49 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07314077180783617;  // std dev = 0,478, 7.875,000 (wgt'ed) examples reached here.  /* #neg=5.028 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.507016914932892;  // std dev = 0,315, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.12755228237508848;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.11531823765175256;  // std dev = 3,056, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return -0.1015025357195629;  // std dev = 0,021, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.0028973225493335642;  // std dev = 7,602, 521,000 (wgt'ed) examples reached here.  /* #neg=453 #pos=68 */
%   | | | else return -0.029923714847507308;  // std dev = 3,937, 258,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=35 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.017683694221262723;  // std dev = 4,335, 228,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=48 */
%   | | | else return -0.11612362930445216;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05737468744608099;  // std dev = 0,478, 7.889,000 (wgt'ed) examples reached here.  /* #neg=5.042 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return 0.06723836480535239;  // std dev = 2,297, 55,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.018553883860659724;  // std dev = 6,221, 532,000 (wgt'ed) examples reached here.  /* #neg=448 #pos=84 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.04735622055307488;  // std dev = 4,128, 124,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=21 */
%   | | | else return -0.12682494198225294;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.009781317595773368;  // std dev = 0,239, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return -0.01811758381786398;  // std dev = 0,314, 423,000 (wgt'ed) examples reached here.  /* #neg=376 #pos=47 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, A), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.028550613214062177;  // std dev = 0,473, 7.587,000 (wgt'ed) examples reached here.  /* #neg=4.978 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.687951788517185;  // std dev = 3,562, 145,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=133 */
%   | | | else return -0.13488618229252505;  // std dev = 1,674, 574,000 (wgt'ed) examples reached here.  /* #neg=572 #pos=2 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.14238222221273186;  // std dev = 4,723, 156,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=27 */
%   | | | else return -0.051556392643908565;  // std dev = 0,978, 15,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordtitle(D, H), haswordvenue(B, H) )
%   | | | then return 0.23215472790623642;  // std dev = 6,395, 253,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=122 */
%   | | | else return 0.10398174964634023;  // std dev = 1,756, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then return 0.06856579985752516;  // std dev = 0,343, 306,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=86 */
%   | else return 0.46953201375547543;  // std dev = 0,345, 42,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=31 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, B), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.03202217687082552;  // std dev = 0,476, 7.397,000 (wgt'ed) examples reached here.  /* #neg=4.788 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.5548387470923944;  // std dev = 3,642, 145,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=131 */
%   | | | else return -0.12154832870422361;  // std dev = 1,776, 534,000 (wgt'ed) examples reached here.  /* #neg=531 #pos=3 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.17869107598616515;  // std dev = 0,300, 285,000 (wgt'ed) examples reached here.  /* #neg=255 #pos=30 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3800156872790688;  // std dev = 4,332, 103,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=78 */
%   | | | else return 0.021977063021639733;  // std dev = 4,364, 202,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=49 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then return 0.49219917558094045;  // std dev = 0,364, 44,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   | | else return 0.533396095875556;  // std dev = 0,182, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else return -0.00466372008118984;  // std dev = 0,275, 250,000 (wgt'ed) examples reached here.  /* #neg=201 #pos=49 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;author(H, E), venue(H, A).;false;false
0;false,true,true;author(G, E), venue(G, A).;false;false
0;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,true;haswordtitle(F, D).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
0;false,false,true;haswordauthor(K, I).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
1;true,false,true;author(J, I), venue(J, B).;false;false
1;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,true;title(M, L), venue(M, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,false;haswordauthor(K, G).;false;false
2;false,true,true;samebib(I, J), venue(J, B).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
2;true,true,false;haswordtitle(F, C).;false;false
2;true;haswordauthor(D, C).;true;false
2;false,true;title(I, H), venue(I, A).;true;true
2;true,true;author(E, D), venue(E, A).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true,false;haswordauthor(K, G).;false;false
3;false,true,true;samebib(I, J), venue(J, B).;false;false
3;true,true,true;haswordtitle(F, C).;false;false
3;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;false,true;title(I, H), venue(I, A).;true;true
3;true,true;haswordtitle(F, D).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,false;haswordtitle(L, H).;false;false
4;false,true,true;samebib(J, K), venue(K, B).;false;false
4;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
4;true,true,false;author(G, E), venue(G, A).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false,true;author(J, I), venue(J, A).;true;true
4;true,true;haswordauthor(F, C).;false;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,false;title(K, I), venue(K, A).;false;false
5;true,true,true;haswordtitle(F, C).;false;false
5;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
5;true,true,false;haswordtitle(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,true;haswordauthor(J, H).;false;true
5;true,true;haswordtitle(F, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;haswordtitle(H, D).;false;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true;author(F, E), venue(F, A).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
6;false,false,true;title(K, J), venue(K, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;false,true,true;haswordvenue(A, F).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
7;false,false;haswordvenue(B, I), haswordauthor(J, I).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false,false;haswordtitle(D, H), haswordvenue(B, H).;false;false
8;false;haswordvenue(B, I), haswordtitle(J, I).;false;false
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true;haswordvenue(B, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
9;true,true;haswordvenue(B, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5670096945931838;  // std dev = 4,038, 79,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048766;  // std dev = 7,74e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.22565848092343313;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.465699543767924;  // std dev = 4,157, 81,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.18867407682142823;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3829345398955104;  // std dev = 0,458, 80,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=56 */
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360622;  // std dev = 7,21e-09, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.253746868924899;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783616;  // std dev = 6,32e-09, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.19883748334541854;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.16896963613061852;  // std dev = 4,513, 88,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926092;  // std dev = 5,74e-09, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.12677474135407493;  // std dev = 0,481, 88,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839682;  // std dev = 5,05e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1264183527512248;  // std dev = 4,263, 86,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0787767547310917;  // std dev = 3,84e-09, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15960072308550158;  // std dev = 3,822, 78,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07324622576333707;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2351205892029957;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.38908640337905936;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.06842697784420275;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(G, B) )
%   | | | then return -0.2276891044575573;  // std dev = 2,579, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3014841335180356;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(A, F) )
%   | | then return -0.12046139618701734;  // std dev = 0,172, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5556349232069455;  // std dev = 1,33e-07, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.05526333682225717;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.979497
   AUC PR    = 0.867039
   CLL	      = -0.17661
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.900506


Total learning time: 1.293 seconds
Total inference time: 2.552 seconds
AUC ROC: 0.979497


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.188482
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.703 seconds
Parameter learned model CLL: -0.188482


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 2, 0], 'true': [4.038, 23, 56], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [7.74e-08, 82, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)'}, {'false,true,false': [0.0, 90, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'true,true,true': [5.27e-09, 3, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.157, 25, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(A, D)', 'false,true,true': 'genre(B, G)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [7.21e-09, 80, 0], 'true,false': [0.458, 24, 56], 'true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true,true': 'genre(B, G)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [6.32e-09, 70, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.474, 29, 56], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'true,true': 'genre(A, E)'}, {'false,true,false': [5.74e-09, 105, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.513, 32, 56], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [5.05e-08, 86, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'true,true': [0.481, 32, 56], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [3.84e-09, 66, 0], 'true': [4.263, 30, 56], 'false,true,true,false': [0.0, 5, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 0, 0], 'true': [3.822, 22, 56], 'false,true,true': [0.0, 90, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(G, B)', 'true,true,false': 'genre(B, E)', 'true': 'genre(A, D)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 2, 0], 'true,false,true,false': [1.32e-09, 3, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 3, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true': [2.579, 109, 0], 'true,false,true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, F)', 'true,false,false': 'movie(C, B)', 'true,true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)'}, {'true,false,true': [0.172, 7, 0], 'true,true,true': [0.0, 0, 56], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 6, 0], 'true,false,false,false': [0.0, 70, 0], 'true,false,false,true': [1.33e-07, 35, 0]}]]
[{'': [0.20637718314372658, 7.401486830834377e-17], 'false,true,false': [nan, 7.311224796312007e-17], 'false,true': [0.0, 7.311224796312007e-17], 'false': [7.401486830834377e-17, nan]}, {'': [0.22222222222222265, -1.4640303621430636e-17], 'true': [0.22222222222222265, nan], 'false,true': [0.0, -1.7270135938613546e-17], 'true,true': [9.25185853854297e-18, 0.21338210638622207], 'false': [-1.4640303621430636e-17, nan]}, {'': [0.21481797780975226, 5.551115123125783e-17], 'true': [0.0, 0.20999999999999935], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 5.2735593669694933e-17], 'false': [5.551115123125783e-17, nan]}, {'': [0.22477508650519085, 4.350874015422911e-17], 'true': [0.22477508650519085, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 3.9650822308041306e-17], 'false': [4.350874015422911e-17, nan]}, {'': [0.2303078473869097, 3.66679164096382e-17], 'false,true,true': [nan, 0.0], 'false': [3.66679164096382e-17, nan], 'true': [0.2303078473869097, nan], 'false,true': [0.0, 3.172065784643304e-17], 'true,true': [0.0, 0.23140495867768554]}, {'': [0.23140495867768598, 2.993859841685815e-17], 'true': [0.23140495867768598, nan], 'false,true': [0.0, 2.9692011123696044e-17], 'false': [2.993859841685815e-17, nan]}, {'': [0.21127657029479013, 1.8764332810566026e-17], 'false,true': [-6.938893903907229e-19, 1.5139404881252134e-17], 'false,true,true': [nan, -6.938893903907229e-19], 'false': [1.8764332810566026e-17, nan]}, {'': [0.187274921749699, -8.018277400070574e-18], 'false,true': [-8.018277400070574e-18, nan], 'false': [-8.018277400070574e-18, nan]}, {'': [0.12041300929781251, nan], 'true,false': [0.010102127834450112, 0.061033147592263186], 'true,false,true': [-2.854859206178974e-16, 5.782411586589357e-19], 'true,false,false': [0.061033147592263186, nan], 'true,true,false': [nan, -5.782411586589357e-19], 'true': [0.006668822416280714, 0.12341034884797439], 'true,true': [0.0, -5.782411586589357e-19]}, {'': [0.09153955791081621, nan], 'true,false': [0.004221683925670326, 0.05563816099136223], 'true,false,false': [5.075305255429287e-16, -3.568574007723717e-18], 'true,true,false': [nan, -5.782411586589357e-19], 'true': [0.011688230056338674, 0.053029379017231884], 'true,true': [-1.1102230246251565e-16, -5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(A, E).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(A, D).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;genre(A, E).;true;true
4;false;genre(A, G).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
8;false;genre(B, F).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 7,30e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839144;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( female(A) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11113387396451806;  // std dev = 0,129, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, D) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.09206349536127423;  // std dev = 0,001, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.09269127618926103;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08519873271419283;  // std dev = 8,27e-05, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08460828342375544;  // std dev = 0,001, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.1331703805597132;  // std dev = 0,101, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.0851847513883968;  // std dev = 1,49e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.08518475138839683;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07878442013301319;  // std dev = 8,20e-05, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.07837242018659349;  // std dev = 0,001, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.08172491786699025;  // std dev = 0,000716, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324475637070743;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07328738152773046;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.0733128317038058;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07287180646262148;  // std dev = 0,003, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06932949418795013;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.06842697784420271;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842621782431194;  // std dev = 2,97e-06, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06843598363722177;  // std dev = 8,25e-05, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return -0.06802388189458981;  // std dev = 0,000705, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13400703000801087;  // std dev = 2,79e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.0647751402657025;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.0642065625940283;  // std dev = 0,000238, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return -0.06408906862200611;  // std dev = 0,001, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070588
   Precision = 0.867021 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.928775


Total learning time: 3.02 seconds
Total inference time: 2.501 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063651
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.712 seconds
Refined model CLL: -0.063651


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070588
   Precision = 0.867021 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.928775


Total learning time: 7.728 seconds
Total inference time: 2.501 seconds
AUC ROC: 1.0
Total revision time: 7.728
Best scored revision CLL: -0.063651


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 02:24:22
{'Learning time': 7.728, 'F1': 0.928775, 'parameter': {'Learning time': 1.293, 'F1': 0.900506, 'Recall': 0.819018, 'CLL': -0.17661, 'AUC PR': 0.867039, 'Inference time': 2.552, 'Precision': [1.0, 0.5], 'AUC ROC': 0.979497}, 'Recall': 1.0, 'CLL': -0.070588, 'AUC PR': 1.0, 'Inference time': 2.501, 'Precision': [0.867021, 0.5], 'AUC ROC': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;author(H, E), venue(H, A).;false;false
0;false,true,true;author(G, E), venue(G, A).;false;false
0;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,true;haswordtitle(F, D).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
0;false,false,true;haswordauthor(K, I).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
1;true,false,true;author(J, I), venue(J, B).;false;false
1;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,true;title(M, L), venue(M, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,false;haswordauthor(K, G).;false;false
2;false,true,true;samebib(I, J), venue(J, B).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
2;true,true,false;haswordtitle(F, C).;false;false
2;true;haswordauthor(D, C).;true;false
2;false,true;title(I, H), venue(I, A).;true;true
2;true,true;author(E, D), venue(E, A).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true,false;haswordauthor(K, G).;false;false
3;false,true,true;samebib(I, J), venue(J, B).;false;false
3;true,true,true;haswordtitle(F, C).;false;false
3;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;false,true;title(I, H), venue(I, A).;true;true
3;true,true;haswordtitle(F, D).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,false;haswordtitle(L, H).;false;false
4;false,true,true;samebib(J, K), venue(K, B).;false;false
4;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
4;true,true,false;author(G, E), venue(G, A).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false,true;author(J, I), venue(J, A).;true;true
4;true,true;haswordauthor(F, C).;false;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,false;title(K, I), venue(K, A).;false;false
5;true,true,true;haswordtitle(F, C).;false;false
5;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
5;true,true,false;haswordtitle(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,true;haswordauthor(J, H).;false;true
5;true,true;haswordtitle(F, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;haswordtitle(H, D).;false;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true;author(F, E), venue(F, A).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
6;false,false,true;title(K, J), venue(K, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;false,true,true;haswordvenue(A, F).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
7;false,false;haswordvenue(B, I), haswordauthor(J, I).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false,false;haswordtitle(D, H), haswordvenue(B, H).;false;false
8;false;haswordvenue(B, I), haswordtitle(J, I).;false;false
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true;haswordvenue(B, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
9;true,true;haswordvenue(B, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5172398441904221;  // std dev = 4,447, 88,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048763;  // std dev = 8,16e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.21708075029492324;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.42736369414952;  // std dev = 4,541, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839147;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1824492532952785;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.34614239123263135;  // std dev = 0,479, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360621;  // std dev = 7,79e-09, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.31770988004561485;  // std dev = 0,459, 84,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.10159632948783615;  // std dev = 6,59e-09, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.20349689524514478;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.23009311563925847;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926108;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.14604658503161908;  // std dev = 0,467, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08518475138839682;  // std dev = 4,94e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04216686465647714;  // std dev = 4,853, 101,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.09408074019581554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109164;  // std dev = 5,27e-09, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0451533360026094;  // std dev = 4,798, 97,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07343360421777428;  // std dev = 0,013, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2083812790528398;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06841503442173326;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.4324368513742025;  // std dev = 1,46e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06841503442173326;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( movie(G, B) )
%   | | | then return -0.23969134811920606;  // std dev = 2,393, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3308479161777345;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06418130228646197;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(A, F) )
%   | | then return -0.09775279758256475;  // std dev = 0,162, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.508055393652819;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.05463036446863624;  // std dev = 2,11e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978798
   AUC PR    = 0.865522
   CLL	      = -0.166673
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total learning time: 1.246 seconds
Total inference time: 2.316 seconds
AUC ROC: 0.978798


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.164493
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.488 seconds
Parameter learned model CLL: -0.164493


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 3, 0], 'true': [4.447, 30, 58], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [8.16e-08, 87, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)'}, {'false,true,false': [0.0, 79, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 6, 0], 'true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.541, 32, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(A, D)', 'false,true,true': 'genre(B, G)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [7.79e-09, 90, 0], 'true,false': [0.479, 32, 58], 'true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true,true': 'genre(B, G)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [6.59e-09, 77, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.459, 26, 58], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'true,true': 'genre(A, E)'}, {'false,true,false': [0.0, 77, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 6, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.292, 27, 58], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [4.94e-08, 84, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 7, 0], 'true,true': [0.467, 32, 58], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [5.27e-09, 85, 0], 'true': [4.853, 43, 58], 'false,true,true,false': [0.0, 3, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 0, 0], 'true': [4.798, 39, 58], 'false,true,true': [0.013, 70, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(G, B)', 'true,true,false': 'genre(B, E)', 'true': 'genre(A, D)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 3, 0], 'true,false,true,false': [2.63e-09, 7, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [2.63e-09, 7, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true': [2.393, 102, 0], 'true,false,true,true': [1.46e-07, 0, 58]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, F)', 'true,false,false': 'movie(C, B)', 'true,true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)'}, {'true,false,true': [0.162, 10, 0], 'true,true,true': [0.0, 0, 58], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 4, 0], 'true,false,false,false': [2.11e-08, 62, 0], 'true,false,false,true': [0.0, 30, 0]}]]
[{'': [0.2246900826446277, 7.401486830834377e-17], 'false,true,false': [nan, 7.656710514656253e-17], 'false,true': [0.0, 7.656710514656253e-17], 'false': [7.401486830834377e-17, nan]}, {'': [0.23113150585678016, -2.0898315757650005e-17], 'true': [0.23113150585678016, nan], 'false,true': [-2.3129646346357427e-18, -2.5296220814244072e-17], 'true,true': [0.0, 0.22913580246913542], 'false': [-2.0898315757650005e-17, nan]}, {'': [0.2296545155925671, 6.141659285160441e-17], 'true': [0.0, 0.22913580246913598], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 5.921189464667501e-17], 'false': [6.141659285160441e-17, nan]}, {'': [0.21068743644748902, 1.30573024258413e-06], 'true': [0.21068743644748902, nan], 'false,true,true': [0.0, 3.0839528461809902e-18], 'false,true': [1.034274998286816e-05, 4.469729060179202e-17], 'false': [1.30573024258413e-06, nan]}, {'': [0.2163877169689776, 0.0], 'false,true,true': [nan, 0.0], 'false': [0.0, nan], 'true': [0.2163877169689776, nan], 'false,true': [0.0, 0.0], 'true,true': [0.0, 0.21674740484429075]}, {'': [0.21831364199585282, 3.050063254464716e-17], 'true': [0.21831364199585282, nan], 'false,true': [9.912705577010326e-19, 2.9077269692563625e-17], 'false': [3.050063254464716e-17, nan]}, {'': [0.23319369192790074, 2.6020266957986184e-06], 'false,true': [4.3914744582088626e-05, 2.7429039431915633e-17], 'false,true,true': [0.0, 0.0], 'false': [2.6020266957986184e-06, nan]}, {'': [0.2373151682937568, 2.4226372779180748e-06], 'false,true': [2.4226372779180748e-06, nan], 'false': [2.4226372779180748e-06, nan]}, {'': [0.12782412409147909, nan], 'true,false': [0.024105600064182543, 0.05615667335612211], 'true,false,true': [3.675221047035001e-16, 9.912705577010326e-19], 'true,false,false': [0.05615667335612211, nan], 'true,true,false': [nan, 9.912705577010326e-19], 'true': [0.004114015423588299, 0.13453171156932256], 'true,true': [0.0, 9.912705577010326e-19]}, {'': [0.08788358701845916, nan], 'true,false': [0.002629772358304591, 0.04518021245140116], 'true,false,false': [-3.848773152033876e-16, 7.162729191130042e-18], 'true,true,false': [nan, 0.0], 'true': [0.00941809452606145, 0.04197857261861592], 'true,true': [-6.125368411725002e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(A, E).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(A, D).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,true;genre(B, G).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;genre(A, E).;true;true
4;false;genre(A, G).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(B, F).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
8;false;genre(B, F).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.14185106490048766;  // std dev = 7,60e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.20298561315871852;  // std dev = 0,110, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.10481470268970532;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( female(A) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.10063990038532393;  // std dev = 0,008, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.0870426226496454;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.0927516261759454;  // std dev = 0,000171, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, E) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.09269127618926104;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518004853368819;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08487884858282396;  // std dev = 0,005, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.08518475138839679;  // std dev = 1,32e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( actor(A), female(B) )
%   | | | then return -0.07877271645897875;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07794569144641887;  // std dev = 0,006, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B) )
%   | | then return -0.07286164261514858;  // std dev = 0,001, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07338435113580279;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return -0.07324622576333704;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06684695806230985;  // std dev = 0,003, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.1316799689567305;  // std dev = 0,421, 42,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( female(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return -0.06843188168758436;  // std dev = 3,10e-05, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( female(B) )
%   | | | then return -0.06843523333516832;  // std dev = 4,39e-05, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.0684538422828293;  // std dev = 0,000369, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.12387197689281078;  // std dev = 0,045, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.12578120522065805;  // std dev = 0,047, 40,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return -0.06061077881144661;  // std dev = 4,18e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06428681922329392;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419324527919514;  // std dev = 3,13e-05, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.06421399633449881;  // std dev = 0,000417, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999922
   AUC PR    = 0.997597
   CLL	      = -0.077292
   Precision = 0.86631 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.928367


Total learning time: 2.74 seconds
Total inference time: 3.438 seconds
AUC ROC: 0.999922


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065444
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.588 seconds
Refined model CLL: -0.065444


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999922
   AUC PR    = 0.997597
   CLL	      = -0.077292
   Precision = 0.86631 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.928367


Total learning time: 7.062 seconds
Total inference time: 3.438 seconds
AUC ROC: 0.999922
Total revision time: 7.062
Best scored revision CLL: -0.065444


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 02:24:35
{'Learning time': 7.062, 'F1': 0.928367, 'parameter': {'Learning time': 1.246, 'F1': 0.89983, 'Recall': 0.817901, 'CLL': -0.166673, 'AUC PR': 0.865522, 'Inference time': 2.316, 'Precision': [1.0, 0.5], 'AUC ROC': 0.978798}, 'Recall': 1.0, 'CLL': -0.077292, 'AUC PR': 0.997597, 'Inference time': 3.438, 'Precision': [0.86631, 0.5], 'AUC ROC': 0.999922}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;author(H, E), venue(H, A).;false;false
0;false,true,true;author(G, E), venue(G, A).;false;false
0;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,true;haswordtitle(F, D).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
0;false,false,true;haswordauthor(K, I).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
1;true,false,true;author(J, I), venue(J, B).;false;false
1;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,true;title(M, L), venue(M, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,false;haswordauthor(K, G).;false;false
2;false,true,true;samebib(I, J), venue(J, B).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
2;true,true,false;haswordtitle(F, C).;false;false
2;true;haswordauthor(D, C).;true;false
2;false,true;title(I, H), venue(I, A).;true;true
2;true,true;author(E, D), venue(E, A).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true,false;haswordauthor(K, G).;false;false
3;false,true,true;samebib(I, J), venue(J, B).;false;false
3;true,true,true;haswordtitle(F, C).;false;false
3;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;false,true;title(I, H), venue(I, A).;true;true
3;true,true;haswordtitle(F, D).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,false;haswordtitle(L, H).;false;false
4;false,true,true;samebib(J, K), venue(K, B).;false;false
4;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
4;true,true,false;author(G, E), venue(G, A).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false,true;author(J, I), venue(J, A).;true;true
4;true,true;haswordauthor(F, C).;false;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,false;title(K, I), venue(K, A).;false;false
5;true,true,true;haswordtitle(F, C).;false;false
5;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
5;true,true,false;haswordtitle(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,true;haswordauthor(J, H).;false;true
5;true,true;haswordtitle(F, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;haswordtitle(H, D).;false;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true;author(F, E), venue(F, A).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
6;false,false,true;title(K, J), venue(K, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;false,true,true;haswordvenue(A, F).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
7;false,false;haswordvenue(B, I), haswordauthor(J, I).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false,false;haswordtitle(D, H), haswordvenue(B, H).;false;false
8;false;haswordvenue(B, I), haswordtitle(J, I).;false;false
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true;haswordvenue(B, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
9;true,true;haswordvenue(B, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5480714157196638;  // std dev = 7,429, 258,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048832;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.2223664702023819;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.4953754652814851;  // std dev = 7,088, 248,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1254446385283916;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.1254446385283917;  // std dev = 0,000, 209,000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.18629066446077272;  // std dev = 1,83e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.4253747857431308;  // std dev = 0,436, 239,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=178 */
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11231637819360632;  // std dev = 2,79e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.11231637819360667;  // std dev = 0,000, 210,000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.2955182043872875;  // std dev = 0,437, 256,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.10159632948783653;  // std dev = 0,000, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.20341793269361388;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.28620666402692047;  // std dev = 6,296, 229,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.09269127618926051;  // std dev = 6,84e-09, 234,000 (wgt'ed) examples reached here.  /* #neg=234 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.17931975687843474;  // std dev = 0,417, 250,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839679;  // std dev = 1,67e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.08518475138839678;  // std dev = 8,94e-08, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11206025288347803;  // std dev = 6,942, 257,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.07877675473109146;  // std dev = 4,47e-09, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0865608823494878;  // std dev = 6,912, 258,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07324622576333677;  // std dev = 1,20e-07, 247,000 (wgt'ed) examples reached here.  /* #neg=247 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.23316155666529065;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.34785358814115347;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.06842697784420264;  // std dev = 2,36e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( movie(G, B) )
%   | | | then return -0.1038563829526696;  // std dev = 5,085, 281,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=49 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.24954563314513506;  // std dev = 1,205, 136,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=129 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( genre(A, F) )
%   | | then return -0.09335068486623796;  // std dev = 0,379, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.19460170158373813;  // std dev = 5,268, 113,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=49 */
%   | | | else return -0.06209612938578827;  // std dev = 5,05e-08, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993692
   AUC PR    = 0.961008
   CLL	      = -0.272016
   Precision = 0.069012 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.129114


Total learning time: 2.137 seconds
Total inference time: 2.353 seconds
AUC ROC: 0.993692


Results scoring model
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.214154
   Precision = 0.226752 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.369678


Total scoring time: 1.442 seconds
Parameter learned model CLL: -0.214154


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [5.58e-08, 53, 0], 'true': [7.429, 80, 178], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 242, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)'}, {'false,true,false': [0.0, 209, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 58, 0], 'true,true,true': [0.0, 20, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [7.088, 70, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(A, D)', 'false,true,true': 'genre(B, G)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [0.0, 210, 0], 'true,false': [0.436, 61, 178], 'true,true': [1.83e-08, 20, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 4, 0], 'false,true,true,false': [2.79e-08, 49, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true,true': 'genre(B, G)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [0.0, 204, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.437, 78, 178], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 12, 0], 'false,true,true,false': [0.0, 29, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'true,true': 'genre(A, E)'}, {'false,true,false': [6.84e-09, 234, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 42, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [6.296, 51, 178], 'false,true,true,true': [0.0, 4, 0], 'true,true,true': [0.0, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [8.94e-08, 241, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [1.67e-08, 43, 0], 'true,true': [0.417, 72, 178], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [4.47e-09, 222, 0], 'true': [6.942, 79, 178], 'false,true,true,false': [0.0, 40, 0], 'false,true,true,true': [0.0, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 0, 0], 'true': [6.912, 80, 178], 'false,true,true': [1.2e-07, 247, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(G, B)', 'true,true,false': 'genre(B, E)', 'true': 'genre(A, D)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [0.0, 4, 0], 'true,true,true': [0.0, 21, 0], 'true,false,true,false': [2.36e-08, 47, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 39, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true': [5.085, 232, 49], 'true,false,true,true': [0.0, 0, 129]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, F)', 'true,false,false': 'movie(C, B)', 'true,true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)'}, {'true,false,true': [0.379, 49, 0], 'true,true,true': [1.205, 7, 129], 'true,true,false,true': [1.32e-09, 3, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 49, 0], 'true,false,false,false': [5.05e-08, 181, 0], 'true,false,false,true': [5.268, 64, 49]}]]
[{'': [0.21392945135509234, 1.8064645824409325e-17], 'false,true,false': [nan, -1.5781682664093133e-16], 'false,true': [5.86532918669894e-17, -1.5781682664093133e-16], 'false': [1.8064645824409325e-17, nan]}, {'': [0.22304522165293605, -6.985672963933569e-17], 'true': [0.22304522165293605, nan], 'false,true': [-4.0197730201945323e-17, -4.0371746350005693e-17], 'true,true': [-7.216449660063518e-17, 0.2025884495317446], 'false': [-6.985672963933569e-17, nan]}, {'': [0.20206888306187312, -1.0131312772244775e-16], 'true': [1.6653345369377347e-17, 0.19008770854851867], 'false,true,true': [0.0, 1.586032892321652e-17], 'false,true': [2.3042364662031552e-17, -5.2867763077388404e-17], 'false': [-1.0131312772244775e-16, nan]}, {'': [0.19096009577882125, -7.069175177205078e-17], 'true': [0.19096009577882125, nan], 'false,true,true': [0.0, -1.1485065771984378e-17], 'false,true': [-6.769652589177784e-18, -8.92532235482969e-17], 'false': [-7.069175177205078e-17, nan]}, {'': [0.17583180847419805, 8.564577618536922e-17], 'false,true,true': [0.0, -1.4538634846281813e-17], 'false': [8.564577618536922e-17, nan], 'true': [0.17583180847419805, nan], 'false,true': [-1.8101462358018857e-17, 4.7445428402784465e-17], 'true,true': [-1.3877787807814457e-17, 0.17310882706279387]}, {'': [0.17353619981192875, 3.596497122025155e-17], 'true': [0.17353619981192875, nan], 'false,true': [6.454785026890445e-18, 3.31684887024943e-17], 'false': [3.596497122025155e-17, nan]}, {'': [0.1875011059282935, 9.079890907715035e-18], 'false,true': [-2.362176648138631e-18, 2.000401846171453e-17], 'false,true,true': [-9.912705577010326e-19, -2.0816681711721684e-18], 'false': [9.079890907715035e-18, nan]}, {'': [0.18518875430783854, 5.843279076974508e-17], 'false,true': [5.843279076974508e-17, nan], 'false': [5.843279076974508e-17, nan]}, {'': [0.08832695623983845, nan], 'true,false': [0.033918333445519526, 0.09201543913568491], 'true,false,true': [-2.7540416114732565e-16, 1.1810883240693155e-17], 'true,false,false': [0.09201543913568491, nan], 'true,true,false': [0.0, 0.0], 'true': [0.005982701601026165, 0.09710314004532443], 'true,true': [-3.172065784643304e-17, 1.290957005378089e-18]}, {'': [0.08161661738245024, nan], 'true,false': [0.00293718660979004, 0.09854989386281827], 'true,false,false': [0.24559479990602182, 1.410780639026442e-17], 'true,true,false': [5.782411586589357e-19, -3.398641912117826e-18], 'true': [0.027420625275532687, 0.08493833375607412], 'true,true': [0.010679330351923777, -3.2025664171879517e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(A, E).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(A, D).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,true;genre(B, G).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;genre(A, E).;true;true
4;false,true;genre(B, H).;true;true
4;false;genre(A, G).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(B, F).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true,false;genre(B, E).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
8;false;genre(B, F).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true,false;genre(A, E).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 5,77e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else return -0.14185106490048852;  // std dev = 0,000, 225,000 (wgt'ed) examples reached here.  /* #neg=225 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(B) )
%   | | | then return -0.1254446385283914;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1254446385283916;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( genre(A, E) )
%   | then return -0.1254446385283916;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.1254446385283918;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.5553664367462835;  // std dev = 3,72e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.5553664367462835;  // std dev = 3,72e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( genre(A, E) )
%   | then return -0.11231637819360626;  // std dev = 6,04e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.11231637819360672;  // std dev = 0,000, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783627;  // std dev = 2,95e-09, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.10159632948783655;  // std dev = 0,000, 217,000 (wgt'ed) examples reached here.  /* #neg=217 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.09269127618926101;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( genre(A, E) )
%   | then return -0.09269127618926103;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926087;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else return -0.09269127618926067;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.08518475138839679;  // std dev = 2,46e-09, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.08518475138839679;  // std dev = 3,61e-09, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.08518475138839687;  // std dev = 1,61e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839675;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.08518475138839675;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.08518475138839678;  // std dev = 2,79e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.0787767547310915;  // std dev = 7,22e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | | else return -0.07877675473109161;  // std dev = 3,25e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109168;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07877675473109166;  // std dev = 8,33e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333702;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( actor(A) )
%   | | | then return -0.07324622576333702;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( actor(A) )
%   | | | then return -0.073246225763337;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.0684269778442027;  // std dev = 2,46e-09, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.10554276505814857;  // std dev = 1,160, 164,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=129 */
%   | | | else return -0.06842697784420264;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.06842697784420261;  // std dev = 9,13e-09, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420261;  // std dev = 1,49e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | | else return -0.06842697784420261;  // std dev = 1,05e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.08496431838496475;  // std dev = 0,743, 63,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=47 */
%   | | | else return 0.11212686244108769;  // std dev = 0,696, 94,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=82 */
%   | | else return -0.06419184008202616;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.06419184008202618;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.08295580589391051;  // std dev = 0,704, 66,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=49 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064738
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.942 seconds
Total inference time: 3.736 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068698
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.885 seconds
Refined model CLL: -0.068698


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064738
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.406 seconds
Total inference time: 3.736 seconds
AUC ROC: 1.0
Total revision time: 9.406
Best scored revision CLL: -0.068698


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 02:24:51
{'Learning time': 9.406, 'F1': 1.0, 'parameter': {'Learning time': 2.137, 'F1': 0.129114, 'Recall': 1.0, 'CLL': -0.272016, 'AUC PR': 0.961008, 'Inference time': 2.353, 'Precision': [0.069012, 0.5], 'AUC ROC': 0.993692}, 'Recall': 1.0, 'CLL': -0.064738, 'AUC PR': 1.0, 'Inference time': 3.736, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;author(H, E), venue(H, A).;false;false
0;false,true,true;author(G, E), venue(G, A).;false;false
0;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,true;haswordtitle(F, D).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
0;false,false,true;haswordauthor(K, I).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
1;true,false,true;author(J, I), venue(J, B).;false;false
1;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,true;title(M, L), venue(M, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,false;haswordauthor(K, G).;false;false
2;false,true,true;samebib(I, J), venue(J, B).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
2;true,true,false;haswordtitle(F, C).;false;false
2;true;haswordauthor(D, C).;true;false
2;false,true;title(I, H), venue(I, A).;true;true
2;true,true;author(E, D), venue(E, A).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true,false;haswordauthor(K, G).;false;false
3;false,true,true;samebib(I, J), venue(J, B).;false;false
3;true,true,true;haswordtitle(F, C).;false;false
3;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;false,true;title(I, H), venue(I, A).;true;true
3;true,true;haswordtitle(F, D).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,false;haswordtitle(L, H).;false;false
4;false,true,true;samebib(J, K), venue(K, B).;false;false
4;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
4;true,true,false;author(G, E), venue(G, A).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false,true;author(J, I), venue(J, A).;true;true
4;true,true;haswordauthor(F, C).;false;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,false;title(K, I), venue(K, A).;false;false
5;true,true,true;haswordtitle(F, C).;false;false
5;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
5;true,true,false;haswordtitle(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,true;haswordauthor(J, H).;false;true
5;true,true;haswordtitle(F, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;haswordtitle(H, D).;false;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true;author(F, E), venue(F, A).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
6;false,false,true;title(K, J), venue(K, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;false,true,true;haswordvenue(A, F).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
7;false,false;haswordvenue(B, I), haswordauthor(J, I).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false,false;haswordtitle(D, H), haswordvenue(B, H).;false;false
8;false;haswordvenue(B, I), haswordtitle(J, I).;false;false
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true;haswordvenue(B, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
9;true,true;haswordvenue(B, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4350720120225898;  // std dev = 4,363, 78,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048766;  // std dev = 6,14e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.2034405423872845;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3886647207706106;  // std dev = 4,284, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1254446385283916;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.1724490950199266;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.35136613798127325;  // std dev = 0,484, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1123163781936063;  // std dev = 4,93e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.26994771257286926;  // std dev = 0,470, 75,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1015963294878362;  // std dev = 5,10e-09, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1868104275136971;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.2696354646107601;  // std dev = 3,784, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.15960585394937304;  // std dev = 0,477, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839679;  // std dev = 1,83e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1580172485151684;  // std dev = 3,770, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.09408074019581554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0787767547310917;  // std dev = 3,73e-09, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.03114765510322527;  // std dev = 4,291, 77,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07324622576333704;  // std dev = 7,45e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.2126693675888615;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.4345141395006755;  // std dev = 8,43e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( movie(G, B) )
%   | | | then return -0.22997111470711729;  // std dev = 2,082, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3322622488608537;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.08075566827513679;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( genre(A, F) )
%   | | then return -0.07697376102940606;  // std dev = 0,108, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5083706405586366;  // std dev = 4,21e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.055144315509186345;  // std dev = 1,83e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.979741
   AUC PR    = 0.868436
   CLL	      = -0.165408
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.904065


Total learning time: 1.228 seconds
Total inference time: 3.034 seconds
AUC ROC: 0.979741


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.175663
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.347 seconds
Parameter learned model CLL: -0.175663


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 7, 0], 'true': [4.363, 33, 45], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.14e-08, 60, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)'}, {'false,true,false': [0.0, 60, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 4, 0], 'true,true,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.284, 31, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(A, D)', 'false,true,true': 'genre(B, G)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [4.93e-09, 54, 0], 'true,false': [0.484, 27, 45], 'true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true,true': 'genre(B, G)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [5.1e-09, 60, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.47, 30, 45], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'true,true': 'genre(A, E)'}, {'false,true,false': [0.0, 55, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [3.784, 21, 45], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [1.83e-08, 60, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 4, 0], 'true,true': [0.477, 26, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [3.73e-09, 65, 0], 'true': [3.77, 23, 45], 'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 0, 0], 'true': [4.291, 32, 45], 'false,true,true': [7.45e-09, 58, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(G, B)', 'true,true,false': 'genre(B, E)', 'true': 'genre(A, D)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 4, 0], 'true,false,true,false': [1.86e-09, 6, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [1.86e-09, 5, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true': [2.082, 80, 0], 'true,false,true,true': [8.43e-08, 0, 45]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, F)', 'true,false,false': 'movie(C, B)', 'true,true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)'}, {'true,false,true': [0.108, 9, 0], 'true,true,true': [0.0, 0, 45], 'true,true,false,true': [0.0, 1, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 8, 0], 'true,false,false,false': [1.83e-08, 52, 0], 'true,false,false,true': [4.21e-08, 23, 0]}]]
[{'': [0.2440828402366867, 6.628197161941232e-17], 'false,true,false': [nan, 6.29126380620922e-17], 'false,true': [-7.93016446160826e-18, 6.29126380620922e-17], 'false': [6.628197161941232e-17, nan]}, {'': [0.24515302034930328, -3.122502256758253e-17], 'true': [0.24515302034930328, nan], 'false,true': [0.0, -4.070817756958907e-17], 'true,true': [0.0, 0.2415166204986152], 'false': [-3.122502256758253e-17, nan]}, {'': [0.234871558018265, 3.45807171604557e-17], 'true': [0.0, 0.2343749999999998], 'false,true,true': [0.0, 0.0], 'false,true': [-1.982541115402065e-18, 2.4671622769447922e-17], 'false': [3.45807171604557e-17, nan]}, {'': [0.2210271631971936, 2.819614030794048e-17], 'true': [0.2210271631971936, nan], 'false,true,true': [nan, -1.1564823173178713e-18], 'false,true': [-1.1564823173178713e-18, 2.590520390792032e-17], 'false': [2.819614030794048e-17, nan]}, {'': [0.21676738919114383, -3.895519384649672e-18], 'false,true,true': [nan, 0.0], 'false': [-3.895519384649672e-18, nan], 'true': [0.21676738919114383, nan], 'false,true': [0.0, -2.0185873175002845e-18], 'true,true': [0.0, 0.21694214876033094]}, {'': [0.22781807706645565, 4.336808689942018e-18], 'true': [0.22781807706645565, nan], 'false,true': [0.0, 5.551115123125783e-18], 'false': [4.336808689942018e-18, nan]}, {'': [0.20897823361746412, 3.2980869400599046e-06], 'false,true': [3.747391537671507e-05, 1.4518301091252048e-17], 'false,true,true': [0.0, 0.0], 'false': [3.2980869400599046e-06, nan]}, {'': [0.2391294227432787, 9.570888143320315e-19], 'false,true': [9.570888143320315e-19, nan], 'false': [9.570888143320315e-19, nan]}, {'': [0.12352907959650022, nan], 'true,false': [0.0262577613338531, 0.05420044001378216], 'true,false,true': [1.5789838572446671e-16, 5.782411586589357e-19], 'true,false,false': [0.05420044001378216, nan], 'true,true,false': [nan, 6.938893903907229e-19], 'true': [0.005137251110925929, 0.13043469049021822], 'true,true': [0.0, 6.938893903907229e-19]}, {'': [0.08093440429591692, nan], 'true,false': [0.0013070200248405483, 0.04367560278302661], 'true,false,false': [7.723290606088045e-17, 6.4051328343759035e-18], 'true,true,false': [0.0, 0.0], 'true': [0.022037644015039777, 0.040449229415563136], 'true,true': [-1.7763568394002506e-16, 2.7097323892432783e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;true;genre(A, E).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(A, D).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;genre(A, E).;true;true
4;false;genre(A, G).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(B, F).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
8;false;genre(B, F).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true,false;genre(A, E).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.17713862161527608;  // std dev = 0,127, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.10726477876125251;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( director(B) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 1,32e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.10159632948783627;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.3081588711810276;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3207118471601495;  // std dev = 2,11e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( genre(A, E) )
%   | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.06685654969561833;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( actor(B) )
%   | | | then return -0.0851847513883968;  // std dev = 1,29e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.07345264946468327;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07771193367781008;  // std dev = 0,015, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07360845466198236;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07360845466198236;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07181773096064407;  // std dev = 0,004, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07324622576333704;  // std dev = 5,27e-09, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.07324622576333702;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06072176969359376;  // std dev = 0,007, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13431295509884797;  // std dev = 0,212, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.12946271746863158;  // std dev = 0,418, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06861716078537075;  // std dev = 0,000347, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06854018197585035;  // std dev = 0,000568, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(A) )
%   | | | then return -0.06843836724014798;  // std dev = 8,52e-05, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06847243694751912;  // std dev = 0,000538, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.1361603852337414;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.11938970042895382;  // std dev = 0,058, 37,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06226583121324227;  // std dev = 0,005, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06423830738019523;  // std dev = 0,000402, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06426625320418439;  // std dev = 0,000666, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999934
   AUC PR    = 0.997772
   CLL	      = -0.075016
   Precision = 0.870801 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930939


Total learning time: 3.118 seconds
Total inference time: 3.359 seconds
AUC ROC: 0.999934


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066386
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.382 seconds
Refined model CLL: -0.066386


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999934
   AUC PR    = 0.997772
   CLL	      = -0.075016
   Precision = 0.870801 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.930939


Total learning time: 7.074999999999999 seconds
Total inference time: 3.359 seconds
AUC ROC: 0.999934
Total revision time: 7.074999999999999
Best scored revision CLL: -0.066386


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 02:25:06
{'Learning time': 7.074999999999999, 'F1': 0.930939, 'parameter': {'Learning time': 1.228, 'F1': 0.904065, 'Recall': 0.824926, 'CLL': -0.165408, 'AUC PR': 0.868436, 'Inference time': 3.034, 'Precision': [1.0, 0.5], 'AUC ROC': 0.979741}, 'Recall': 1.0, 'CLL': -0.075016, 'AUC PR': 0.997772, 'Inference time': 3.359, 'Precision': [0.870801, 0.5], 'AUC ROC': 0.999934}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;author(H, E), venue(H, A).;false;false
0;false,true,true;author(G, E), venue(G, A).;false;false
0;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,true;haswordtitle(F, D).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
0;false,false,true;haswordauthor(K, I).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,false;haswordvenue(A, H), haswordauthor(I, H).;true;false
1;true,false,true;author(J, I), venue(J, B).;false;false
1;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
1;true,true,false;author(G, E), venue(G, A).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,true;title(M, L), venue(M, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,false;haswordauthor(K, G).;false;false
2;false,true,true;samebib(I, J), venue(J, B).;false;false
2;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
2;true,true,false;haswordtitle(F, C).;false;false
2;true;haswordauthor(D, C).;true;false
2;false,true;title(I, H), venue(I, A).;true;true
2;true,true;author(E, D), venue(E, A).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true,false;haswordauthor(K, G).;false;false
3;false,true,true;samebib(I, J), venue(J, B).;false;false
3;true,true,true;haswordtitle(F, C).;false;false
3;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
3;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
3;false,true;title(I, H), venue(I, A).;true;true
3;true,true;haswordtitle(F, D).;true;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,false;haswordtitle(L, H).;false;false
4;false,true,true;samebib(J, K), venue(K, B).;false;false
4;false;haswordvenue(B, H), haswordauthor(I, H).;true;false
4;true,true,false;author(G, E), venue(G, A).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false,true;author(J, I), venue(J, A).;true;true
4;true,true;haswordauthor(F, C).;false;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,false;title(K, I), venue(K, A).;false;false
5;true,true,true;haswordtitle(F, C).;false;false
5;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
5;true,true,false;haswordtitle(G, C).;false;false
5;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
5;false,true;haswordauthor(J, H).;false;true
5;true,true;haswordtitle(F, D).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;haswordtitle(H, D).;false;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true;author(F, E), venue(F, A).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
6;false,false,true;title(K, J), venue(K, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;false,true,true;haswordvenue(A, F).;false;false
7;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
7;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
7;false,false;haswordvenue(B, I), haswordauthor(J, I).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false,false;haswordtitle(D, H), haswordvenue(B, H).;false;false
8;false;haswordvenue(B, I), haswordtitle(J, I).;false;false
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true;venue(E, A), title(E, D).;true;true
8;true,true;haswordvenue(B, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, A).;false;true
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;true;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;false,true;haswordvenue(B, I), haswordtitle(J, I).;false;false
9;true,true;haswordvenue(B, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.510322848142991;  // std dev = 3,956, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048766;  // std dev = 6,32e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3761978019247106;  // std dev = 4,284, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1254446385283915;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.21590746123318422;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.4279973316745027;  // std dev = 0,452, 63,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=45 */
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1123163781936063;  // std dev = 4,93e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.2769941262563107;  // std dev = 0,469, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783617;  // std dev = 6,18e-09, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.17693399037573704;  // std dev = 4,108, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.13524469604116335;  // std dev = 0,475, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.08518475138839679;  // std dev = 1,83e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16424931269672527;  // std dev = 3,703, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.0787767547310917;  // std dev = 3,73e-09, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04152097356426911;  // std dev = 4,199, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07344374465504257;  // std dev = 0,008, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.29161041146578415;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07360906188548413;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.4232462884092407;  // std dev = 6,66e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.06841438812969937;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(G, B) )
%   | | | then return -0.13169481700104949;  // std dev = 2,735, 91,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3246008953086636;  // std dev = 6,32e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06418073205087485;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(A, F) )
%   | | then return -0.06874448061140215;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.18718204484549222;  // std dev = 2,535, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return -0.06048321732855488;  // std dev = 3,29e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.983069
   AUC PR    = 0.891379
   CLL	      = -0.216568
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.9216


Total learning time: 1.16 seconds
Total inference time: 3.342 seconds
AUC ROC: 0.983069


Results scoring model
   AUC ROC   = 0.97178
   AUC PR    = 0.824078
   CLL	      = -0.226119
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.875


Total scoring time: 1.255 seconds
Parameter learned model CLL: -0.226119


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,true': [0.0, 3, 0], 'true': [3.956, 24, 45], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [6.32e-08, 62, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)'}, {'false,true,false': [0.0, 76, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.284, 31, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'genre(A, D)', 'false,true,true': 'genre(B, G)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [4.93e-09, 54, 0], 'true,false': [0.452, 18, 45], 'true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [6.18e-09, 67, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true': [0.469, 24, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'true,true': 'genre(A, E)'}, {'false,true,false': [0.0, 59, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.108, 27, 45], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)'}, {'false,true,false': [1.83e-08, 60, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'true,true': [0.475, 28, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [3.73e-09, 65, 0], 'true': [3.703, 21, 45], 'false,true,true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 0, 0], 'true': [4.199, 29, 45], 'false,true,true': [0.008, 56, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, F)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(G, B)', 'true,true,false': 'genre(B, E)', 'true': 'genre(A, D)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 2, 0], 'true,false,false,false': [0.0, 0, 0], 'true,false,false,true': [2.735, 81, 10], 'true,false,true,true': [6.66e-08, 0, 35]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, F)', 'true,false,false': 'movie(C, B)', 'true,true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)'}, {'true,false,true': [0.0, 3, 0], 'true,true,true': [6.32e-08, 0, 35], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 2, 0], 'true,false,false,false': [3.29e-08, 67, 0], 'true,false,false,true': [2.535, 18, 10]}]]
[{'': [0.2268431001890362, 6.832141690000964e-17], 'false,true,false': [nan, 6.446456272017038e-17], 'false,true': [0.0, 6.446456272017038e-17], 'false': [6.832141690000964e-17, nan]}, {'': [0.24151662049861594, -2.5620531337503614e-17], 'true': [0.24151662049861594, nan], 'false,true': [0.0, -2.6294755846385285e-17], 'true,true': [nan, 0.24151662049861594], 'false': [-2.5620531337503614e-17, nan]}, {'': [0.20726996727145963, 3.198947698072485e-17], 'true': [0.0, 0.20408163265306067], 'false,true,true': [0.0, 0.0], 'false,true': [0.0, 2.4671622769447922e-17], 'false': [3.198947698072485e-17, nan]}, {'': [0.220424363645366, 3.811213368116209e-17], 'true': [0.220424363645366, nan], 'false,true': [nan, 3.811213368116209e-17], 'false': [3.811213368116209e-17, nan]}, {'': [0.2343750000000001, 2.514753281794773e-06], 'false,true,true': [nan, 0.0], 'false': [2.514753281794773e-06, nan], 'true': [0.2343750000000001, nan], 'false,true': [0.0, -1.8817339400426382e-18], 'true,true': [nan, 0.2343750000000001]}, {'': [0.2257625827986187, 9.085930865824064e-07], 'true': [0.2257625827986187, nan], 'false,true': [0.0, 5.551115123125783e-18], 'false': [9.085930865824064e-07, nan]}, {'': [0.20780298096413333, 1.1891545446342513e-06], 'false,true': [0.0, 1.4518301091252048e-17], 'false,true,true': [nan, 0.0], 'false': [1.1891545446342513e-06, nan]}, {'': [0.23831263696128543, 1.053370239678069e-06], 'false,true': [1.053370239678069e-06, nan], 'false': [1.053370239678069e-06, nan]}, {'': [0.11696800130477535, nan], 'true,false': [0.012360201212440563, 0.0821921634961557], 'true,false,true': [1.2688263138573217e-16, 0.0], 'true,false,false': [0.0821921634961557, nan], 'true,true,false': [nan, 0.0], 'true': [0.010561019648629369, 0.11937717663758247], 'true,true': [0.0, 0.0]}, {'': [0.08401987020509208, nan], 'true,false': [0.0, 0.07100597783753375], 'true,false,false': [0.22959183673469385, 1.6156230582231756e-17], 'true,true,false': [nan, 0.0], 'true': [0.007728693034377873, 0.06885742279970389], 'true,true': [1.1419436824715895e-16, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(A, D).;true;true
2;false,true;genre(B, G).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, G).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
8;false;genre(B, F).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 6,99e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( actor(B) )
%   | | | then return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(A) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 3,23e-09, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839679;  // std dev = 1,67e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.0851847513883968;  // std dev = 1,67e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.1513008003572745;  // std dev = 0,543, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06847302736997735;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06702880791664088;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1404565894304556;  // std dev = 0,215, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.1527438580936708;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0684269778442027;  // std dev = 1,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.06792363667028044;  // std dev = 0,010, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( female(A) )
%   | | | then return 0.12114802438826025;  // std dev = 0,205, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.15274385809367075;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.11297824040437059;  // std dev = 0,065, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06229761728448688;  // std dev = 0,003, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06355057692161885;  // std dev = 0,012, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | | else return 0.08695127719521532;  // std dev = 0,324, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078983
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.321 seconds
Total inference time: 2.633 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066518
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.377 seconds
Refined model CLL: -0.066518


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078983
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 6.113 seconds
Total inference time: 2.633 seconds
AUC ROC: 1.0
Total revision time: 6.113
Best scored revision CLL: -0.066518


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 02:25:19
{'Learning time': 6.113, 'F1': 0.852086, 'parameter': {'Learning time': 1.16, 'F1': 0.9216, 'Recall': 0.854599, 'CLL': -0.216568, 'AUC PR': 0.891379, 'Inference time': 3.342, 'Precision': [1.0, 0.5], 'AUC ROC': 0.983069}, 'Recall': 1.0, 'CLL': -0.078983, 'AUC PR': 1.0, 'Inference time': 2.633, 'Precision': [0.742291, 0.5], 'AUC ROC': 1.0}


