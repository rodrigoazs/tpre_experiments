Starting experiment #2 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21825518351842946;  // std dev = 0,480, 7.906,000 (wgt'ed) examples reached here.  /* #neg=5.059 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7517659563761073;  // std dev = 2,989, 94,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=84 */
%   | | | else return -0.1387646451474013;  // std dev = 0,998, 324,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.14116780302404067;  // std dev = 3,279, 53,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return -0.05851773156715442;  // std dev = 4,387, 252,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.008706588979808052;  // std dev = 6,383, 353,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=47 */
%   | | | else return -0.11286555765411088;  // std dev = 1,394, 69,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.8294514846187083;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.18239266108929664;  // std dev = 6,535, 187,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=66 */
%   | | else return 0.8294514846187082;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.19337553525160756;  // std dev = 0,481, 7.584,000 (wgt'ed) examples reached here.  /* #neg=4.824 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( author(J, I), venue(J, A) )
%   | | then if ( author(K, I), venue(K, B) )
%   | | | then return 0.19132429811494464;  // std dev = 1,140, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.13813091207483735;  // std dev = 0,012, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( author(L, I), venue(L, B) )
%   | | | then return 0.30732600348242445;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08911916822594843;  // std dev = 2,913, 60,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | else return -4.09876060400573E-6;  // std dev = 0,331, 1.050,000 (wgt'ed) examples reached here.  /* #neg=899 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7088217387694927;  // std dev = 0,052, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.34199844723978784;  // std dev = 4,228, 72,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=39 */
%   | | | else return -0.014724731175478326;  // std dev = 4,691, 146,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=27 */
%   | else return 0.16592624681001675;  // std dev = 0,482, 7.548,000 (wgt'ed) examples reached here.  /* #neg=4.788 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return 0.30808417283274214;  // std dev = 0,490, 36,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | else if ( title(K, I), venue(K, A) )
%   | | | then return 0.05210143448362221;  // std dev = 7,030, 397,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=83 */
%   | | | else return -0.05054894650214746;  // std dev = 4,386, 248,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=21 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.020145857847401746;  // std dev = 0,324, 410,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=49 */
%   | | else return -0.12544418886110084;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13442720738651273;  // std dev = 0,480, 7.859,000 (wgt'ed) examples reached here.  /* #neg=5.012 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6684303078801365;  // std dev = 2,163, 89,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=84 */
%   | | | else return -0.13065893615742466;  // std dev = 1,007, 332,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.09359207235142403;  // std dev = 3,233, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return -0.047102381858877926;  // std dev = 4,392, 255,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.0972204153747293;  // std dev = 0,855, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1335814064977172;  // std dev = 0,060, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.009347508554121338;  // std dev = 6,465, 376,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=48 */
%   | | | else return -0.11231601437437481;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6901629250321939;  // std dev = 0,453, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.2866022758396497;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.455694091584807;  // std dev = 1,045, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.05172544369795817;  // std dev = 4,740, 161,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=27 */
%   | else return 0.10323101849911465;  // std dev = 0,478, 7.769,000 (wgt'ed) examples reached here.  /* #neg=5.009 #pos=2.760 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, B) )
%   | | then if ( samebib(K, L), venue(L, A) )
%   | | | then return 0.6443751640667412;  // std dev = 0,284, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.15216712875574595;  // std dev = 0,006, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.05148157153182021;  // std dev = 0,302, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | else return -0.013749397301382657;  // std dev = 0,302, 1.108,000 (wgt'ed) examples reached here.  /* #neg=957 #pos=151 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08468963768926646;  // std dev = 0,477, 7.969,000 (wgt'ed) examples reached here.  /* #neg=5.122 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5366480708548068;  // std dev = 1,716, 87,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=84 */
%   | | | else return -0.11554045135261128;  // std dev = 1,008, 317,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.07735705727415439;  // std dev = 3,207, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return -0.040058729790013604;  // std dev = 4,391, 254,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.00963907171237494;  // std dev = 6,389, 372,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=47 */
%   | | | else return -0.09137218311202124;  // std dev = 1,391, 61,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=2 */
%   | | else return -0.10119260308204563;  // std dev = 0,012, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07119635040218908;  // std dev = 0,478, 7.890,000 (wgt'ed) examples reached here.  /* #neg=5.043 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.20366295718531555;  // std dev = 0,411, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13334437616931183;  // std dev = 3,016, 42,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.02953166751331455;  // std dev = 5,014, 520,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=83 */
%   | | | else return 0.04142448318176786;  // std dev = 4,131, 129,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=21 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.006243190925770097;  // std dev = 6,385, 364,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=47 */
%   | | | else return -0.07264271956722511;  // std dev = 1,384, 50,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=2 */
%   | | else return -0.09157472171844684;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.634253262708574;  // std dev = 1,243, 45,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | | else return -0.2981020447429165;  // std dev = 0,090, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return -0.22392648867851309;  // std dev = 1,750, 47,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=4 */
%   | | | else return 0.08710848951167628;  // std dev = 4,063, 86,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=39 */
%   | else return 0.053582330639961984;  // std dev = 0,477, 7.736,000 (wgt'ed) examples reached here.  /* #neg=4.976 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then return 0.12072248251145232;  // std dev = 0,463, 43,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | else return -0.053738808678131265;  // std dev = 0,256, 28,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return -0.012124452186956692;  // std dev = 0,256, 648,000 (wgt'ed) examples reached here.  /* #neg=544 #pos=104 */
%   | | else return -0.0038132579589464136;  // std dev = 0,328, 377,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=47 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.043532242824075286;  // std dev = 0,476, 7.924,000 (wgt'ed) examples reached here.  /* #neg=5.077 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then return 0.0023228373120181387;  // std dev = 0,344, 583,000 (wgt'ed) examples reached here.  /* #neg=498 #pos=85 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.11048136756422465;  // std dev = 0,049, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0.0010472822855725024;  // std dev = 3,210, 185,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=36 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return -0.005084775675110963;  // std dev = 3,714, 229,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=47 */
%   | | | else return -0.040915394798938035;  // std dev = 1,394, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else return -0.08392156342294496;  // std dev = 0,013, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, B), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.027807958429218103;  // std dev = 0,474, 7.395,000 (wgt'ed) examples reached here.  /* #neg=4.786 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.70448607350142;  // std dev = 3,216, 141,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=131 */
%   | | | else return -0.1389730460116851;  // std dev = 1,740, 506,000 (wgt'ed) examples reached here.  /* #neg=503 #pos=3 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.19700588190951246;  // std dev = 4,853, 211,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=27 */
%   | | | else return -0.08719538144464781;  // std dev = 1,448, 72,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=3 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.45972048171559077;  // std dev = 3,983, 98,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=78 */
%   | | | else return 0.03186685842890105;  // std dev = 3,937, 206,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=49 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5724146330597374;  // std dev = 0,296, 75,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=68 */
%   | else return -0.012221048718704343;  // std dev = 0,232, 283,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=49 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,false;author(L, I), venue(L, B).;false;false
1;false,true,true;author(K, I), venue(K, B).;false;false
1;true,true,true;haswordauthor(G, C).;false;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false,true;author(J, I), venue(J, A).;true;true
1;true,true;haswordtitle(F, C).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,false;title(K, I), venue(K, A).;false;false
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
2;true,true,false;author(G, E), venue(G, A).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false,true;haswordauthor(J, H).;false;true
2;true,true;haswordauthor(F, C).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;haswordauthor(H, D).;false;false
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true;title(F, E), venue(F, A).;true;true
3;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
3;false,false,true;author(K, J), venue(K, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,true;samebib(K, L), venue(L, A).;false;false
4;true,true,true;samebib(F, G), venue(G, B).;false;false
4;false;haswordvenue(A, I), haswordauthor(J, I).;true;false
4;true,true,false;haswordauthor(H, C).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false,true;author(K, J), venue(K, B).;true;false
4;true,true;author(F, E), venue(F, A).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordauthor(H, D).;false;false
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true;title(F, E), venue(F, A).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
6;false,true,true;author(G, F), venue(G, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true;haswordauthor(F, D).;true;true
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,false,true;title(L, K), venue(L, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;false;haswordvenue(B, I), haswordauthor(J, I).;true;true
7;true,true,false;author(H, E), venue(H, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,true;haswordtitle(K, I).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true,false;title(G, E), venue(G, A).;false;false
8;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;false
8;false,true;title(F, E), venue(F, B).;false;true
8;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
8;false,false,true;title(J, I), venue(J, A).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, A).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;true,true;haswordvenue(B, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4414822684328465;  // std dev = 4,830, 96,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048763;  // std dev = 8,74e-09, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.454342214055253;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12544463852839152;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.2881931836305465;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.4031648410608112;  // std dev = 4,157, 81,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360629;  // std dev = 3,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.26562716097692146;  // std dev = 4,439, 88,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10159632948783617;  // std dev = 6,18e-09, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.2835862527066431;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.24993370223749908;  // std dev = 0,462, 81,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return -0.12872084269380854;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14948876204341677;  // std dev = 4,372, 87,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.08518475138839679;  // std dev = 3,23e-09, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09467228800023021;  // std dev = 4,495, 89,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.0787767547310918;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07877675473109165;  // std dev = 4,66e-09, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4356805410842428;  // std dev = 1,26e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.27564521063623415;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.5643194589157567;  // std dev = 9,42e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09891404344802002;  // std dev = 3,124, 82,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=56 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420267;  // std dev = 3,33e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3114592865995611;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.09436319972656079;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.2417886986107762;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.4485096412720231;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978388
   AUC PR    = 0.863056
   CLL	      = -0.158313
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.900506


Total learning time: 1.329 seconds
Total inference time: 2.513 seconds
AUC ROC: 0.978388


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.162679
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.763 seconds
Parameter learned model CLL: -0.162679


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [8.74e-09, 87, 0], 'true': [4.83, 40, 56], 'false,true,true,false': [0.0, 3, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, H)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, A)', 'true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 74, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 5, 0], 'true,true': [0.474, 29, 56], 'false,true,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)'}, {'false,true,false': [3.94e-08, 56, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 4, 0], 'true,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.157, 25, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [6.18e-09, 69, 0], 'true': [4.439, 32, 56], 'false,true,true,false': [0.0, 6, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, I)', 'true,true,true': 'genre(B, F)', 'false': 'movie(G, A)', 'true': 'movie(D, B)', 'false,true': 'genre(B, H)', 'true,true': 'genre(A, E)'}, {'false,true,false': [0.0, 81, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.462, 25, 56], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.86e-09, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [3.23e-09, 75, 0], 'true': [4.372, 31, 56], 'false,true,true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,true,false': [4.66e-09, 75, 0], 'true': [4.495, 33, 56], 'false,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(A, F)', 'false': 'movie(H, B)', 'true,true,false': 'genre(A, G)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [1.26e-07, 0, 56], 'true,true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'false,true': [0.0, 69, 0], 'true,true,false,false': [9.42e-08, 30, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,true': [0.0, 3, 0], 'true': [3.124, 26, 56], 'false,true,false,true': [0.0, 3, 0], 'false,true,false,false': [3.33e-08, 76, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, F)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)', 'true,true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 56], 'true,false,true,false': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 6, 0], 'true,false,false,false': [0.0, 71, 0], 'true,false,false,true': [0.0, 34, 0], 'true,false,true,true': [0.0, 2, 0]}]]
[{'': [0.24305555555555533, 7.401486830834377e-17], 'false,true': [0.0, 7.656710514656253e-17], 'false,true,true': [nan, 0.0], 'false': [7.401486830834377e-17, nan]}, {'': [0.22477508650518827, -2.0898315757650005e-17], 'false,true,false': [0.0, -2.700542492331462e-17], 'false,true,true': [nan, -2.3129646346357427e-18], 'false': [-2.0898315757650005e-17, nan], 'true': [0.22477508650518827, nan], 'false,true': [-2.3129646346357427e-18, -2.5296220814244072e-17]}, {'': [0.21948033096240382, 3.3306690738754695e-17], 'true': [0.21948033096240382, nan], 'false,true': [0.0, 2.7755575615628914e-17], 'true,true': [0.0, 0.21338210638622168], 'false': [3.3306690738754695e-17, nan]}, {'': [0.2239528829472834, 4.2928623618839385e-17], 'false,true': [0.0, 4.022547190670857e-17], 'false,true,true': [nan, 0.0], 'false': [4.2928623618839385e-17, nan]}, {'': [0.21610523324318082, 1.5092441750930163e-05], 'false,true,true': [0.0, 1.1564823173178713e-18], 'true,true,true': [nan, 0.0], 'false': [1.5092441750930163e-05, nan], 'true': [0.21610523324318082, nan], 'false,true': [0.00024339931171980106, 0.0], 'true,true': [0.0, 0.21338210638622146]}, {'': [0.2196929918357083, 1.0225738384705389e-17], 'false,true': [0.0, 1.0362081563168128e-17], 'false,true,true': [nan, 0.0], 'false': [1.0225738384705389e-17, nan]}, {'': [0.22704798416594968, 2.0906797216967234e-17], 'false,true': [0.0, 2.2204460492503132e-17], 'false': [2.0906797216967234e-17, nan]}, {'': [0.22490576106714652, -2.413528314402514e-18], 'true,true,true': [nan, 2.854859206178974e-16], 'false': [-2.413528314402514e-18, nan], 'true,true,false': [0.0, 2.9605947323337506e-16], 'true': [0.22490576106714652, nan], 'true,true': [2.854859206178974e-16, 0.0048827825167822025]}, {'': [0.11903974132484119, 1.692413147294446e-17], 'false,true,false': [-5.782411586589357e-19, 1.460819769243627e-17], 'false,true': [-5.782411586589357e-19, 1.616147440910038e-17], 'false': [1.692413147294446e-17, nan]}, {'': [0.0735682628654405, nan], 'true,false': [0.007885161039820208, 0.03233997423673418], 'true,false,true': [0.0, 0.0], 'true,false,false': [-7.836868409118753e-17, -6.254777603522009e-18], 'true,true,false': [0.0, -5.782411586589357e-19], 'true': [0.014271210406858265, 0.031487471003921866], 'true,true': [-7.930164461608261e-17, 0.000111466646057125]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,false;genre(B, H).;true;true
1;false;genre(A, F).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(A, E).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;genre(A, E).;true;true
4;false,true;genre(A, I).;true;true
4;false;genre(B, H).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,false;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true,false;genre(A, E).;true;true
9;false;genre(A, F).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, E) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839147;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(B, E) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839686;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( actor(B) )
%   | | | then return -0.0851847513883968;  // std dev = 1,29e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return -0.07324622576333704;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( genre(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(A, E) )
%   | | then return -0.0684269778442027;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420265;  // std dev = 1,49e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13400703000801087;  // std dev = 2,79e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( movie(D, B) )
%   | | then return -0.06419184008202619;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then return -0.06419184008202626;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999586
   AUC PR    = 0.986599
   CLL	      = -0.079174
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.678 seconds
Total inference time: 3.025 seconds
AUC ROC: 0.999586


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064494
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.671 seconds
Refined model CLL: -0.064494


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999586
   AUC PR    = 0.986599
   CLL	      = -0.079174
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 7.441 seconds
Total inference time: 3.025 seconds
AUC ROC: 0.999586
Total revision time: 7.441
Best scored revision CLL: -0.064494


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 01:19:28
{'Learning time': 7.441, 'F1': 0.847854, 'parameter': {'Learning time': 1.329, 'F1': 0.900506, 'Recall': 0.819018, 'CLL': -0.158313, 'AUC PR': 0.863056, 'Inference time': 2.513, 'Precision': [1.0, 0.5], 'AUC ROC': 0.978388}, 'Recall': 1.0, 'CLL': -0.079174, 'AUC PR': 0.986599, 'Inference time': 3.025, 'Precision': [0.735892, 0.5], 'AUC ROC': 0.999586}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,false;author(L, I), venue(L, B).;false;false
1;false,true,true;author(K, I), venue(K, B).;false;false
1;true,true,true;haswordauthor(G, C).;false;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false,true;author(J, I), venue(J, A).;true;true
1;true,true;haswordtitle(F, C).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,false;title(K, I), venue(K, A).;false;false
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
2;true,true,false;author(G, E), venue(G, A).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false,true;haswordauthor(J, H).;false;true
2;true,true;haswordauthor(F, C).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;haswordauthor(H, D).;false;false
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true;title(F, E), venue(F, A).;true;true
3;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
3;false,false,true;author(K, J), venue(K, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,true;samebib(K, L), venue(L, A).;false;false
4;true,true,true;samebib(F, G), venue(G, B).;false;false
4;false;haswordvenue(A, I), haswordauthor(J, I).;true;false
4;true,true,false;haswordauthor(H, C).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false,true;author(K, J), venue(K, B).;true;false
4;true,true;author(F, E), venue(F, A).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordauthor(H, D).;false;false
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true;title(F, E), venue(F, A).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
6;false,true,true;author(G, F), venue(G, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true;haswordauthor(F, D).;true;true
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,false,true;title(L, K), venue(L, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;false;haswordvenue(B, I), haswordauthor(J, I).;true;true
7;true,true,false;author(H, E), venue(H, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,true;haswordtitle(K, I).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true,false;title(G, E), venue(G, A).;false;false
8;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;false
8;false,true;title(F, E), venue(F, B).;false;true
8;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
8;false,false,true;title(J, I), venue(J, A).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, A).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;true,true;haswordvenue(B, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5405018762759836;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 8,33e-09, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.4163023378380284;  // std dev = 0,481, 91,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.12544463852839155;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.3008621417502543;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.45238461149650017;  // std dev = 3,783, 77,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360621;  // std dev = 7,45e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2991754503439674;  // std dev = 4,131, 83,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.10159632948783617;  // std dev = 6,18e-09, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.30050747535269184;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.20524585491090555;  // std dev = 0,466, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926103;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24233955381566502;  // std dev = 3,608, 76,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839679;  // std dev = 2,79e-09, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.03533688697007244;  // std dev = 4,653, 94,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.0787767547310918;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109165;  // std dev = 4,66e-09, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4034076231743601;  // std dev = 1,52e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.29573029525131217;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.5965923768256399;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.0737451091307997;  // std dev = 0,005, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06974518955006216;  // std dev = 3,262, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.06839518350649151;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.0683951835064915;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06839518350649153;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2964126662748465;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06416378717219354;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.2509224446240847;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06416378717219351;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.4661616499419185;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.06416378717219355;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.977686
   AUC PR    = 0.861626
   CLL	      = -0.164752
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total learning time: 1.513 seconds
Total inference time: 2.93 seconds
AUC ROC: 0.977686


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.15992
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.848 seconds
Parameter learned model CLL: -0.15992


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [8.33e-09, 70, 0], 'true': [4.292, 27, 58], 'false,true,true,false': [0.0, 3, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, H)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, A)', 'true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 71, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false,true': [5.27e-09, 7, 0], 'true,true': [0.481, 33, 58], 'false,true,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)'}, {'false,true,false': [7.45e-08, 92, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 6, 0], 'true,true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [3.783, 19, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [6.18e-09, 69, 0], 'true': [4.131, 25, 58], 'false,true,true,false': [5.27e-09, 9, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, I)', 'true,true,true': 'genre(B, F)', 'false': 'movie(G, A)', 'true': 'movie(D, B)', 'false,true': 'genre(B, H)', 'true,true': 'genre(A, E)'}, {'false,true,false': [0.0, 84, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.466, 27, 58], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [2.79e-09, 71, 0], 'true': [3.608, 18, 58], 'false,true,true,false': [0.0, 3, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,true,false': [4.66e-09, 75, 0], 'true': [4.653, 36, 58], 'false,true,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(A, F)', 'false': 'movie(H, B)', 'true,true,false': 'genre(A, G)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [1.52e-07, 0, 58], 'true,true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'false,true': [0.005, 94, 0], 'true,true,false,false': [0.0, 35, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,true': [0.0, 3, 0], 'true': [3.262, 27, 58], 'false,true,false,true': [0.0, 10, 0], 'false,true,false,false': [0.0, 78, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, F)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)', 'true,true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'true,false,true,false': [0.0, 6, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 4, 0], 'true,false,false,false': [0.0, 75, 0], 'true,false,false,true': [0.0, 26, 0], 'true,false,true,true': [0.0, 5, 0]}]]
[{'': [0.21674740484429023, 6.995925908596876e-17], 'false,true': [0.0, 6.97854472621527e-17], 'false,true,true': [nan, 0.0], 'false': [6.995925908596876e-17, nan]}, {'': [0.2311315058567824, -2.166288828536891e-17], 'false,true,false': [3.96508223080413e-18, -3.1273888017610045e-17], 'false,true,true': [nan, 0.0], 'false': [-2.166288828536891e-17, nan], 'true': [0.2311315058567824, nan], 'false,true': [0.0, -2.5620531337503614e-17]}, {'': [0.20332266422801293, 6.344131569286608e-17], 'true': [0.20332266422801293, nan], 'false,true': [0.0, 6.033820786006285e-17], 'true,true': [0.0, 0.18586608196997692], 'false': [6.344131569286608e-17, nan]}, {'': [0.20564337820624914, 4.554761126667309e-17], 'false,true': [3.0839528461809902e-18, 4.022547190670857e-17], 'false,true,true': [nan, 3.0839528461809902e-18], 'false': [4.554761126667309e-17, nan]}, {'': [0.21716676258152304, 8.635067969306773e-18], 'false,true,true': [nan, 0.0], 'true,true,true': [nan, 0.0], 'false': [8.635067969306773e-18, nan], 'true': [0.21716676258152304, nan], 'false,true': [0.0, 0.0], 'true,true': [0.0, 0.21674740484429048]}, {'': [0.17132976917865497, 9.00180830777154e-18], 'false,true': [0.0, 7.818472004402511e-18], 'false,true,true': [nan, 0.0], 'false': [9.00180830777154e-18, nan]}, {'': [0.2303083226511114, 2.348548705937831e-17], 'false,true': [0.0, 2.2204460492503132e-17], 'false': [2.348548705937831e-17, nan]}, {'': [0.23052891877345824, 2.3146269132764433e-05], 'true,true,true': [nan, 3.981489467621251e-16], 'false': [2.3146269132764433e-05, nan], 'true,true,false': [-1.850371707708594e-17, -3.0451831532575723e-16], 'true': [0.23052891877345824, nan], 'true,true': [3.981489467621251e-16, 0.0065819869623056195]}, {'': [0.12519814499311932, 6.100126508929432e-19], 'false,true,false': [-1.3877787807814458e-18, 0.0], 'false,true': [-5.782411586589357e-19, 6.30808536718839e-19], 'false': [6.100126508929432e-19, nan]}, {'': [0.06548987565849727, nan], 'true,false': [0.008647635404933763, 0.030891525268040593], 'true,false,true': [-1.1102230246251566e-17, -5.782411586589357e-19], 'true,false,false': [0.0, -2.960594732333751e-18], 'true,true,false': [nan, 0.0], 'true': [0.007846921924313863, 0.028737479803072757], 'true,true': [-2.756415785276251e-16, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,false;genre(B, H).;true;true
1;false;genre(A, F).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(A, E).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;genre(A, E).;true;true
4;false;genre(B, H).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,false;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.14185106490048766;  // std dev = 7,88e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(B, E) )
%   | | then return -0.1254446385283914;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.12544463852839147;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(A) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.11231637819360632;  // std dev = 2,79e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783627;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.10159632948783633;  // std dev = 1,49e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(B, E) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08518475138839683;  // std dev = 2,95e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694892;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2551722425694892;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839685;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.08518475138839686;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.15686732602154266;  // std dev = 0,125, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.07324622576333704;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.15538020905377256;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06872818083914861;  // std dev = 0,001, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(A, E) )
%   | | then return -0.0684269778442027;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06842697784420271;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.11598895090891662;  // std dev = 0,057, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.12140913118325386;  // std dev = 0,052, 41,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(D, B) )
%   | | then return -0.0664561005174907;  // std dev = 0,002, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06418982994149129;  // std dev = 2,95e-05, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.06418817293375309;  // std dev = 6,26e-05, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999236
   AUC PR    = 0.976021
   CLL	      = -0.080084
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.648 seconds
Total inference time: 2.818 seconds
AUC ROC: 0.999236


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065491
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.683 seconds
Refined model CLL: -0.065491


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999236
   AUC PR    = 0.976021
   CLL	      = -0.080084
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 7.692 seconds
Total inference time: 2.818 seconds
AUC ROC: 0.999236
Total revision time: 7.692
Best scored revision CLL: -0.065491


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 01:19:42
{'Learning time': 7.692, 'F1': 0.848168, 'parameter': {'Learning time': 1.513, 'F1': 0.89983, 'Recall': 0.817901, 'CLL': -0.164752, 'AUC PR': 0.861626, 'Inference time': 2.93, 'Precision': [1.0, 0.5], 'AUC ROC': 0.977686}, 'Recall': 1.0, 'CLL': -0.080084, 'AUC PR': 0.976021, 'Inference time': 2.818, 'Precision': [0.736364, 0.5], 'AUC ROC': 0.999236}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,false;author(L, I), venue(L, B).;false;false
1;false,true,true;author(K, I), venue(K, B).;false;false
1;true,true,true;haswordauthor(G, C).;false;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false,true;author(J, I), venue(J, A).;true;true
1;true,true;haswordtitle(F, C).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,false;title(K, I), venue(K, A).;false;false
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
2;true,true,false;author(G, E), venue(G, A).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false,true;haswordauthor(J, H).;false;true
2;true,true;haswordauthor(F, C).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;haswordauthor(H, D).;false;false
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true;title(F, E), venue(F, A).;true;true
3;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
3;false,false,true;author(K, J), venue(K, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,true;samebib(K, L), venue(L, A).;false;false
4;true,true,true;samebib(F, G), venue(G, B).;false;false
4;false;haswordvenue(A, I), haswordauthor(J, I).;true;false
4;true,true,false;haswordauthor(H, C).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false,true;author(K, J), venue(K, B).;true;false
4;true,true;author(F, E), venue(F, A).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordauthor(H, D).;false;false
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true;title(F, E), venue(F, A).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
6;false,true,true;author(G, F), venue(G, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true;haswordauthor(F, D).;true;true
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,false,true;title(L, K), venue(L, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;false;haswordvenue(B, I), haswordauthor(J, I).;true;true
7;true,true,false;author(H, E), venue(H, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,true;haswordtitle(K, I).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true,false;title(G, E), venue(G, A).;false;false
8;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;false
8;false,true;title(F, E), venue(F, B).;false;true
8;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
8;false,false,true;title(J, I), venue(J, A).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, A).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;true,true;haswordvenue(B, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5101635871141607;  // std dev = 7,870, 273,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.14185106490048843;  // std dev = 0,000, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.5106501113190633;  // std dev = 0,446, 245,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12544463852839155;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( genre(B, H) )
%   | | | then return -0.12544463852839124;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 161,000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.3144952831946232;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0.446188477489141;  // std dev = 6,527, 234,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.11231637819360633;  // std dev = 2,36e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.11231637819360676;  // std dev = 0,000, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.27979918042432883;  // std dev = 7,194, 261,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10159632948783628;  // std dev = 1,49e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.10159632948783659;  // std dev = 0,000, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.3070637964970699;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.3070637964970699;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.24580681325719314;  // std dev = 0,443, 243,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.092691276189261;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.09269127618926053;  // std dev = 9,88e-08, 219,000 (wgt'ed) examples reached here.  /* #neg=219 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14469238167484016;  // std dev = 7,210, 267,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08518475138839687;  // std dev = 1,05e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.08518475138839678;  // std dev = 5,59e-09, 211,000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1517015826595066;  // std dev = 6,729, 248,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.07877675473109169;  // std dev = 7,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.07877675473109146;  // std dev = 7,15e-09, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.3047982017688598;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.38012866755775054;  // std dev = 1,88e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.30479820176885986;  // std dev = 1,49e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.17842989100080756;  // std dev = 5,232, 111,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07324622576333696;  // std dev = 5,74e-09, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.038918991866052084;  // std dev = 6,782, 272,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=178 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.06842697784420262;  // std dev = 1,39e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.06842697784420275;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.06842697784420261;  // std dev = 6,14e-08, 189,000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.25965971652187364;  // std dev = 1,389, 136,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=129 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06419184008202615;  // std dev = 9,13e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.25153704292886386;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.18485485498576534;  // std dev = 5,415, 122,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=49 */
%   | | | else return -0.06419184008202626;  // std dev = 0,000, 160,000 (wgt'ed) examples reached here.  /* #neg=160 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993692
   AUC PR    = 0.961008
   CLL	      = -0.250895
   Precision = 0.069012 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.129114


Total learning time: 1.923 seconds
Total inference time: 2.344 seconds
AUC ROC: 0.993692


Results scoring model
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.204196
   Precision = 0.226752 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.369678


Total scoring time: 1.904 seconds
Parameter learned model CLL: -0.204196


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 206, 0], 'true': [7.87, 95, 178], 'false,true,true,false': [4.71e-08, 45, 0], 'false,true,true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, H)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, A)', 'true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 161, 0], 'false,true,true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 43, 0], 'true,true': [0.446, 67, 178], 'false,true,true,false': [0.0, 46, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)'}, {'false,true,false': [0.0, 224, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [2.36e-08, 47, 0], 'true,true,true': [0.0, 18, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [6.527, 56, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 261, 0], 'true': [7.194, 83, 178], 'false,true,true,false': [1.49e-08, 46, 0], 'false,true,true,true': [0.0, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, I)', 'true,true,true': 'genre(B, F)', 'false': 'movie(G, A)', 'true': 'movie(D, B)', 'false,true': 'genre(B, H)', 'true,true': 'genre(A, E)'}, {'false,true,false': [9.88e-08, 219, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 4, 0], 'true,true,true,false': [0.0, 12, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.443, 65, 178], 'false,true,true,true': [0.0, 7, 0], 'false,true,true,false': [0.0, 53, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [5.59e-09, 211, 0], 'true': [7.21, 89, 178], 'false,true,true,false': [1.05e-08, 35, 0], 'false,true,true,true': [2.63e-09, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,true,false': [7.15e-09, 213, 0], 'true': [6.729, 70, 178], 'false,true,true': [7.45e-09, 54, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(A, F)', 'false': 'movie(H, B)', 'true,true,false': 'genre(A, G)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [1.88e-07, 0, 129], 'true,true,true,true': [1.05e-08, 6, 0], 'true,true,false,true': [1.49e-08, 15, 0], 'false,false': [0.0, 0, 0], 'false,true': [5.74e-09, 280, 0], 'true,true,false,false': [5.232, 62, 49]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,true': [1.39e-08, 39, 0], 'true': [6.782, 94, 178], 'false,true,false,true': [1.05e-08, 40, 0], 'false,true,false,false': [6.14e-08, 189, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, F)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)', 'true,true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [2.63e-09, 9, 0], 'true,true,true': [1.389, 7, 129], 'true,false,true,false': [0.0, 38, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [9.13e-09, 42, 0], 'true,false,false,false': [0.0, 160, 0], 'true,false,false,true': [5.415, 73, 49], 'true,false,true,true': [0.0, 15, 0]}]]
[{'': [0.2268915455728695, -1.0797463141452503e-16], 'false,true': [5.437827059388522e-17, -2.3713501496848003e-16], 'false,true,true': [0.0, 4.9343245538895844e-17], 'false': [-1.0797463141452503e-16, nan]}, {'': [0.19868388171595078, -8.042560493347591e-17], 'false,true,false': [0.0, -1.9308226515220113e-17], 'false,true,true': [0.0, -3.137586808723268e-17], 'false': [-8.042560493347591e-17, nan], 'true': [0.19868388171595078, nan], 'false,true': [-2.886579864025407e-17, -5.442269728554689e-17]}, {'': [0.20742000503904923, -9.83223342841467e-17], 'true': [0.20742000503904923, nan], 'false,true': [1.1810883240693155e-17, -5.74936923466599e-17], 'true,true': [-4.9343245538895844e-17, 0.18204397691576854], 'false': [-9.83223342841467e-17, nan]}, {'': [0.1983021100810081, -4.9500389632968764e-17], 'false,true': [1.67580833905684e-17, -6.295517534272918e-17], 'false,true,true': [-1.982541115402065e-18, 4.827056628805028e-18], 'false': [-4.9500389632968764e-17, nan]}, {'': [0.2015509572317351, 8.43610326955316e-17], 'false,true,true': [0.0, -2.723188550967365e-17], 'true,true,true': [0.0, -1.850371707708594e-17], 'false': [8.43610326955316e-17, nan], 'true': [0.2015509572317351, nan], 'false,true': [-2.960594732333751e-17, 4.461170144612501e-17], 'true,true': [2.7755575615628914e-17, 0.19593896594353688]}, {'': [0.19470402569118242, 3.335057307174383e-17], 'false,true': [1.1895246692412391e-17, 3.051797887595217e-17], 'false,true,true': [9.912705577010326e-19, 3.1720657846433043e-18], 'false': [3.335057307174383e-17, nan]}, {'': [0.18259108597684273, 3.991813122247754e-17], 'false,true': [1.02798428206033e-18, 5.10806837620964e-17], 'false': [3.991813122247754e-17, nan]}, {'': [0.18964547652785924, 3.3306690738754695e-17], 'true,true,true': [1.850371707708594e-17, 2.7540416114732565e-16], 'false': [3.3306690738754695e-17, nan], 'true,true,false': [1.4802973661668754e-17, 0.24657089521954403], 'true': [0.18964547652785924, nan], 'true,true': [0.01992332553283847, 0.2188919653712867]}, {'': [0.16909107727275358, -2.6512788647764932e-17], 'false,true,false': [2.7755575615628915e-18, 1.997226605145784e-17], 'false,true': [4.981769982292369e-18, 1.7453287723364907e-17], 'false': [-2.6512788647764932e-17, nan]}, {'': [0.08901912840819912, nan], 'true,false': [0.007122103334617987, 0.10754426605775999], 'true,false,true': [-6.661338147750939e-17, -4.382459307730881e-18], 'true,false,false': [0.24032518140284923, -9.020562075079397e-18], 'true,true,false': [7.709882115452476e-19, 1.982541115402065e-18], 'true': [0.03111553501484065, 0.09165667027015416], 'true,true': [0.014180270450469186, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false,true;genre(B, F).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, G).;true;true
1;false,false;genre(B, H).;true;true
1;false;genre(A, F).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(A, E).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,true;genre(B, F).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;genre(A, E).;true;true
4;false,true;genre(A, I).;true;true
4;true,true;genre(B, F).;true;true
4;false;genre(B, H).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(B, F).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true;genre(B, E).;true;true
7;true,true;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,false;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true,false;genre(A, E).;true;true
9;false;genre(A, F).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 6,32e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.14185106490048846;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( genre(B, F) )
%   | | then return -0.12544463852839122;  // std dev = 1,49e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.11231637819360636;  // std dev = 2,95e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.5553664367462835;  // std dev = 3,72e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.5553664367462835;  // std dev = 3,72e-07, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( genre(A, E) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360635;  // std dev = 3,73e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.11231637819360674;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783624;  // std dev = 3,95e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.10159632948783656;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.09269127618926103;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( genre(B, F) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.09269127618926068;  // std dev = 0,000, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | | else return -0.09269127618926086;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.0851847513883968;  // std dev = 3,61e-09, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839683;  // std dev = 1,49e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839678;  // std dev = 2,95e-09, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.08518475138839678;  // std dev = 1,49e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109179;  // std dev = 5,10e-09, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109168;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109168;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.0787767547310917;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.0787767547310915;  // std dev = 7,30e-08, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | | else return -0.07877675473109173;  // std dev = 1,05e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return -0.0787767547310917;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1770964977452775;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( genre(A, F) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( director(B), actor(A) )
%   | | | then return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.07324622576333704;  // std dev = 7,45e-09, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( genre(B, D) )
%   | then return -0.06842697784420262;  // std dev = 2,46e-09, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( genre(A, E) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420261;  // std dev = 1,97e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return -0.06842697784420261;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.07081318737060784;  // std dev = 0,767, 69,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | | | else return 0.11056415290058715;  // std dev = 0,617, 93,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=82 */
%   | | else return -0.06419184008202619;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(D, B) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A), director(B) )
%   | | | then return 0.1022952107936051;  // std dev = 0,514, 50,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=42 */
%   | | | else return -0.057970350886374825;  // std dev = 0,516, 223,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064418
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.903 seconds
Total inference time: 2.867 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067166
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.737 seconds
Refined model CLL: -0.067166


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064418
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.467 seconds
Total inference time: 2.867 seconds
AUC ROC: 1.0
Total revision time: 9.467
Best scored revision CLL: -0.067166


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:19:57
{'Learning time': 9.467, 'F1': 1.0, 'parameter': {'Learning time': 1.923, 'F1': 0.129114, 'Recall': 1.0, 'CLL': -0.250895, 'AUC PR': 0.961008, 'Inference time': 2.344, 'Precision': [0.069012, 0.5], 'AUC ROC': 0.993692}, 'Recall': 1.0, 'CLL': -0.064418, 'AUC PR': 1.0, 'Inference time': 2.867, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,false;author(L, I), venue(L, B).;false;false
1;false,true,true;author(K, I), venue(K, B).;false;false
1;true,true,true;haswordauthor(G, C).;false;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false,true;author(J, I), venue(J, A).;true;true
1;true,true;haswordtitle(F, C).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,false;title(K, I), venue(K, A).;false;false
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
2;true,true,false;author(G, E), venue(G, A).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false,true;haswordauthor(J, H).;false;true
2;true,true;haswordauthor(F, C).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;haswordauthor(H, D).;false;false
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true;title(F, E), venue(F, A).;true;true
3;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
3;false,false,true;author(K, J), venue(K, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,true;samebib(K, L), venue(L, A).;false;false
4;true,true,true;samebib(F, G), venue(G, B).;false;false
4;false;haswordvenue(A, I), haswordauthor(J, I).;true;false
4;true,true,false;haswordauthor(H, C).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false,true;author(K, J), venue(K, B).;true;false
4;true,true;author(F, E), venue(F, A).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordauthor(H, D).;false;false
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true;title(F, E), venue(F, A).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
6;false,true,true;author(G, F), venue(G, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true;haswordauthor(F, D).;true;true
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,false,true;title(L, K), venue(L, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;false;haswordvenue(B, I), haswordauthor(J, I).;true;true
7;true,true,false;author(H, E), venue(H, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,true;haswordtitle(K, I).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true,false;title(G, E), venue(G, A).;false;false
8;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;false
8;false,true;title(F, E), venue(F, B).;false;true
8;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
8;false,false,true;title(J, I), venue(J, A).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, A).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;true,true;haswordvenue(B, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.46625704320762096;  // std dev = 4,199, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.38356435291050855;  // std dev = 0,491, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.27884890471226315;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.34615109528773735;  // std dev = 4,108, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360628;  // std dev = 4,47e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.30834190113499654;  // std dev = 3,901, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12872084269380854;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783621;  // std dev = 5,27e-09, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.2848182176520967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.2848182176520967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.20719030738579802;  // std dev = 0,482, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17203491328143175;  // std dev = 3,944, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.08518475138839679;  // std dev = 2,63e-09, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1584842680244104;  // std dev = 3,770, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.0787767547310918;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.2942181609256091;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.43978765745725457;  // std dev = 4,21e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.2942181609256091;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.5602123425427454;  // std dev = 5,96e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04779679960288105;  // std dev = 3,082, 75,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.0684269778442027;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.0684269778442027;  // std dev = 1,49e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.32528068076709;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.09436319972656079;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.24575057718041723;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.43281094518421886;  // std dev = 5,16e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.979741
   AUC PR    = 0.868436
   CLL	      = -0.154336
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.904065


Total learning time: 1.259 seconds
Total inference time: 3.122 seconds
AUC ROC: 0.979741


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160588
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.325 seconds
Parameter learned model CLL: -0.160588


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [8.12e-09, 67, 0], 'true': [4.199, 29, 45], 'false,true,true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, H)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, A)', 'true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 55, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false,true': [5.27e-09, 6, 0], 'true,true': [0.491, 31, 45], 'false,true,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)'}, {'false,true,false': [4.47e-08, 60, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 3, 0], 'true,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [4.108, 27, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [5.27e-09, 57, 0], 'true': [3.901, 23, 45], 'false,true,true,false': [0.0, 5, 0], 'false,true,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, I)', 'true,true,true': 'genre(B, F)', 'false': 'movie(G, A)', 'true': 'movie(D, B)', 'false,true': 'genre(B, H)', 'true,true': 'genre(A, E)'}, {'false,true,false': [0.0, 57, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 1, 0], 'true,true,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.482, 26, 45], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [2.63e-09, 64, 0], 'true': [3.944, 25, 45], 'false,true,true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.0, 48, 0], 'true': [3.77, 22, 45], 'false,true,true': [0.0, 6, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(A, F)', 'false': 'movie(H, B)', 'true,true,false': 'genre(A, G)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [4.21e-08, 0, 45], 'true,true,true,true': [0.0, 1, 0], 'true,true,false,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'false,true': [0.0, 71, 0], 'true,true,false,false': [5.96e-08, 35, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,true': [0.0, 4, 0], 'true': [3.082, 30, 45], 'false,true,false,true': [0.0, 6, 0], 'false,true,false,false': [1.49e-08, 52, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, F)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)', 'true,true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 45], 'true,false,true,false': [0.0, 3, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 5, 0], 'true,false,false,false': [0.0, 38, 0], 'true,false,false,true': [5.16e-08, 24, 0], 'true,false,true,true': [5.27e-09, 3, 0]}]]
[{'': [0.23831263696128588, 6.75787928032704e-17], 'false,true': [0.0, 6.628197161941232e-17], 'false,true,true': [nan, 0.0], 'false': [6.75787928032704e-17, nan]}, {'': [0.24151662049861508, -3.027880976250427e-17], 'false,true,false': [4.625929269271485e-18, -3.633457171500512e-17], 'false,true,true': [nan, 0.0], 'false': [-3.027880976250427e-17, nan], 'true': [0.24151662049861508, nan], 'false,true': [0.0, -4.186086814160426e-17]}, {'': [0.23831263696128555, 3.700743415417188e-17], 'true': [0.23831263696128555, nan], 'false,true': [2.3129646346357427e-18, 3.3306690738754695e-17], 'true,true': [0.0, 0.23437499999999986], 'false': [3.700743415417188e-17, nan]}, {'': [0.2238321799307963, 2.2273355191915548e-05], 'false,true': [0.00015015086054305713, 2.7268635692547703e-17], 'false,true,true': [0.0, 0.0], 'false': [2.2273355191915548e-05, nan]}, {'': [0.23194027579580004, -1.708035422500241e-18], 'false,true,true': [nan, 0.0], 'true,true,true': [0.0, 0.0], 'false': [-1.708035422500241e-18, nan], 'true': [0.23194027579580004, nan], 'false,true': [0.0, -1.0712678307786598e-17], 'true,true': [0.0, 0.23209680618924802]}, {'': [0.22220263347339514, 6.832141690000964e-18], 'false,true': [0.0, 6.938893903907228e-18], 'false,true,true': [nan, 0.0], 'false': [6.832141690000964e-18, nan]}, {'': [0.21210989826207538, 3.0839528461809902e-18], 'false,true': [0.0, 0.0], 'false': [3.0839528461809902e-18, nan]}, {'': [0.23836210659115176, -3.1273888017610044e-18], 'true,true,true': [0.0, 3.947459643111668e-17], 'false': [-3.1273888017610044e-18, nan], 'true,true,false': [0.0, 1.0150610510858574e-16], 'true': [0.23836210659115176, nan], 'true,true': [0.011457658016963827, 0.005144774922914016]}, {'': [0.12663767852871508, 2.6860234466737657e-18], 'false,true,false': [-5.782411586589357e-19, 4.270088556250602e-18], 'false,true': [0.0, 3.828355257328126e-18], 'false': [2.6860234466737657e-18, nan]}, {'': [0.0803711070456707, nan], 'true,false': [0.008240893754190667, 0.03223792942701956], 'true,false,true': [9.25185853854297e-18, -5.782411586589357e-19], 'true,false,false': [1.1102230246251565e-16, -1.460819769243627e-18], 'true,true,false': [0.0, 0.0], 'true': [0.01848675366138103, 0.03033734375239127], 'true,true': [-3.947459643111668e-17, 0.00018577774342853903]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,false;genre(B, H).;true;true
1;false;genre(A, F).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(A, E).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,true;genre(B, F).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;genre(A, E).;true;true
4;true,true;genre(B, F).;true;true
4;false;genre(B, H).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true;genre(B, E).;true;true
7;true,true;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,false;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true,false;genre(A, E).;true;true
9;false;genre(A, F).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( genre(B, E) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783628;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14652771257609323;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926097;  // std dev = 1,86e-09, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( female(A) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3207118471601495;  // std dev = 2,11e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(B, F) )
%   | then return -0.09431037678900193;  // std dev = 0,003, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.08680896971310617;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839686;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.0851847513883968;  // std dev = 1,49e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.08505866232815759;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.10606539723630476;  // std dev = 0,067, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then return -0.0786684735412324;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.07865896423262594;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( genre(A, F) )
%   | | then return -0.07141527553009427;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07324622576333704;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.07315228411191659;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.0749123194212064;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06826647061883877;  // std dev = 0,002, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0.15274385809367086;  // std dev = 4,93e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then if ( actor(A) )
%   | | then return -0.06834474269372282;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07486091098773377;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(A, E) )
%   | | then return -0.06822502301056593;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0684269778442027;  // std dev = 1,18e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.10352605939308313;  // std dev = 0,071, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.11794273468392753;  // std dev = 0,054, 37,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(D, B) )
%   | | then return -0.0639024420236518;  // std dev = 0,000369, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06419216694791706;  // std dev = 1,34e-05, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067367
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.222 seconds
Total inference time: 3.35 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06496
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.632 seconds
Refined model CLL: -0.06496


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067367
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.437999999999999 seconds
Total inference time: 3.35 seconds
AUC ROC: 1.0
Total revision time: 6.437999999999999
Best scored revision CLL: -0.06496


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:20:11
{'Learning time': 6.437999999999999, 'F1': 1.0, 'parameter': {'Learning time': 1.259, 'F1': 0.904065, 'Recall': 0.824926, 'CLL': -0.154336, 'AUC PR': 0.868436, 'Inference time': 3.122, 'Precision': [1.0, 0.5], 'AUC ROC': 0.979741}, 'Recall': 1.0, 'CLL': -0.067367, 'AUC PR': 1.0, 'Inference time': 3.35, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,false;author(L, I), venue(L, B).;false;false
1;false,true,true;author(K, I), venue(K, B).;false;false
1;true,true,true;haswordauthor(G, C).;false;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false,true;author(J, I), venue(J, A).;true;true
1;true,true;haswordtitle(F, C).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,false;title(K, I), venue(K, A).;false;false
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
2;true,true,false;author(G, E), venue(G, A).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false,true;haswordauthor(J, H).;false;true
2;true,true;haswordauthor(F, C).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;haswordauthor(H, D).;false;false
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true;title(F, E), venue(F, A).;true;true
3;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
3;false,false,true;author(K, J), venue(K, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,true;samebib(K, L), venue(L, A).;false;false
4;true,true,true;samebib(F, G), venue(G, B).;false;false
4;false;haswordvenue(A, I), haswordauthor(J, I).;true;false
4;true,true,false;haswordauthor(H, C).;false;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false,true;author(K, J), venue(K, B).;true;false
4;true,true;author(F, E), venue(F, A).;true;true
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordauthor(H, D).;false;false
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true;title(F, E), venue(F, A).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
5;false,false,true;title(K, J), venue(K, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
6;false,true,true;author(G, F), venue(G, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true;haswordauthor(F, D).;true;true
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;false,false,true;title(L, K), venue(L, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;false;haswordvenue(B, I), haswordauthor(J, I).;true;true
7;true,true,false;author(H, E), venue(H, A).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
7;false,true;haswordtitle(K, I).;false;false
7;true,true;author(F, E), venue(F, B).;true;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true,false;title(G, E), venue(G, A).;false;false
8;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;false
8;false,true;title(F, E), venue(F, B).;false;true
8;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
8;false,false,true;title(J, I), venue(J, A).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,false;title(G, D), venue(G, A).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,false,false;haswordvenue(B, C).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true;venue(E, B), title(E, D).;true;true
9;true,true;haswordvenue(B, C).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.510322848142991;  // std dev = 3,956, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.42694968162395863;  // std dev = 0,479, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, H) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1254446385283915;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.29676981411865955;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.37487197692611746;  // std dev = 3,844, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360626;  // std dev = 5,05e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.29335693596582046;  // std dev = 3,822, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1015963294878362;  // std dev = 5,59e-09, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.2960580493800024;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.2515969290928303;  // std dev = 0,457, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09329500861628309;  // std dev = 0,017, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09308935497319555;  // std dev = 4,182, 75,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09339177849910342;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08514235268063775;  // std dev = 1,40e-05, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12843383861835772;  // std dev = 3,863, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then return -0.0787798317017169;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07916943786113557;  // std dev = 0,002, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4307917500277228;  // std dev = 8,94e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.2807639746658121;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.29143047219449936;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, B) )
%   | then return -0.07318265441501609;  // std dev = 8,77e-06, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08359409153027621;  // std dev = 3,339, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.06843353702705919;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(A, F) )
%   | | | then return -0.07456097765754509;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06837023844749697;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.31152328589213124;  // std dev = 5,58e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06419762722271345;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.24271622522110806;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06957656820027365;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.23991113308892034;  // std dev = 2,687, 36,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return -0.06414177650888055;  // std dev = 1,05e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.983069
   AUC PR    = 0.891379
   CLL	      = -0.202203
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.9216


Total learning time: 1.202 seconds
Total inference time: 3.092 seconds
AUC ROC: 0.983069


Results scoring model
   AUC ROC   = 0.97178
   AUC PR    = 0.824078
   CLL	      = -0.209438
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.875


Total scoring time: 1.353 seconds
Parameter learned model CLL: -0.209438


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [8.12e-09, 66, 0], 'true': [3.956, 24, 45], 'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(B, H)', 'false,true,true': 'genre(B, G)', 'false': 'movie(E, A)', 'true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 75, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'true,true': [0.479, 25, 45], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'true,true': 'genre(A, E)', 'false': 'movie(F, B)'}, {'false,true,false': [5.05e-08, 65, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [3.844, 22, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [5.59e-09, 60, 0], 'true': [3.822, 22, 45], 'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, I)', 'true,true,true': 'genre(B, F)', 'false': 'movie(G, A)', 'true': 'movie(D, B)', 'false,true': 'genre(B, H)', 'true,true': 'genre(A, E)'}, {'false,true,false': [0.017, 59, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [7.45e-09, 3, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.457, 19, 45], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [1.4e-05, 71, 0], 'true': [4.182, 30, 45], 'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(B, E)', 'false': 'movie(D, B)'}, {'false,true,false': [0.002, 65, 0], 'true': [3.863, 23, 45], 'false,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true,true': 'genre(A, F)', 'false': 'movie(H, B)', 'true,true,false': 'genre(A, G)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)'}, {'true,false': [0.0, 0, 0], 'true,true,true,false': [8.94e-08, 0, 35], 'true,true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true': [8.77e-06, 58, 0], 'true,true,false,false': [2.687, 26, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false,true': 'genre(B, E)', 'false': 'movie(D, A)'}, {'false,true,true': [0.0, 2, 0], 'true': [3.339, 23, 45], 'false,true,false,true': [0.0, 3, 0], 'false,true,false,false': [0.0, 48, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, F)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)', 'true,true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [0.0, 0, 0], 'true,true,true': [5.58e-08, 0, 35], 'true,false,true,false': [0.0, 1, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false,false,false': [1.05e-08, 63, 0], 'true,false,false,true': [2.687, 26, 10], 'true,false,true,true': [0.0, 1, 0]}]]
[{'': [0.2268431001890362, 6.97854472621527e-17], 'false,true': [0.0, 6.728624391667616e-17], 'false,true,true': [nan, 0.0], 'false': [6.97854472621527e-17, nan]}, {'': [0.22959183673469485, -2.5953265510717945e-17], 'false,true,false': [0.0, -2.6645352591003756e-17], 'false,true,true': [nan, 0.0], 'false': [-2.5953265510717945e-17, nan], 'true': [0.22959183673469485, nan], 'false,true': [0.0, -2.6294755846385285e-17]}, {'': [0.22684310018903564, 3.928481471750554e-17], 'true': [0.22684310018903564, nan], 'false,true': [nan, 3.928481471750554e-17], 'true,true': [0.0, 0.2205390955669411], 'false': [3.928481471750554e-17, nan]}, {'': [0.21799431214459086, 6.733561186798506e-06], 'false,true': [0.0, 3.14563190310461e-17], 'false,true,true': [nan, 0.0], 'false': [6.733561186798506e-06, nan]}, {'': [0.2122218561563036, 4.859014815675143e-06], 'false,true,true': [nan, 0.0], 'true,true,true': [nan, 1.850371707708594e-17], 'false': [4.859014815675143e-06, nan], 'true': [0.2122218561563036, nan], 'false,true': [0.0, 5.011776597274399e-06], 'true,true': [1.850371707708594e-17, 0.20874023437499994]}, {'': [0.23314514336198922, 3.4361078168802332e-06], 'false,true': [0.0, 1.9661803171504503e-10], 'false,true,true': [nan, 0.0], 'false': [3.4361078168802332e-06, nan]}, {'': [0.21949678270026385, 2.783509637391558e-06], 'false,true': [0.0, 2.8646249546562593e-06], 'false': [2.783509637391558e-06, nan]}, {'': [0.2305067944288911, 7.697925630267832e-11], 'true,true,true': [nan, 2.283887364943179e-16], 'false': [7.697925630267832e-11, nan], 'true,true,false': [0.0, 0.20061728395061726], 'true': [0.2305067944288911, nan], 'true,true': [2.283887364943179e-16, 0.19519818706524855]}, {'': [0.1639532615384016, 2.045031719277933e-06], 'false,true,false': [0.0, -9.25185853854297e-18], 'false,true': [0.0, 2.121813257670166e-06], 'false': [2.045031719277933e-06, nan]}, {'': [0.0947753282575546, nan], 'true,false': [0.007494335208323041, 0.08010096497337908], 'true,false,true': [0.0, 0.0], 'true,false,false': [0.20061728395061731, 1.76225876924628e-18], 'true,true,false': [nan, 0.0], 'true': [0.00381235891922449, 0.07867852359713945], 'true,true': [8.881784197001253e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,false;genre(B, H).;true;true
1;false;genre(A, F).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;genre(A, E).;true;true
4;false;genre(B, H).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true,false;genre(A, G).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false,false;genre(A, F).;true;true
8;false;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 6,99e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(B, E) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( director(B) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.32071184716014955;  // std dev = 2,98e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.32071184716014955;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 6,45e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(B, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1367281686289878;  // std dev = 0,386, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839685;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,67e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.0851847513883968;  // std dev = 1,67e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.08518475138839683;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.1305877705898271;  // std dev = 0,359, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.1770964977452775;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( genre(A, E) )
%   | | then return -0.06988936196762555;  // std dev = 0,005, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( actor(B) )
%   | | | then return -0.07003531256743908;  // std dev = 0,016, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.15274385809367086;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06863194047738506;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06863194047738506;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.06863194047738506;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06231556197748244;  // std dev = 9,85e-06, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.12357551052958815;  // std dev = 0,044, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(D, B) )
%   | | then return -0.058777493535173336;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06379857362334776;  // std dev = 0,014, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | | else return 0.11598895090891687;  // std dev = 0,189, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074618
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.701 seconds
Total inference time: 3.095 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065359
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.475 seconds
Refined model CLL: -0.065359


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074618
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 6.731 seconds
Total inference time: 3.095 seconds
AUC ROC: 1.0
Total revision time: 6.731
Best scored revision CLL: -0.065359


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:20:25
{'Learning time': 6.731, 'F1': 0.852086, 'parameter': {'Learning time': 1.202, 'F1': 0.9216, 'Recall': 0.854599, 'CLL': -0.202203, 'AUC PR': 0.891379, 'Inference time': 3.092, 'Precision': [1.0, 0.5], 'AUC ROC': 0.983069}, 'Recall': 1.0, 'CLL': -0.074618, 'AUC PR': 1.0, 'Inference time': 3.095, 'Precision': [0.742291, 0.5], 'AUC ROC': 1.0}


