Starting experiment #1 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8126943896449667;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.3337586911970725;  // std dev = 4,522, 82,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=39 */
%   | | | else return 0.10585535711786007;  // std dev = 4,507, 109,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=27 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.407444709747399;  // std dev = 4,193, 71,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=39 */
%   | | | else return 0.034619523334805835;  // std dev = 4,715, 153,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=27 */
%   | | else return 0.22151553882219394;  // std dev = 0,481, 7.414,000 (wgt'ed) examples reached here.  /* #neg=4.720 #pos=2.694 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( title(M, L), venue(M, A) )
%   | | then return 0.09038937225798241;  // std dev = 0,422, 366,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=85 */
%   | | else return -0.01981716659540361;  // std dev = 0,327, 295,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=36 */
%   | else return -0.022338869778536614;  // std dev = 0,324, 410,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=49 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.6571268301391292;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.16455376002018535;  // std dev = 6,505, 197,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=66 */
%   | | else return 0.801188552733103;  // std dev = 0,056, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1859659732045757;  // std dev = 0,479, 7.738,000 (wgt'ed) examples reached here.  /* #neg=4.978 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), title(K, J) )
%   | | | then return 0.06069536164595536;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.22213729309974167;  // std dev = 3,060, 40,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | else if ( author(L, I), venue(L, B) )
%   | | | then return 0.3502253772917288;  // std dev = 0,993, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1490564671363588;  // std dev = 0,020, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.007259033352213217;  // std dev = 0,343, 1.106,000 (wgt'ed) examples reached here.  /* #neg=955 #pos=151 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.603653546754394;  // std dev = 0,052, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.26172861383953666;  // std dev = 4,522, 82,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=39 */
%   | | | else return 0.014922848385250346;  // std dev = 4,565, 137,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=27 */
%   | else return 0.15299635808991074;  // std dev = 0,477, 7.847,000 (wgt'ed) examples reached here.  /* #neg=5.087 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), title(K, J) )
%   | | | then return 0.24131989771086756;  // std dev = 1,078, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1853818596796524;  // std dev = 3,187, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | else return -0.04568541594372373;  // std dev = 0,303, 20,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | then return 0.006958636674384038;  // std dev = 0,361, 665,000 (wgt'ed) examples reached here.  /* #neg=561 #pos=104 */
%   | | else return -0.031204025853743024;  // std dev = 0,310, 437,000 (wgt'ed) examples reached here.  /* #neg=390 #pos=47 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13097003247227348;  // std dev = 0,477, 8.001,000 (wgt'ed) examples reached here.  /* #neg=5.154 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.13838349120645885;  // std dev = 1,179, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.0936496311391556;  // std dev = 3,275, 54,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | else return 0.07475882623404341;  // std dev = 0,385, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.19340170579526242;  // std dev = 3,105, 42,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return -3.4939935531770215E-4;  // std dev = 8,640, 598,000 (wgt'ed) examples reached here.  /* #neg=510 #pos=88 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.007916256350662091;  // std dev = 6,475, 379,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=48 */
%   | | | else return -0.134609607980078;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.15635914660402256;  // std dev = 5,891, 159,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=69 */
%   | | | else return 0.6184012445265933;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.1180698119602413;  // std dev = 0,283, 94,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=13 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, C) )
%   | | | then return 0.09989935113853203;  // std dev = 6,213, 180,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=61 */
%   | | | else return 0.6785384507371044;  // std dev = 2,11e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.11429685658910119;  // std dev = 0,481, 7.433,000 (wgt'ed) examples reached here.  /* #neg=4.739 #pos=2.694 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( haswordauthor(L, J) )
%   | | then return 0.13951471114281871;  // std dev = 0,471, 51,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | else return -8.137255347701732E-5;  // std dev = 0,356, 687,000 (wgt'ed) examples reached here.  /* #neg=583 #pos=104 */
%   | else return -0.02415147687147056;  // std dev = 0,314, 443,000 (wgt'ed) examples reached here.  /* #neg=394 #pos=49 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0896686993358984;  // std dev = 0,478, 7.913,000 (wgt'ed) examples reached here.  /* #neg=5.066 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8083025070734432;  // std dev = 0,126, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.22815733821889722;  // std dev = 0,029, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.11042982893426463;  // std dev = 3,193, 46,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return -0.14162952299627724;  // std dev = 0,068, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.025558124551525334;  // std dev = 8,483, 716,000 (wgt'ed) examples reached here.  /* #neg=634 #pos=82 */
%   | | | else return 0.05666492651633097;  // std dev = 4,069, 101,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=21 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.03679142632567325;  // std dev = 6,217, 254,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=48 */
%   | | | else return -0.1175860736241598;  // std dev = 0,007, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.06785229020350604;  // std dev = 0,477, 7.992,000 (wgt'ed) examples reached here.  /* #neg=5.145 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7822630755749551;  // std dev = 1,966, 88,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=84 */
%   | | | else return -0.15826844989466843;  // std dev = 1,043, 294,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.05830620582469649;  // std dev = 3,259, 52,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | | else return -0.05329357810671519;  // std dev = 4,392, 246,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.005221447864384817;  // std dev = 6,384, 381,000 (wgt'ed) examples reached here.  /* #neg=334 #pos=47 */
%   | | | else return -0.10220060454151605;  // std dev = 1,401, 68,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=2 */
%   | | else return -0.10594763849014051;  // std dev = 0,006, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.32821874675256263;  // std dev = 0,231, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.13942910234347855;  // std dev = 4,492, 81,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=39 */
%   | | | else return -0.04061404719160693;  // std dev = 4,418, 124,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=27 */
%   | else return 0.05843980452436815;  // std dev = 0,479, 7.663,000 (wgt'ed) examples reached here.  /* #neg=4.903 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.5926294919737118;  // std dev = 2,872, 93,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=84 */
%   | | | else return -0.13917031194406373;  // std dev = 1,047, 321,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=1 */
%   | | else return -0.037526945142942685;  // std dev = 0,307, 324,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=36 */
%   | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | then return -0.003274415103060388;  // std dev = 0,328, 394,000 (wgt'ed) examples reached here.  /* #neg=345 #pos=49 */
%   | | else return -0.09544043018856102;  // std dev = 0,004, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, B), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.0369143229196657;  // std dev = 0,476, 7.423,000 (wgt'ed) examples reached here.  /* #neg=4.814 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7089124400813537;  // std dev = 3,238, 142,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=131 */
%   | | | else return -0.13515259403390767;  // std dev = 1,742, 543,000 (wgt'ed) examples reached here.  /* #neg=540 #pos=3 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.19153233331786076;  // std dev = 4,863, 223,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=27 */
%   | | | else return -0.09615227906058044;  // std dev = 1,449, 65,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=3 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.4449533112858085;  // std dev = 4,208, 101,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=78 */
%   | | | else return 0.04200180121536467;  // std dev = 4,370, 192,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=49 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.6297739492119373;  // std dev = 0,209, 71,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=68 */
%   | else return 0.0021818011155946993;  // std dev = 0,275, 268,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=49 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.27157903810201844;  // std dev = 0,090, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.10540021607946559;  // std dev = 4,460, 80,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=39 */
%   | | | else return -0.02682299644219994;  // std dev = 4,368, 119,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=27 */
%   | else return 0.030413589121294715;  // std dev = 0,474, 7.781,000 (wgt'ed) examples reached here.  /* #neg=5.021 #pos=2.760 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.621355655839214;  // std dev = 3,202, 94,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=84 */
%   | | | else return -0.11638620010479009;  // std dev = 0,876, 528,000 (wgt'ed) examples reached here.  /* #neg=527 #pos=1 */
%   | | else return -0.04159957669208011;  // std dev = 0,240, 261,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=36 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return -0.007679375821813296;  // std dev = 0,273, 280,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=49 */
%   | | else return -0.08866417573250159;  // std dev = 0,005, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
0;true,false,true;author(J, I), venue(J, A).;false;false
0;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
0;true,true,false;author(G, E), venue(G, B).;false;false
0;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
0;false,true;title(M, L), venue(M, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,false;author(L, I), venue(L, B).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true,true,true;haswordauthor(G, C).;false;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;true
1;true,true;haswordtitle(F, C).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,true;author(K, I), title(K, J).;false;false
2;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
2;true,true,false;author(G, E), venue(G, B).;false;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false,true;haswordtitle(J, H).;true;false
2;true,true;haswordauthor(F, C).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
3;false,true;haswordtitle(F, D).;true;false
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false,false,true;haswordauthor(J, H).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
4;true,false,true;haswordtitle(I, C).;false;false
4;true,true,true;haswordtitle(F, C).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,true;haswordauthor(L, J).;false;false
4;true,true;haswordtitle(F, D).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordtitle(H, D).;false;false
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,true;author(F, E), venue(F, A).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;haswordauthor(H, D).;false;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,false,true;title(K, J), venue(K, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,true,true;samebib(J, K), venue(K, B).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;true,true,false;author(G, E), venue(G, B).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;false,true;title(J, I), venue(J, A).;true;false
7;true,true;haswordauthor(F, C).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, A).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true;venue(E, B), title(E, D).;true;true
8;true,true;haswordvenue(B, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;false,true,true;samebib(I, J), venue(J, A).;false;false
9;false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,true,false;author(F, E), venue(F, B).;false;false
9;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
9;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
9;false,true;title(I, H), venue(I, B).;true;false
9;true,true;haswordvenue(B, D).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048768;  // std dev = 3,80e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14185106490048766;  // std dev = 5,77e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.4811631927716514;  // std dev = 0,380, 78,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.6131773458372508;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.18836213951019307;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.11231637819360621;  // std dev = 7,68e-09, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2022893667375764;  // std dev = 3,010, 96,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=56 */
%   else if ( movie(D, A) )
%   | then return -0.10159632948783617;  // std dev = 6,18e-09, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.20658857656058938;  // std dev = 0,286, 85,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13721683217121614;  // std dev = 2,727, 91,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.08518475138839679;  // std dev = 3,23e-09, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12499175582970021;  // std dev = 2,597, 87,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109166;  // std dev = 4,47e-09, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.3050051009797129;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.27329606051631944;  // std dev = 2,11e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07324622576333706;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.24442304781407923;  // std dev = 9,88e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.22248218242823184;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2224821824282319;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.06842697784420267;  // std dev = 3,41e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.05270819442885005;  // std dev = 1,803, 91,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.973666
   AUC PR    = 0.696168
   CLL	      = -0.121264
   Precision = 0.799401 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.809091


Total learning time: 1.151 seconds
Total inference time: 2.511 seconds
AUC ROC: 0.973666


Results scoring model
   AUC ROC   = 0.999547
   AUC PR    = 0.949153
   CLL	      = -0.109297
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.532 seconds
Parameter learned model CLL: -0.109297


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'true,true': 'genre(B, E)', 'false': 'movie(F, B)'}, {'false,true,false': [5.77e-08, 55, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 7, 0], 'true,true,true': [0.0, 0, 56], 'false,false': [0.0, 0, 0], 'true,true,false': [3.8e-08, 37, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)'}, {'false,true,false': [0.0, 70, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'true,true': [0.38, 22, 56], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false': 'movie(F, B)'}, {'true,true,false': [0.0, 28, 0], 'false,true': [7.68e-09, 87, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)'}, {'true': [3.01, 40, 56], 'false,true': [6.18e-09, 83, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'false,true': [0.0, 76, 0], 'true,true': [0.286, 29, 56], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [3.23e-09, 79, 0], 'true': [2.727, 35, 56], 'false,true,true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [4.47e-09, 76, 0], 'true': [2.597, 31, 56], 'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'false,true,false': [0.0, 61, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [2.11e-08, 30, 0], 'false,true,true,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 56]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, F)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)', 'true,true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [0.0, 0, 0], 'true,true,true': [9.88e-08, 0, 56], 'true,false,true,false': [1.86e-09, 6, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 5, 0], 'true,false,false,false': [3.41e-08, 77, 0], 'true,false,false,true': [0.0, 29, 0], 'true,false,true,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, G)', 'false': 'movie(E, A)', 'true': 'movie(D, A)', 'false,true': 'genre(B, F)', 'true,true': 'movie(D, B)'}, {'false,true,false': [0.0, 85, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [1.32e-09, 3, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [1.803, 35, 56]}]]
[{'': [0.23956526766100097, 6.446456272017038e-17], 'true': [0.23956526766100097, nan], 'false,true': [-7.93016446160826e-18, 6.055761952500853e-17], 'true,true': [-1.2688263138573217e-16, 3.900783600034334e-17], 'false': [6.446456272017038e-17, nan]}, {'': [0.14456084539071326, -3.0417069167812506e-17], 'true': [0.14456084539071326, nan], 'false,true': [-4.625929269271485e-18, -3.172065784643304e-17], 'false': [-3.0417069167812506e-17, nan]}, {'': [0.14277012146023227, 5.870144727903127e-17], 'true': [0.14277012146023227, nan], 'true,true': [-4.440892098500626e-16, -1.1895246692412391e-17], 'false': [5.870144727903127e-17, nan]}, {'': [0.09439407064703541, 4.01285430587406e-17], 'false': [4.01285430587406e-17, nan]}, {'': [0.08165562075521013, 0.0], 'true': [0.08165562075521013, nan], 'false': [0.0, nan]}, {'': [0.08173193681519651, 1.2490009027033011e-17], 'false,true': [0.0, 1.1242764806330699e-17], 'false,true,true': [nan, 0.0], 'false': [1.2490009027033011e-17, nan]}, {'': [0.07750521925767709, 9.770950900898405e-07], 'false,true': [9.124982480008629e-06, 1.9721066884788965e-17], 'false,true,true': [0.0, 0.0], 'false': [9.770950900898405e-07, nan]}, {'': [0.07596621850882498, 4.704505106858589e-07], 'false,true,true': [0.0, 0.0], 'false': [4.704505106858589e-07, nan], 'true': [0.07596621850882498, nan], 'false,true': [6.79705570292774e-06, -2.7300566179307128e-18], 'true,true': [-6.344131569286608e-17, 1.4802973661668754e-17]}, {'': [0.03022109978638682, nan], 'true,false': [0.004449938636142575, 0.004716607558802123], 'true,false,true': [0.0, 5.782411586589357e-19], 'true,false,false': [-7.656710514656252e-18, 1.5139404881252134e-17], 'true,true,false': [nan, -6.938893903907229e-19], 'true': [0.00736496608310378, 0.004698755354794233], 'true,true': [1.7446361815538174e-16, -6.938893903907229e-19]}, {'': [0.035725351130160315, -1.198536219765794e-17], 'false,true,true': [nan, 5.782411586589357e-19], 'false': [-1.198536219765794e-17, nan], 'true': [0.035725351130160315, nan], 'false,true': [5.782411586589357e-19, -1.1102230246251566e-17], 'true,true': [0.035725351130160315, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;true;genre(B, E).;true;true
0;false;genre(A, G).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(B, F).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(B, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(B, F).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;genre(B, E).;true;true
7;false,true;genre(B, H).;true;true
7;false;genre(A, G).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
8;false;genre(A, F).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( genre(A, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.14185106490048766;  // std dev = 6,99e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( genre(B, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360636;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( actor(A) )
%   | | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.09269127618926105;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.30506575340243486;  // std dev = 0,539, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,58e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.08518475138839682;  // std dev = 1,18e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07773741699845313;  // std dev = 0,004, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07331680857268212;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07195604894521979;  // std dev = 0,013, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, E) )
%   | then if ( genre(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333702;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.06842697784420271;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return -0.05576783521048669;  // std dev = 7,44e-05, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0684269778442027;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06843212608102506;  // std dev = 0,000102, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.06845441974706935;  // std dev = 0,000465, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A), female(B) )
%   | | then return -0.06419123322408476;  // std dev = 5,57e-07, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.0626911175387581;  // std dev = 0,004, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801087;  // std dev = 5,27e-09, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(B, D) )
%   | then return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.06419153082171046;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( actor(A) )
%   | | | then return -0.06419019163239494;  // std dev = 1,18e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.06419184008202618;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.99889
   AUC PR    = 0.966568
   CLL	      = -0.078322
   Precision = 0.799401 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.809091


Total learning time: 2.703 seconds
Total inference time: 2.797 seconds
AUC ROC: 0.99889


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064696
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.735 seconds
Refined model CLL: -0.064696


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.99889
   AUC PR    = 0.966568
   CLL	      = -0.078322
   Precision = 0.799401 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.809091


Total learning time: 7.1209999999999996 seconds
Total inference time: 2.797 seconds
AUC ROC: 0.99889
Total revision time: 7.1209999999999996
Best scored revision CLL: -0.064696


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:36:34
{'Learning time': 7.1209999999999996, 'F1': 0.809091, 'parameter': {'Learning time': 1.151, 'F1': 0.809091, 'Recall': 0.819018, 'CLL': -0.121264, 'AUC PR': 0.696168, 'Inference time': 2.511, 'Precision': [0.799401, 0.5], 'AUC ROC': 0.973666}, 'Recall': 0.819018, 'CLL': -0.078322, 'AUC PR': 0.966568, 'Inference time': 2.797, 'Precision': [0.799401, 0.5], 'AUC ROC': 0.99889}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
0;true,false,true;author(J, I), venue(J, A).;false;false
0;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
0;true,true,false;author(G, E), venue(G, B).;false;false
0;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
0;false,true;title(M, L), venue(M, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,false;author(L, I), venue(L, B).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true,true,true;haswordauthor(G, C).;false;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;true
1;true,true;haswordtitle(F, C).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,true;author(K, I), title(K, J).;false;false
2;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
2;true,true,false;author(G, E), venue(G, B).;false;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false,true;haswordtitle(J, H).;true;false
2;true,true;haswordauthor(F, C).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
3;false,true;haswordtitle(F, D).;true;false
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false,false,true;haswordauthor(J, H).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
4;true,false,true;haswordtitle(I, C).;false;false
4;true,true,true;haswordtitle(F, C).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,true;haswordauthor(L, J).;false;false
4;true,true;haswordtitle(F, D).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordtitle(H, D).;false;false
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,true;author(F, E), venue(F, A).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;haswordauthor(H, D).;false;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,false,true;title(K, J), venue(K, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,true,true;samebib(J, K), venue(K, B).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;true,true,false;author(G, E), venue(G, B).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;false,true;title(J, I), venue(J, A).;true;false
7;true,true;haswordauthor(F, C).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, A).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true;venue(E, B), title(E, D).;true;true
8;true,true;haswordvenue(B, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;false,true,true;samebib(I, J), venue(J, A).;false;false
9;false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,true,false;author(F, E), venue(F, B).;false;false
9;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
9;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
9;false,true;title(I, H), venue(I, B).;true;false
9;true,true;haswordvenue(B, D).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048766;  // std dev = 7,88e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.4014935006423829;  // std dev = 0,409, 93,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then return -0.12544463852839138;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.6318955923745841;  // std dev = 2,15e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.17648330147031122;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.1123163781936062;  // std dev = 8,01e-09, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24452342047499775;  // std dev = 2,914, 92,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=58 */
%   else if ( movie(D, A) )
%   | then return -0.10159632948783615;  // std dev = 6,45e-09, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.2508432998995632;  // std dev = 0,269, 80,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09269127618926108;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1214512765002339;  // std dev = 2,885, 96,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839683;  // std dev = 4,93e-09, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10418515857828872;  // std dev = 2,755, 95,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.08518475138839691;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07877675473109164;  // std dev = 4,84e-09, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.3073492494031507;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.2697605638129723;  // std dev = 5,16e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.24603160767514562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06842697784420275;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.22001168605291654;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.22001168605291643;  // std dev = 2,58e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.06842697784420268;  // std dev = 2,89e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.07699915472771883;  // std dev = 1,685, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.972959
   AUC PR    = 0.696009
   CLL	      = -0.122778
   Precision = 0.800604 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.80916


Total learning time: 1.248 seconds
Total inference time: 2.888 seconds
AUC ROC: 0.972959


Results scoring model
   AUC ROC   = 0.999416
   AUC PR    = 0.935484
   CLL	      = -0.107085
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.45 seconds
Parameter learned model CLL: -0.107085


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'true,true': 'genre(B, E)', 'false': 'movie(F, B)'}, {'false,true,false': [7.88e-08, 85, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 4, 0], 'true,true,true': [0.0, 0, 58], 'false,false': [0.0, 0, 0], 'true,true,false': [2.58e-08, 29, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)'}, {'false,true,false': [0.0, 89, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [7.45e-09, 8, 0], 'true,true': [0.409, 35, 58], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false': 'movie(F, B)'}, {'true,true,false': [0.0, 25, 0], 'false,true': [8.01e-09, 97, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [2.15e-07, 0, 58], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)'}, {'true': [2.914, 34, 58], 'false,true': [6.45e-09, 75, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'false,true': [0.0, 83, 0], 'true,true': [0.269, 22, 58], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [4.93e-09, 67, 0], 'true': [2.885, 38, 58], 'false,true,true,false': [0.0, 4, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [4.84e-09, 83, 0], 'true': [2.755, 37, 58], 'false,true,true,false': [0.0, 7, 0], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'false,true,false': [0.0, 66, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [2.63e-09, 8, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [5.16e-08, 29, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, F)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)', 'true,true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 58], 'true,false,true,false': [0.0, 9, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [1.32e-09, 3, 0], 'true,false,false,false': [2.89e-08, 69, 0], 'true,false,false,true': [2.58e-08, 35, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, G)', 'false': 'movie(E, A)', 'true': 'movie(D, A)', 'false,true': 'genre(B, F)', 'true,true': 'movie(D, B)'}, {'false,true,false': [0.0, 80, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'true,true,true': [1.685, 28, 58]}]]
[{'': [0.2222222222222218, 7.734137924355023e-17], 'true': [0.2222222222222218, nan], 'false,true': [0.0, 7.314410515177502e-17], 'true,true': [-3.675221047035001e-16, 2.2970131543968756e-17], 'false': [7.734137924355023e-17, nan]}, {'': [0.16755574289563102, -1.1445598192011922e-17], 'true': [0.16755574289563102, nan], 'false,true': [6.938893903907228e-18, -1.7464182409833923e-17], 'false': [-1.1445598192011922e-17, nan]}, {'': [0.13754403138629048, 6.180623023686439e-17], 'true': [0.13754403138629048, nan], 'true,true': [7.962978935242502e-16, 0.0], 'false': [6.180623023686439e-17, nan]}, {'': [0.0922993229043318, 4.2928623618839385e-17], 'false': [4.2928623618839385e-17, nan]}, {'': [0.07258044365061123, 0.0], 'true': [0.07258044365061123, nan], 'false': [0.0, nan]}, {'': [0.08668000958631389, 2.5019110414088035e-17], 'false,true': [0.0, 2.4027214712036968e-17], 'false,true,true': [nan, 0.0], 'false': [2.5019110414088035e-17, nan]}, {'': [0.07990718401248663, 4.462767666499914e-07], 'false,true': [4.491202314378488e-06, 2.407712583524436e-17], 'false,true,true': [0.0, -2.9738116731030977e-18], 'false': [4.462767666499914e-07, nan]}, {'': [0.07401238589118854, -4.50090415388577e-18], 'false,true,true': [nan, 8.673617379884035e-19], 'false': [-4.50090415388577e-18, nan], 'true': [0.07401238589118854, nan], 'false,true': [8.673617379884035e-19, -1.6821560979169039e-18], 'true,true': [-1.0719394720518753e-16, 9.188052617587502e-17]}, {'': [0.03231325609211503, nan], 'true,false': [0.0048947056535973464, 0.005130518295762825], 'true,false,true': [0.0, 0.0], 'true,false,false': [1.9032394707859827e-17, 1.206764157201257e-17], 'true,true,false': [0.0, 5.782411586589357e-19], 'true': [0.006067950024868939, 0.005106205280604637], 'true,true': [-5.3596973602593766e-17, 2.0084602801570886e-05]}, {'': [0.03303250364303538, 9.643562507651225e-07], 'false,true,true': [0.0, 0.0], 'false': [9.643562507651225e-07, nan], 'true': [0.03303250364303538, nan], 'false,true': [1.537160626236076e-05, -9.714451465470119e-18], 'true,true': [0.03303250364303538, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;true;genre(B, E).;true;true
0;false;genre(A, G).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(B, F).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(B, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(B, F).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;genre(B, E).;true;true
7;false;genre(A, G).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true,false;genre(A, E).;true;true
8;false;genre(A, F).;true;true
8;true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(A, G).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( genre(A, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B) )
%   | | then return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( female(A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.1328294932550892;  // std dev = 0,151, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( genre(B, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360638;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11158220303993584;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then return -0.11231637819360636;  // std dev = 3,23e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360638;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(B) )
%   | | | then return -0.11231637819360629;  // std dev = 4,08e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10099089834857577;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( female(A) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.09218412349054407;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else return -0.09269127618926107;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694892;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2551722425694892;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08481567924880293;  // std dev = 0,000151, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.08518475138839679;  // std dev = 1,49e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.08518475138839683;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07879971595127314;  // std dev = 9,37e-06, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07840244944843235;  // std dev = 6,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B) )
%   | | then return -0.07324580068507938;  // std dev = 6,94e-07, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.0729988205667757;  // std dev = 0,000145, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( genre(A, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.1319279116910484;  // std dev = 0,065, 64,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(D, B) )
%   | | then return -0.06836268918108551;  // std dev = 0,000120, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06843172181905434;  // std dev = 7,10e-05, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.06839898553873267;  // std dev = 0,000673, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.13644115930686174;  // std dev = 3,73e-09, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B) )
%   | | then return -0.06419251648852647;  // std dev = 2,10e-06, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(A) )
%   | | | then return -0.06422721743569669;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06392089294889566;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07733072453934957;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then return -0.06419289401957701;  // std dev = 9,17e-07, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else return -0.0641957020904383;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.998889
   AUC PR    = 0.966587
   CLL	      = -0.077711
   Precision = 0.800604 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.80916


Total learning time: 2.627 seconds
Total inference time: 2.577 seconds
AUC ROC: 0.998889


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065639
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 2.189 seconds
Refined model CLL: -0.065639


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.998889
   AUC PR    = 0.966587
   CLL	      = -0.077711
   Precision = 0.800604 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.80916


Total learning time: 7.513999999999999 seconds
Total inference time: 2.577 seconds
AUC ROC: 0.998889
Total revision time: 7.513999999999999
Best scored revision CLL: -0.065639


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:36:47
{'Learning time': 7.513999999999999, 'F1': 0.80916, 'parameter': {'Learning time': 1.248, 'F1': 0.80916, 'Recall': 0.817901, 'CLL': -0.122778, 'AUC PR': 0.696009, 'Inference time': 2.888, 'Precision': [0.800604, 0.5], 'AUC ROC': 0.972959}, 'Recall': 0.817901, 'CLL': -0.077711, 'AUC PR': 0.966587, 'Inference time': 2.577, 'Precision': [0.800604, 0.5], 'AUC ROC': 0.998889}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
0;true,false,true;author(J, I), venue(J, A).;false;false
0;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
0;true,true,false;author(G, E), venue(G, B).;false;false
0;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
0;false,true;title(M, L), venue(M, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,false;author(L, I), venue(L, B).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true,true,true;haswordauthor(G, C).;false;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;true
1;true,true;haswordtitle(F, C).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,true;author(K, I), title(K, J).;false;false
2;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
2;true,true,false;author(G, E), venue(G, B).;false;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false,true;haswordtitle(J, H).;true;false
2;true,true;haswordauthor(F, C).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
3;false,true;haswordtitle(F, D).;true;false
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false,false,true;haswordauthor(J, H).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
4;true,false,true;haswordtitle(I, C).;false;false
4;true,true,true;haswordtitle(F, C).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,true;haswordauthor(L, J).;false;false
4;true,true;haswordtitle(F, D).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordtitle(H, D).;false;false
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,true;author(F, E), venue(F, A).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;haswordauthor(H, D).;false;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,false,true;title(K, J), venue(K, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,true,true;samebib(J, K), venue(K, B).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;true,true,false;author(G, E), venue(G, B).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;false,true;title(J, I), venue(J, A).;true;false
7;true,true;haswordauthor(F, C).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, A).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true;venue(E, B), title(E, D).;true;true
8;true,true;haswordvenue(B, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;false,true,true;samebib(I, J), venue(J, A).;false;false
9;false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,true,false;author(F, E), venue(F, B).;false;false
9;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
9;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
9;false,true;title(I, H), venue(I, B).;true;false
9;true,true;haswordvenue(B, D).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.8280737471295855;  // std dev = 1,970, 133,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=129 */
%   | | else return 0.26648226843284667;  // std dev = 5,384, 120,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.14185106490048846;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.46742947980183;  // std dev = 0,432, 256,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then return -0.12544463852839127;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.12544463852839177;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.5934403182104344;  // std dev = 1,970, 133,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=129 */
%   | | else return 0.18930684343042542;  // std dev = 5,213, 110,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.11231637819360696;  // std dev = 0,000, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.30870985104016124;  // std dev = 6,088, 245,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=178 */
%   else if ( movie(D, A) )
%   | then return -0.10159632948783659;  // std dev = 0,000, 255,000 (wgt'ed) examples reached here.  /* #neg=255 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.2107916684257039;  // std dev = 0,398, 256,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09269127618926044;  // std dev = 7,79e-09, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17814739612150446;  // std dev = 6,310, 245,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.08518475138839678;  // std dev = 5,74e-09, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10855466377352624;  // std dev = 6,508, 261,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.07877675473109146;  // std dev = 4,47e-09, 222,000 (wgt'ed) examples reached here.  /* #neg=222 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.23165462419653227;  // std dev = 2,745, 137,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=129 */
%   | | else return -0.0774041856822341;  // std dev = 5,400, 121,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07324622576333702;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.07324622576333666;  // std dev = 1,17e-07, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.20743837685411354;  // std dev = 2,194, 134,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=129 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.46307186153330804;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06842697784420262;  // std dev = 1,67e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.04781762424517245;  // std dev = 5,353, 118,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=49 */
%   | | | else return -0.06842697784420261;  // std dev = 5,48e-08, 174,000 (wgt'ed) examples reached here.  /* #neg=174 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.0705242978040589;  // std dev = 5,994, 257,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.06419184008202625;  // std dev = 2,11e-08, 233,000 (wgt'ed) examples reached here.  /* #neg=233 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993054
   AUC PR    = 0.901018
   CLL	      = -0.218689
   Precision = 0.937198 at threshold = 0.5
   Recall    = 0.95098
   F1        = 0.944039


Total learning time: 1.699 seconds
Total inference time: 2.737 seconds
AUC ROC: 0.993054


Results scoring model
   AUC ROC   = 0.966161
   AUC PR    = 0.596149
   CLL	      = -0.20763
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total scoring time: 1.689 seconds
Parameter learned model CLL: -0.20763


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'true,true': 'genre(B, E)', 'false': 'movie(F, B)'}, {'false,true,false': [0.0, 229, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [3.65e-08, 36, 0], 'true,true,true': [1.97, 4, 129], 'false,false': [0.0, 0, 0], 'true,true,false': [5.384, 71, 49]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)'}, {'false,true,false': [0.0, 229, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [1.49e-08, 44, 0], 'true,true': [0.432, 78, 178], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false': 'movie(F, B)'}, {'true,true,false': [5.213, 61, 49], 'false,true': [0.0, 286, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [1.97, 4, 129], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)'}, {'true': [6.088, 67, 178], 'false,true': [0.0, 255, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'false,true': [7.79e-09, 273, 0], 'true,true': [0.398, 78, 178], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [5.74e-09, 238, 0], 'true': [6.31, 67, 178], 'false,true,true,false': [0.0, 48, 0], 'false,true,true,true': [0.0, 5, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [4.47e-09, 222, 0], 'true': [6.508, 83, 178], 'false,true,true,false': [0.0, 44, 0], 'false,true,true,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'false,true,false': [1.17e-07, 198, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 29, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [5.4, 72, 49], 'false,true,true,true': [0.0, 5, 0], 'true,true,true': [2.745, 8, 129]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, F)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)', 'true,true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [0.0, 3, 0], 'true,true,true': [2.194, 5, 129], 'true,false,true,false': [1.67e-08, 43, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 39, 0], 'true,false,false,false': [5.48e-08, 174, 0], 'true,false,false,true': [5.353, 69, 49], 'true,false,true,true': [0.0, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, G)', 'false': 'movie(E, A)', 'true': 'movie(D, A)', 'false,true': 'genre(B, F)', 'true,true': 'movie(D, B)'}, {'false,true,false': [2.11e-08, 233, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 45, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 4, 0], 'true,true,true': [5.994, 79, 178]}]]
[{'': [0.20856442062835467, -7.373556691850096e-17], 'true': [0.20856442062835467, nan], 'false,true': [3.700743415417188e-17, -2.1331796106334886e-16], 'true,true': [0.029170671038502904, 0.2415972222222225], 'false': [-7.373556691850096e-17, nan]}, {'': [0.18651970924850636, -8.458842092382145e-17], 'true': [0.18651970924850636, nan], 'false,true': [5.046468293750712e-18, -6.981315089345963e-17], 'false': [-8.458842092382145e-17, nan]}, {'': [0.16825293901540148, -1.0869316325001533e-16], 'true': [0.16825293901540148, nan], 'true,true': [0.02917067103849895, 0.2470247933884292], 'false': [-1.0869316325001533e-16, nan]}, {'': [0.15127712217055153, -6.791952621236252e-17], 'false': [-6.791952621236252e-17, nan]}, {'': [0.15834172990838283, 6.018791488810372e-17], 'true': [0.15834172990838283, nan], 'false': [6.018791488810372e-17, nan]}, {'': [0.1624907426183797, 3.6625914214438153e-17], 'false,true': [-3.142140635731575e-18, 3.2653618371328135e-17], 'false,true,true': [0.0, -4.625929269271485e-18], 'false': [3.6625914214438153e-17, nan]}, {'': [0.16229190474248695, 9.079890907715035e-18], 'false,true': [-1.4173059888831785e-17, 2.000401846171453e-17], 'false,true,true': [0.0, -1.5139404881252134e-17], 'false': [9.079890907715035e-18, nan]}, {'': [0.165996303203577, 6.891039463190627e-17], 'false,true,true': [-6.938893903907229e-19, -4.785444071660158e-18], 'false': [6.891039463190627e-17, nan], 'true': [0.165996303203577, nan], 'false,true': [-4.081702296416017e-18, 6.95291187138987e-17], 'true,true': [0.0549842825936383, 0.2409671470527968]}, {'': [0.08276368119169332, nan], 'true,false': [0.02656667949042829, 0.09822742595443891], 'true,false,true': [-3.700743415417188e-17, 6.454785026890445e-18], 'true,false,false': [0.2428181557023852, 1.7227598657976568e-17], 'true,true,false': [-5.782411586589357e-19, 0.0], 'true': [0.041175894644310373, 0.08805850579582783], 'true,true': [0.035921140565827694, 1.32169407693471e-18]}, {'': [0.13979135715052007, 3.228308085789462e-17], 'false,true,true': [0.0, -3.0839528461809902e-18], 'false': [3.228308085789462e-17, nan], 'true': [0.13979135715052007, nan], 'false,true': [-3.398641912117826e-18, 1.9059622740346035e-18], 'true,true': [0.13979135715052007, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, G).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(B, F).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false,true;genre(B, F).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(B, F).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, H).;true;true
7;false;genre(A, G).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true,false;genre(A, E).;true;true
8;false;genre(A, F).;true;true
8;true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false,true;genre(A, G).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 5,58e-08, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048766;  // std dev = 6,14e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.1418510649004883;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return -0.12544463852839136;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.12544463852839172;  // std dev = 0,000, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else return -0.11231637819360686;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else return -0.1015963294878366;  // std dev = 0,000, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then return -0.09269127618926067;  // std dev = 0,000, 134,000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else return -0.09269127618926093;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.08518475138839679;  // std dev = 1,05e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.08518475138839678;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839676;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.08518475138839678;  // std dev = 2,79e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.0787767547310917;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07877675473109168;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109148;  // std dev = 7,74e-08, 139,000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | | else return -0.07877675473109164;  // std dev = 2,69e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.07877675473109164;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 1,05e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.07324622576333704;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07324622576333698;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | | else return -0.07324622576333702;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.09149654968010588;  // std dev = 0,798, 65,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=47 */
%   | | | else return 0.12450928329309098;  // std dev = 0,716, 94,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=82 */
%   | | else return -0.0684269778442027;  // std dev = 9,31e-10, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(D, B) )
%   | | then return -0.06842697784420265;  // std dev = 2,28e-09, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.0800301586072467;  // std dev = 0,888, 73,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=49 */
%   | | | else return -0.06842697784420262;  // std dev = 5,48e-08, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.14193454523802035;  // std dev = 0,000697, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.13773876397014523;  // std dev = 0,001, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.06419184008202615;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(A) )
%   | | | then return -0.0756887114477428;  // std dev = 0,006, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.06419184008202612;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07370806265365816;  // std dev = 4,56e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07370806265365816;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.06419184008202622;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064114
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.631 seconds
Total inference time: 3.36 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067278
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.793 seconds
Refined model CLL: -0.067278


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064114
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.812 seconds
Total inference time: 3.36 seconds
AUC ROC: 1.0
Total revision time: 8.812
Best scored revision CLL: -0.067278


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:37:03
{'Learning time': 8.812, 'F1': 1.0, 'parameter': {'Learning time': 1.699, 'F1': 0.944039, 'Recall': 0.95098, 'CLL': -0.218689, 'AUC PR': 0.901018, 'Inference time': 2.737, 'Precision': [0.937198, 0.5], 'AUC ROC': 0.993054}, 'Recall': 1.0, 'CLL': -0.064114, 'AUC PR': 1.0, 'Inference time': 3.36, 'Precision': [1.0, 0.5], 'AUC ROC': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
0;true,false,true;author(J, I), venue(J, A).;false;false
0;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
0;true,true,false;author(G, E), venue(G, B).;false;false
0;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
0;false,true;title(M, L), venue(M, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,false;author(L, I), venue(L, B).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true,true,true;haswordauthor(G, C).;false;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;true
1;true,true;haswordtitle(F, C).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,true;author(K, I), title(K, J).;false;false
2;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
2;true,true,false;author(G, E), venue(G, B).;false;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false,true;haswordtitle(J, H).;true;false
2;true,true;haswordauthor(F, C).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
3;false,true;haswordtitle(F, D).;true;false
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false,false,true;haswordauthor(J, H).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
4;true,false,true;haswordtitle(I, C).;false;false
4;true,true,true;haswordtitle(F, C).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,true;haswordauthor(L, J).;false;false
4;true,true;haswordtitle(F, D).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordtitle(H, D).;false;false
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,true;author(F, E), venue(F, A).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;haswordauthor(H, D).;false;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,false,true;title(K, J), venue(K, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,true,true;samebib(J, K), venue(K, B).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;true,true,false;author(G, E), venue(G, B).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;false,true;title(J, I), venue(J, A).;true;false
7;true,true;haswordauthor(F, C).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, A).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true;venue(E, B), title(E, D).;true;true
8;true,true;haswordvenue(B, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;false,true,true;samebib(I, J), venue(J, A).;false;false
9;false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,true,false;author(F, E), venue(F, B).;false;false
9;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
9;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
9;false,true;title(I, H), venue(I, B).;true;false
9;true,true;haswordvenue(B, D).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.8364098046647294;  // std dev = 0,989, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.14185106490048766;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.3774212930555872;  // std dev = 0,417, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then return -0.1254446385283914;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.12544463852839147;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.6424856319867971;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1730119222425772;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.11231637819360626;  // std dev = 6,04e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23192783412764373;  // std dev = 2,745, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, A) )
%   | then return -0.10159632948783616;  // std dev = 6,32e-09, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.2163624755166806;  // std dev = 0,300, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1595032239282323;  // std dev = 2,405, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839679;  // std dev = 2,08e-09, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12594202352912923;  // std dev = 2,371, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07877675473109175;  // std dev = 2,63e-09, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.29041831210088376;  // std dev = 0,989, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else return -0.268213374897188;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07324622576333704;  // std dev = 7,45e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2534169705186146;  // std dev = 6,66e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.21892884038553032;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2189288403855304;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.0684269778442027;  // std dev = 1,39e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.09642805092458355;  // std dev = 1,407, 63,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.974629
   AUC PR    = 0.704623
   CLL	      = -0.120584
   Precision = 0.80814 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.816446


Total learning time: 1.206 seconds
Total inference time: 3.306 seconds
AUC ROC: 0.974629


Results scoring model
   AUC ROC   = 0.998942
   AUC PR    = 0.918367
   CLL	      = -0.114211
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.291 seconds
Parameter learned model CLL: -0.114211


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'true,true': 'genre(B, E)', 'false': 'movie(F, B)'}, {'false,true,false': [5.96e-08, 58, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'true,true,true': [0.989, 1, 45], 'false,false': [0.0, 0, 0], 'true,true,false': [1.05e-08, 22, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)'}, {'false,true,false': [0.0, 54, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [5.27e-09, 7, 0], 'true,true': [0.417, 31, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false': 'movie(F, B)'}, {'true,true,false': [0.0, 32, 0], 'false,true': [6.04e-09, 62, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)'}, {'true': [2.745, 29, 45], 'false,true': [6.32e-09, 70, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'false,true': [0.0, 66, 0], 'true,true': [0.3, 23, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [2.08e-09, 63, 0], 'true': [2.405, 26, 45], 'false,true,true,false': [2.63e-09, 6, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [2.63e-09, 57, 0], 'true': [2.371, 26, 45], 'false,true,true,false': [0.0, 10, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'false,true,false': [7.45e-09, 53, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [2.63e-09, 7, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 28, 0], 'false,true,true,true': [0.0, 1, 0], 'true,true,true': [0.989, 1, 45]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, F)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)', 'true,true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [0.0, 1, 0], 'true,true,true': [6.66e-08, 0, 45], 'true,false,true,false': [1.86e-09, 6, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [2.63e-09, 7, 0], 'true,false,false,false': [1.39e-08, 50, 0], 'true,false,false,true': [0.0, 19, 0], 'true,false,true,true': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, G)', 'false': 'movie(E, A)', 'true': 'movie(D, A)', 'false,true': 'genre(B, F)', 'true,true': 'movie(D, B)'}, {'false,true,false': [0.0, 52, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 8, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [1.407, 18, 45]}]]
[{'': [0.22383217993079618, 6.728624391667616e-17], 'true': [0.22383217993079618, nan], 'false,true': [-6.938893903907228e-18, 6.125368411725002e-17], 'true,true': [0.021266540642723226, 5.046468293750712e-18], 'false': [6.728624391667616e-17, nan]}, {'': [0.17420218887961234, -1.0920226471722851e-17], 'true': [0.17420218887961234, nan], 'false,true': [3.96508223080413e-18, -8.22387425648264e-18], 'false': [-1.0920226471722851e-17, nan]}, {'': [0.1615200228999639, 3.581364595565021e-17], 'true': [0.1615200228999639, nan], 'true,true': [-3.1579677144893343e-16, -1.734723475976807e-17], 'false': [3.581364595565021e-17, nan]}, {'': [0.10184133749491596, 3.9650822308041306e-17], 'false': [3.9650822308041306e-17, nan]}, {'': [0.09013208682678257, -1.6821560979169039e-18], 'true': [0.09013208682678257, nan], 'false': [-1.6821560979169039e-18, nan]}, {'': [0.08146668370322697, 4.827056628805028e-18], 'false,true': [1.1564823173178713e-18, 5.28677630773884e-18], 'false,true,true': [nan, 1.1564823173178713e-18], 'false': [4.827056628805028e-18, nan]}, {'': [0.07916964951512118, 1.657049290485308e-17], 'false,true': [-1.3877787807814458e-18, 6.817158923136926e-18], 'false,true,true': [nan, -1.3877787807814458e-18], 'false': [1.657049290485308e-17, nan]}, {'': [0.08662100844430452, 2.2982272631034496e-06], 'false,true,true': [0.0, 9.912705577010326e-19], 'false': [2.2982272631034496e-06, nan], 'true': [0.08662100844430452, nan], 'false,true': [1.558904310471152e-05, 1.047380211910525e-18], 'true,true': [0.021266540642722348, -7.930164461608261e-17]}, {'': [0.032301661924278025, nan], 'true,false': [0.005436194550818077, 0.004519695462505439], 'true,false,true': [0.0, 5.782411586589357e-19], 'true,false,false': [-1.1686558153949016e-17, 3.885780586188048e-18], 'true,true,false': [0.0, 9.912705577010326e-19], 'true': [0.013383919921771407, 0.004674610493412998], 'true,true': [9.868649107779169e-17, 1.171601830091823e-05]}, {'': [0.03140985519678306, -3.23815048849004e-18], 'false,true,true': [nan, 0.0], 'false': [-3.23815048849004e-18, nan], 'true': [0.03140985519678306, nan], 'false,true': [0.0, -2.6688053476566264e-18], 'true,true': [0.03140985519678306, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;true;genre(B, E).;true;true
0;false;genre(A, G).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(B, F).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(B, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;genre(B, E).;true;true
7;false,true;genre(B, H).;true;true
7;false;genre(A, G).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true,false;genre(A, E).;true;true
8;false;genre(A, F).;true;true
8;true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(A, E) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.14185106490048768;  // std dev = 5,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360636;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(B) )
%   | then return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( actor(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926096;  // std dev = 1,32e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.32071184716014944;  // std dev = 3,73e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return -0.09269127618926104;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839686;  // std dev = 2,28e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839686;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.0851847513883968;  // std dev = 1,67e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( actor(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.14852506917384894;  // std dev = 0,167, 35,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, E) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.09376496851023794;  // std dev = 0,098, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else return 0.12764417987732093;  // std dev = 0,075, 39,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420271;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06842697784420268;  // std dev = 2,79e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.14051560802483495;  // std dev = 0,000276, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then return -0.0767618176699542;  // std dev = 0,000746, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(A) )
%   | | then return -0.06419184008202618;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */


Results
   AUC ROC   = 0.995624
   AUC PR    = 0.743603
   CLL	      = -0.08064
   Precision = 0.80814 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.816446


Total learning time: 2.492 seconds
Total inference time: 3.32 seconds
AUC ROC: 0.995624


Results scoring model
   AUC ROC   = 0.998684
   AUC PR    = 0.897867
   CLL	      = -0.068927
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.507 seconds
Refined model CLL: -0.068927


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.995624
   AUC PR    = 0.743603
   CLL	      = -0.08064
   Precision = 0.80814 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.816446


Total learning time: 6.4959999999999996 seconds
Total inference time: 3.32 seconds
AUC ROC: 0.995624
Total revision time: 6.4959999999999996
Best scored revision CLL: -0.068927


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:37:17
{'Learning time': 6.4959999999999996, 'F1': 0.816446, 'parameter': {'Learning time': 1.206, 'F1': 0.816446, 'Recall': 0.824926, 'CLL': -0.120584, 'AUC PR': 0.704623, 'Inference time': 3.306, 'Precision': [0.80814, 0.5], 'AUC ROC': 0.974629}, 'Recall': 0.824926, 'CLL': -0.08064, 'AUC PR': 0.743603, 'Inference time': 3.32, 'Precision': [0.80814, 0.5], 'AUC ROC': 0.995624}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
0;true,false,true;author(J, I), venue(J, A).;false;false
0;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
0;true,true,false;author(G, E), venue(G, B).;false;false
0;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
0;false,true;title(M, L), venue(M, A).;false;false
0;true,true;haswordauthor(F, C).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,false;author(L, I), venue(L, B).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true,true,true;haswordauthor(G, C).;false;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;true
1;true,true;haswordtitle(F, C).;true;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,true;author(K, I), title(K, J).;false;false
2;false;haswordvenue(B, H), haswordauthor(I, H).;true;true
2;true,true,false;author(G, E), venue(G, B).;false;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
2;false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false,true;haswordtitle(J, H).;true;false
2;true,true;haswordauthor(F, C).;false;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
3;false,true,true;author(G, E), title(G, F).;false;false
3;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
3;false,true;haswordtitle(F, D).;true;false
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false,false,true;haswordauthor(J, H).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,false;haswordvenue(A, G), haswordauthor(H, G).;true;false
4;true,false,true;haswordtitle(I, C).;false;false
4;true,true,true;haswordtitle(F, C).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,true;haswordauthor(L, J).;false;false
4;true,true;haswordtitle(F, D).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordtitle(H, D).;false;false
5;false,true,true;samebib(F, G), venue(G, B).;false;false
5;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,true;author(F, E), venue(F, A).;true;true
5;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
5;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;haswordauthor(H, D).;false;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,false,true;title(K, J), venue(K, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;false,true,true;samebib(J, K), venue(K, B).;false;false
7;false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;true,true,false;author(G, E), venue(G, B).;false;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;false,true;title(J, I), venue(J, A).;true;false
7;true,true;haswordauthor(F, C).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,false;title(G, D), venue(G, A).;true;true
8;true,false,true;haswordvenue(B, C).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true;venue(E, B), title(E, D).;true;true
8;true,true;haswordvenue(B, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;false,true,true;samebib(I, J), venue(J, A).;false;false
9;false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,true,false;author(F, E), venue(F, B).;false;false
9;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
9;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
9;false,true;title(I, H), venue(I, B).;true;false
9;true,true;haswordvenue(B, D).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0.12841920536978263;  // std dev = 2,701, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048766;  // std dev = 6,50e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.4152941167215045;  // std dev = 0,438, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1254446385283914;  // std dev = 0,000, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.6286797174196755;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0.07250386485587898;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then return -0.11231637819360624;  // std dev = 6,84e-09, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.34579806000119306;  // std dev = 2,719, 60,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=45 */
%   else if ( movie(D, A) )
%   | then return -0.10159632948783616;  // std dev = 6,32e-09, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.249871439724014;  // std dev = 0,356, 62,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.09269127618926107;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18464549205125466;  // std dev = 2,854, 63,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08518475138839683;  // std dev = 4,93e-09, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0624980014599424;  // std dev = 3,310, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07877675473109169;  // std dev = 3,84e-09, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.2521266428211966;  // std dev = 0,986, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else return -0.07074632928124754;  // std dev = 2,560, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.23199821043769187;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.10438304520928382;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.06842697784420268;  // std dev = 2,79e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.09218222662997343;  // std dev = 2,713, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.06426126856993078;  // std dev = 0,004, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.976426
   AUC PR    = 0.717608
   CLL	      = -0.189442
   Precision = 0.808989 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.831169


Total learning time: 1.199 seconds
Total inference time: 2.719 seconds
AUC ROC: 0.976426


Results scoring model
   AUC ROC   = 0.967434
   AUC PR    = 0.770258
   CLL	      = -0.188027
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total scoring time: 1.238 seconds
Parameter learned model CLL: -0.188027


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'true,true': 'genre(B, E)', 'false': 'movie(F, B)'}, {'false,true,false': [6.5e-08, 64, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'true,true,true': [2.38e-07, 0, 35], 'false,false': [0.0, 0, 0], 'true,true,false': [2.701, 27, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false,true': 'genre(B, F)', 'false': 'movie(E, A)'}, {'false,true,false': [0.0, 91, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 4, 0], 'true,true': [0.438, 26, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true': 'genre(B, E)', 'false': 'movie(F, B)'}, {'true,true,false': [2.657, 24, 10], 'false,true': [6.84e-09, 73, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 35], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)'}, {'true': [2.719, 15, 45], 'false,true': [6.32e-09, 73, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'false,true': [0.0, 64, 0], 'true,true': [0.356, 17, 45], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'false,true,false': [4.93e-09, 68, 0], 'true': [2.854, 18, 45], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)', 'false': 'movie(D, B)'}, {'false,true,false': [3.84e-09, 66, 0], 'true': [3.31, 29, 45], 'false,true,true,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'false': 'movie(F, B)', 'true': 'movie(D, A)', 'false,true': 'genre(A, G)', 'true,true': 'genre(B, E)'}, {'false,true,false': [0.0, 78, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [2.56, 19, 10], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [0.986, 1, 35]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, F)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)', 'true,true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)'}, {'true,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 35], 'true,false,true,false': [0.0, 4, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 2, 0], 'true,false,false,false': [2.79e-08, 68, 0], 'true,false,false,true': [2.657, 24, 10], 'true,false,true,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(A, G)', 'false': 'movie(E, A)', 'true': 'movie(D, A)', 'false,true': 'genre(B, F)', 'true,true': 'movie(D, B)'}, {'false,true,false': [0.004, 61, 0], 'true,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [2.713, 19, 45]}]]
[{'': [0.2343750000000003, 6.728624391667616e-17], 'true': [0.2343750000000003, nan], 'false,true': [0.0, 6.591949208711867e-17], 'true,true': [1.6240976817373718e-15, 0.19722425127830545], 'false': [6.728624391667616e-17, nan]}, {'': [0.19167634344838688, -1.402386978473882e-17], 'true': [0.19167634344838688, nan], 'false,true': [0.0, -1.4640303621430636e-17], 'false': [-1.402386978473882e-17, nan]}, {'': [0.17961844203103042, 4.7146457210109385e-17], 'true': [0.17961844203103042, nan], 'true,true': [-3.0451831532575723e-16, 0.2076124567474051], 'false': [4.7146457210109385e-17, nan]}, {'': [0.12318679236921073, 4.258389683493751e-17], 'false': [4.258389683493751e-17, nan]}, {'': [0.1269546870553028, -1.734723475976807e-18], 'true': [0.1269546870553028, nan], 'false': [-1.734723475976807e-18, nan]}, {'': [0.12929383182576878, 2.44902137784961e-17], 'false,true': [nan, 2.44902137784961e-17], 'false': [2.44902137784961e-17, nan]}, {'': [0.14803167611818085, 1.1721971438562428e-06], 'false,true': [0.0, 1.5139404881252134e-17], 'false,true,true': [nan, 0.0], 'false': [1.1721971438562428e-06, nan]}, {'': [0.14151250546585903, 1.0908854831839205e-06], 'false,true,true': [nan, 0.0], 'false': [1.0908854831839205e-06, nan], 'true': [0.14151250546585903, nan], 'false,true': [0.0, -4.981769982292369e-18], 'true,true': [0.02700617283950615, 0.2259215219976219]}, {'': [0.0675557838846019, nan], 'true,false': [0.0, 0.06949144975588198], 'true,false,true': [nan, 0.0], 'true,false,false': [0.2076124567474049, 1.1428766429964846e-17], 'true,true,false': [nan, 0.0], 'true': [0.004614952931186781, 0.06687099562355013], 'true,true': [-8.247371040072592e-17, 0.0]}, {'': [0.11497335362871143, 2.801855116128947e-07], 'false,true,true': [nan, 0.0], 'false': [2.801855116128947e-07, nan], 'true': [0.11497335362871143, nan], 'false,true': [0.0, 2.8921889595995743e-07], 'true,true': [0.11497335362871143, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;true;genre(B, E).;true;true
0;false;genre(A, G).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(B, F).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(B, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, G).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
8;false;genre(A, F).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.8581489350995115;  // std dev = 2,38e-07, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then return -0.1418510649004877;  // std dev = 2,79e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( genre(A, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048766;  // std dev = 6,32e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839133;  // std dev = 2,11e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.5553664367462844;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( female(B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601494;  // std dev = 5,27e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.3207118471601494;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1578687069282154;  // std dev = 0,553, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09269127618926104;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08024099667727076;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.25517224256948956;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.0851847513883968;  // std dev = 2,79e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839685;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08518475138839682;  // std dev = 5,27e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.08518475138839686;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0745149560233208;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06953636954851436;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.17709649774527741;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333702;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367083;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.06842697784420271;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.0684269778442027;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.0682754792076558;  // std dev = 0,006, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return 0.13263741846295488;  // std dev = 0,211, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06420094139504663;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06419928661086109;  // std dev = 1,16e-05, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.06420094139504663;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06113168513738438;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.1346202178115583;  // std dev = 0,001, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.13443440332563494;  // std dev = 0,000907, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(B, D) )
%   | then return -0.06419184008202618;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(A), actor(B) )
%   | | then return -0.06420094139504652;  // std dev = 2,95e-09, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.0668333852941017;  // std dev = 0,012, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079491
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.622 seconds
Total inference time: 3.585 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066044
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.449 seconds
Refined model CLL: -0.066044


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079491
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 6.508 seconds
Total inference time: 3.585 seconds
AUC ROC: 1.0
Total revision time: 6.508
Best scored revision CLL: -0.066044


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:37:30
{'Learning time': 6.508, 'F1': 0.852086, 'parameter': {'Learning time': 1.199, 'F1': 0.831169, 'Recall': 0.854599, 'CLL': -0.189442, 'AUC PR': 0.717608, 'Inference time': 2.719, 'Precision': [0.808989, 0.5], 'AUC ROC': 0.976426}, 'Recall': 1.0, 'CLL': -0.079491, 'AUC PR': 1.0, 'Inference time': 3.585, 'Precision': [0.742291, 0.5], 'AUC ROC': 1.0}


