Starting experiment #2 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F) )
%   | | | then return 0.8055173561521439;  // std dev = 0,973, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.7043027812533584;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(G, A) )
%   | | then if ( publication(G, H), professor(H) )
%   | | | then return 0.1914822684328457;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.7331489350995123;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( publication(I, B), ta(J, A, K) )
%   | | | then return 0.6706489350995116;  // std dev = 2,208, 32,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | | | else return 0.4885837177082074;  // std dev = 3,274, 46,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=29 */
%   else return -0.14185106490048813;  // std dev = 0,000, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(D, B) )
%   | | then if ( ta(E, D, F) )
%   | | | then return 0.5072901785951834;  // std dev = 0,869, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.26949634141628775;  // std dev = 1,387, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( tempadvisedby(G, B), ta(H, A, I) )
%   | | | then return 0.5198011437642657;  // std dev = 2,428, 34,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.6784712886128115;  // std dev = 2,250, 72,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=66 */
%   | else if ( projectmember(J, B) )
%   | | then return 0.8104777729400757;  // std dev = 0,056, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(K, B), ta(L, A, M) )
%   | | | then return 0.4695685335095849;  // std dev = 0,836, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20301539992819567;  // std dev = 1,852, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   else return -0.12544463852839152;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #neg=207 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.635162325400666;  // std dev = 0,099, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( publication(C, G), ta(H, G, I) )
%   | | | then return 0.34475433976823555;  // std dev = 1,171, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.5432947399170871;  // std dev = 0,994, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else if ( publication(J, A), publication(K, B) )
%   | | then if ( tempadvisedby(L, B), ta(M, L, N) )
%   | | | then return -0.29128670803961304;  // std dev = 0,088, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.14857375043669432;  // std dev = 2,323, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( publication(P, B) )
%   | | | then return 0.325990117293411;  // std dev = 3,871, 69,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | | | else return 0.24366350735715023;  // std dev = 2,519, 27,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   else return -0.11231637819360643;  // std dev = 4,71e-08, 191,000 (wgt'ed) examples reached here.  /* #neg=191 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( publication(F, B) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.4216433953290568;  // std dev = 0,674, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.5253587074746696;  // std dev = 0,978, 20,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return 0.2489639648823697;  // std dev = 1,006, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( projectmember(H, B) )
%   | | then return 0.6173543502051986;  // std dev = 0,062, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(I, B), publication(I, A) )
%   | | | then return 0.3591577777068078;  // std dev = 1,583, 26,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return 0.24253569841150274;  // std dev = 3,954, 74,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=46 */
%   else return -0.10159632948783648;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( publication(G, D) )
%   | | | then return 0.22161245575427252;  // std dev = 0,952, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3508376914325111;  // std dev = 0,026, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3829882105483941;  // std dev = 0,190, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), professor(I) )
%   | | | then return 0.02392759479805914;  // std dev = 2,350, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.4077110980441657;  // std dev = 0,875, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( ta(J, A, K), hasposition(B, L) )
%   | | | then return 0.2899367961073195;  // std dev = 2,215, 33,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | | else return 0.20749074541896992;  // std dev = 2,904, 41,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=28 */
%   else return -0.09269127618926098;  // std dev = 0,000, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.29436916940083463;  // std dev = 0,208, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, E) )
%   | | | then return 0.040268727403163965;  // std dev = 0,939, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.28558552222476213;  // std dev = 2,078, 35,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=30 */
%   | | else if ( publication(I, B), publication(J, A) )
%   | | | then return -0.10731699447967127;  // std dev = 1,527, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.15414046965608558;  // std dev = 3,359, 53,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=35 */
%   else return -0.08518475138839679;  // std dev = 2,98e-08, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( publication(H, A), publication(H, B) )
%   | | | then return 0.2679347689416678;  // std dev = 0,107, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.15956789100619873;  // std dev = 1,472, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( tempadvisedby(I, B), publication(J, A) )
%   | | | then return 0.0975476958295031;  // std dev = 2,041, 34,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=24 */
%   | | | else return 0.20592105501185293;  // std dev = 3,058, 76,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=63 */
%   | else if ( publication(K, B), publication(K, A) )
%   | | then return 0.2139069278375059;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(L, B) )
%   | | | then return -0.1652600748940646;  // std dev = 1,471, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.10227296950571636;  // std dev = 1,232, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( publication(M, A) )
%   | then return -0.08074415290982982;  // std dev = 0,243, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else return -0.07494866743943872;  // std dev = 0,085, 75,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=1 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), ta(D, A, E) )
%   | then if ( publication(C, B) )
%   | | then if ( ta(D, F, G), tempadvisedby(F, H) )
%   | | | then return 0.210052047520569;  // std dev = 0,000153, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.03790111175253061;  // std dev = 1,300, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( publication(C, I), professor(I) )
%   | | | then return -0.11941249878036049;  // std dev = 1,763, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.12329985601837083;  // std dev = 0,871, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( tempadvisedby(J, B) )
%   | | then if ( publication(K, J), publication(K, B) )
%   | | | then return 0.3856378388750459;  // std dev = 0,259, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07044780942534559;  // std dev = 3,017, 66,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=48 */
%   | | else if ( ta(L, A, M) )
%   | | | then return 0.16055065021493717;  // std dev = 1,284, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.2746154665377787;  // std dev = 1,507, 30,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   else return -0.07327375579936414;  // std dev = 0,003, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( tempadvisedby(F, B), publication(G, F) )
%   | | then if ( ta(H, A, I) )
%   | | | then return -0.18218266602829825;  // std dev = 1,470, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.06969373786515574;  // std dev = 1,304, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( ta(J, A, K), publication(L, A) )
%   | | | then return 0.263503288615958;  // std dev = 0,874, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.11536987164115486;  // std dev = 3,215, 86,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=69 */
%   | else if ( publication(M, B), publication(M, A) )
%   | | then return 0.1610895364263896;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(N, B) )
%   | | | then return -0.5037570557907175;  // std dev = 0,282, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07812104268224358;  // std dev = 1,890, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   else if ( professor(B) )
%   | then return -0.09257221709830421;  // std dev = 0,180, 24,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | else return -0.06842168517281834;  // std dev = 0,002, 167,000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, D), publication(E, B) )
%   | | | then return 0.2289243010417308;  // std dev = 0,092, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1741231205448061;  // std dev = 0,108, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.13432451569373083;  // std dev = 0,041, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(F, A), publication(G, B) )
%   | | then if ( publication(F, H), tempadvisedby(I, H) )
%   | | | then return -0.2310153741866181;  // std dev = 1,760, 20,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.20042570475219285;  // std dev = 0,801, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | | then return 0.3932668395754503;  // std dev = 0,104, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.01779990728702246;  // std dev = 3,989, 84,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=57 */
%   else return -0.06407249508987403;  // std dev = 0,006, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;true;false
0;true,true,true;ta(E, D, F).;false;false
0;true,false;publication(G, A).;true;true
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;publication(C, D), tempadvisedby(D, B).;true;true
1;true,true,true;ta(E, D, F).;false;false
1;true,false;projectmember(J, B).;false;true
1;true;publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
2;true,false;publication(J, A), publication(K, B).;true;true
2;true;publication(C, B), publication(C, A).;true;true
2;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
2;true,true,false;publication(C, G), ta(H, G, I).;false;false
2;true,false,false;publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(F, B).;true;false
3;true,true,true;publication(G, A).;false;false
3;true,false;projectmember(H, B).;false;true
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,false,false;publication(I, B), publication(I, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
4;true,true,true;publication(G, D).;false;false
4;true,false;publication(H, A).;true;true
4;true;publication(C, B), publication(C, A).;true;true
4;true,false,true;publication(H, I), professor(I).;false;false
4;true,false,false;ta(J, A, K), hasposition(B, L).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,false;ta(D, A, E), publication(F, B).;true;true
5;true;publication(C, B), publication(C, A).;false;true
5;true,false,true;tempadvisedby(G, B), ta(H, G, E).;false;false
5;true,false,false;publication(I, B), publication(J, A).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(H, A), publication(H, B).;false;false
6;true,false;publication(K, B), publication(K, A).;false;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;false;publication(M, A).;false;false
6;true,true,false;tempadvisedby(I, B), publication(J, A).;false;false
6;true,false,false;publication(L, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,true;publication(C, B).;true;true
7;true,true,true;ta(D, F, G), tempadvisedby(F, H).;false;false
7;true,false;tempadvisedby(J, B).;true;true
7;true;publication(C, A), ta(D, A, E).;true;true
7;true,false,true;publication(K, J), publication(K, B).;false;false
7;true,true,false;publication(C, I), professor(I).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,false;publication(M, B), publication(M, A).;false;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;false;professor(B).;false;false
8;true,true,false;ta(J, A, K), publication(L, A).;false;false
8;true,false,false;tempadvisedby(N, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;tempadvisedby(D, B).;true;false
9;true,true,true;publication(E, D), publication(E, B).;false;false
9;true,false;publication(F, A), publication(G, B).;true;true
9;true;publication(C, A), publication(C, B).;true;true
9;true,false,true;publication(F, H), tempadvisedby(I, H).;false;false
9;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 7,88e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.6765114774275978;  // std dev = 0,186, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.5659484246991118;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.22005608158426715;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 8,82e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.4043733969316169;  // std dev = 0,848, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.33070852950930185;  // std dev = 1,23e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.253312609905409;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926083;  // std dev = 7,45e-08, 129,000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2619823193653978;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, B) )
%   | | then return -0.20844322889530512;  // std dev = 4,56e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,48e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.21455689373868703;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.1761317820524735;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, A) )
%   | then return -0.07877675473109157;  // std dev = 6,50e-08, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18060854582195596;  // std dev = 4,56e-09, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.15201162961577536;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then return 0.1274508428325658;  // std dev = 0,085, 62,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420265;  // std dev = 5,16e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.13939915502834838;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.14887263005497847;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071363
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.554 seconds
Total inference time: 5.442 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066042
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.051 seconds
Parameter learned model CLL: -0.066042


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [7.88e-08, 112, 0], 'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 96, 0], 'true,true,true': [0.186, 3, 56], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,true': [0.0, 5, 0], 'false': [8.82e-08, 111, 0], 'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 116, 0], 'true,true,true': [0.848, 2, 56], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [1.23e-07, 0, 56], 'false': [7.45e-08, 129, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [4.56e-09, 7, 0], 'false': [5.48e-08, 97, 0], 'true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'false': 'movie(H, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'false,true': [6.5e-08, 112, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 56], 'true,true,true,false': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [4.56e-09, 0, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 116, 0], 'true,true,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'false': 'director(B)', 'true,true': 'movie(E, F)'}, {'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [0.085, 6, 56], 'true,true,false': [0.0, 0, 0], 'false,false': [5.16e-08, 107, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A), movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E), movie(D, B)', 'true,false,true': 'movie(F, H)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false': [0.0, 114, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0]}]]
[{'': [0.07524858908895435, 5.551115123125783e-17], 'true,false': [-2.7755575615628915e-18, nan], 'true': [-1.2688263138573217e-16, -2.7755575615628915e-18], 'true,false,true': [-2.7755575615628915e-18, nan]}, {'': [0.03445358635281509, -1.3877787807814457e-17], 'true': [0.03445358635281509, nan], 'true,true': [0.03445358635281509, nan]}, {'': [0.04648881039811201, 7.001406461600086e-17], 'true,false': [0.0, nan], 'true': [-8.881784197001252e-16, 0.0], 'true,true': [-8.881784197001252e-16, nan]}, {'': [0.012389497846034596, -1.5313421029312504e-17], 'true': [0.012389497846034596, nan], 'true,true': [0.012389497846034596, nan]}, {'': [0.021222798568736174, 4.3031900179269636e-17], 'true,false': [0.0, nan], 'true': [2.6962559169468085e-16, 0.0], 'true,true': [2.6962559169468085e-16, nan], 'true,false,true': [0.0, nan]}, {'': [0.021856809526556272, 3.0903115118432194e-17], 'true,false': [1.586032892321652e-17, nan], 'true': [-1.189524669241239e-16, 1.586032892321652e-17]}, {'': [0.00508187153265236, 3.766828119263924e-17], 'true': [0.00508187153265236, nan], 'false': [3.766828119263924e-17, nan], 'true,true': [0.00508187153265236, nan], 'true,true,true': [0.0, 0.0]}, {'': [0.006884029046734138, -2.8712664429960945e-18], 'true': [0.006884029046734138, nan], 'true,true': [2.3790493384824782e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.007292302626823609, 2.490219868318108e-17], 'true': [0.007292302626823609, nan], 'false': [nan, 2.490219868318108e-17], 'true,true': [0.007292302626823609, nan]}, {'': [0.005170705373563454, -1.7529837230923523e-17], 'true,false': [0.0, nan], 'true': [-5.947623346206196e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-5.947623346206196e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(G, A), movie(G, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048768;  // std dev = 6,32e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839136;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360618;  // std dev = 8,82e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.39897394438523337;  // std dev = 0,096, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.40020992037010517;  // std dev = 0,093, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.10159632948783633;  // std dev = 0,000, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3246238383692052;  // std dev = 0,001, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926089;  // std dev = 6,41e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.2579623064081611;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.2577257894448659;  // std dev = 3,65e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.1443515347945705;  // std dev = 0,000139, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0851847513883968;  // std dev = 6,14e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.21172664857194542;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.2115598884459385;  // std dev = 3,33e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.12739777173937702;  // std dev = 0,000112, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109155;  // std dev = 6,66e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.17853927509220358;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.17841718166115597;  // std dev = 3,16e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( female(A) )
%   | | | then return -0.11381136556455931;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11393608356348665;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333713;  // std dev = 0,000, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.15383747060173295;  // std dev = 2,36e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.15374499277225417;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.10292974146388041;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420265;  // std dev = 4,71e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13486021849967575;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13478811600726462;  // std dev = 2,98e-08, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.09374367241475783;  // std dev = 7,71e-05, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202626;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067185
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.804 seconds
Total inference time: 2.337 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06433
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.384 seconds
Refined model CLL: -0.06433


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067185
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.793000000000001 seconds
Total inference time: 2.337 seconds
AUC ROC: 1.0
Total revision time: 6.793000000000001
Best scored revision CLL: -0.06433


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 01:27:39
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 1.554, 'Inference time': 5.442, 'CLL': -0.071363, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 6.793000000000001, 'Inference time': 2.337, 'CLL': -0.067185, 'AUC ROC': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;true;false
0;true,true,true;ta(E, D, F).;false;false
0;true,false;publication(G, A).;true;true
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;publication(C, D), tempadvisedby(D, B).;true;true
1;true,true,true;ta(E, D, F).;false;false
1;true,false;projectmember(J, B).;false;true
1;true;publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
2;true,false;publication(J, A), publication(K, B).;true;true
2;true;publication(C, B), publication(C, A).;true;true
2;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
2;true,true,false;publication(C, G), ta(H, G, I).;false;false
2;true,false,false;publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(F, B).;true;false
3;true,true,true;publication(G, A).;false;false
3;true,false;projectmember(H, B).;false;true
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,false,false;publication(I, B), publication(I, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
4;true,true,true;publication(G, D).;false;false
4;true,false;publication(H, A).;true;true
4;true;publication(C, B), publication(C, A).;true;true
4;true,false,true;publication(H, I), professor(I).;false;false
4;true,false,false;ta(J, A, K), hasposition(B, L).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,false;ta(D, A, E), publication(F, B).;true;true
5;true;publication(C, B), publication(C, A).;false;true
5;true,false,true;tempadvisedby(G, B), ta(H, G, E).;false;false
5;true,false,false;publication(I, B), publication(J, A).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(H, A), publication(H, B).;false;false
6;true,false;publication(K, B), publication(K, A).;false;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;false;publication(M, A).;false;false
6;true,true,false;tempadvisedby(I, B), publication(J, A).;false;false
6;true,false,false;publication(L, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,true;publication(C, B).;true;true
7;true,true,true;ta(D, F, G), tempadvisedby(F, H).;false;false
7;true,false;tempadvisedby(J, B).;true;true
7;true;publication(C, A), ta(D, A, E).;true;true
7;true,false,true;publication(K, J), publication(K, B).;false;false
7;true,true,false;publication(C, I), professor(I).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,false;publication(M, B), publication(M, A).;false;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;false;professor(B).;false;false
8;true,true,false;ta(J, A, K), publication(L, A).;false;false
8;true,false,false;tempadvisedby(N, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;tempadvisedby(D, B).;true;false
9;true,true,true;publication(E, D), publication(E, B).;false;false
9;true,false;publication(F, A), publication(G, B).;true;true
9;true;publication(C, A), publication(C, B).;true;true
9;true,false,true;publication(F, H), tempadvisedby(I, H).;false;false
9;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.6779200654532815;  // std dev = 0,183, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839136;  // std dev = 0,000, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.5656023718272213;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.22029793485167753;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 8,82e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.32058807326157507;  // std dev = 1,923, 70,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.3492677503643666;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.23800635132273712;  // std dev = 1,29e-08, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 4,47e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2745762043289851;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B) )
%   | | then return -0.19755485381984803;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 5,27e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.22337538765021847;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.16809316666984062;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, A) )
%   | then return -0.07877675473109155;  // std dev = 6,75e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.18702184855317247;  // std dev = 1,05e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1458790157139985;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then return 0.14602622403283905;  // std dev = 0,062, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420264;  // std dev = 5,27e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.14154375011123496;  // std dev = 5,16e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.14589735858063793;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202626;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070857
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.396 seconds
Total inference time: 4.787 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067062
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.53 seconds
Parameter learned model CLL: -0.067062


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [8.69e-08, 97, 0], 'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 105, 0], 'true,true,true': [0.183, 3, 58], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,true': [0.0, 4, 0], 'false': [8.82e-08, 114, 0], 'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 108, 0], 'true,true,true': [1.923, 12, 58], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'false': [4.47e-08, 106, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [1.29e-08, 8, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 6, 0], 'false': [5.27e-08, 104, 0], 'true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'false': 'movie(H, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'false,true': [6.75e-08, 121, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 58], 'true,true,true,false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [1.05e-08, 0, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 119, 0], 'true,true,false,true': [0.0, 7, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'false': 'director(B)', 'true,true': 'movie(E, F)'}, {'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [0.062, 3, 58], 'true,true,false': [0.0, 0, 0], 'false,false': [5.27e-08, 111, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A), movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E), movie(D, B)', 'true,false,true': 'movie(F, H)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [5.16e-08, 0, 58], 'false': [0.0, 107, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [5.27e-09, 7, 0], 'true,false,false': [0.0, 0, 0]}]]
[{'': [0.08496093749999956, 7.783006770568107e-17], 'true,false': [-6.938893903907228e-18, nan], 'true': [-3.675221047035001e-16, -6.938893903907228e-18], 'true,false,true': [-6.938893903907228e-18, nan]}, {'': [0.033382492117425555, -8.458842092382146e-18], 'true': [0.033382492117425555, nan], 'true,true': [0.033382492117425555, nan]}, {'': [0.03727687714693329, 6.817158923136926e-17], 'true,false': [0.0, nan], 'true': [-5.512831570552502e-16, 0.0], 'true,true': [-5.512831570552502e-16, nan]}, {'': [0.05284272517535803, -2.05596856412066e-18], 'true': [0.05284272517535803, nan], 'true,true': [0.05284272517535803, nan]}, {'': [0.03673768684980505, 1.885284381438945e-17], 'true,false': [2.0816681711721685e-17, nan], 'true': [-1.2250736823450003e-16, 2.0816681711721685e-17], 'true,false,true': [2.0816681711721685e-17, nan], 'true,true': [-1.2250736823450003e-16, nan]}, {'': [0.01893845023240244, 2.6688053476566264e-17], 'true,false': [0.0, nan], 'true': [-9.188052617587502e-17, 0.0]}, {'': [0.011197231649336555, 3.761912728068712e-17], 'true': [0.011197231649336555, nan], 'false': [3.761912728068712e-17, nan], 'true,true': [0.011197231649336555, nan], 'true,true,true': [-2.2970131543968756e-17, 0.0]}, {'': [0.010649498718227499, -1.865921049790179e-18], 'true': [0.010649498718227499, nan], 'true,true': [1.148506577198438e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.0039017125344982615, 2.5005023077143166e-17], 'true': [0.0039017125344982615, nan], 'false': [nan, 2.5005023077143166e-17], 'true,true': [0.0039017125344982615, nan]}, {'': [0.007939571770935258, -1.6601465788787386e-17], 'true,false': [3.96508223080413e-18, nan], 'true': [4.594026308793751e-17, 3.96508223080413e-18], 'true,true': [4.594026308793751e-17, nan], 'true,false,true': [3.96508223080413e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(G, A), movie(G, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839133;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1123163781936062;  // std dev = 8,02e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.3915580884760029;  // std dev = 0,113, 40,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else return -0.1015963294878364;  // std dev = 0,000, 127,000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3244336656668728;  // std dev = 0,021, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14438355443128903;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926083;  // std dev = 7,45e-08, 131,000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2577121574311515;  // std dev = 0,018, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12689467808345198;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0851847513883968;  // std dev = 5,96e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.21155144297487796;  // std dev = 0,016, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11355114846292393;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109155;  // std dev = 6,91e-08, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.16256635058994937;  // std dev = 0,060, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.14693739167363284;  // std dev = 0,090, 43,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0732462257633371;  // std dev = 0,000, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15717662560010562;  // std dev = 0,020, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1165055619503941;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420265;  // std dev = 5,16e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13745909024419284;  // std dev = 0,018, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10662825374554108;  // std dev = 0,006, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06419184008202626;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068158
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.319 seconds
Total inference time: 2.134 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065296
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.594 seconds
Refined model CLL: -0.065296


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068158
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.839 seconds
Total inference time: 2.134 seconds
AUC ROC: 1.0
Total revision time: 5.839
Best scored revision CLL: -0.065296


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 01:27:52
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 1.396, 'Inference time': 4.787, 'CLL': -0.070857, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 5.839, 'Inference time': 2.134, 'CLL': -0.068158, 'AUC ROC': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;true;false
0;true,true,true;ta(E, D, F).;false;false
0;true,false;publication(G, A).;true;true
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;publication(C, D), tempadvisedby(D, B).;true;true
1;true,true,true;ta(E, D, F).;false;false
1;true,false;projectmember(J, B).;false;true
1;true;publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
2;true,false;publication(J, A), publication(K, B).;true;true
2;true;publication(C, B), publication(C, A).;true;true
2;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
2;true,true,false;publication(C, G), ta(H, G, I).;false;false
2;true,false,false;publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(F, B).;true;false
3;true,true,true;publication(G, A).;false;false
3;true,false;projectmember(H, B).;false;true
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,false,false;publication(I, B), publication(I, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
4;true,true,true;publication(G, D).;false;false
4;true,false;publication(H, A).;true;true
4;true;publication(C, B), publication(C, A).;true;true
4;true,false,true;publication(H, I), professor(I).;false;false
4;true,false,false;ta(J, A, K), hasposition(B, L).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,false;ta(D, A, E), publication(F, B).;true;true
5;true;publication(C, B), publication(C, A).;false;true
5;true,false,true;tempadvisedby(G, B), ta(H, G, E).;false;false
5;true,false,false;publication(I, B), publication(J, A).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(H, A), publication(H, B).;false;false
6;true,false;publication(K, B), publication(K, A).;false;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;false;publication(M, A).;false;false
6;true,true,false;tempadvisedby(I, B), publication(J, A).;false;false
6;true,false,false;publication(L, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,true;publication(C, B).;true;true
7;true,true,true;ta(D, F, G), tempadvisedby(F, H).;false;false
7;true,false;tempadvisedby(J, B).;true;true
7;true;publication(C, A), ta(D, A, E).;true;true
7;true,false,true;publication(K, J), publication(K, B).;false;false
7;true,true,false;publication(C, I), professor(I).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,false;publication(M, B), publication(M, A).;false;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;false;professor(B).;false;false
8;true,true,false;ta(J, A, K), publication(L, A).;false;false
8;true,false,false;tempadvisedby(N, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;tempadvisedby(D, B).;true;false
9;true,true,true;publication(E, D), publication(E, B).;false;false
9;true,false;publication(F, A), publication(G, B).;true;true
9;true;publication(C, A), publication(C, B).;true;true
9;true,false,true;publication(F, H), tempadvisedby(I, H).;false;false
9;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 8,09e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048766;  // std dev = 6,99e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048824;  // std dev = 0,000, 274,000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5284484616090168;  // std dev = 0,353, 230,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839183;  // std dev = 0,000, 285,000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.6019034779654211;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.19569793115690823;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360689;  // std dev = 0,000, 315,000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.2987357088450397;  // std dev = 4,125, 237,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783658;  // std dev = 0,000, 310,000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.38054477368401585;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.21242580200133088;  // std dev = 7,30e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926065;  // std dev = 0,000, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.29571616503363224;  // std dev = 1,74e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B) )
%   | | then return -0.17905095282898636;  // std dev = 6,45e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8,43e-08, 295,000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.23803234812754684;  // std dev = 1,52e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.15422489711668094;  // std dev = 2,58e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, A) )
%   | then return -0.04610452790917293;  // std dev = 2,169, 392,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.2110406714368961;  // std dev = 0,022, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.1406553128701406;  // std dev = 0,053, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07549521382912322;  // std dev = 0,000, 268,000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then return 0.10524248972489089;  // std dev = 0,117, 164,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.030628064361681123;  // std dev = 1,661, 117,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=49 */
%   | else return -0.07039194707087403;  // std dev = 0,000, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.16653368285562606;  // std dev = 0,311, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.13262131496173693;  // std dev = 0,014, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06674524499053909;  // std dev = 0,039, 324,000 (wgt'ed) examples reached here.  /* #neg=324 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068069
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.132 seconds
Total inference time: 4.065 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078842
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.068 seconds
Parameter learned model CLL: -0.078842


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 274, 0], 'true,true': [8.09e-08, 0, 178], 'true,false,true,true': [6.99e-08, 70, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 285, 0], 'true,true,true': [0.353, 52, 178], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,true': [0.0, 51, 0], 'false': [0.0, 315, 0], 'true,true,true': [0.0, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 310, 0], 'true,true,true': [4.125, 59, 178], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [3.77e-07, 0, 178], 'false': [0.0, 286, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [7.3e-08, 63, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [6.45e-09, 54, 0], 'false': [8.43e-08, 295, 0], 'true,true': [1.74e-07, 0, 178], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'false': 'movie(H, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'false,true': [2.169, 343, 49], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [1.52e-07, 0, 129], 'true,true,true,false': [2.58e-08, 36, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.022, 0, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 268, 0], 'true,true,false,true': [0.053, 67, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'false': 'director(B)', 'true,true': 'movie(E, F)'}, {'true,false': [0.0, 0, 0], 'false,true': [1.661, 68, 49], 'true,true,true': [0.117, 35, 129], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 287, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A), movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E), movie(D, B)', 'true,false,true': 'movie(F, H)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.311, 0, 178], 'false': [0.039, 324, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.014, 55, 0], 'true,false,false': [0.0, 0, 0]}]]
[{'': [0.20258844953174343, -1.3290261024709904e-16], 'true,false': [6.97854472621527e-17, nan], 'true': [6.706246045376226e-15, 6.97854472621527e-17], 'true,false,true': [6.97854472621527e-17, nan]}, {'': [0.12490989715269404, -5.921189464667501e-17], 'true': [0.12490989715269404, nan], 'true,true': [0.12490989715269404, nan]}, {'': [0.11012629765100401, -1.0009629809318872e-16], 'true,false': [-2.6122894697062506e-17, nan], 'true': [-2.5547603982385624e-15, -2.6122894697062506e-17], 'true,true': [-2.5547603982385624e-15, nan]}, {'': [0.07180863282019835, -5.730183352904034e-17], 'true': [0.07180863282019835, nan], 'true,true': [0.07180863282019835, nan]}, {'': [0.06788795919648931, 0.0], 'true,false': [8.458842092382145e-17, nan], 'true': [7.983626244495507e-16, 8.458842092382145e-17], 'true,true': [7.983626244495507e-16, nan], 'true,false,true': [8.458842092382145e-17, nan]}, {'': [0.04025307448998216, 2.4086194432545768e-17], 'true,false': [4.11193712824132e-17, nan], 'true': [1.6965205769552953e-16, 4.11193712824132e-17]}, {'': [0.026246190137666447, 0.012001300017635762], 'true': [0.026246190137666447, nan], 'false': [0.012001300017635743, nan], 'true,true': [0.026246190137666447, nan], 'true,true,true': [1.7901270474576167e-16, 1.850371707708594e-17]}, {'': [0.024933614914689574, -3.1483936519220856e-17], 'true': [0.024933614914689574, nan], 'true,true': [0.0004774734451938067, 4.202854797158677e-05], 'true,true,false': [4.202854797158677e-05, nan]}, {'': [0.013709841525142014, 0.008925779351973584], 'true': [0.013709841525142014, nan], 'false': [0.02357101788859702, -1.4699817050786044e-17], 'true,true': [0.013709841525142014, nan]}, {'': [0.016555275787369577, 4.669895895374017e-06], 'true,false': [3.5824958248750508e-06, nan], 'true': [0.000544437720414237, 3.5824958248750508e-06], 'true,true': [0.000544437720414237, nan], 'true,false,true': [3.5824958248750508e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(G, A), movie(G, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else return -0.1418510649004881;  // std dev = 0,000, 298,000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.12544463852839188;  // std dev = 0,000, 312,000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 5,16e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.11231637819360686;  // std dev = 0,000, 304,000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783619;  // std dev = 4,71e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.10159632948783658;  // std dev = 0,000, 297,000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.09269127618926061;  // std dev = 4,71e-08, 307,000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 2,36e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else return -0.08518475138839679;  // std dev = 8,16e-08, 306,000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.20975771563253537;  // std dev = 2,21e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.07877675473109179;  // std dev = 5,27e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( female(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325361;  // std dev = 4,21e-08, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.07265632657186304;  // std dev = 0,755, 330,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.11398488677671983;  // std dev = 0,109, 119,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=89 */
%   | | else return 0.11981828577126304;  // std dev = 0,109, 117,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07366277456037379;  // std dev = 6,66e-08, 305,000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.16059138762315284;  // std dev = 0,004, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.08155216278510899;  // std dev = 0,001, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.16694231370970994;  // std dev = 0,100, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.0687914663258001;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.0744068067434256;  // std dev = 0,043, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.06879146632580001;  // std dev = 3,94e-08, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1414588392450044;  // std dev = 0,095, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.0759027600142808;  // std dev = 0,003, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.06448515913112894;  // std dev = 0,002, 276,000 (wgt'ed) examples reached here.  /* #neg=276 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064426
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.43 seconds
Total inference time: 1.881 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067763
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.495 seconds
Refined model CLL: -0.067763


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064426
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.125 seconds
Total inference time: 1.881 seconds
AUC ROC: 1.0
Total revision time: 9.125
Best scored revision CLL: -0.067763


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:28:08
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 3.132, 'Inference time': 4.065, 'CLL': -0.068069, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 9.125, 'Inference time': 1.881, 'CLL': -0.064426, 'AUC ROC': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;true;false
0;true,true,true;ta(E, D, F).;false;false
0;true,false;publication(G, A).;true;true
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;publication(C, D), tempadvisedby(D, B).;true;true
1;true,true,true;ta(E, D, F).;false;false
1;true,false;projectmember(J, B).;false;true
1;true;publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
2;true,false;publication(J, A), publication(K, B).;true;true
2;true;publication(C, B), publication(C, A).;true;true
2;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
2;true,true,false;publication(C, G), ta(H, G, I).;false;false
2;true,false,false;publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(F, B).;true;false
3;true,true,true;publication(G, A).;false;false
3;true,false;projectmember(H, B).;false;true
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,false,false;publication(I, B), publication(I, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
4;true,true,true;publication(G, D).;false;false
4;true,false;publication(H, A).;true;true
4;true;publication(C, B), publication(C, A).;true;true
4;true,false,true;publication(H, I), professor(I).;false;false
4;true,false,false;ta(J, A, K), hasposition(B, L).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,false;ta(D, A, E), publication(F, B).;true;true
5;true;publication(C, B), publication(C, A).;false;true
5;true,false,true;tempadvisedby(G, B), ta(H, G, E).;false;false
5;true,false,false;publication(I, B), publication(J, A).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(H, A), publication(H, B).;false;false
6;true,false;publication(K, B), publication(K, A).;false;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;false;publication(M, A).;false;false
6;true,true,false;tempadvisedby(I, B), publication(J, A).;false;false
6;true,false,false;publication(L, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,true;publication(C, B).;true;true
7;true,true,true;ta(D, F, G), tempadvisedby(F, H).;false;false
7;true,false;tempadvisedby(J, B).;true;true
7;true;publication(C, A), ta(D, A, E).;true;true
7;true,false,true;publication(K, J), publication(K, B).;false;false
7;true,true,false;publication(C, I), professor(I).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,false;publication(M, B), publication(M, A).;false;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;false;professor(B).;false;false
8;true,true,false;ta(J, A, K), publication(L, A).;false;false
8;true,false,false;tempadvisedby(N, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;tempadvisedby(D, B).;true;false
9;true,true,true;publication(E, D), publication(E, B).;false;false
9;true,false;publication(F, A), publication(G, B).;true;true
9;true;publication(C, A), publication(C, B).;true;true
9;true,false,true;publication(F, H), tempadvisedby(I, H).;false;false
9;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3,33e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,74e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.6349816071370202;  // std dev = 0,253, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283914;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.576120947942748;  // std dev = 2,11e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.21301116861962832;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 6,32e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.394805239775929;  // std dev = 1,027, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783619;  // std dev = 5,58e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.33982891306615315;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.24507106549478236;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 1,05e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2681781438231177;  // std dev = 6,66e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then return -0.20259618592130016;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 2,79e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.21890417051136635;  // std dev = 4,21e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.17182575842095463;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, A) )
%   | then return -0.07877675473109161;  // std dev = 5,05e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1837764867671349;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.14873359245049314;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then return 0.123832518522305;  // std dev = 0,093, 51,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420267;  // std dev = 3,94e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.14202437860057507;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.145608317881515;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06423737919774858;  // std dev = 0,004, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070213
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.326 seconds
Total inference time: 5.561 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068509
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.605 seconds
Parameter learned model CLL: -0.068509


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [7.74e-08, 82, 0], 'true,true': [3.33e-08, 0, 45], 'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 89, 0], 'true,true,true': [0.253, 5, 45], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,true': [0.0, 3, 0], 'false': [6.32e-08, 79, 0], 'true,true,true': [2.11e-07, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [5.58e-08, 89, 0], 'true,true,true': [1.027, 3, 45], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [1.05e-08, 84, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 7, 0], 'false': [2.79e-08, 89, 0], 'true,true': [6.66e-08, 0, 45], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'false': 'movie(H, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'false,true': [5.05e-08, 90, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [4.21e-08, 0, 45], 'true,true,true,false': [0.0, 6, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 74, 0], 'true,true,false,true': [0.0, 8, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'false': 'director(B)', 'true,true': 'movie(E, F)'}, {'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,true,true': [0.093, 6, 45], 'true,true,false': [0.0, 0, 0], 'false,false': [3.94e-08, 84, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A), movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E), movie(D, B)', 'true,false,true': 'movie(F, H)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [2.11e-08, 0, 45], 'false': [0.004, 93, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [5.27e-09, 8, 0], 'true,false,false': [0.0, 0, 0]}]]
[{'': [0.09000000000000079, 7.311224796312007e-17], 'true,false': [-2.7755575615628915e-18, nan], 'true': [1.105288700071267e-15, -2.7755575615628915e-18], 'true,false,true': [-2.7755575615628915e-18, nan]}, {'': [0.06424978612186535, -1.7464182409833923e-17], 'true': [0.06424978612186535, nan], 'true,true': [0.06424978612186535, nan]}, {'': [0.03648805648770892, 5.0592441628488145e-17], 'true,false': [0.0, nan], 'true': [9.86864910777917e-16, 0.0], 'true,true': [9.86864910777917e-16, nan]}, {'': [0.02198683340890641, 3.4928364819667845e-17], 'true': [0.02198683340890641, nan], 'true,true': [0.02198683340890641, nan]}, {'': [0.025647412447190685, 1.32169407693471e-18], 'true,false': [0.0, nan], 'true': [-3.947459643111668e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-3.947459643111668e-17, nan]}, {'': [0.025818405291082258, 8.732091204916961e-18], 'true,false': [0.0, nan], 'true': [9.868649107779169e-17, 0.0]}, {'': [0.015848084155376124, 2.837236618486511e-17], 'true': [0.015848084155376124, nan], 'false': [2.837236618486511e-17, nan], 'true,true': [0.015848084155376124, nan], 'true,true,true': [3.947459643111668e-17, -4.625929269271485e-18]}, {'': [0.014169691349687666, -3.00060276925718e-18], 'true': [0.014169691349687666, nan], 'true,true': [-6.908054375445419e-17, -3.469446951953614e-18], 'true,true,false': [-3.469446951953614e-18, nan]}, {'': [0.008649676898597448, 1.850371707708594e-17], 'true': [0.008649676898597448, nan], 'false': [nan, 1.850371707708594e-17], 'true,true': [0.008649676898597448, nan]}, {'': [0.01060296351399108, 1.9079061757884452e-07], 'true,false': [3.469446951953614e-18, nan], 'true': [9.86864910777917e-18, 3.469446951953614e-18], 'true,true': [9.86864910777917e-18, nan], 'true,false,true': [3.469446951953614e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(G, A), movie(G, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1254446385283914;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360621;  // std dev = 7,15e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.10159632948783633;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926105;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839679;  // std dev = 1,83e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109166;  // std dev = 3,87e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1385822325901059;  // std dev = 0,090, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.15679843908241686;  // std dev = 0,068, 37,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15597733259912974;  // std dev = 0,007, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08430500809628458;  // std dev = 0,002, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return -0.06842697784420265;  // std dev = 4,77e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1365264625002015;  // std dev = 0,006, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07794913714870443;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06419184008202625;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065481
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.26 seconds
Total inference time: 2.743 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064674
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.172 seconds
Refined model CLL: -0.064674


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065481
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.3629999999999995 seconds
Total inference time: 2.743 seconds
AUC ROC: 1.0
Total revision time: 5.3629999999999995
Best scored revision CLL: -0.064674


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:28:22
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 1.326, 'Inference time': 5.561, 'CLL': -0.070213, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 5.3629999999999995, 'Inference time': 2.743, 'CLL': -0.065481, 'AUC ROC': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;true;false
0;true,true,true;ta(E, D, F).;false;false
0;true,false;publication(G, A).;true;true
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,true;publication(G, H), professor(H).;false;false
0;true,false,false;publication(I, B), ta(J, A, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;publication(C, D), tempadvisedby(D, B).;true;true
1;true,true,true;ta(E, D, F).;false;false
1;true,false;projectmember(J, B).;false;true
1;true;publication(C, B).;true;true
1;true,true,false;tempadvisedby(G, B), ta(H, A, I).;false;false
1;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
2;true,false;publication(J, A), publication(K, B).;true;true
2;true;publication(C, B), publication(C, A).;true;true
2;true,false,true;tempadvisedby(L, B), ta(M, L, N).;false;false
2;true,true,false;publication(C, G), ta(H, G, I).;false;false
2;true,false,false;publication(P, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(F, B).;true;false
3;true,true,true;publication(G, A).;false;false
3;true,false;projectmember(H, B).;false;true
3;true;tempadvisedby(C, B), ta(D, C, E).;true;true
3;true,false,false;publication(I, B), publication(I, A).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
4;true,true,true;publication(G, D).;false;false
4;true,false;publication(H, A).;true;true
4;true;publication(C, B), publication(C, A).;true;true
4;true,false,true;publication(H, I), professor(I).;false;false
4;true,false,false;ta(J, A, K), hasposition(B, L).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,false;ta(D, A, E), publication(F, B).;true;true
5;true;publication(C, B), publication(C, A).;false;true
5;true,false,true;tempadvisedby(G, B), ta(H, G, E).;false;false
5;true,false,false;publication(I, B), publication(J, A).;false;false
6;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
6;true,true;tempadvisedby(F, B), publication(G, F).;true;true
6;true,true,true;publication(H, A), publication(H, B).;false;false
6;true,false;publication(K, B), publication(K, A).;false;true
6;true;hasposition(D, C), projectmember(E, D).;true;true
6;false;publication(M, A).;false;false
6;true,true,false;tempadvisedby(I, B), publication(J, A).;false;false
6;true,false,false;publication(L, B).;false;false
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,true;publication(C, B).;true;true
7;true,true,true;ta(D, F, G), tempadvisedby(F, H).;false;false
7;true,false;tempadvisedby(J, B).;true;true
7;true;publication(C, A), ta(D, A, E).;true;true
7;true,false,true;publication(K, J), publication(K, B).;false;false
7;true,true,false;publication(C, I), professor(I).;false;false
7;true,false,false;ta(L, A, M).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true;tempadvisedby(F, B), publication(G, F).;true;true
8;true,true,true;ta(H, A, I).;false;false
8;true,false;publication(M, B), publication(M, A).;false;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;false;professor(B).;false;false
8;true,true,false;ta(J, A, K), publication(L, A).;false;false
8;true,false,false;tempadvisedby(N, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;tempadvisedby(D, B).;true;false
9;true,true,true;publication(E, D), publication(E, B).;false;false
9;true,false;publication(F, A), publication(G, B).;true;true
9;true;publication(C, A), publication(C, B).;true;true
9;true,false,true;publication(F, H), tempadvisedby(I, H).;false;false
9;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3,33e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.70110562849923;  // std dev = 0,123, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1254446385283915;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.5598973421649127;  // std dev = 5,96e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.22430625838981832;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 6,99e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.37120258381580884;  // std dev = 1,166, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783617;  // std dev = 5,58e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then return 0.3339542199161919;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.25089415888627775;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 1,05e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2641889663080323;  // std dev = 5,16e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B) )
%   | | then return -0.20673111170534872;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 4,21e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.21610720332670774;  // std dev = 3,94e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.17487342366240594;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(H, A) )
%   | then return -0.045959537555908835;  // std dev = 0,893, 84,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1911296750977084;  // std dev = 0,018, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.15969794878005603;  // std dev = 0,024, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07550533415324674;  // std dev = 1,05e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, F) )
%   | | then return 0.132387454616796;  // std dev = 0,077, 38,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.11414066501078698;  // std dev = 0,516, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else return -0.0704007730616727;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E), movie(D, B) )
%   | | then return 0.14667122960788517;  // std dev = 0,103, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then if ( movie(F, H) )
%   | | | then return -0.1475863734118957;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.065930475750764;  // std dev = 3,49e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072497
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.187 seconds
Total inference time: 5.826 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06885
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.528 seconds
Parameter learned model CLL: -0.06885


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [7.88e-08, 84, 0], 'true,true': [3.33e-08, 0, 45], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 78, 0], 'true,true,true': [0.123, 1, 45], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,true': [0.0, 4, 0], 'false': [6.99e-08, 86, 0], 'true,true,true': [5.96e-08, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [5.58e-08, 84, 0], 'true,true,true': [1.166, 4, 45], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [1.05e-08, 87, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 3, 0], 'false': [4.21e-08, 101, 0], 'true,true': [5.16e-08, 0, 45], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'false': 'movie(H, A)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(G, A), movie(G, B)'}, {'false,true': [0.893, 74, 10], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [3.94e-08, 0, 35], 'true,true,true,false': [0.0, 2, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.018, 0, 45], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 83, 0], 'true,true,false,true': [0.024, 8, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)', 'false': 'director(B)', 'true,true': 'movie(E, F)'}, {'true,false': [0.0, 0, 0], 'false,true': [0.516, 3, 10], 'true,true,true': [0.077, 3, 35], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 90, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A), movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E), movie(D, B)', 'true,false,true': 'movie(F, H)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.103, 0, 45], 'false': [3.49e-08, 92, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}]]
[{'': [0.021266540642723226, 7.401486830834377e-17], 'true,false': [0.0, nan], 'true': [1.105288700071267e-15, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.015181896531630958, -2.5620531337503614e-17], 'true': [0.015181896531630958, nan], 'true,true': [0.015181896531630958, nan]}, {'': [0.046103936560658414, 5.680210823663592e-17], 'true,false': [0.0, nan], 'true': [7.894919286223336e-17, 0.0], 'true,true': [7.894919286223336e-17, nan]}, {'': [0.027766001089497932, 3.700743415417188e-17], 'true': [0.027766001089497932, nan], 'true,true': [0.027766001089497932, nan]}, {'': [0.013935847151158236, 1.2761184191093753e-18], 'true,false': [0.0, nan], 'true': [-1.5789838572446671e-16, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-1.5789838572446671e-16, nan]}, {'': [0.012994085148991983, 1.75876914792104e-17], 'true,false': [9.25185853854297e-18, nan], 'true': [5.921189464667501e-17, 9.25185853854297e-18]}, {'': [0.007816369282436892, 0.009494871051611767], 'true': [0.007816369282436892, nan], 'false': [0.009494871051611767, nan], 'true,true': [0.007816369282436892, nan], 'true,true,true': [4.4408920985006264e-17, 0.0]}, {'': [0.016047165165729856, 1.33761810195802e-18], 'true': [0.016047165165729856, nan], 'true,true': [0.00030859896882623597, 7.469482694823226e-05], 'true,true,false': [7.469482694823226e-05, nan]}, {'': [0.0059777198203895794, 0.006340857347172433], 'true': [0.0059777198203895794, nan], 'false': [0.020481830491490514, -5.551115123125783e-18], 'true,true': [0.0059777198203895794, nan]}, {'': [0.003753610514142807, 1.3274405729213829e-17], 'true,false': [0.0, nan], 'true': [0.00023586160831973798, 0.0], 'true,true': [0.00023586160831973798, nan], 'true,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, B), movie(C, A).;true;true
6;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;true;movie(G, A), movie(G, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 6,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 5,96e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.6827378447875044;  // std dev = 0,172, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.1254446385283914;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5597917868267476;  // std dev = 0,030, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22751829855267258;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360622;  // std dev = 6,83e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.42081519344091595;  // std dev = 0,030, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18815433863320172;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783626;  // std dev = 4,21e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32295821768032384;  // std dev = 0,027, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.16108273719996338;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926101;  // std dev = 3,33e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2567087281580685;  // std dev = 0,024, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13827663869395582;  // std dev = 0,004, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08518475138839679;  // std dev = 3,33e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.21100031851023984;  // std dev = 0,018, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.12194434443176341;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.16017209472923793;  // std dev = 0,117, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.21396973684957865;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07877675473109164;  // std dev = 4,34e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15270817391340719;  // std dev = 0,083, 25,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.18053892401280772;  // std dev = 0,000794, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15485509238714154;  // std dev = 0,003, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.1288583462159914;  // std dev = 0,00100, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15861510215228686;  // std dev = 0,009, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.13461836469804836;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06842697784420264;  // std dev = 5,16e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1363024931885898;  // std dev = 0,012, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11484523513348771;  // std dev = 0,000785, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 0,000, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068662
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.473 seconds
Total inference time: 2.297 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066222
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.14 seconds
Refined model CLL: -0.066222


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068662
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.327999999999999 seconds
Total inference time: 2.297 seconds
AUC ROC: 1.0
Total revision time: 5.327999999999999
Best scored revision CLL: -0.066222


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:28:36
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 1.187, 'Inference time': 5.826, 'CLL': -0.072497, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 5.327999999999999, 'Inference time': 2.297, 'CLL': -0.068662, 'AUC ROC': 1.0}


