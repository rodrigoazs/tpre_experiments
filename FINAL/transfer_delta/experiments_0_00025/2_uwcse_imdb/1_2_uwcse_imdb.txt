Starting experiment #1 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then if ( ta(E, D, G) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5854216623722396;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return 0.8581489350995123;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), professor(I) )
%   | | | then return 0.2285193054698827;  // std dev = 2,509, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | | then return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.680729580260802;  // std dev = 3,008, 62,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=51 */
%   else return -0.14185106490048816;  // std dev = 0,000, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.7295484596763866;  // std dev = 0,131, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.35546548503407666;  // std dev = 2,322, 23,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | | else return -0.009860458557290877;  // std dev = 1,779, 24,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.6010558263248427;  // std dev = 2,709, 56,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=47 */
%   | | | else return 0.2244415970201539;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   else return -0.12544463852839122;  // std dev = 6,32e-08, 157,000 (wgt'ed) examples reached here.  /* #neg=157 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( ta(C, F, D), publication(G, F) )
%   | | then if ( ta(C, H, I), publication(E, H) )
%   | | | then return 0.6086508075814181;  // std dev = 0,210, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.3037874271106899;  // std dev = 1,481, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( ta(C, J, K), tempadvisedby(J, L) )
%   | | | then return 0.6322947724515985;  // std dev = 0,081, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.5434091683049223;  // std dev = 0,965, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( publication(M, B), publication(M, A) )
%   | | then if ( tempadvisedby(N, B), publication(P, N) )
%   | | | then return 0.44176608075258245;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.5528771918636936;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( projectmember(Q, B) )
%   | | | then return 0.6052291678170924;  // std dev = 0,901, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.2223673801841833;  // std dev = 3,705, 62,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=32 */
%   else return -0.1123163781936064;  // std dev = 5,96e-08, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.42976822182196334;  // std dev = 0,147, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return 0.05831485136242314;  // std dev = 2,536, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.367168273907309;  // std dev = 1,204, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.26749660810971837;  // std dev = 3,514, 64,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=47 */
%   | | | else return 0.4350073043502379;  // std dev = 1,228, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.10159632948783646;  // std dev = 0,000, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return 0.23004526703772338;  // std dev = 1,538, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return 0.3275916186870226;  // std dev = 2,173, 58,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=51 */
%   | | else if ( ta(I, A, J) )
%   | | | then return 0.07149809599930716;  // std dev = 2,232, 24,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return 0.2862078773106312;  // std dev = 1,564, 22,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | else if ( projectmember(K, B), publication(L, A) )
%   | | then return 0.6347087357775064;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(M, A, N) )
%   | | | then return -0.182918101824986;  // std dev = 1,344, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.12683894036311424;  // std dev = 1,923, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   else return -0.09269127618926067;  // std dev = 8,56e-08, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( publication(F, E), publication(F, D) )
%   | | | then return 0.17844788508613008;  // std dev = 0,920, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.2666285687569212;  // std dev = 0,117, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 7.982997625429894E-4;  // std dev = 0,434, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | then if ( publication(I, A) )
%   | | | then return -0.10354892202639812;  // std dev = 1,378, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.1376357068169015;  // std dev = 2,748, 37,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.4052641276434161;  // std dev = 1,068, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.12856807433279507;  // std dev = 3,120, 52,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=32 */
%   else return -0.08518475138839679;  // std dev = 6,14e-08, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D), projectmember(E, B) )
%   | then return -0.1594790362369679;  // std dev = 1,021, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( publication(F, A), publication(F, B) )
%   | | then if ( publication(F, G), tempadvisedby(H, G) )
%   | | | then return 0.1237328614151132;  // std dev = 1,888, 39,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | | | else return 0.25128391423463636;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(I, A), publication(J, B) )
%   | | | then return -0.0073315981934937505;  // std dev = 2,262, 29,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.09120591032953052;  // std dev = 4,209, 87,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=59 */
%   else return -0.0787767547310916;  // std dev = 7,15e-08, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, B), publication(E, A) )
%   | then if ( publication(D, A) )
%   | | then if ( tempadvisedby(F, B), publication(E, F) )
%   | | | then return -0.007278401469591467;  // std dev = 0,877, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1531094104299237;  // std dev = 1,350, 40,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | else if ( publication(E, G), professor(G) )
%   | | | then return -0.11445570711139713;  // std dev = 1,898, 25,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.28310933444507436;  // std dev = 0,874, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), tempadvisedby(I, J) )
%   | | | then return 0.21195458354291796;  // std dev = 0,581, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.38489731895148016;  // std dev = 0,848, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.15636917692710553;  // std dev = 3,019, 59,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=47 */
%   | | | else return 0.0055330304263298226;  // std dev = 1,627, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else return -0.07271767869833672;  // std dev = 0,054, 174,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=1 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), ta(D, A, E) )
%   | then if ( tempadvisedby(F, B) )
%   | | then if ( publication(C, B) )
%   | | | then return 0.19560355114750472;  // std dev = 0,109, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3627613447909504;  // std dev = 0,736, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( publication(C, G), professor(G) )
%   | | | then return 0.06128451988305218;  // std dev = 1,048, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.04707729883893234;  // std dev = 0,793, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(H, B) )
%   | | then if ( publication(I, B), ta(J, H, K) )
%   | | | then return 0.14270283312052048;  // std dev = 1,818, 36,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=30 */
%   | | | else return -0.02308186164700219;  // std dev = 2,577, 37,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | | else if ( publication(L, B) )
%   | | | then return 0.069680148246459;  // std dev = 2,726, 45,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=33 */
%   | | | else return 0.3253724367289841;  // std dev = 0,951, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06846067761868661;  // std dev = 6,83e-08, 201,000 (wgt'ed) examples reached here.  /* #neg=201 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( tempadvisedby(F, B), publication(E, F) )
%   | | then return 0.0027274386154805042;  // std dev = 0,707, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.18489162293719832;  // std dev = 1,431, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return 0.10242569762776398;  // std dev = 1,758, 22,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( publication(H, B) )
%   | | then if ( publication(H, I), tempadvisedby(J, I) )
%   | | | then return 0.06501114904136043;  // std dev = 3,112, 69,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=52 */
%   | | | else return -0.2879603582114684;  // std dev = 0,613, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(K, A, L) )
%   | | | then return -0.05602744965618469;  // std dev = 1,162, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.230081687902703;  // std dev = 1,236, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.06422157258767315;  // std dev = 3,65e-08, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(E, D, G).;false;false
0;true,false;publication(H, A).;true;true
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(D, A).;true;true
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(D, E), ta(F, E, G).;false;false
1;true,false,false;publication(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;ta(C, F, D), publication(G, F).;true;true
2;true,true,true;ta(C, H, I), publication(E, H).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true;ta(C, A, D), publication(E, B).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,true,false;ta(C, J, K), tempadvisedby(J, L).;false;false
2;true,false,false;projectmember(Q, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false;publication(D, A).;true;true
3;true;publication(C, B), publication(C, A).;false;true
3;true,false,true;publication(D, E), professor(E).;false;false
3;true,false,false;publication(F, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;publication(C, D), ta(E, D, F).;true;true
4;true,true,true;tempadvisedby(G, B), publication(H, G).;false;false
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true;publication(C, B).;true;true
4;true,true,false;ta(I, A, J).;false;false
4;true,false,false;ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;publication(F, E), publication(F, D).;false;false
5;true,false;tempadvisedby(G, B), publication(H, B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
5;true,false,true;publication(I, A).;false;false
5;true,false,false;tempadvisedby(J, B).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false;publication(F, A), publication(F, B).;true;true
6;true;ta(C, A, D), projectmember(E, B).;false;true
6;true,false,true;publication(F, G), tempadvisedby(H, G).;false;false
6;true,false,false;publication(I, A), publication(J, B).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
7;true,true;publication(D, A).;true;true
7;true,true,true;tempadvisedby(F, B), publication(E, F).;false;false
7;true,false;publication(H, A).;true;true
7;true;publication(D, B), publication(E, A).;true;true
7;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;true,true,false;publication(E, G), professor(G).;false;false
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;tempadvisedby(F, B).;true;true
8;true,true,true;publication(C, B).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true;publication(C, A), ta(D, A, E).;true;true
8;true,false,true;publication(I, B), ta(J, H, K).;false;false
8;true,true,false;publication(C, G), professor(G).;false;false
8;true,false,false;publication(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;tempadvisedby(F, B), publication(E, F).;false;true
9;true,false;publication(H, B).;true;true
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,true,false;tempadvisedby(G, B).;false;false
9;true,false,false;ta(K, A, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 5,58e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 7,74e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.5006383371610468;  // std dev = 1,430, 61,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8,43e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4308802439142643;  // std dev = 1,19e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1726934328307044;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783669;  // std dev = 0,000, 136,000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.30542339790560435;  // std dev = 0,809, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0926912761892609;  // std dev = 6,14e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.2660875553338008;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.19248748711523628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 6,50e-08, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then return 0.19802768490950168;  // std dev = 0,644, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109157;  // std dev = 6,50e-08, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.08432874824078665;  // std dev = 1,212, 92,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.07805038077331732;  // std dev = 0,204, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17321539715084258;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.18146734319266292;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07061761475050181;  // std dev = 0,047, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13924685669704112;  // std dev = 0,425, 58,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06685797806908482;  // std dev = 0,050, 112,000 (wgt'ed) examples reached here.  /* #neg=112 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076833
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.383 seconds
Total inference time: 2.774 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070125
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.823 seconds
Parameter learned model CLL: -0.070125


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [5.58e-08, 117, 0], 'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [7.74e-08, 103, 0], 'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,false': [0.0, 0, 0], 'false': [8.43e-08, 114, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.43, 5, 56]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 136, 0], 'true,true': [1.19e-07, 0, 56], 'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,false': [0.0, 0, 0], 'false': [6.14e-08, 108, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.809, 3, 56]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)'}, {'true,false,true,true': [0.0, 4, 0], 'true,true,true,true': [0.0, 0, 56], 'false': [6.5e-08, 124, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(B, C)'}, {'true,false': [0.0, 0, 0], 'false': [6.5e-08, 116, 0], 'true,true': [0.644, 3, 56]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,false,true': [0.204, 75, 0], 'true,true,true,true': [1.212, 36, 56], 'true,false': [0.0, 0, 0], 'false': [0.0, 3, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 56], 'true,false': [0.0, 0, 0], 'false': [0.047, 103, 0], 'true,true,false,true': [0.0, 7, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'false': [0.05, 112, 0], 'true,true,true': [0.425, 2, 56], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.09876543209876519, 2.6569439905559303e-17], 'true,false': [-7.93016446160826e-18, nan], 'true': [-1.2688263138573217e-16, -7.93016446160826e-18], 'true,false,true': [-7.93016446160826e-18, nan]}, {'': [0.05371895283263886, 5.82058673104451e-17], 'true,false': [0.0, nan], 'true': [-1.9032394707859825e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.03354584670317022, 6.232831015439475e-17], 'true': [0.03354584670317022, nan], 'true,true': [0.03354584670317022, nan], 'true,true,true': [0.03354584670317022, nan]}, {'': [0.022667629180587668, -3.102093745276173e-17], 'true,false': [0.0, nan], 'true': [2.5376526277146434e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.011081793833435417, 3.4951465590051226e-17], 'true': [0.011081793833435417, nan], 'true,true': [0.011081793833435417, nan], 'true,true,true': [0.011081793833435417, nan]}, {'': [0.013084777661332758, 3.40229636578677e-17], 'true,true': [-2.061842760018148e-16, nan], 'true,true,true': [-2.061842760018148e-16, nan], 'true,false': [0.0, nan], 'true': [-2.061842760018148e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.007033786630925681, 3.6369374944617196e-17], 'true': [0.007033786630925681, nan]}, {'': [0.01556567446172657, 0.0], 'true,true,false': [0.0005539177286380374, nan], 'true': [0.01556567446172657, nan], 'true,true': [0.015962060849400238, 0.0005539177286380374], 'true,true,true': [0.015962060849400238, nan]}, {'': [0.012424676177538587, 2.10881564908734e-05], 'true': [0.012424676177538587, nan], 'true,true': [-5.551115123125783e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.003114326988225837, 2.2414384667389575e-05], 'true': [0.003114326988225837, nan], 'true,true': [0.003114326988225837, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839136;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360618;  // std dev = 8,69e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783626;  // std dev = 4,59e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926083;  // std dev = 7,30e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.0851847513883968;  // std dev = 6,75e-08, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.07877675473109162;  // std dev = 5,27e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.07324622576333716;  // std dev = 3,33e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else if ( female(A) )
%   | | then return 0.1681556861913984;  // std dev = 0,046, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.16875174029499035;  // std dev = 0,045, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.07324622576333711;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.15386432650285278;  // std dev = 0,000290, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.08552770686023552;  // std dev = 3,81e-05, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420264;  // std dev = 5,48e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13488115598202818;  // std dev = 0,000260, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07908563407521295;  // std dev = 5,01e-05, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06419184008202626;  // std dev = 0,000, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06543
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.648 seconds
Total inference time: 2.142 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063888
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.337 seconds
Refined model CLL: -0.063888


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06543
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.191 seconds
Total inference time: 2.142 seconds
AUC ROC: 1.0
Total revision time: 6.191
Best scored revision CLL: -0.063888


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:42:29
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 1.383, 'Inference time': 2.774, 'CLL': -0.076833, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 6.191, 'Inference time': 2.142, 'CLL': -0.06543, 'AUC ROC': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(E, D, G).;false;false
0;true,false;publication(H, A).;true;true
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(D, A).;true;true
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(D, E), ta(F, E, G).;false;false
1;true,false,false;publication(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;ta(C, F, D), publication(G, F).;true;true
2;true,true,true;ta(C, H, I), publication(E, H).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true;ta(C, A, D), publication(E, B).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,true,false;ta(C, J, K), tempadvisedby(J, L).;false;false
2;true,false,false;projectmember(Q, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false;publication(D, A).;true;true
3;true;publication(C, B), publication(C, A).;false;true
3;true,false,true;publication(D, E), professor(E).;false;false
3;true,false,false;publication(F, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;publication(C, D), ta(E, D, F).;true;true
4;true,true,true;tempadvisedby(G, B), publication(H, G).;false;false
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true;publication(C, B).;true;true
4;true,true,false;ta(I, A, J).;false;false
4;true,false,false;ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;publication(F, E), publication(F, D).;false;false
5;true,false;tempadvisedby(G, B), publication(H, B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
5;true,false,true;publication(I, A).;false;false
5;true,false,false;tempadvisedby(J, B).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false;publication(F, A), publication(F, B).;true;true
6;true;ta(C, A, D), projectmember(E, B).;false;true
6;true,false,true;publication(F, G), tempadvisedby(H, G).;false;false
6;true,false,false;publication(I, A), publication(J, B).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
7;true,true;publication(D, A).;true;true
7;true,true,true;tempadvisedby(F, B), publication(E, F).;false;false
7;true,false;publication(H, A).;true;true
7;true;publication(D, B), publication(E, A).;true;true
7;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;true,true,false;publication(E, G), professor(G).;false;false
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;tempadvisedby(F, B).;true;true
8;true,true,true;publication(C, B).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true;publication(C, A), ta(D, A, E).;true;true
8;true,false,true;publication(I, B), ta(J, H, K).;false;false
8;true,true,false;publication(C, G), professor(G).;false;false
8;true,false,false;publication(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;tempadvisedby(F, B), publication(E, F).;false;true
9;true,false;publication(H, B).;true;true
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,true,false;tempadvisedby(G, B).;false;false
9;true,false,false;ta(K, A, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839133;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.492771172845669;  // std dev = 1,557, 64,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 6,99e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.432810488961806;  // std dev = 7,30e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1715723403975898;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.25463750826427195;  // std dev = 1,458, 69,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926092;  // std dev = 5,87e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.2773105671207449;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.1837027860954301;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,96e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then return 0.20644400671314966;  // std dev = 0,647, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109158;  // std dev = 6,50e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.10516752846674592;  // std dev = 1,150, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.08214398376970371;  // std dev = 0,245, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17555419366203745;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.17496178528250267;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07111284791113703;  // std dev = 0,057, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11897489122354943;  // std dev = 0,757, 65,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06604877824587081;  // std dev = 0,047, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075943
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.421 seconds
Total inference time: 2.608 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071596
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.479 seconds
Parameter learned model CLL: -0.071596


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [8.94e-08, 101, 0], 'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 110, 0], 'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,false': [0.0, 0, 0], 'false': [6.99e-08, 86, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.557, 6, 58]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 108, 0], 'true,true': [7.3e-08, 0, 58], 'true,false,true,true': [5.27e-09, 7, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,false': [0.0, 0, 0], 'false': [5.87e-08, 106, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.458, 11, 58]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)'}, {'true,false,true,true': [0.0, 6, 0], 'true,true,true,true': [0.0, 0, 58], 'false': [5.96e-08, 109, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(B, C)'}, {'true,false': [0.0, 0, 0], 'false': [6.5e-08, 125, 0], 'true,true': [0.647, 3, 58]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,false,true': [0.245, 64, 0], 'true,true,true,true': [1.15, 28, 58], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 10, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 58], 'true,false': [0.0, 0, 0], 'false': [0.057, 104, 0], 'true,true,false,true': [0.0, 5, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'false': [0.047, 92, 0], 'true,true,true': [0.757, 7, 58], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.03222222222222181, 7.91446116564468e-17], 'true,false': [0.0, nan], 'true': [-3.675221047035001e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.0606524673676469, -8.074349270001138e-18], 'true,false': [-2.3129646346357427e-18, nan], 'true': [-1.2250736823450003e-16, -2.3129646346357427e-18], 'true,false,true': [-2.3129646346357427e-18, nan]}, {'': [0.0378756149402803, 5.680210823663592e-17], 'true': [0.0378756149402803, nan], 'true,true': [0.0378756149402803, nan], 'true,true,true': [0.0378756149402803, nan]}, {'': [0.03510132861451702, -2.05596856412066e-18], 'true,false': [3.96508223080413e-18, nan], 'true': [9.188052617587502e-17, 3.96508223080413e-18], 'true,false,true': [3.96508223080413e-18, nan]}, {'': [0.030828873648506873, 3.2468786569226275e-17], 'true': [0.030828873648506873, nan], 'true,true': [0.030828873648506873, nan], 'true,true,true': [0.030828873648506873, nan]}, {'': [0.018057029424213958, 3.2593703475233955e-17], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan], 'true,false': [-9.25185853854297e-18, nan], 'true': [0.0, -9.25185853854297e-18], 'true,false,true': [-9.25185853854297e-18, nan]}, {'': [0.0068600643138414736, 3.375077994860476e-17], 'true': [0.0068600643138414736, nan]}, {'': [0.017791677983721943, 6.938893903907229e-19], 'true,true,false': [0.0009342071509703632, nan], 'true': [0.017791677983721943, nan], 'true,true': [0.015366915440641985, 0.0009342071509703632], 'true,true,true': [0.015366915440641985, nan]}, {'': [0.008977027194174883, 3.0742931298108345e-05], 'true': [0.008977027194174883, nan], 'true,true': [-3.4455197315953135e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.008804625993934133, 2.3726958740828155e-05], 'true': [0.008804625993934133, nan], 'true,true': [0.008804625993934133, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048777;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12544463852839105;  // std dev = 8,02e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.11231637819360621;  // std dev = 8,56e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783626;  // std dev = 4,21e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09269127618926082;  // std dev = 7,30e-08, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839682;  // std dev = 5,67e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0787767547310916;  // std dev = 5,96e-08, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.07324622576333711;  // std dev = 4,21e-08, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07324622576333711;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.14221191352520066;  // std dev = 0,047, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.14707281101834074;  // std dev = 0,035, 39,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 5,67e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1348621910143218;  // std dev = 0,002, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07841826432257874;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06419184008202626;  // std dev = 2,89e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065322
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.431 seconds
Total inference time: 2.164 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064053
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.355 seconds
Refined model CLL: -0.064053


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065322
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.686 seconds
Total inference time: 2.164 seconds
AUC ROC: 1.0
Total revision time: 5.686
Best scored revision CLL: -0.064053


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:42:40
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 1.421, 'Inference time': 2.608, 'CLL': -0.075943, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 5.686, 'Inference time': 2.164, 'CLL': -0.065322, 'AUC ROC': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(E, D, G).;false;false
0;true,false;publication(H, A).;true;true
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(D, A).;true;true
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(D, E), ta(F, E, G).;false;false
1;true,false,false;publication(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;ta(C, F, D), publication(G, F).;true;true
2;true,true,true;ta(C, H, I), publication(E, H).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true;ta(C, A, D), publication(E, B).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,true,false;ta(C, J, K), tempadvisedby(J, L).;false;false
2;true,false,false;projectmember(Q, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false;publication(D, A).;true;true
3;true;publication(C, B), publication(C, A).;false;true
3;true,false,true;publication(D, E), professor(E).;false;false
3;true,false,false;publication(F, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;publication(C, D), ta(E, D, F).;true;true
4;true,true,true;tempadvisedby(G, B), publication(H, G).;false;false
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true;publication(C, B).;true;true
4;true,true,false;ta(I, A, J).;false;false
4;true,false,false;ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;publication(F, E), publication(F, D).;false;false
5;true,false;tempadvisedby(G, B), publication(H, B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
5;true,false,true;publication(I, A).;false;false
5;true,false,false;tempadvisedby(J, B).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false;publication(F, A), publication(F, B).;true;true
6;true;ta(C, A, D), projectmember(E, B).;false;true
6;true,false,true;publication(F, G), tempadvisedby(H, G).;false;false
6;true,false,false;publication(I, A), publication(J, B).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
7;true,true;publication(D, A).;true;true
7;true,true,true;tempadvisedby(F, B), publication(E, F).;false;false
7;true,false;publication(H, A).;true;true
7;true;publication(D, B), publication(E, A).;true;true
7;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;true,true,false;publication(E, G), professor(G).;false;false
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;tempadvisedby(F, B).;true;true
8;true,true,true;publication(C, B).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true;publication(C, A), ta(D, A, E).;true;true
8;true,false,true;publication(I, B), ta(J, H, K).;false;false
8;true,true,false;publication(C, G), professor(G).;false;false
8;true,false,false;publication(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;tempadvisedby(F, B), publication(E, F).;false;true
9;true,false;publication(H, B).;true;true
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,true,false;tempadvisedby(G, B).;false;false
9;true,false,false;ta(K, A, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 8,09e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048793;  // std dev = 0,000, 316,000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.12544463852839155;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0,000, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.39775890532270297;  // std dev = 4,328, 233,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360689;  // std dev = 0,000, 293,000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.45626672721217143;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.15848594545290334;  // std dev = 3,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783658;  // std dev = 0,000, 313,000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.2059034948036674;  // std dev = 3,494, 251,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926051;  // std dev = 8,16e-08, 266,000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.3020507221974406;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.1649128072199096;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 8,82e-08, 273,000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then return 0.16959521820276177;  // std dev = 1,904, 159,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=129 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.2423934056206322;  // std dev = 8,16e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(F, A), movie(G, B) )
%   | | | then return -0.14343698769408061;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109153;  // std dev = 8,69e-08, 267,000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.1564327957196396;  // std dev = 1,633, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.09610933377925719;  // std dev = 0,494, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333702;  // std dev = 0,000, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.1846226034227457;  // std dev = 0,065, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.13512185744758248;  // std dev = 0,147, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0704315244640632;  // std dev = 0,108, 298,000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.0884482707687107;  // std dev = 1,876, 237,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06661935583033418;  // std dev = 0,112, 297,000 (wgt'ed) examples reached here.  /* #neg=297 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071019
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.086 seconds
Total inference time: 2.472 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081087
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.687 seconds
Parameter learned model CLL: -0.081087


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 316, 0], 'true,true': [8.09e-08, 0, 178], 'true,false,true,true': [4.94e-08, 47, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 296, 0], 'true,true': [0.0, 0, 178], 'true,false,true,true': [0.0, 50, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 293, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [4.328, 55, 178]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 313, 0], 'true,true': [0.0, 0, 178], 'true,false,true,true': [3.94e-08, 47, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,false': [0.0, 0, 0], 'false': [8.16e-08, 266, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [3.494, 73, 178]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)'}, {'true,false,true,true': [0.0, 61, 0], 'true,true,true,true': [0.0, 0, 178], 'false': [8.82e-08, 273, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A), movie(D, B)', 'true': 'genre(B, C)', 'true,false,true': 'movie(D, E)', 'true,false,false': 'movie(F, A), movie(G, B)'}, {'true,true': [1.904, 30, 129], 'true,false,false,false': [0.0, 0, 0], 'false': [8.69e-08, 267, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [8.16e-08, 0, 49], 'true,false,false,true': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,false,true': [0.494, 180, 0], 'true,true,true,true': [1.633, 41, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 113, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.065, 0, 178], 'true,false': [0.0, 0, 0], 'false': [0.108, 298, 0], 'true,true,false,true': [0.147, 66, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'false': [0.112, 297, 0], 'true,true,true': [1.876, 59, 178], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.16525432098766032, -1.4053456007913375e-17], 'true,false': [5.196788625904988e-17, nan], 'true': [6.706246045376226e-15, 5.196788625904988e-17], 'true,false,true': [5.196788625904988e-17, nan]}, {'': [0.12222202910395347, -6.601326092365796e-17], 'true,false': [-3.3306690738754695e-17, nan], 'true': [-3.193450497798203e-15, -3.3306690738754695e-17], 'true,false,true': [-3.3306690738754695e-17, nan]}, {'': [0.08039170627519089, -8.639278143840809e-17], 'true': [0.08039170627519089, nan], 'true,true': [0.08039170627519089, nan], 'true,true,true': [0.08039170627519089, nan]}, {'': [0.062453053214019595, -5.1077353209591864e-17], 'true,false': [3.307047307394083e-17, nan], 'true': [-3.193450497798203e-16, 3.307047307394083e-17], 'true,false,true': [3.307047307394083e-17, nan]}, {'': [0.048637624487886784, 2.5042624615605033e-17], 'true': [0.048637624487886784, nan], 'true,true': [0.048637624487886784, nan], 'true,true,true': [0.048637624487886784, nan]}, {'': [0.04144956346521426, 2.846725704167068e-17], 'true,true': [-8.183216900607896e-16, nan], 'true,true,true': [-8.183216900607896e-16, nan], 'true,false': [-3.6400754905742835e-17, nan], 'true': [-8.183216900607896e-16, -3.6400754905742835e-17], 'true,false,true': [-3.6400754905742835e-17, nan]}, {'': [0.026584632658304713, 2.8275342949254924e-17], 'true,false': [1.3594567648471305e-16, -4.625929269271485e-18], 'true': [0.022788177192707842, 0.032851444674185465], 'true,false,true': [1.3594567648471305e-16, nan], 'true,false,false': [-4.625929269271485e-18, nan]}, {'': [0.02308617817694549, -1.964996503761339e-18], 'true,true,false': [0.0013570318202135896, nan], 'true': [0.02308617817694549, nan], 'true,true': [0.012173933755694694, 0.0013570318202135896], 'true,true,true': [0.012173933755694694, nan]}, {'': [0.02027988300734931, 3.89792731625248e-05], 'true': [0.02027988300734931, nan], 'true,true': [2.345919348785965e-05, 0.00032846467037564697], 'true,true,false': [0.00032846467037564697, nan]}, {'': [0.014855032316042113, 4.1943624646798324e-05], 'true': [0.014855032316042113, nan], 'true,true': [0.014855032316042113, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true,false;movie(D, A), movie(D, B).;true;true
6;true;genre(B, C).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,66e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.1418510649004881;  // std dev = 0,000, 297,000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return -0.12544463852839188;  // std dev = 0,000, 294,000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360626;  // std dev = 4,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return -0.11231637819360678;  // std dev = 0,000, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783615;  // std dev = 5,96e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else return -0.10159632948783655;  // std dev = 0,000, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.0926912761892605;  // std dev = 1,10e-07, 292,000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.08518475138839678;  // std dev = 9,42e-08, 319,000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253537;  // std dev = 2,21e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325361;  // std dev = 4,21e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else return -0.07877675473109147;  // std dev = 9,19e-08, 323,000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( director(B) )
%   | | then return 0.17709649774527825;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.07324622576333666;  // std dev = 1,16e-07, 195,000 (wgt'ed) examples reached here.  /* #neg=195 */
%   else return -0.07324622576333704;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.09291895984818078;  // std dev = 0,098, 122,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=89 */
%   | | else return 0.10274001692510847;  // std dev = 0,093, 115,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684269778442028;  // std dev = 0,000, 294,000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.14050988385080668;  // std dev = 0,008, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07496781661403193;  // std dev = 0,003, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.06419184008202618;  // std dev = 5,96e-08, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064104
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.554 seconds
Total inference time: 2.172 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067336
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.447 seconds
Refined model CLL: -0.067336


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064104
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.774 seconds
Total inference time: 2.172 seconds
AUC ROC: 1.0
Total revision time: 7.774
Best scored revision CLL: -0.067336


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:42:54
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 2.086, 'Inference time': 2.472, 'CLL': -0.071019, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 7.774, 'Inference time': 2.172, 'CLL': -0.064104, 'AUC ROC': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(E, D, G).;false;false
0;true,false;publication(H, A).;true;true
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(D, A).;true;true
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(D, E), ta(F, E, G).;false;false
1;true,false,false;publication(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;ta(C, F, D), publication(G, F).;true;true
2;true,true,true;ta(C, H, I), publication(E, H).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true;ta(C, A, D), publication(E, B).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,true,false;ta(C, J, K), tempadvisedby(J, L).;false;false
2;true,false,false;projectmember(Q, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false;publication(D, A).;true;true
3;true;publication(C, B), publication(C, A).;false;true
3;true,false,true;publication(D, E), professor(E).;false;false
3;true,false,false;publication(F, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;publication(C, D), ta(E, D, F).;true;true
4;true,true,true;tempadvisedby(G, B), publication(H, G).;false;false
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true;publication(C, B).;true;true
4;true,true,false;ta(I, A, J).;false;false
4;true,false,false;ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;publication(F, E), publication(F, D).;false;false
5;true,false;tempadvisedby(G, B), publication(H, B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
5;true,false,true;publication(I, A).;false;false
5;true,false,false;tempadvisedby(J, B).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false;publication(F, A), publication(F, B).;true;true
6;true;ta(C, A, D), projectmember(E, B).;false;true
6;true,false,true;publication(F, G), tempadvisedby(H, G).;false;false
6;true,false,false;publication(I, A), publication(J, B).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
7;true,true;publication(D, A).;true;true
7;true,true,true;tempadvisedby(F, B), publication(E, F).;false;false
7;true,false;publication(H, A).;true;true
7;true;publication(D, B), publication(E, A).;true;true
7;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;true,true,false;publication(E, G), professor(G).;false;false
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;tempadvisedby(F, B).;true;true
8;true,true,true;publication(C, B).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true;publication(C, A), ta(D, A, E).;true;true
8;true,false,true;publication(I, B), ta(J, H, K).;false;false
8;true,true,false;publication(C, G), professor(G).;false;false
8;true,false,false;publication(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;tempadvisedby(F, B), publication(E, F).;false;true
9;true,false;publication(H, B).;true;true
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,true,false;tempadvisedby(G, B).;false;false
9;true,false,false;ta(K, A, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3,33e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,30e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4545841250572437;  // std dev = 1,740, 53,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360626;  // std dev = 5,05e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4422078275953791;  // std dev = 7,30e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1662124868586142;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783615;  // std dev = 5,67e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.3073875389622908;  // std dev = 0,808, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926108;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.2725344057715143;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.18670918187734314;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839678;  // std dev = 3,94e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then return 0.1770153524146529;  // std dev = 0,879, 51,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0787767547310917;  // std dev = 3,07e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.11991584083130326;  // std dev = 0,935, 62,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.08374579709031273;  // std dev = 0,261, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17490328612772973;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.17293376067611116;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07217890503827824;  // std dev = 0,057, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12101237667201932;  // std dev = 0,638, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06772353582582516;  // std dev = 0,058, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075006
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.238 seconds
Total inference time: 2.798 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07389
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.436 seconds
Parameter learned model CLL: -0.07389


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [7.3e-08, 75, 0], 'true,true': [3.33e-08, 0, 45], 'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 73, 0], 'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,false': [0.0, 0, 0], 'false': [5.05e-08, 65, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.74, 8, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [5.67e-08, 75, 0], 'true,true': [7.3e-08, 0, 45], 'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 86, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.808, 3, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)'}, {'true,false,true,true': [0.0, 5, 0], 'true,true,true,true': [0.0, 0, 45], 'false': [3.94e-08, 95, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'genre(B, C)'}, {'true,false': [0.0, 0, 0], 'false': [3.07e-08, 74, 0], 'true,true': [0.879, 6, 45]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,false,true': [0.261, 64, 0], 'true,true,true,true': [0.935, 17, 45], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 8, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.0, 0, 45], 'true,false': [0.0, 0, 0], 'false': [0.057, 78, 0], 'true,true,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'false': [0.058, 89, 0], 'true,true,true': [0.638, 5, 45], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.11649408284023735, 7.105427357601002e-17], 'true,false': [-7.93016446160826e-18, nan], 'true': [1.105288700071267e-15, -7.93016446160826e-18], 'true,false,true': [-7.93016446160826e-18, nan]}, {'': [0.0831635545216455, -3.0417069167812506e-17], 'true,false': [-1.982541115402065e-18, nan], 'true': [-9.473903143468002e-16, -1.982541115402065e-18], 'true,false,true': [-1.982541115402065e-18, nan]}, {'': [0.05713354321530112, 3.928481471750554e-17], 'true': [0.05713354321530112, nan], 'true,true': [0.05713354321530112, nan], 'true,true,true': [0.05713354321530112, nan]}, {'': [0.04312322962192811, 4.2928623618839385e-17], 'true,false': [0.0, nan], 'true': [1.1842378929335003e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.013609636499252842, 0.0], 'true': [0.013609636499252842, nan], 'true,true': [0.013609636499252842, nan], 'true,true,true': [0.013609636499252842, nan]}, {'': [0.01898142055169343, 1.636118141552862e-17], 'true,true': [-5.921189464667501e-17, nan], 'true,true,true': [-5.921189464667501e-17, nan], 'true,false': [0.0, nan], 'true': [-5.921189464667501e-17, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.015143700072241644, 1.2752561769343015e-17], 'true': [0.015143700072241644, nan]}, {'': [0.017844066889069792, 8.673617379884035e-19], 'true,true,false': [0.0010656629811524052, nan], 'true': [0.017844066889069792, nan], 'true,true': [0.014095487277975728, 0.0010656629811524052], 'true,true,true': [0.014095487277975728, nan]}, {'': [0.009070516452835868, 4.131389852164749e-05], 'true': [0.009070516452835868, nan], 'true,true': [-8.881784197001253e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.008135497946756866, 3.7723446003869414e-05], 'true': [0.008135497946756866, nan], 'true,true': [0.008135497946756866, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048763;  // std dev = 8,56e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.1254446385283914;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360622;  // std dev = 6,99e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.10159632948783617;  // std dev = 5,77e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09269127618926108;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08518475138839682;  // std dev = 4,47e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5,58e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109165;  // std dev = 4,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07324622576333707;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.12946271746863153;  // std dev = 0,068, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420265;  // std dev = 4,65e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13606580642700794;  // std dev = 0,008, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07715501441864746;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06419184008202625;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065069
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.278 seconds
Total inference time: 2.409 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.971 seconds
Refined model CLL: -0.064637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065069
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.923 seconds
Total inference time: 2.409 seconds
AUC ROC: 1.0
Total revision time: 4.923
Best scored revision CLL: -0.064637


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:43:04
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 1.238, 'Inference time': 2.798, 'CLL': -0.075006, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 4.923, 'Inference time': 2.409, 'CLL': -0.065069, 'AUC ROC': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B), ta(E, A, F).;true;false
0;true,true,true;ta(E, D, G).;false;false
0;true,false;publication(H, A).;true;true
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,false,false;tempadvisedby(J, B), publication(K, J).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false;publication(D, A).;true;true
1;true;publication(C, B), publication(C, A).;false;true
1;true,false,true;publication(D, E), ta(F, E, G).;false;false
1;true,false,false;publication(H, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;ta(C, F, D), publication(G, F).;true;true
2;true,true,true;ta(C, H, I), publication(E, H).;false;false
2;true,false;publication(M, B), publication(M, A).;true;true
2;true;ta(C, A, D), publication(E, B).;true;true
2;true,false,true;tempadvisedby(N, B), publication(P, N).;false;false
2;true,true,false;ta(C, J, K), tempadvisedby(J, L).;false;false
2;true,false,false;projectmember(Q, B).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false;publication(D, A).;true;true
3;true;publication(C, B), publication(C, A).;false;true
3;true,false,true;publication(D, E), professor(E).;false;false
3;true,false,false;publication(F, B).;false;false
4;;advisedby(A, B) :- professor(B), student(A).;true;false
4;true,true;publication(C, D), ta(E, D, F).;true;true
4;true,true,true;tempadvisedby(G, B), publication(H, G).;false;false
4;true,false;projectmember(K, B), publication(L, A).;false;true
4;true;publication(C, B).;true;true
4;true,true,false;ta(I, A, J).;false;false
4;true,false,false;ta(M, A, N).;false;false
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), tempadvisedby(E, D).;true;false
5;true,true,true;publication(F, E), publication(F, D).;false;false
5;true,false;tempadvisedby(G, B), publication(H, B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
5;true,false,true;publication(I, A).;false;false
5;true,false,false;tempadvisedby(J, B).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false;publication(F, A), publication(F, B).;true;true
6;true;ta(C, A, D), projectmember(E, B).;false;true
6;true,false,true;publication(F, G), tempadvisedby(H, G).;false;false
6;true,false,false;publication(I, A), publication(J, B).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
7;true,true;publication(D, A).;true;true
7;true,true,true;tempadvisedby(F, B), publication(E, F).;false;false
7;true,false;publication(H, A).;true;true
7;true;publication(D, B), publication(E, A).;true;true
7;true,false,true;publication(H, I), tempadvisedby(I, J).;false;false
7;true,true,false;publication(E, G), professor(G).;false;false
7;true,false,false;publication(K, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;tempadvisedby(F, B).;true;true
8;true,true,true;publication(C, B).;false;false
8;true,false;tempadvisedby(H, B).;true;true
8;true;publication(C, A), ta(D, A, E).;true;true
8;true,false,true;publication(I, B), ta(J, H, K).;false;false
8;true,true,false;publication(C, G), professor(G).;false;false
8;true,false,false;publication(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;tempadvisedby(F, B), publication(E, F).;false;true
9;true,false;publication(H, B).;true;true
9;true;ta(C, A, D), publication(E, B).;true;true
9;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
9;true,true,false;tempadvisedby(G, B).;false;false
9;true,false,false;ta(K, A, L).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 3,33e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,30e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F) )
%   | | | then return 0.4885981552522948;  // std dev = 1,416, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 5,77e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4338351903845456;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.17098002006015012;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783624;  // std dev = 4,83e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F) )
%   | | | then return 0.31137912475010515;  // std dev = 0,664, 47,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 4,21e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, F), movie(E, D) )
%   | | | then return 0.2666991485261771;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, B) )
%   | | then if ( movie(H, A) )
%   | | | then return -0.19180898263962295;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,37e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then return 0.17872098745972223;  // std dev = 0,723, 39,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21786803122112713;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109166;  // std dev = 4,34e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, B), movie(D, A) )
%   | then if ( movie(C, A) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.08122107241312033;  // std dev = 1,118, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), director(F) )
%   | | | then return -0.0767565897868284;  // std dev = 0,145, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.17556491240451952;  // std dev = 0,016, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, D), director(D) )
%   | | | then return -0.16344876406344305;  // std dev = 0,027, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07175026361704401;  // std dev = 0,045, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13284463515219377;  // std dev = 0,503, 48,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06615023412658166;  // std dev = 0,042, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075902
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.242 seconds
Total inference time: 3.022 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070767
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.472 seconds
Parameter learned model CLL: -0.070767


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [7.3e-08, 74, 0], 'true,true': [3.33e-08, 0, 45], 'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 95, 0], 'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F)'}, {'true,false': [0.0, 0, 0], 'false': [5.77e-08, 72, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.416, 5, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [4.83e-08, 93, 0], 'true,true': [0.0, 0, 45], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F)'}, {'true,false': [0.0, 0, 0], 'false': [4.21e-08, 96, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.664, 2, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, F), movie(E, D)', 'true,false': 'movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(H, A)'}, {'true,false,true,true': [3.73e-09, 3, 0], 'true,true,true,true': [0.0, 0, 45], 'false': [5.37e-08, 95, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, A), movie(D, B)', 'true': 'genre(B, C)', 'true,false,true': 'movie(D, E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [4.34e-08, 83, 0], 'true,true': [0.723, 4, 35], 'true,false,true,true': [0.0, 0, 10], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, B), movie(D, A)', 'true,true': 'movie(C, A)', 'true,true,false': 'movie(D, F), director(F)'}, {'true,true,false,true': [0.145, 59, 0], 'true,true,true,true': [1.118, 31, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 8, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D), director(D)'}, {'true,true,true': [0.016, 0, 45], 'true,false': [0.0, 0, 0], 'false': [0.045, 79, 0], 'true,true,false,true': [0.027, 5, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'true,false': [0.0, 0, 0], 'false': [0.042, 99, 0], 'true,true,true': [0.503, 3, 45], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.11649408284023735, 7.201446646217232e-17], 'true,false': [-7.93016446160826e-18, nan], 'true': [1.105288700071267e-15, -7.93016446160826e-18], 'true,false,true': [-7.93016446160826e-18, nan]}, {'': [0.06424978612186535, -1.402386978473882e-17], 'true,false': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.040122030722945186, 4.625929269271486e-17], 'true': [0.040122030722945186, nan], 'true,true': [0.040122030722945186, nan], 'true,true,true': [0.040122030722945186, nan]}, {'': [0.014903634898448814, 2.5069552168955147e-17], 'true,false': [0.0, nan], 'true': [0.0, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.009382663107648216, 1.850371707708594e-17], 'true': [0.009382663107648216, nan], 'true,true': [0.009382663107648216, nan], 'true,true,true': [0.009382663107648216, nan]}, {'': [0.012318146856161366, 3.0385051200267444e-17], 'true,true': [-3.947459643111668e-17, nan], 'true,true,true': [-3.947459643111668e-17, nan], 'true,false': [4.625929269271485e-18, nan], 'true': [-3.947459643111668e-17, 4.625929269271485e-18], 'true,false,true': [4.625929269271485e-18, nan]}, {'': [0.010921631498145557, 2.2739507733286338e-17], 'true,false': [-2.2204460492503132e-17, nan], 'true': [0.013409296558501834, -2.2204460492503132e-17], 'true,false,true': [-2.2204460492503132e-17, nan]}, {'': [0.015551721501009735, 0.0], 'true,true,false': [0.0003569124460333912, nan], 'true': [0.015551721501009735, nan], 'true,true': [0.016440583810681073, 0.0003569124460333912], 'true,true,true': [0.016440583810681073, nan]}, {'': [0.010363284007558269, 2.546142299166438e-05], 'true': [0.010363284007558269, nan], 'true,true': [5.470724560657164e-06, 0.00014635800544492982], 'true,true,false': [0.00014635800544492982, nan]}, {'': [0.005277027767716283, 1.814042480808247e-05], 'true': [0.005277027767716283, nan], 'true,true': [0.005277027767716283, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- director(B), actor(A).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true;genre(B, C).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048763;  // std dev = 8,30e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1254446385283914;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360624;  // std dev = 6,05e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783621;  // std dev = 5,05e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926101;  // std dev = 3,33e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08518475138839682;  // std dev = 4,94e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( genre(B, C) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253542;  // std dev = 5,37e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.1685385055805888;  // std dev = 0,101, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07877675473109164;  // std dev = 5,05e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return 0.1779081204146581;  // std dev = 0,014, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333707;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1533599153781432;  // std dev = 0,012, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08122445175243802;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420267;  // std dev = 3,65e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13448823347888306;  // std dev = 0,011, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07325318526365443;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06419184008202626;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064362
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.309 seconds
Total inference time: 2.578 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06396
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.163 seconds
Refined model CLL: -0.06396


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064362
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.186 seconds
Total inference time: 2.578 seconds
AUC ROC: 1.0
Total revision time: 5.186
Best scored revision CLL: -0.06396


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:43:16
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 1.242, 'Inference time': 3.022, 'CLL': -0.075902, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 5.186, 'Inference time': 2.578, 'CLL': -0.064362, 'AUC ROC': 1.0}


