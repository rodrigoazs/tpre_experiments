Starting experiment #5 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.8581489350995117;  // std dev = 2,46e-07, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return 0.18072958026080266;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.5581489350995124;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( publication(F, B), ta(G, A, H) )
%   | | | then return 0.7867203636709403;  // std dev = 1,363, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return 0.5486251255757024;  // std dev = 2,996, 42,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=29 */
%   else return -0.14185106490048804;  // std dev = 0,000, 175,000 (wgt'ed) examples reached here.  /* #neg=175 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( ta(G, A, H) )
%   | | then return 0.7337568477311353;  // std dev = 0,108, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( publication(I, A), publication(I, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2,98e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.51849199703477;  // std dev = 1,665, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | else if ( publication(J, B), tempadvisedby(K, B) )
%   | | then if ( publication(J, A) )
%   | | | then return 0.636140078877621;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.27764771065783106;  // std dev = 2,384, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( publication(L, B) )
%   | | | then return 0.6206802595540454;  // std dev = 2,277, 45,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=39 */
%   | | | else return 0.3858488620892907;  // std dev = 2,045, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   else if ( professor(B) )
%   | then return -0.10257537340186089;  // std dev = 0,162, 31,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 164,000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.3207201224889452;  // std dev = 0,860, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5672204648856343;  // std dev = 0,075, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( publication(E, A), publication(F, B) )
%   | | then if ( publication(E, G), professor(G) )
%   | | | then return 0.08042851616724125;  // std dev = 1,818, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.5496149624149116;  // std dev = 0,896, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( ta(H, A, I), publication(J, B) )
%   | | | then return 0.3537381983316544;  // std dev = 2,503, 35,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=26 */
%   | | | else return 0.5096981582767088;  // std dev = 2,547, 43,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=35 */
%   else return -0.11269116133619908;  // std dev = 0,011, 178,000 (wgt'ed) examples reached here.  /* #neg=178 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), tempadvisedby(D, E) )
%   | | then return 0.269104370161692;  // std dev = 0,929, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(F, B) )
%   | | | then return 0.38423926969073563;  // std dev = 0,969, 27,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return 0.43879605015166595;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( publication(G, A) )
%   | | then if ( publication(G, H), ta(I, H, J) )
%   | | | then return 0.10899149130535299;  // std dev = 2,605, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return -0.01638466917234964;  // std dev = 1,673, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( tempadvisedby(K, B), publication(L, K) )
%   | | | then return 0.13358194764327738;  // std dev = 1,315, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.34047237851122236;  // std dev = 3,173, 64,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=51 */
%   else return -0.10178318299836982;  // std dev = 0,009, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.30724578286498605;  // std dev = 0,993, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return 0.19786713994875263;  // std dev = 1,289, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( publication(C, F), professor(F) )
%   | | | then return -0.09316275235280146;  // std dev = 2,005, 28,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return 0.38428559711095495;  // std dev = 0,971, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( ta(G, A, H), publication(I, B) )
%   | | then if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | | then return 0.31146571875206985;  // std dev = 0,959, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.12236901979840392;  // std dev = 2,315, 24,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | else if ( tempadvisedby(M, B) )
%   | | | then return 0.26679876146778014;  // std dev = 2,330, 28,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | | else return 0.49327766562317593;  // std dev = 0,284, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.09281766906866999;  // std dev = 0,008, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, A), publication(D, B) )
%   | then if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then if ( publication(H, E) )
%   | | | then return 0.1294071991176435;  // std dev = 0,940, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.26048344387816363;  // std dev = 0,005, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2941260793751493;  // std dev = 0,106, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( publication(I, A), tempadvisedby(J, B) )
%   | | then if ( ta(K, J, L), publication(M, B) )
%   | | | then return -0.39324507984494356;  // std dev = 0,389, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.05091146976952275;  // std dev = 1,880, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( hasposition(N, C), projectmember(P, N) )
%   | | | then return 0.16641169521678742;  // std dev = 3,666, 76,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=56 */
%   | | | else return -0.03195557281763679;  // std dev = 1,912, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   else if ( student(B) )
%   | then return -0.08513114971033581;  // std dev = 9,42e-08, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | else return -0.10531792012332078;  // std dev = 0,166, 27,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( ta(F, A, G), ta(H, E, I) )
%   | | | then return 0.11924169326342123;  // std dev = 0,957, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.23519793479567214;  // std dev = 0,130, 26,000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.09276389829938407;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( tempadvisedby(J, B), publication(K, J) )
%   | | then if ( ta(L, J, M) )
%   | | | then return 0.05495424001903593;  // std dev = 0,786, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13828329869826395;  // std dev = 1,103, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( ta(N, A, P), publication(Q, A) )
%   | | | then return 0.15506927739777254;  // std dev = 1,844, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.03878247803619728;  // std dev = 4,394, 98,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=59 */
%   else return -0.07874554675199166;  // std dev = 0,000701, 184,000 (wgt'ed) examples reached here.  /* #neg=184 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( tempadvisedby(F, B) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.12494054109499235;  // std dev = 1,390, 18,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return 0.18572177636029277;  // std dev = 1,510, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else if ( ta(H, I, D), publication(E, I) )
%   | | | then return 0.344827009722125;  // std dev = 0,350, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1863355056347437;  // std dev = 1,344, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | then if ( publication(L, A) )
%   | | | then return 0.05217384630019154;  // std dev = 1,305, 28,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | | | else return -0.08323054380201715;  // std dev = 2,346, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( ta(M, A, N) )
%   | | | then return -0.15382133021782643;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.1908172299255732;  // std dev = 2,295, 40,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=33 */
%   else return -0.07322654634345621;  // std dev = 0,000785, 180,000 (wgt'ed) examples reached here.  /* #neg=180 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( publication(F, B), tempadvisedby(G, B) )
%   | | then if ( publication(H, G), publication(I, A) )
%   | | | then return 6.240297428972234E-4;  // std dev = 1,198, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.13645214810327316;  // std dev = 2,764, 58,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=47 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.3382720937140067;  // std dev = 0,880, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.16733602577747986;  // std dev = 1,968, 40,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=35 */
%   | else if ( publication(K, A), publication(K, B) )
%   | | then return 0.16933027799082598;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then return -0.44309854751314715;  // std dev = 0,422, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06589458448234471;  // std dev = 1,753, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   else if ( ta(M, A, N) )
%   | then return -0.07709096345458756;  // std dev = 0,056, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.064815048571071;  // std dev = 0,044, 150,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=1 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then if ( ta(C, F, G), tempadvisedby(F, H) )
%   | | then if ( ta(I, A, G) )
%   | | | then return -0.4011247517989677;  // std dev = 1,201, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.004681214700240763;  // std dev = 1,265, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( publication(J, B) )
%   | | | then return -0.006214590203971727;  // std dev = 2,290, 27,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.4126656928411904;  // std dev = 0,103, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(K, A) )
%   | | then if ( projectmember(L, B) )
%   | | | then return -0.21821215291698534;  // std dev = 1,129, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.08409114676629059;  // std dev = 2,248, 52,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=40 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.10149833256438819;  // std dev = 2,557, 40,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=32 */
%   | | | else return 0.3183101239583643;  // std dev = 0,214, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.06425451605052927;  // std dev = 0,004, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(D, A).;true;true
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), professor(E).;false;false
0;true,false,false;publication(F, B), ta(G, A, H).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
1;true,true;ta(G, A, H).;false;true
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true;tempadvisedby(D, B), ta(E, D, F).;true;true
1;false;professor(B).;false;false
1;true,false,true;publication(J, A).;false;false
1;true,true,false;publication(I, A), publication(I, B).;false;false
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A), publication(F, B).;true;true
2;true;publication(C, A), publication(C, B).;true;true
2;true,false,true;publication(E, G), professor(G).;false;false
2;true,false,false;ta(H, A, I), publication(J, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true,true;publication(C, D), tempadvisedby(D, E).;false;true
3;true,false;publication(G, A).;true;true
3;true;publication(C, B), publication(C, A).;true;true
3;true,false,true;publication(G, H), ta(I, H, J).;false;false
3;true,true,false;tempadvisedby(F, B).;false;false
3;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,false;ta(G, A, H), publication(I, B).;true;true
4;true;publication(C, A), publication(D, B).;true;true
4;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false,false;tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, G).;true;false
5;true,true,true;publication(H, E).;false;false
5;true,false;publication(I, A), tempadvisedby(J, B).;true;true
5;true;publication(D, A), publication(D, B).;true;true
5;false;student(B).;false;false
5;true,false,true;ta(K, J, L), publication(M, B).;false;false
5;true,false,false;hasposition(N, C), projectmember(P, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, D), tempadvisedby(E, D).;true;false
6;true,true,true;ta(F, A, G), ta(H, E, I).;false;false
6;true,false;tempadvisedby(J, B), publication(K, J).;true;true
6;true;publication(C, B), publication(C, A).;true;true
6;true,false,true;ta(L, J, M).;false;false
6;true,false,false;ta(N, A, P), publication(Q, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true;tempadvisedby(F, B).;true;true
7;true,true,true;publication(G, A).;false;false
7;true,false;tempadvisedby(J, B), publication(K, B).;true;true
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,false,true;publication(L, A).;false;false
7;true,true,false;ta(H, I, D), publication(E, I).;false;false
7;true,false,false;ta(M, A, N).;false;false
8;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
8;true,true;publication(F, B), tempadvisedby(G, B).;true;true
8;true,true,true;publication(H, G), publication(I, A).;false;false
8;true,false;publication(K, A), publication(K, B).;false;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;false;ta(M, A, N).;false;false
8;true,true,false;tempadvisedby(J, B).;false;false
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;ta(C, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;ta(I, A, G).;false;false
9;true,false;publication(K, A).;true;true
9;true;ta(C, A, D), tempadvisedby(E, B).;true;true
9;true,false,true;projectmember(L, B).;false;false
9;true,true,false;publication(J, B).;false;false
9;true,false,false;publication(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 4,21e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839105;  // std dev = 8,02e-08, 117,000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 7,15e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878366;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926105;  // std dev = 1,83e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(H, B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 4,08e-08, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109155;  // std dev = 6,83e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.16040698284470312;  // std dev = 0,484, 60,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07331070770492083;  // std dev = 0,006, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then if ( movie(F, G), movie(H, A) )
%   | | | then return 0.1427217797165767;  // std dev = 0,405, 59,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06847143204306266;  // std dev = 0,000521, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.11797239573991557;  // std dev = 0,501, 61,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06418529646281117;  // std dev = 4,83e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070095
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.356 seconds
Total inference time: 2.689 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06518
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.449 seconds
Parameter learned model CLL: -0.06518


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [4.21e-08, 120, 0], 'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(E, B)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(B)', 'true,false,true': 'movie(E, A)'}, {'true,true': [0.0, 0, 56], 'false,false': [8.02e-08, 117, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0], 'false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [1.03e-07, 0, 56], 'false': [7.15e-08, 96, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false': [0.0, 101, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.0, 0, 56], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 99, 0], 'true,true,false,true': [2.63e-09, 6, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false,true': 'movie(H, B)'}, {'false,true': [4.08e-08, 97, 0], 'true,true,true': [0.0, 0, 56], 'false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,true': [0.0, 1, 0], 'false': [6.83e-08, 123, 0], 'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.006, 93, 0], 'true,true,true': [0.484, 4, 56], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'true,true,true': 'movie(F, G), movie(H, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.000521, 116, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.405, 3, 56]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [4.83e-08, 103, 0], 'true,true': [0.501, 5, 56]}]]
[{'': [0.09876543209876519, 1.4802973661668754e-17], 'true,false': [-7.93016446160826e-18, nan], 'true': [-1.2688263138573217e-16, -7.93016446160826e-18], 'true,false,true': [-7.93016446160826e-18, nan]}, {'': [0.023767921937009287, 5.457028426123651e-17], 'true,false': [0.0, nan], 'true': [-1.9032394707859825e-16, 0.0], 'false': [0.0, 5.5036696947229984e-17], 'true,false,true': [nan, 0.0]}, {'': [0.03354584670317022, 5.3198186596622086e-17], 'true,false': [0.0, nan], 'true': [1.9032394707859825e-16, 0.0], 'true,true': [1.9032394707859825e-16, nan], 'true,false,true': [0.0, nan]}, {'': [0.026614824932909363, -4.61676901329273e-17], 'true,false': [0.0, nan], 'true': [-3.489272363107635e-16, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-3.489272363107635e-16, nan]}, {'': [0.014938376650555559, 3.3643121958338078e-18], 'true': [0.014938376650555559, nan], 'true,true': [-1.2688263138573217e-16, 1.1564823173178713e-18], 'true,true,false': [1.1564823173178713e-18, nan]}, {'': [0.005590808503434667, 1.602383746881669e-17], 'true,true': [-3.172065784643304e-17, nan], 'true,false': [0.0, nan], 'true': [-3.172065784643304e-17, 0.0], 'false': [1.7168397288017885e-17, nan], 'true,false,true': [0.0, nan]}, {'': [0.0014349399424219715, 3.791005449939559e-17], 'true,false': [0.0, nan], 'true': [-1.586032892321652e-17, 0.0], 'true,true': [-1.586032892321652e-17, nan]}, {'': [0.0038995587066308272, 3.825287127093022e-07], 'true': [0.0038995587066308272, nan], 'true,true': [0.0038995587066308272, nan]}, {'': [0.0027758244720160357, 2.712283708394442e-07], 'true': [0.0027758244720160357, nan], 'true,true': [0.0027758244720160357, nan], 'true,true,true': [0.0027758244720160357, nan]}, {'': [0.004113689463153099, 2.2635615065173094e-17], 'true': [0.004113689463153099, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
1;true;movie(D, A), movie(D, B).;true;true
1;false;director(B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;true;movie(D, A), movie(D, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.14185106490048763;  // std dev = 8,56e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.1254446385283914;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360636;  // std dev = 3,48e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3059474498976705;  // std dev = 0,077, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.3207118471601494;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926104;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.09269127618926104;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.25798848340337693;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.25517224256948956;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.12235439229466144;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839682;  // std dev = 1,49e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( actor(A) )
%   | | then return -0.0851847513883968;  // std dev = 1,86e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.21174510340880556;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.20975771563253548;  // std dev = 6,97e-09, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.10932881235183156;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1785527856284572;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.1770964977452775;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.10012337031419744;  // std dev = 0,001, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07324622576333704;  // std dev = 7,45e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.07324622576333704;  // std dev = 7,45e-09, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.153847703184319;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.15274385809367083;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.0914566456737734;  // std dev = 0,001, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11982312707724055;  // std dev = 0,055, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.06532903603380015;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069543
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.525 seconds
Total inference time: 2.508 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064646
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.777 seconds
Refined model CLL: -0.064646


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069543
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.107 seconds
Total inference time: 2.508 seconds
AUC ROC: 1.0
Total revision time: 7.107
Best scored revision CLL: -0.064646


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 03:47:38
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 1.356, 'Inference time': 2.689, 'CLL': -0.070095, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 7.107, 'Inference time': 2.508, 'CLL': -0.069543, 'AUC ROC': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(D, A).;true;true
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), professor(E).;false;false
0;true,false,false;publication(F, B), ta(G, A, H).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
1;true,true;ta(G, A, H).;false;true
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true;tempadvisedby(D, B), ta(E, D, F).;true;true
1;false;professor(B).;false;false
1;true,false,true;publication(J, A).;false;false
1;true,true,false;publication(I, A), publication(I, B).;false;false
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A), publication(F, B).;true;true
2;true;publication(C, A), publication(C, B).;true;true
2;true,false,true;publication(E, G), professor(G).;false;false
2;true,false,false;ta(H, A, I), publication(J, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true,true;publication(C, D), tempadvisedby(D, E).;false;true
3;true,false;publication(G, A).;true;true
3;true;publication(C, B), publication(C, A).;true;true
3;true,false,true;publication(G, H), ta(I, H, J).;false;false
3;true,true,false;tempadvisedby(F, B).;false;false
3;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,false;ta(G, A, H), publication(I, B).;true;true
4;true;publication(C, A), publication(D, B).;true;true
4;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false,false;tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, G).;true;false
5;true,true,true;publication(H, E).;false;false
5;true,false;publication(I, A), tempadvisedby(J, B).;true;true
5;true;publication(D, A), publication(D, B).;true;true
5;false;student(B).;false;false
5;true,false,true;ta(K, J, L), publication(M, B).;false;false
5;true,false,false;hasposition(N, C), projectmember(P, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, D), tempadvisedby(E, D).;true;false
6;true,true,true;ta(F, A, G), ta(H, E, I).;false;false
6;true,false;tempadvisedby(J, B), publication(K, J).;true;true
6;true;publication(C, B), publication(C, A).;true;true
6;true,false,true;ta(L, J, M).;false;false
6;true,false,false;ta(N, A, P), publication(Q, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true;tempadvisedby(F, B).;true;true
7;true,true,true;publication(G, A).;false;false
7;true,false;tempadvisedby(J, B), publication(K, B).;true;true
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,false,true;publication(L, A).;false;false
7;true,true,false;ta(H, I, D), publication(E, I).;false;false
7;true,false,false;ta(M, A, N).;false;false
8;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
8;true,true;publication(F, B), tempadvisedby(G, B).;true;true
8;true,true,true;publication(H, G), publication(I, A).;false;false
8;true,false;publication(K, A), publication(K, B).;false;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;false;ta(M, A, N).;false;false
8;true,true,false;tempadvisedby(J, B).;false;false
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;ta(C, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;ta(I, A, G).;false;false
9;true,false;publication(K, A).;true;true
9;true;ta(C, A, D), tempadvisedby(E, B).;true;true
9;true,false,true;projectmember(L, B).;false;false
9;true,true,false;publication(J, B).;false;false
9;true,false,false;publication(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,43e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 9,19e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 4,47e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0927793918334829;  // std dev = 0,011, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(H, B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08517788493618564;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877085859958732;  // std dev = 3,65e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.15362686741634482;  // std dev = 0,584, 64,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324111087043049;  // std dev = 1,49e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then if ( movie(F, G), movie(H, A) )
%   | | | then return 0.14030990198046328;  // std dev = 0,465, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842250066713415;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.12671534629914258;  // std dev = 0,395, 61,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06433240955137588;  // std dev = 0,014, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070298
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.413 seconds
Total inference time: 2.518 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06595
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.357 seconds
Parameter learned model CLL: -0.06595


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [8.43e-08, 106, 0], 'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(E, B)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(B)', 'true,false,true': 'movie(E, A)'}, {'true,true': [0.0, 0, 58], 'false,false': [0.0, 97, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 4, 0], 'false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [1.19e-07, 0, 58], 'false': [9.19e-08, 118, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'false': [4.47e-08, 101, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.0, 0, 58], 'true,false': [0.0, 0, 0], 'false': [0.011, 126, 0], 'true,true,false,true': [0.0, 8, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false,true': 'movie(H, B)'}, {'false,true': [0.0, 110, 0], 'true,true,true': [0.0, 0, 58], 'false,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,true': [0.0, 3, 0], 'false': [3.65e-08, 118, 0], 'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [1.49e-08, 107, 0], 'true,true,true': [0.584, 6, 58], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'true,true,true': 'movie(F, G), movie(H, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 123, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.465, 4, 58]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [0.014, 96, 0], 'true,true': [0.395, 3, 58]}]]
[{'': [0.11628425038984136, 6.70323335622736e-17], 'true,false': [-9.25185853854297e-18, nan], 'true': [-3.675221047035001e-16, -9.25185853854297e-18], 'true,false,true': [-9.25185853854297e-18, nan]}, {'': [0.04308576245887642, -1.1445598192011922e-17], 'true,false': [0.0, nan], 'true': [-1.2250736823450003e-16, 0.0], 'false': [nan, -1.1445598192011922e-17], 'true,false,true': [nan, 0.0]}, {'': [0.020846347594112944, 7.150588972162025e-17], 'true,false': [2.3129646346357427e-18, nan], 'true': [2.4501473646900006e-16, 2.3129646346357427e-18], 'true,true': [2.4501473646900006e-16, nan], 'true,false,true': [2.3129646346357427e-18, nan]}, {'': [0.01968953885342776, 1.97861529141117e-17], 'true,false': [0.0, nan], 'true': [-3.3689526264487507e-16, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-3.3689526264487507e-16, nan]}, {'': [0.018204452266139013, 9.705458446195533e-07], 'true': [0.018204452266139013, nan], 'true,true': [-1.5313421029312505e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.006991557995307807, -1.0092936587501423e-18], 'true,true': [-3.062684205862501e-17, nan], 'true,false': [0.0, nan], 'true': [-3.062684205862501e-17, 0.0], 'false': [-2.0185873175002845e-18, nan], 'true,false,true': [0.0, nan]}, {'': [0.0038930052303991457, 1.129040364025583e-17], 'true,false': [0.0, nan], 'true': [-2.2970131543968756e-17, 0.0], 'true,true': [-2.2970131543968756e-17, nan]}, {'': [0.00532462762850856, 2.0751832235984233e-18], 'true': [0.00532462762850856, nan], 'true,true': [0.00532462762850856, nan]}, {'': [0.0034818500845773177, -2.3468128975816318e-17], 'true': [0.0034818500845773177, nan], 'true,true': [0.0034818500845773177, nan], 'true,true,true': [0.0034818500845773177, nan]}, {'': [0.002562743939350544, 1.984164674870975e-06], 'true': [0.002562743939350544, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
1;true;movie(D, A), movie(D, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;true;movie(D, A), movie(D, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839127;  // std dev = 0,000, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.11231637819360622;  // std dev = 7,88e-08, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1015963294878363;  // std dev = 2,98e-08, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2831297450374759;  // std dev = 0,119, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.3207118471601495;  // std dev = 2,11e-08, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926089;  // std dev = 6,66e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.2576578656279193;  // std dev = 0,026, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12341331800382298;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839683;  // std dev = 5,58e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.211514463341506;  // std dev = 0,023, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10962908459329758;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0787767547310916;  // std dev = 5,77e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17838548067743018;  // std dev = 0,020, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09985479653414256;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.0732462257633371;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15372201102347263;  // std dev = 0,018, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0916715665602972;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06842697784420265;  // std dev = 5,37e-08, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13477090742777842;  // std dev = 0,016, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08260462453301085;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06419184008202626;  // std dev = 0,000, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067514
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.228 seconds
Total inference time: 1.956 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064279
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.416 seconds
Refined model CLL: -0.064279


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067514
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.414 seconds
Total inference time: 1.956 seconds
AUC ROC: 1.0
Total revision time: 5.414
Best scored revision CLL: -0.064279


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 03:47:49
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 1.413, 'Inference time': 2.518, 'CLL': -0.070298, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 5.414, 'Inference time': 1.956, 'CLL': -0.067514, 'AUC ROC': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(D, A).;true;true
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), professor(E).;false;false
0;true,false,false;publication(F, B), ta(G, A, H).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
1;true,true;ta(G, A, H).;false;true
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true;tempadvisedby(D, B), ta(E, D, F).;true;true
1;false;professor(B).;false;false
1;true,false,true;publication(J, A).;false;false
1;true,true,false;publication(I, A), publication(I, B).;false;false
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A), publication(F, B).;true;true
2;true;publication(C, A), publication(C, B).;true;true
2;true,false,true;publication(E, G), professor(G).;false;false
2;true,false,false;ta(H, A, I), publication(J, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true,true;publication(C, D), tempadvisedby(D, E).;false;true
3;true,false;publication(G, A).;true;true
3;true;publication(C, B), publication(C, A).;true;true
3;true,false,true;publication(G, H), ta(I, H, J).;false;false
3;true,true,false;tempadvisedby(F, B).;false;false
3;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,false;ta(G, A, H), publication(I, B).;true;true
4;true;publication(C, A), publication(D, B).;true;true
4;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false,false;tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, G).;true;false
5;true,true,true;publication(H, E).;false;false
5;true,false;publication(I, A), tempadvisedby(J, B).;true;true
5;true;publication(D, A), publication(D, B).;true;true
5;false;student(B).;false;false
5;true,false,true;ta(K, J, L), publication(M, B).;false;false
5;true,false,false;hasposition(N, C), projectmember(P, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, D), tempadvisedby(E, D).;true;false
6;true,true,true;ta(F, A, G), ta(H, E, I).;false;false
6;true,false;tempadvisedby(J, B), publication(K, J).;true;true
6;true;publication(C, B), publication(C, A).;true;true
6;true,false,true;ta(L, J, M).;false;false
6;true,false,false;ta(N, A, P), publication(Q, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true;tempadvisedby(F, B).;true;true
7;true,true,true;publication(G, A).;false;false
7;true,false;tempadvisedby(J, B), publication(K, B).;true;true
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,false,true;publication(L, A).;false;false
7;true,true,false;ta(H, I, D), publication(E, I).;false;false
7;true,false,false;ta(M, A, N).;false;false
8;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
8;true,true;publication(F, B), tempadvisedby(G, B).;true;true
8;true,true,true;publication(H, G), publication(I, A).;false;false
8;true,false;publication(K, A), publication(K, B).;false;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;false;ta(M, A, N).;false;false
8;true,true,false;tempadvisedby(J, B).;false;false
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;ta(C, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;ta(I, A, G).;false;false
9;true,false;publication(K, A).;true;true
9;true;ta(C, A, D), tempadvisedby(E, B).;true;true
9;true,false,true;projectmember(L, B).;false;false
9;true,true,false;publication(J, B).;false;false
9;true,false,false;publication(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048766;  // std dev = 5,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.141851064900488;  // std dev = 0,000, 308,000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.7194734122109556;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839147;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.27264175076226166;  // std dev = 4,301, 104,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=49 */
%   | else return -0.125444638528392;  // std dev = 0,000, 300,000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5845351050105491;  // std dev = 0,631, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.12904876111743085;  // std dev = 0,169, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11619232803218255;  // std dev = 0,226, 310,000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.4409160978096016;  // std dev = 0,660, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12107123930392572;  // std dev = 0,160, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10532227863917966;  // std dev = 0,213, 291,000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.3375850526940342;  // std dev = 0,046, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.10512324542985275;  // std dev = 0,142, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09565007524171992;  // std dev = 0,183, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.24219946124705696;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(H, B) )
%   | | | then return -0.08147005705750943;  // std dev = 1,49e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08436537114857143;  // std dev = 0,000, 270,000 (wgt'ed) examples reached here.  /* #neg=270 */
%   | else return 0.08618198055636614;  // std dev = 2,339, 108,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=49 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.23186841847531622;  // std dev = 0,051, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.09657244652492997;  // std dev = 0,025, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08368573718128637;  // std dev = 0,269, 278,000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.12372640779666894;  // std dev = 1,971, 237,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07898421108651141;  // std dev = 0,296, 311,000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then if ( movie(F, G), movie(H, A) )
%   | | | then return 0.10902435419821216;  // std dev = 1,089, 157,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=129 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.03616863901917917;  // std dev = 0,108, 389,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=49 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.11180792470855018;  // std dev = 1,778, 224,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06773513020163614;  // std dev = 0,182, 282,000 (wgt'ed) examples reached here.  /* #neg=282 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066203
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.003 seconds
Total inference time: 2.644 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080988
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.764 seconds
Parameter learned model CLL: -0.080988


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 308, 0], 'true,true': [1.09e-06, 0, 178], 'true,false,true,true': [5.58e-08, 53, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(E, B)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(B)', 'true,false,true': 'movie(E, A)'}, {'true,true': [0.0, 0, 129], 'false,false': [0.0, 300, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 36, 0], 'false,true': [4.301, 55, 49], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.631, 0, 178], 'false': [0.226, 310, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.169, 58, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.66, 0, 178], 'false': [0.213, 291, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.16, 58, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.046, 0, 178], 'true,false': [0.0, 0, 0], 'false': [0.183, 261, 0], 'true,true,false,true': [0.142, 57, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false,true': 'movie(H, B)'}, {'false,true': [0.0, 270, 0], 'true,true,true': [0.0, 0, 129], 'false,false': [2.339, 59, 49], 'true,false,true,true': [1.49e-08, 39, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,true': [0.025, 79, 0], 'false': [0.269, 278, 0], 'true,true,true': [0.051, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.296, 311, 0], 'true,true,true': [1.971, 59, 178], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'true,true,true': 'movie(F, G), movie(H, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.108, 340, 49], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [1.089, 28, 129]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [0.182, 282, 0], 'true,true': [1.778, 46, 178]}]]
[{'': [0.17679578718540348, -3.460435401429059e-17], 'true,false': [5.86532918669894e-17, nan], 'true': [6.706246045376226e-15, 5.86532918669894e-17], 'true,false,true': [5.86532918669894e-17, nan]}, {'': [0.12177369931637186, 0.0760835695295307], 'true,false': [-1.850371707708594e-17, nan], 'true': [-1.6524249668839539e-15, -1.850371707708594e-17], 'false': [0.1778776027268546, -8.585724723767877e-17], 'true,false,true': [nan, -1.850371707708594e-17]}, {'': [0.09619804264680613, 0.00016409724426634834], 'true,false': [0.0004932851246405646, nan], 'true': [0.0022398907320854583, 0.0004932851246405646], 'true,true': [0.0022398907320854583, nan], 'true,false,true': [0.0004932851246405646, nan]}, {'': [0.06049614474044424, 0.00015629431416911294], 'true,false': [0.00044066411700828675, nan], 'true': [0.0024456044500571956, 0.00044066411700828675], 'true,true': [0.0024456044500571956, nan], 'true,false,true': [0.00044066411700828675, nan]}, {'': [0.037680669786750366, 0.0001277056489347585], 'true': [0.037680669786750366, nan], 'true,true': [0.0020960582962767653, 0.00035206159964858033], 'true,true,false': [0.00035206159964858033, nan]}, {'': [0.01867408609931292, 0.020413352484597497], 'true,true': [-1.4458718460234598e-16, nan], 'true,false': [5.693451408334136e-18, nan], 'true': [-1.4458718460234598e-16, 5.693451408334136e-18], 'false': [-1.4802973661668754e-17, 0.05067073428639977], 'true,false,true': [5.693451408334136e-18, nan]}, {'': [0.024943812433955072, 0.00026045000702164825], 'true,false': [0.0006144249399797391, nan], 'true': [0.00258215847839407, 0.0006144249399797391], 'true,true': [0.00258215847839407, nan]}, {'': [0.016396938322624992, 0.0002819777270006507], 'true': [0.016396938322624992, nan], 'true,true': [0.016396938322624992, nan]}, {'': [0.00755134353182258, 0.01160335833657522], 'true': [0.00755134353182258, nan], 'true,true': [0.00755134353182258, nan], 'true,true,true': [0.00755134353182258, nan]}, {'': [0.014112492693068301, 0.00011717696863947927], 'true': [0.014112492693068301, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
1;true;movie(D, A), movie(D, B).;true;true
1;false;director(B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;true;movie(D, A), movie(D, B).;true;true
5;false;actor(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,99e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return -0.14185106490048796;  // std dev = 0,000, 304,000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.7194734122109556;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.12544463852839147;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( director(A) )
%   | | | then return -0.12544463852839136;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.7194734122109553;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.12544463852839127;  // std dev = 3,80e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.12544463852839186;  // std dev = 0,000, 250,000 (wgt'ed) examples reached here.  /* #neg=250 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462834;  // std dev = 5,78e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.1123163781936063;  // std dev = 4,08e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.11231637819360689;  // std dev = 0,000, 323,000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583127;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10159632948783621;  // std dev = 4,08e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.10159632948783641;  // std dev = 0,000, 286,000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014906;  // std dev = 3,48e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.09269127618926076;  // std dev = 7,30e-08, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else return -0.0851847513883968;  // std dev = 2,04e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 8,94e-08, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.2551722425694897;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08518475138839686;  // std dev = 1,05e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253498;  // std dev = 2,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07877675473109176;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07877675473109147;  // std dev = 6,66e-08, 258,000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.0732462257633369;  // std dev = 1,07e-07, 309,000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06842697784420268;  // std dev = 2,58e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06842697784420278;  // std dev = 0,000, 284,000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080108;  // std dev = 9,88e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.06419184008202616;  // std dev = 6,50e-08, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.623 seconds
Total inference time: 2.554 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065435
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.446 seconds
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.836 seconds
Total inference time: 2.554 seconds
AUC ROC: 1.0
Total revision time: 7.836
Best scored revision CLL: -0.065435


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 03:48:03
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 2.003, 'Inference time': 2.644, 'CLL': -0.066203, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 7.836, 'Inference time': 2.554, 'CLL': -0.063555, 'AUC ROC': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(D, A).;true;true
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), professor(E).;false;false
0;true,false,false;publication(F, B), ta(G, A, H).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
1;true,true;ta(G, A, H).;false;true
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true;tempadvisedby(D, B), ta(E, D, F).;true;true
1;false;professor(B).;false;false
1;true,false,true;publication(J, A).;false;false
1;true,true,false;publication(I, A), publication(I, B).;false;false
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A), publication(F, B).;true;true
2;true;publication(C, A), publication(C, B).;true;true
2;true,false,true;publication(E, G), professor(G).;false;false
2;true,false,false;ta(H, A, I), publication(J, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true,true;publication(C, D), tempadvisedby(D, E).;false;true
3;true,false;publication(G, A).;true;true
3;true;publication(C, B), publication(C, A).;true;true
3;true,false,true;publication(G, H), ta(I, H, J).;false;false
3;true,true,false;tempadvisedby(F, B).;false;false
3;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,false;ta(G, A, H), publication(I, B).;true;true
4;true;publication(C, A), publication(D, B).;true;true
4;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false,false;tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, G).;true;false
5;true,true,true;publication(H, E).;false;false
5;true,false;publication(I, A), tempadvisedby(J, B).;true;true
5;true;publication(D, A), publication(D, B).;true;true
5;false;student(B).;false;false
5;true,false,true;ta(K, J, L), publication(M, B).;false;false
5;true,false,false;hasposition(N, C), projectmember(P, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, D), tempadvisedby(E, D).;true;false
6;true,true,true;ta(F, A, G), ta(H, E, I).;false;false
6;true,false;tempadvisedby(J, B), publication(K, J).;true;true
6;true;publication(C, B), publication(C, A).;true;true
6;true,false,true;ta(L, J, M).;false;false
6;true,false,false;ta(N, A, P), publication(Q, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true;tempadvisedby(F, B).;true;true
7;true,true,true;publication(G, A).;false;false
7;true,false;tempadvisedby(J, B), publication(K, B).;true;true
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,false,true;publication(L, A).;false;false
7;true,true,false;ta(H, I, D), publication(E, I).;false;false
7;true,false,false;ta(M, A, N).;false;false
8;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
8;true,true;publication(F, B), tempadvisedby(G, B).;true;true
8;true,true,true;publication(H, G), publication(I, A).;false;false
8;true,false;publication(K, A), publication(K, B).;false;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;false;ta(M, A, N).;false;false
8;true,true,false;tempadvisedby(J, B).;false;false
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;ta(C, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;ta(I, A, G).;false;false
9;true,false;publication(K, A).;true;true
9;true;ta(C, A, D), tempadvisedby(E, B).;true;true
9;true,false,true;projectmember(L, B).;false;false
9;true,true,false;publication(J, B).;false;false
9;true,false,false;publication(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,60e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360622;  // std dev = 6,50e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783621;  // std dev = 5,16e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.32071184716014944;  // std dev = 3,73e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 1,05e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(H, B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 5,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2097577156325355;  // std dev = 7,90e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109165;  // std dev = 4,41e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.15666035705069675;  // std dev = 0,480, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333707;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then if ( movie(F, G), movie(H, A) )
%   | | | then return 0.13140488514938936;  // std dev = 0,509, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420267;  // std dev = 4,84e-09, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.1289594741568979;  // std dev = 0,324, 47,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0643153543599963;  // std dev = 0,007, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069246
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.29 seconds
Total inference time: 3.089 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067042
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.377 seconds
Parameter learned model CLL: -0.067042


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [7.6e-08, 79, 0], 'true,true': [2.23e-07, 0, 45], 'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(E, B)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(B)', 'true,false,true': 'movie(E, A)'}, {'true,true': [0.0, 0, 45], 'false,false': [0.0, 97, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 5, 0], 'false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [6.5e-08, 81, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [5.16e-08, 96, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [3.73e-09, 0, 45], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 84, 0], 'true,true,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false,true': 'movie(H, B)'}, {'false,true': [5.16e-08, 88, 0], 'true,true,true': [0.0, 0, 45], 'false,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 6, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,true': [0.0, 5, 0], 'false': [4.41e-08, 80, 0], 'true,true,true': [7.9e-09, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.0, 73, 0], 'true,true,true': [0.48, 4, 45], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'true,true,true': 'movie(F, G), movie(H, A)'}, {'true,false': [0.0, 0, 0], 'false': [4.84e-09, 104, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.509, 5, 45]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [0.007, 86, 0], 'true,true': [0.324, 2, 45]}]]
[{'': [0.07496876301541104, 7.307797124114954e-17], 'true,false': [0.0, nan], 'true': [1.105288700071267e-15, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.06424978612186535, -1.3594567648471304e-17], 'true,false': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0], 'false': [0.0, -1.1445598192011922e-17], 'true,false,true': [nan, 0.0]}, {'': [0.040122030722945186, 5.208453695772339e-17], 'true,false': [0.0, nan], 'true': [-3.947459643111668e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-3.947459643111668e-17, nan]}, {'': [0.027973194025505906, 2.7755575615628914e-17], 'true,false': [-2.3129646346357427e-18, nan], 'true': [-4.144832625267251e-16, -2.3129646346357427e-18], 'true,false,true': [-2.3129646346357427e-18, nan], 'true,true': [-4.144832625267251e-16, nan]}, {'': [0.012812322212040247, 1.32169407693471e-18], 'true': [0.012812322212040247, nan], 'true,true': [1.973729821555834e-17, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.012025212803050028, 2.6493958542191237e-17], 'true,true': [-2.960594732333751e-17, nan], 'true,false': [1.1564823173178713e-18, nan], 'true': [-2.960594732333751e-17, 1.1564823173178713e-18], 'false': [3.027880976250427e-17, nan], 'true,false,true': [1.1564823173178713e-18, nan]}, {'': [0.00749269265292174, 2.42861286636753e-17], 'true,false': [-1.3877787807814458e-18, nan], 'true': [6.908054375445419e-17, -1.3877787807814458e-18], 'true,true': [6.908054375445419e-17, nan]}, {'': [0.004698403272997808, -5.3229871043671886e-18], 'true': [0.004698403272997808, nan], 'true,true': [0.004698403272997808, nan]}, {'': [0.005185074815514608, 1.814787636406506e-17], 'true': [0.005185074815514608, nan], 'true,true': [0.005185074815514608, nan], 'true,true,true': [0.005185074815514608, nan]}, {'': [0.0022365509843804486, 6.407426282128722e-07], 'true': [0.0022365509843804486, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
1;true;movie(D, A), movie(D, B).;true;true
1;false;director(B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;true;movie(D, A), movie(D, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.14185106490048763;  // std dev = 8,30e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.1254446385283914;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.11231637819360626;  // std dev = 4,71e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then return 0.2793715348252085;  // std dev = 0,124, 50,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926101;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.09488854462579038;  // std dev = 0,004, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.26310855142270606;  // std dev = 3,73e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.26310855142270584;  // std dev = 1,24e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.11901019665617492;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08518475138839679;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return -0.08501367796906266;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08501367796906266;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2153484272788041;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10708704690865699;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.07862983721928067;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18118628813456625;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09726989187726486;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return -0.07400614648358433;  // std dev = 0,003, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.1558393475356743;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.15583934753567433;  // std dev = 1,86e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.0890569757270835;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06842697784420271;  // std dev = 1,05e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( female(B) )
%   | | then return -0.06825893437519226;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.06825893437519226;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06825893437519226;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13641901745503482;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13641901745503485;  // std dev = 5,27e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.08209166925503149;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( female(B) )
%   | | then return -0.06404355450394088;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06404355450394088;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.223 seconds
Total inference time: 2.978 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064943
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.276 seconds
Refined model CLL: -0.064943


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.1659999999999995 seconds
Total inference time: 2.978 seconds
AUC ROC: 1.0
Total revision time: 6.1659999999999995
Best scored revision CLL: -0.064943


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 03:48:16
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 1.29, 'Inference time': 3.089, 'CLL': -0.069246, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 6.1659999999999995, 'Inference time': 2.978, 'CLL': -0.06719, 'AUC ROC': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(D, A).;true;true
0;true;publication(C, B), publication(C, A).;false;true
0;true,false,true;publication(D, E), professor(E).;false;false
0;true,false,false;publication(F, B), ta(G, A, H).;false;false
1;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
1;true,true;ta(G, A, H).;false;true
1;true,false;publication(J, B), tempadvisedby(K, B).;true;true
1;true;tempadvisedby(D, B), ta(E, D, F).;true;true
1;false;professor(B).;false;false
1;true,false,true;publication(J, A).;false;false
1;true,true,false;publication(I, A), publication(I, B).;false;false
1;true,false,false;publication(L, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;false
2;true,false;publication(E, A), publication(F, B).;true;true
2;true;publication(C, A), publication(C, B).;true;true
2;true,false,true;publication(E, G), professor(G).;false;false
2;true,false,false;ta(H, A, I), publication(J, B).;false;false
3;;advisedby(A, B) :- student(A), professor(B).;true;false
3;true,true;publication(C, D), tempadvisedby(D, E).;false;true
3;true,false;publication(G, A).;true;true
3;true;publication(C, B), publication(C, A).;true;true
3;true,false,true;publication(G, H), ta(I, H, J).;false;false
3;true,true,false;tempadvisedby(F, B).;false;false
3;true,false,false;tempadvisedby(K, B), publication(L, K).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;publication(C, B).;true;true
4;true,true,true;tempadvisedby(E, B).;false;false
4;true,false;ta(G, A, H), publication(I, B).;true;true
4;true;publication(C, A), publication(D, B).;true;true
4;true,false,true;tempadvisedby(J, B), ta(K, J, L).;false;false
4;true,true,false;publication(C, F), professor(F).;false;false
4;true,false,false;tempadvisedby(M, B).;false;false
5;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
5;true,true;tempadvisedby(E, B), ta(F, E, G).;true;false
5;true,true,true;publication(H, E).;false;false
5;true,false;publication(I, A), tempadvisedby(J, B).;true;true
5;true;publication(D, A), publication(D, B).;true;true
5;false;student(B).;false;false
5;true,false,true;ta(K, J, L), publication(M, B).;false;false
5;true,false,false;hasposition(N, C), projectmember(P, N).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, D), tempadvisedby(E, D).;true;false
6;true,true,true;ta(F, A, G), ta(H, E, I).;false;false
6;true,false;tempadvisedby(J, B), publication(K, J).;true;true
6;true;publication(C, B), publication(C, A).;true;true
6;true,false,true;ta(L, J, M).;false;false
6;true,false,false;ta(N, A, P), publication(Q, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true;tempadvisedby(F, B).;true;true
7;true,true,true;publication(G, A).;false;false
7;true,false;tempadvisedby(J, B), publication(K, B).;true;true
7;true;ta(C, A, D), publication(E, B).;true;true
7;true,false,true;publication(L, A).;false;false
7;true,true,false;ta(H, I, D), publication(E, I).;false;false
7;true,false,false;ta(M, A, N).;false;false
8;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
8;true,true;publication(F, B), tempadvisedby(G, B).;true;true
8;true,true,true;publication(H, G), publication(I, A).;false;false
8;true,false;publication(K, A), publication(K, B).;false;true
8;true;hasposition(D, C), projectmember(E, D).;true;true
8;false;ta(M, A, N).;false;false
8;true,true,false;tempadvisedby(J, B).;false;false
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;ta(C, F, G), tempadvisedby(F, H).;true;true
9;true,true,true;ta(I, A, G).;false;false
9;true,false;publication(K, A).;true;true
9;true;ta(C, A, D), tempadvisedby(E, B).;true;true
9;true,false,true;projectmember(L, B).;false;false
9;true,true,false;publication(J, B).;false;false
9;true,false,false;publication(M, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( movie(E, B) )
%   | | then if ( movie(E, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0.6426626803255594;  // std dev = 0,806, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.559561472735517;  // std dev = 0,053, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 6,14e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.42066667250273826;  // std dev = 0,052, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.14879657687264602;  // std dev = 0,094, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10273368484650626;  // std dev = 0,094, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.3228722735688396;  // std dev = 0,007, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, E), director(E) )
%   | | | then return -0.08879733824148783;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09259566935517677;  // std dev = 0,000, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( movie(E, F) )
%   | | then return 0.2533692642540413;  // std dev = 5,58e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A) )
%   | | then if ( movie(H, B) )
%   | | | then return -0.08187002801259484;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08510360476042034;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return 0.19660566978554772;  // std dev = 0,554, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.2135721524413796;  // std dev = 0,010, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then return -0.1327705828222715;  // std dev = 0,057, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08005754186803697;  // std dev = 0,117, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.16939362620538376;  // std dev = 0,346, 47,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07309422300731792;  // std dev = 2,98e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then if ( movie(F, G), movie(H, A) )
%   | | | then return 0.1340308009618372;  // std dev = 0,384, 38,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.042359496170643295;  // std dev = 0,074, 92,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.13483418173295467;  // std dev = 0,342, 47,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06564737457013013;  // std dev = 2,24e-08, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074734
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.315 seconds
Total inference time: 3.074 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069466
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.339 seconds
Parameter learned model CLL: -0.069466


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(D, E), director(E)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [8.16e-08, 90, 0], 'true,true': [2.23e-07, 0, 45], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,false': 'movie(E, B)', 'true': 'movie(D, A), movie(D, B)', 'false': 'director(B)', 'true,false,true': 'movie(E, A)'}, {'true,true': [0.0, 0, 35], 'false,false': [0.0, 88, 0], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 3, 0], 'false,true': [0.806, 1, 10], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, G), director(G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.053, 0, 45], 'false': [6.14e-08, 76, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(E, F)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.052, 0, 45], 'false': [0.094, 83, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.094, 4, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), movie(D, B)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, E), director(E)'}, {'true,true,true': [0.007, 0, 45], 'true,false': [0.0, 0, 0], 'false': [0.0, 101, 0], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, F)', 'true,false': 'movie(G, A)', 'true': 'movie(D, A), movie(D, B)', 'false': 'actor(B)', 'true,false,true': 'movie(H, B)'}, {'false,true': [0.0, 93, 0], 'true,true,true': [5.58e-08, 0, 35], 'false,false': [0.554, 2, 10], 'true,false,true,true': [0.0, 5, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, F)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,true': [0.057, 2, 0], 'false': [0.117, 87, 0], 'true,true,true': [0.01, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(D, A)'}, {'true,false': [0.0, 0, 0], 'false': [2.98e-08, 87, 0], 'true,true,true': [0.346, 2, 45], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'genre(D, C)', 'true,true': 'movie(E, B)', 'true,true,true': 'movie(F, G), movie(H, A)'}, {'true,false': [0.0, 0, 0], 'false': [0.074, 82, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.384, 3, 35]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,false': [0.0, 0, 0], 'false': [2.24e-08, 79, 0], 'true,true': [0.342, 2, 45]}]]
[{'': [0.021266540642723226, 7.401486830834377e-17], 'true,false': [0.0, nan], 'true': [1.105288700071267e-15, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.05191003033853395, 0.06482593573043645], 'true,false': [0.0, nan], 'true': [-6.0903663065151445e-16, 0.0], 'false': [0.058998885327700486, -1.766263902812749e-17], 'true,false,true': [nan, 0.0]}, {'': [0.009660393655184655, 4.966787215428332e-17], 'true,false': [0.0, nan], 'true': [6.15941443282253e-05, 0.0], 'true,true': [6.15941443282253e-05, nan], 'true,false,true': [0.0, nan]}, {'': [0.024549338032480442, 0.00010607333137548432], 'true,false': [0.0022278633531872434, nan], 'true': [6.0947287396808904e-05, 0.0022278633531872434], 'true,false,true': [0.0022278633531872434, nan], 'true,true': [6.0947287396808904e-05, nan]}, {'': [0.006952048069885333, -2.85799986537169e-17], 'true': [0.006952048069885333, nan], 'true,true': [4.945907822732446e-05, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.012292151274313318, 0.010959974417453602], 'true,true': [8.881784197001253e-17, nan], 'true,false': [0.0, nan], 'true': [8.881784197001253e-17, 0.0], 'false': [-3.1038493161563513e-17, 0.025609388257813396], 'true,false,true': [0.0, nan]}, {'': [0.005111484561037808, 0.00015684432823457635], 'true,false': [0.0032316500023033268, nan], 'true': [9.063743301385645e-05, 0.0032316500023033268], 'true,true': [9.063743301385645e-05, nan]}, {'': [0.0025533921699315023, 1.0208947352875003e-17], 'true': [0.0025533921699315023, nan], 'true,true': [0.0025533921699315023, nan]}, {'': [0.0038728472285080614, 0.005515269553032638], 'true': [0.0038728472285080614, nan], 'true,true': [0.0038728472285080614, nan], 'true,true,true': [0.0038728472285080614, nan]}, {'': [0.0024958304714940783, 6.324055203561018e-18], 'true': [0.0024958304714940783, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
1;true;movie(D, A), movie(D, B).;true;true
1;false;director(B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- actor(A), director(B).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B).;true;true
5;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;true;movie(D, A), movie(D, B).;true;true
5;false;actor(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.7194734122109548;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109545;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5504898020630853;  // std dev = 0,756, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5590325626014789;  // std dev = 0,079, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18455393314241125;  // std dev = 0,087, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11338889856049607;  // std dev = 0,086, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.42031629758211003;  // std dev = 0,079, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12057214805706382;  // std dev = 0,088, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10149847753230913;  // std dev = 2,98e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then return 0.32266354543142467;  // std dev = 0,072, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09260933949692542;  // std dev = 5,27e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.25357514250301627;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.11407681214314006;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.0851152080724899;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( female(A) )
%   | | then return 0.2535751425030164;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.13180820198040158;  // std dev = 0,538, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.20862890654737318;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.21809196726748825;  // std dev = 0,020, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.10304544884472074;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07871703585455057;  // std dev = 0,000, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1762681260569539;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.18325844250138362;  // std dev = 0,018, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.16753089305596688;  // std dev = 0,185, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A) )
%   | then return -0.07319441740573937;  // std dev = 3,94e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( female(B) )
%   | | then return -0.07319441740573945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10269024429518243;  // std dev = 0,072, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06838162712824167;  // std dev = 1,29e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1521151640089752;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.1574508109437233;  // std dev = 0,016, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.11390900410690787;  // std dev = 0,082, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11927745170675262;  // std dev = 0,068, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.12856341843591423;  // std dev = 0,045, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.06403262871706604;  // std dev = 0,004, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071113
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.66 seconds
Total inference time: 2.903 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067191
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.176 seconds
Refined model CLL: -0.067191


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071113
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.49 seconds
Total inference time: 2.903 seconds
AUC ROC: 1.0
Total revision time: 5.49
Best scored revision CLL: -0.067191


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 03:48:28
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 1.315, 'Inference time': 3.074, 'CLL': -0.074734, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 5.49, 'Inference time': 2.903, 'CLL': -0.071113, 'AUC ROC': 1.0}


