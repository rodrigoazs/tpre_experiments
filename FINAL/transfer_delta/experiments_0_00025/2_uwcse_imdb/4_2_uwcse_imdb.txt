Starting experiment #4 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( publication(C, E), ta(F, E, G) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | then if ( ta(J, I, K) )
%   | | | then return 0.0010060779566550668;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.4945125714631487;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( publication(L, B) )
%   | | | then return 0.5978749624967731;  // std dev = 3,749, 73,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=54 */
%   | | | else return 0.41370449065506787;  // std dev = 2,108, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   else return -0.14185106490048824;  // std dev = 0,000, 182,000 (wgt'ed) examples reached here.  /* #neg=182 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.7194734122109546;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( publication(C, E), ta(F, E, G) )
%   | | | then return 0.7670719622367216;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6194734122109542;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( publication(H, B), publication(I, A) )
%   | | then if ( publication(I, J), professor(J) )
%   | | | then return 0.029402305070847082;  // std dev = 1,897, 22,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.6362480055895423;  // std dev = 0,918, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.5522359334564623;  // std dev = 3,191, 60,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=47 */
%   | | | else return 0.3208549977892814;  // std dev = 2,592, 27,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   else return -0.1254446385283914;  // std dev = 0,000, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.3553664367462845;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.567653568453309;  // std dev = 0,090, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( tempadvisedby(F, B), publication(G, A) )
%   | | then if ( publication(G, H), ta(I, H, J) )
%   | | | then return 0.275877668899574;  // std dev = 1,787, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return -0.21552192765149167;  // std dev = 0,090, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( publication(K, B), ta(L, A, M) )
%   | | | then return 0.4725247771756258;  // std dev = 2,401, 37,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=30 */
%   | | | else return 0.31011064773154046;  // std dev = 3,584, 55,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=34 */
%   else return -0.11231637819360642;  // std dev = 4,71e-08, 199,000 (wgt'ed) examples reached here.  /* #neg=199 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then return 0.42245911554783216;  // std dev = 0,096, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( publication(D, E), ta(F, E, G) )
%   | | | then return 0.1712207536847443;  // std dev = 1,927, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return -0.20882306943772236;  // std dev = 0,064, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( ta(H, A, I) )
%   | | then if ( publication(J, B) )
%   | | | then return 0.35468664942284;  // std dev = 2,431, 40,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=32 */
%   | | | else return 0.01367227237997822;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(K, B), ta(L, K, M) )
%   | | | then return 0.6016280213629033;  // std dev = 0,123, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.35861168284107237;  // std dev = 2,581, 41,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=32 */
%   else return -0.10159632948783646;  // std dev = 0,000, 194,000 (wgt'ed) examples reached here.  /* #neg=194 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.3345320130343412;  // std dev = 0,140, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then if ( publication(E, F), professor(F) )
%   | | | then return -0.07793970505821997;  // std dev = 1,859, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.5017177891122931;  // std dev = 0,135, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return 0.14619915186903215;  // std dev = 2,878, 39,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=27 */
%   | | | else return 0.27346172633602295;  // std dev = 2,923, 47,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=34 */
%   else return -0.09269127618926093;  // std dev = 4,21e-08, 192,000 (wgt'ed) examples reached here.  /* #neg=192 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return 0.17314068692792114;  // std dev = 0,966, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.030130662132542414;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return 0.15367492047662262;  // std dev = 0,916, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.2663252410560042;  // std dev = 0,079, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( ta(I, A, J), publication(K, B) )
%   | | then if ( ta(L, M, J), publication(K, M) )
%   | | | then return 0.3613732412959138;  // std dev = 0,783, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.15234606338477616;  // std dev = 2,528, 35,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | | else if ( projectmember(N, B) )
%   | | | then return 0.30876233593370617;  // std dev = 1,143, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.021064607625325204;  // std dev = 3,693, 66,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=32 */
%   else return -0.08518475138839679;  // std dev = 2,98e-08, 155,000 (wgt'ed) examples reached here.  /* #neg=155 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), projectmember(D, B) )
%   | then return 0.48882934558161956;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | then if ( publication(E, B) )
%   | | | then return 0.1553170490842346;  // std dev = 1,369, 31,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return -0.06957517546035538;  // std dev = 1,581, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( projectmember(G, B), ta(H, A, I) )
%   | | | then return -0.2312563314992512;  // std dev = 0,761, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1630263775050105;  // std dev = 4,020, 99,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=75 */
%   else return -0.0787767547310916;  // std dev = 7,30e-08, 183,000 (wgt'ed) examples reached here.  /* #neg=183 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( publication(D, A), publication(D, B) )
%   | then return 0.2008270046188426;  // std dev = 0,143, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(E, A), publication(F, B) )
%   | | then if ( publication(F, G), ta(H, G, I) )
%   | | | then return 0.17923635011136396;  // std dev = 1,199, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.13534889381717638;  // std dev = 1,483, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.10954542741359177;  // std dev = 3,084, 50,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=36 */
%   | | | else return 0.2255532392853228;  // std dev = 1,833, 28,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   else return -0.07223702171888093;  // std dev = 0,662, 200,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=1 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( publication(G, D) )
%   | | | then return 0.033291608972324735;  // std dev = 0,903, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.15743999589814764;  // std dev = 0,021, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.17696512599893677;  // std dev = 0,109, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | then if ( ta(K, A, L), ta(I, M, L) )
%   | | | then return 0.30816114075943746;  // std dev = 0,624, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.034998116017057046;  // std dev = 1,944, 22,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | else if ( publication(N, A), publication(P, B) )
%   | | | then return 0.12588442923937038;  // std dev = 1,641, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return -0.015433651173311106;  // std dev = 3,736, 61,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=39 */
%   else return -0.06849133730604187;  // std dev = 0,000, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.1505271330012402;  // std dev = 0,120, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then if ( publication(G, A), publication(H, B) )
%   | | | then return -0.21935010914666875;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.16042511661187614;  // std dev = 1,762, 27,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | | else if ( tempadvisedby(I, B), publication(J, A) )
%   | | | then return 0.12758735601251048;  // std dev = 1,161, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.023775094765520793;  // std dev = 3,960, 71,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=43 */
%   else return -0.06424862145172859;  // std dev = 6,32e-08, 166,000 (wgt'ed) examples reached here.  /* #neg=166 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,true;ta(J, I, K).;false;false
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, B), publication(I, A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;tempadvisedby(F, B), publication(G, A).;true;true
2;true;publication(C, B), publication(C, A).;true;true
2;true,false,true;publication(G, H), ta(I, H, J).;false;false
2;true,false,false;publication(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(D, B).;false;true
3;true,false;ta(H, A, I).;true;true
3;true;tempadvisedby(C, B), publication(D, A).;true;true
3;true,false,true;publication(J, B).;false;false
3;true,true,false;publication(D, E), ta(F, E, G).;false;false
3;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false;publication(D, B), publication(E, A).;true;true
4;true;publication(C, B), publication(C, A).;false;true
4;true,false,true;publication(E, F), professor(F).;false;false
4;true,false,false;tempadvisedby(G, B), publication(H, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true;ta(D, A, E).;true;true
5;true,true,true;tempadvisedby(F, B).;false;false
5;true,false;ta(I, A, J), publication(K, B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
5;true,false,true;ta(L, M, J), publication(K, M).;false;false
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false,false;projectmember(N, B).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false;publication(E, A), tempadvisedby(F, B).;true;true
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false,true;publication(E, B).;false;false
6;true,false,false;projectmember(G, B), ta(H, A, I).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
7;true,false;publication(E, A), publication(F, B).;true;true
7;true;publication(D, A), publication(D, B).;false;true
7;true,false,true;publication(F, G), ta(H, G, I).;false;false
7;true,false,false;tempadvisedby(J, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
8;true,true,true;publication(G, D).;false;false
8;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
8;true;publication(C, A), publication(C, B).;true;true
8;true,false,true;ta(K, A, L), ta(I, M, L).;false;false
8;true,false,false;publication(N, A), publication(P, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;tempadvisedby(D, B), ta(E, D, F).;true;true
9;true;publication(C, B), publication(C, A).;false;true
9;true,false,true;publication(G, A), publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B), publication(J, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 4,21e-08, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839108;  // std dev = 7,45e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360624;  // std dev = 7,60e-08, 100,000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783626;  // std dev = 4,59e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 5,37e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,87e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), genre(B, D) )
%   | then return 0.18183502495218462;  // std dev = 0,672, 62,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109164;  // std dev = 4,94e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.11930958098959618;  // std dev = 0,939, 74,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=56 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.07487185901208039;  // std dev = 0,046, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333711;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.16416886149423787;  // std dev = 6,83e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.08689731001640766;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0720194263939382;  // std dev = 0,061, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.14286443409554112;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.0802453168259216;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06696324880451252;  // std dev = 0,058, 115,000 (wgt'ed) examples reached here.  /* #neg=115 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067822
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.303 seconds
Total inference time: 2.756 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066944
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.365 seconds
Parameter learned model CLL: -0.066944


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,true': [0.0, 2, 0], 'false': [4.21e-08, 120, 0], 'true,true,true': [0.0, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, B), movie(F, A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false': [7.45e-08, 100, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(F, G)'}, {'true,false,true,true': [0.0, 2, 0], 'true,true,true,true': [1.03e-07, 0, 56], 'false': [7.6e-08, 100, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 56], 'true,false': [0.0, 0, 0], 'false': [4.59e-08, 96, 0], 'true,true,false,true': [0.0, 3, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, B), movie(E, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [5.37e-08, 108, 0], 'true,true': [0.0, 0, 56], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(F, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 56], 'false': [5.87e-08, 118, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), genre(B, D)'}, {'true,false': [0.0, 0, 0], 'false': [4.94e-08, 91, 0], 'true,true': [0.672, 6, 56]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,false': 'movie(D, A), movie(E, B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, F)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 9, 0], 'true,true': [0.939, 18, 56], 'true,false,true,true': [0.046, 73, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A), movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,false,true': [0.0, 4, 0], 'false': [0.061, 102, 0], 'true,true,true': [6.83e-08, 0, 56], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A), movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 5, 0], 'false': [0.058, 115, 0], 'true,true': [0.0, 0, 56], 'true,false,false': [0.0, 0, 0]}]]
[{'': [0.03329369797859664, 1.4802973661668754e-17], 'true,false': [0.0, nan], 'true': [-1.2688263138573217e-16, 0.0], 'true,true': [-1.2688263138573217e-16, nan]}, {'': [0.062400069768027915, 5.551115123125783e-17], 'true,false': [-2.3129646346357427e-18, nan], 'true': [-1.9032394707859825e-16, -2.3129646346357427e-18], 'true,false,true': [-2.3129646346357427e-18, nan], 'true,true': [-1.9032394707859825e-16, nan]}, {'': [0.014842341924197077, 5.773159728050814e-17], 'true,true': [1.9032394707859825e-16, nan], 'true,true,true': [1.9032394707859825e-16, nan], 'true,false': [0.0, nan], 'true': [1.9032394707859825e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.013005405691145715, 2.1973164029039556e-17], 'true': [0.013005405691145715, nan], 'true,true': [-3.489272363107635e-16, -1.1564823173178713e-18], 'true,true,false': [-1.1564823173178713e-18, nan]}, {'': [0.005689964312795762, 2.6727591333568582e-17], 'true,false': [0.0, nan], 'true': [-1.2688263138573217e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.001996676351744731, 2.9166876070660895e-17], 'true,false': [0.0, nan], 'true': [-3.172065784643304e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-3.172065784643304e-17, nan]}, {'': [0.007276982111751898, 2.68405566392895e-17], 'true': [0.007276982111751898, nan]}, {'': [0.015440285463344592, 0.0], 'true,false': [2.9509965296870457e-05, nan], 'true': [0.011917844586730706, 2.9509965296870457e-05], 'true,false,true': [2.9509965296870457e-05, nan]}, {'': [0.0039221293985697665, 3.59664854717614e-05], 'true,false': [0.0, nan], 'true': [8.326672684688674e-17, 0.0], 'true,true': [8.326672684688674e-17, nan]}, {'': [0.0037457213296818526, 2.9405859026470468e-05], 'true,false': [0.0, nan], 'true': [-6.740639792367021e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1254446385283913;  // std dev = 0,000, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462837;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1123163781936062;  // std dev = 8,94e-08, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 3,94e-08, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 5,67e-08, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839691;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.0851847513883969;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( female(B) )
%   | | then if ( movie(D, A), movie(D, B) )
%   | | | then return -0.08518475138839691;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839693;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839691;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.08518475138839691;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.18941685583798845;  // std dev = 0,075, 29,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.20975771563253548;  // std dev = 6,97e-09, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( female(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0787767547310918;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.0787767547310918;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.0787767547310918;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0787767547310918;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.0787767547310918;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.0787767547310918;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333707;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07324622576333707;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(A) )
%   | | | then return 0.1800803343035318;  // std dev = 2,79e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.1770964977452775;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333707;  // std dev = 1,05e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.07324622576333706;  // std dev = 1,18e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.10255096743005426;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333706;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15500364930659355;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.15274385809367083;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( female(A) )
%   | | then return -0.09220252444526997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09391926025276247;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( movie(D, A), movie(D, B) )
%   | | | then return -0.06842697784420274;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.13576875178808964;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.13400703000801084;  // std dev = 5,59e-09, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202619;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.0641918400820262;  // std dev = 5,27e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(A) )
%   | | | then return -0.06419184008202623;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.06419184008202623;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066544
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.201 seconds
Total inference time: 2.31 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064311
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.48 seconds
Refined model CLL: -0.064311


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066544
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 6.349 seconds
Total inference time: 2.31 seconds
AUC ROC: 1.0
Total revision time: 6.349
Best scored revision CLL: -0.064311


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 03:06:09
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 1.303, 'Inference time': 2.756, 'CLL': -0.067822, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 6.349, 'Inference time': 2.31, 'CLL': -0.066544, 'AUC ROC': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,true;ta(J, I, K).;false;false
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, B), publication(I, A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;tempadvisedby(F, B), publication(G, A).;true;true
2;true;publication(C, B), publication(C, A).;true;true
2;true,false,true;publication(G, H), ta(I, H, J).;false;false
2;true,false,false;publication(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(D, B).;false;true
3;true,false;ta(H, A, I).;true;true
3;true;tempadvisedby(C, B), publication(D, A).;true;true
3;true,false,true;publication(J, B).;false;false
3;true,true,false;publication(D, E), ta(F, E, G).;false;false
3;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false;publication(D, B), publication(E, A).;true;true
4;true;publication(C, B), publication(C, A).;false;true
4;true,false,true;publication(E, F), professor(F).;false;false
4;true,false,false;tempadvisedby(G, B), publication(H, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true;ta(D, A, E).;true;true
5;true,true,true;tempadvisedby(F, B).;false;false
5;true,false;ta(I, A, J), publication(K, B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
5;true,false,true;ta(L, M, J), publication(K, M).;false;false
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false,false;projectmember(N, B).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false;publication(E, A), tempadvisedby(F, B).;true;true
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false,true;publication(E, B).;false;false
6;true,false,false;projectmember(G, B), ta(H, A, I).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
7;true,false;publication(E, A), publication(F, B).;true;true
7;true;publication(D, A), publication(D, B).;false;true
7;true,false,true;publication(F, G), ta(H, G, I).;false;false
7;true,false,false;tempadvisedby(J, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
8;true,true,true;publication(G, D).;false;false
8;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
8;true;publication(C, A), publication(C, B).;true;true
8;true,false,true;ta(K, A, L), ta(I, M, L).;false;false
8;true,false,false;publication(N, A), publication(P, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;tempadvisedby(D, B), ta(E, D, F).;true;true
9;true;publication(C, B), publication(C, A).;false;true
9;true,false,true;publication(G, A), publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B), publication(J, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048788;  // std dev = 0,000, 130,000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839105;  // std dev = 8,43e-08, 128,000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360621;  // std dev = 8,69e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783638;  // std dev = 0,000, 122,000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926079;  // std dev = 7,74e-08, 132,000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.25517224256948967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 5,37e-08, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), genre(B, D) )
%   | then return 0.1827076090359456;  // std dev = 0,673, 64,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0787767547310916;  // std dev = 5,77e-08, 103,000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.11113527902518745;  // std dev = 1,016, 80,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=58 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.07430500895999317;  // std dev = 0,039, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333711;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.1651732430021582;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.0870115915344535;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07178537756532519;  // std dev = 0,057, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.14363730493947005;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.08034317546639413;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06694101783113594;  // std dev = 0,058, 124,000 (wgt'ed) examples reached here.  /* #neg=124 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067778
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.429 seconds
Total inference time: 2.664 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066811
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.55 seconds
Parameter learned model CLL: -0.066811


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,true': [0.0, 4, 0], 'false': [0.0, 130, 0], 'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, B), movie(F, A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'false': [8.43e-08, 128, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(F, G)'}, {'true,false,true,true': [2.63e-09, 3, 0], 'true,true,true,true': [1.19e-07, 0, 58], 'false': [8.69e-08, 119, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 58], 'true,false': [0.0, 0, 0], 'false': [0.0, 122, 0], 'true,true,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, B), movie(E, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [7.74e-08, 132, 0], 'true,true': [0.0, 0, 58], 'true,false,true,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(F, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 58], 'false': [5.37e-08, 98, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), genre(B, D)'}, {'true,false': [0.0, 0, 0], 'false': [5.77e-08, 103, 0], 'true,true': [0.673, 6, 58]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,false': 'movie(D, A), movie(E, B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, F)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true': [1.016, 22, 58], 'true,false,true,true': [0.039, 75, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A), movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,false,true': [0.0, 2, 0], 'false': [0.057, 101, 0], 'true,true,true': [0.0, 0, 58], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A), movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 4, 0], 'false': [0.058, 124, 0], 'true,true': [0.0, 0, 58], 'true,false,false': [0.0, 0, 0]}]]
[{'': [0.06035379812695064, -3.75767792950053e-17], 'true,false': [0.0, nan], 'true': [-3.675221047035001e-16, 0.0], 'true,true': [-3.675221047035001e-16, nan]}, {'': [0.033382492117425555, 5.551115123125783e-17], 'true,false': [0.0, nan], 'true': [-1.2250736823450003e-16, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-1.2250736823450003e-16, nan]}, {'': [0.020846347594112944, 6.344131569286608e-17], 'true,true': [2.4501473646900006e-16, nan], 'true,true,true': [2.4501473646900006e-16, nan], 'true,false': [2.3129646346357427e-18, nan], 'true': [2.4501473646900006e-16, 2.3129646346357427e-18], 'true,false,true': [2.3129646346357427e-18, nan]}, {'': [0.01626384593324757, -2.5480528434019987e-17], 'true': [0.01626384593324757, nan], 'true,true': [-3.3689526264487507e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.01642278575441154, 4.5418214643756407e-17], 'true,false': [0.0, nan], 'true': [-1.5313421029312505e-16, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.006991557995307807, 2.945489657168783e-17], 'true,false': [0.0, nan], 'true': [-3.062684205862501e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-3.062684205862501e-17, nan]}, {'': [0.0070731799132398646, 3.2336592950247276e-17], 'true': [0.0070731799132398646, nan]}, {'': [0.015253314567989321, 0.0], 'true,false': [1.9898137971017987e-05, nan], 'true': [0.012895239047892729, 1.9898137971017987e-05], 'true,false,true': [1.9898137971017987e-05, nan]}, {'': [0.0020492428137083036, 3.2047324691866194e-05], 'true,false': [0.0, nan], 'true': [-2.2970131543968756e-17, 0.0], 'true,true': [-2.2970131543968756e-17, nan]}, {'': [0.003027784417236999, 2.7129997052356737e-05], 'true,false': [0.0, nan], 'true': [-6.508203937457814e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.1418510649004877;  // std dev = 5,16e-08, 118,000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839108;  // std dev = 7,74e-08, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462838;  // std dev = 1,19e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.11231637819360621;  // std dev = 8,69e-08, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.37032177382684195;  // std dev = 0,149, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.33676315314668737;  // std dev = 0,188, 45,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783667;  // std dev = 0,000, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.3359752350616826;  // std dev = 0,027, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.13671470309696312;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926096;  // std dev = 5,05e-08, 109,000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26556548284096215;  // std dev = 0,024, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12209021513536548;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839679;  // std dev = 4,21e-08, 111,000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21707523605861254;  // std dev = 0,021, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1105864346558117;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0787767547310916;  // std dev = 6,14e-08, 121,000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.07324622576333707;  // std dev = 9,13e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0.18244654216578887;  // std dev = 0,018, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07492679472299082;  // std dev = 0,059, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return -0.07324622576333707;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15679126456052173;  // std dev = 0,016, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09219136958785344;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06835894623267742;  // std dev = 0,000533, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1371594908624728;  // std dev = 0,014, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.0853469622668336;  // std dev = 0,003, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.06412989250809777;  // std dev = 0,000503, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065912
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.293 seconds
Total inference time: 2.387 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064347
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.6 seconds
Refined model CLL: -0.064347


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065912
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.872 seconds
Total inference time: 2.387 seconds
AUC ROC: 1.0
Total revision time: 5.872
Best scored revision CLL: -0.064347


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 03:06:20
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 1.429, 'Inference time': 2.664, 'CLL': -0.067778, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 5.872, 'Inference time': 2.387, 'CLL': -0.065912, 'AUC ROC': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,true;ta(J, I, K).;false;false
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, B), publication(I, A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;tempadvisedby(F, B), publication(G, A).;true;true
2;true;publication(C, B), publication(C, A).;true;true
2;true,false,true;publication(G, H), ta(I, H, J).;false;false
2;true,false,false;publication(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(D, B).;false;true
3;true,false;ta(H, A, I).;true;true
3;true;tempadvisedby(C, B), publication(D, A).;true;true
3;true,false,true;publication(J, B).;false;false
3;true,true,false;publication(D, E), ta(F, E, G).;false;false
3;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false;publication(D, B), publication(E, A).;true;true
4;true;publication(C, B), publication(C, A).;false;true
4;true,false,true;publication(E, F), professor(F).;false;false
4;true,false,false;tempadvisedby(G, B), publication(H, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true;ta(D, A, E).;true;true
5;true,true,true;tempadvisedby(F, B).;false;false
5;true,false;ta(I, A, J), publication(K, B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
5;true,false,true;ta(L, M, J), publication(K, M).;false;false
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false,false;projectmember(N, B).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false;publication(E, A), tempadvisedby(F, B).;true;true
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false,true;publication(E, B).;false;false
6;true,false,false;projectmember(G, B), ta(H, A, I).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
7;true,false;publication(E, A), publication(F, B).;true;true
7;true;publication(D, A), publication(D, B).;false;true
7;true,false,true;publication(F, G), ta(H, G, I).;false;false
7;true,false,false;tempadvisedby(J, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
8;true,true,true;publication(G, D).;false;false
8;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
8;true;publication(C, A), publication(C, B).;true;true
8;true,false,true;ta(K, A, L), ta(I, M, L).;false;false
8;true,false,false;publication(N, A), publication(P, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;tempadvisedby(D, B), ta(E, D, F).;true;true
9;true;publication(C, B), publication(C, A).;false;true
9;true,false,true;publication(G, A), publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B), publication(J, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048766;  // std dev = 8,12e-09, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048813;  // std dev = 0,000, 282,000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839158;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839186;  // std dev = 0,000, 299,000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.11231637819360626;  // std dev = 4,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360679;  // std dev = 0,000, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583096;  // std dev = 3,77e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783621;  // std dev = 4,08e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783655;  // std dev = 0,000, 284,000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014917;  // std dev = 3,58e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.09269127618926107;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926065;  // std dev = 0,000, 276,000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2551722425694888;  // std dev = 3,63e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.0851847513883968;  // std dev = 1,97e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 7,88e-08, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), genre(B, D) )
%   | then return 0.1582993387523981;  // std dev = 1,384, 157,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=129 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.2097577156325361;  // std dev = 4,21e-08, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109148;  // std dev = 1,05e-07, 301,000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1347196506163214;  // std dev = 1,478, 219,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=178 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.07708981057304236;  // std dev = 0,101, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.16336601653853475;  // std dev = 0,042, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.0776846039026478;  // std dev = 0,067, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07051621632130728;  // std dev = 0,090, 297,000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.14224732466895365;  // std dev = 0,037, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.07188314575845153;  // std dev = 0,060, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06640314434453357;  // std dev = 0,094, 320,000 (wgt'ed) examples reached here.  /* #neg=320 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067389
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.119 seconds
Total inference time: 2.431 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06865
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.753 seconds
Parameter learned model CLL: -0.06865


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,true': [8.12e-09, 63, 0], 'false': [0.0, 282, 0], 'true,true,true': [1.09e-06, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, B), movie(F, A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 178], 'false': [0.0, 299, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 56, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(F, G)'}, {'true,false,true,true': [4.83e-08, 63, 0], 'true,true,true,true': [5.9e-07, 0, 178], 'false': [0.0, 296, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D)'}, {'true,true,true': [3.77e-07, 0, 178], 'true,false': [0.0, 0, 0], 'false': [0.0, 284, 0], 'true,true,false,true': [4.08e-08, 58, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, B), movie(E, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 276, 0], 'true,true': [3.58e-07, 0, 178], 'true,false,true,true': [0.0, 58, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(F, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [3.63e-07, 0, 178], 'false': [7.88e-08, 296, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [1.97e-08, 49, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), genre(B, D)', 'true,false,true': 'movie(E, B)'}, {'true,false,true,false': [0.0, 23, 0], 'false': [1.05e-07, 301, 0], 'true,true': [1.384, 28, 129], 'true,false,true,true': [4.21e-08, 0, 49], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,false': 'movie(D, A), movie(E, B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, F)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 107, 0], 'true,true': [1.478, 41, 178], 'true,false,true,true': [0.101, 190, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A), movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,false,true': [0.067, 65, 0], 'false': [0.09, 297, 0], 'true,true,true': [0.042, 0, 178], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A), movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.06, 59, 0], 'false': [0.094, 320, 0], 'true,true': [0.037, 0, 178], 'true,false,false': [0.0, 0, 0]}]]
[{'': [0.19307518809938418, -8.818792819717556e-17], 'true,false': [6.344131569286608e-17, nan], 'true': [6.706246045376226e-15, 6.344131569286608e-17], 'true,true': [6.706246045376226e-15, nan]}, {'': [0.12995873979568842, -6.832141690000964e-17], 'true,false': [-3.766828119263924e-17, nan], 'true': [-3.193450497798203e-15, -3.766828119263924e-17], 'true,false,true': [-3.766828119263924e-17, nan], 'true,true': [-3.193450497798203e-15, nan]}, {'': [0.08607298476402121, -8.101627476994385e-17], 'true,true': [1.9559884299013994e-15, nan], 'true,true,true': [1.9559884299013994e-15, nan], 'true,false': [3.700743415417188e-17, nan], 'true': [1.9559884299013994e-15, 3.700743415417188e-17], 'true,false,true': [3.700743415417188e-17, nan]}, {'': [0.049950821560785535, -5.942038723345908e-17], 'true': [0.049950821560785535, nan], 'true,true': [7.983626244495507e-16, 2.871266442996095e-17], 'true,true,false': [2.871266442996095e-17, nan]}, {'': [0.03167900240747105, 0.0], 'true,false': [-1.914177628664063e-18, nan], 'true': [7.185263620045957e-16, -1.914177628664063e-18], 'true,false,true': [-1.914177628664063e-18, nan]}, {'': [0.01960801933779119, 2.100421938480026e-17], 'true,false': [7.93016446160826e-18, nan], 'true': [7.384854276158345e-16, 7.93016446160826e-18], 'true,true': [7.384854276158345e-16, nan], 'true,false,true': [7.93016446160826e-18, nan]}, {'': [0.014411680407659385, 3.68844858679454e-17], 'true,false': [0.018098989668730296, nan], 'true': [0.012199550967744319, 0.018098989668730296], 'true,false,true': [3.6252180395923476e-17, 0.0]}, {'': [0.01652360651744776, -7.263141282594481e-18], 'true,false': [5.3687767907883985e-05, nan], 'true': [0.009971459539253685, 5.3687767907883985e-05], 'true,false,true': [5.3687767907883985e-05, nan]}, {'': [0.011410505139788946, 2.7546186201027165e-05], 'true,false': [6.832934006268857e-05, nan], 'true': [9.713769515991958e-06, 6.832934006268857e-05], 'true,true': [9.713769515991958e-06, nan]}, {'': [0.008593879900868257, 2.7795357235770036e-05], 'true,false': [6.058617717289871e-05, nan], 'true': [7.73353914525631e-06, 6.058617717289871e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true,false;movie(E, B).;true;true
6;true;movie(C, A), genre(B, D).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048766;  // std dev = 6,99e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.14185106490048813;  // std dev = 0,000, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.12544463852839183;  // std dev = 0,000, 300,000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462833;  // std dev = 5,90e-07, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11231637819360622;  // std dev = 6,23e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else return -0.11231637819360678;  // std dev = 0,000, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.31091065546311997;  // std dev = 0,210, 112,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=89 */
%   | | else return 0.2899357240249359;  // std dev = 0,223, 118,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783656;  // std dev = 0,000, 296,000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.34674110437684696;  // std dev = 0,032, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.13262502999158093;  // std dev = 0,009, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.09269127618926067;  // std dev = 0,000, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2728663672809844;  // std dev = 0,028, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.11781147410768257;  // std dev = 0,008, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.08518475138839678;  // std dev = 7,45e-08, 267,000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.12964486945044756;  // std dev = 0,147, 65,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=47 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.22399556553565958;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | | | else return -0.10525875980733763;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return 0.12999247833285207;  // std dev = 1,115, 58,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=42 */
%   | | | else return 0.030316550628014166;  // std dev = 0,668, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109148;  // std dev = 1,03e-07, 282,000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.07324622576333703;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0.19440581989326827;  // std dev = 0,099, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.08460417594684587;  // std dev = 0,252, 187,000 (wgt'ed) examples reached here.  /* #neg=187 */
%   else return -0.07324622576333704;  // std dev = 0,000, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.16576096843385407;  // std dev = 0,088, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.10265143410430976;  // std dev = 0,070, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06809687154661143;  // std dev = 0,006, 275,000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.14409520862401035;  // std dev = 0,078, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.09477002017050867;  // std dev = 0,076, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.0638987953615891;  // std dev = 0,006, 280,000 (wgt'ed) examples reached here.  /* #neg=280 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064275
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.889 seconds
Total inference time: 2.597 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070142
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.44 seconds
Refined model CLL: -0.070142


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067389
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 7.2010000000000005 seconds
Total inference time: 2.431 seconds
AUC ROC: 1.0
Total revision time: 7.2010000000000005
Best scored revision CLL: -0.06865


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 03:06:33
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 2.119, 'Inference time': 2.431, 'CLL': -0.067389, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 7.2010000000000005, 'Inference time': 2.431, 'CLL': -0.067389, 'AUC ROC': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,true;ta(J, I, K).;false;false
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, B), publication(I, A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;tempadvisedby(F, B), publication(G, A).;true;true
2;true;publication(C, B), publication(C, A).;true;true
2;true,false,true;publication(G, H), ta(I, H, J).;false;false
2;true,false,false;publication(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(D, B).;false;true
3;true,false;ta(H, A, I).;true;true
3;true;tempadvisedby(C, B), publication(D, A).;true;true
3;true,false,true;publication(J, B).;false;false
3;true,true,false;publication(D, E), ta(F, E, G).;false;false
3;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false;publication(D, B), publication(E, A).;true;true
4;true;publication(C, B), publication(C, A).;false;true
4;true,false,true;publication(E, F), professor(F).;false;false
4;true,false,false;tempadvisedby(G, B), publication(H, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true;ta(D, A, E).;true;true
5;true,true,true;tempadvisedby(F, B).;false;false
5;true,false;ta(I, A, J), publication(K, B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
5;true,false,true;ta(L, M, J), publication(K, M).;false;false
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false,false;projectmember(N, B).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false;publication(E, A), tempadvisedby(F, B).;true;true
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false,true;publication(E, B).;false;false
6;true,false,false;projectmember(G, B), ta(H, A, I).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
7;true,false;publication(E, A), publication(F, B).;true;true
7;true;publication(D, A), publication(D, B).;false;true
7;true,false,true;publication(F, G), ta(H, G, I).;false;false
7;true,false,false;tempadvisedby(J, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
8;true,true,true;publication(G, D).;false;false
8;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
8;true;publication(C, A), publication(C, B).;true;true
8;true,false,true;ta(K, A, L), ta(I, M, L).;false;false
8;true,false,false;publication(N, A), publication(P, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;tempadvisedby(D, B), ta(E, D, F).;true;true
9;true;publication(C, B), publication(C, A).;false;true
9;true,false,true;publication(G, A), publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B), publication(J, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048763;  // std dev = 8,16e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839144;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360625;  // std dev = 5,37e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783623;  // std dev = 5,05e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), genre(B, D) )
%   | then return 0.17091653692973957;  // std dev = 0,710, 52,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109169;  // std dev = 3,41e-08, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.0937587804709218;  // std dev = 1,013, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.07496090001617012;  // std dev = 0,040, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.16923456501893885;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.08602786711845908;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07166394474508363;  // std dev = 0,051, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.14675322914877317;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.07950024223408955;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06698237375056267;  // std dev = 0,047, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067268
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.308 seconds
Total inference time: 3.099 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067396
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.194 seconds
Parameter learned model CLL: -0.067396


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,true': [0.0, 6, 0], 'false': [8.16e-08, 88, 0], 'true,true,true': [2.23e-07, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, B), movie(F, A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [0.0, 84, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(F, G)'}, {'true,false,true,true': [0.0, 2, 0], 'true,true,true,true': [0.0, 0, 45], 'false': [5.37e-08, 68, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 45], 'true,false': [0.0, 0, 0], 'false': [5.05e-08, 91, 0], 'true,true,false,true': [0.0, 7, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, B), movie(E, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 95, 0], 'true,true': [2.98e-08, 0, 45], 'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(F, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [1.83e-08, 69, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [2.63e-09, 7, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A), genre(B, D)'}, {'true,false': [0.0, 0, 0], 'false': [3.41e-08, 76, 0], 'true,true': [0.71, 7, 45]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,false': 'movie(D, A), movie(E, B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, F)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [3.73e-09, 14, 0], 'true,true': [1.013, 24, 45], 'true,false,true,true': [0.04, 55, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A), movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,false,true': [0.0, 1, 0], 'false': [0.051, 97, 0], 'true,true,true': [2.98e-08, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A), movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 3, 0], 'false': [0.047, 92, 0], 'true,true': [0.0, 0, 45], 'true,false,false': [0.0, 0, 0]}]]
[{'': [0.10380622837370317, 7.569702440626067e-17], 'true,false': [-6.938893903907228e-18, nan], 'true': [1.105288700071267e-15, -6.938893903907228e-18], 'true,true': [1.105288700071267e-15, nan]}, {'': [0.099150904509052, -2.114710523095536e-17], 'true,false': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan]}, {'': [0.0181629835776121, 4.244970388272657e-17], 'true,true': [-3.947459643111668e-17, nan], 'true,true,true': [-3.947459643111668e-17, nan], 'true,false': [0.0, nan], 'true': [-3.947459643111668e-17, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.0313922549076915, 2.8060581941075384e-17], 'true': [0.0313922549076915, nan], 'true,true': [-4.144832625267251e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.015381192815554305, -1.1686558153949016e-18], 'true,false': [0.0, nan], 'true': [1.973729821555834e-17, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.013495010447801522, 4.827056628805028e-18], 'true,false': [9.912705577010326e-19, nan], 'true': [-2.960594732333751e-17, 9.912705577010326e-19], 'true,false,true': [9.912705577010326e-19, nan], 'true,true': [-2.960594732333751e-17, nan]}, {'': [0.00969838176228774, 1.5338607577058085e-17], 'true': [0.00969838176228774, nan]}, {'': [0.01531613910487594, 9.912705577010326e-19], 'true,false': [2.9401077933283675e-05, nan], 'true': [0.014875025123895902, 2.9401077933283675e-05], 'true,false,true': [2.9401077933283675e-05, nan]}, {'': [0.0013857045920281363, 2.73331521949393e-05], 'true,false': [0.0, nan], 'true': [1.973729821555834e-17, 0.0], 'true,true': [1.973729821555834e-17, nan]}, {'': [0.002999451170671609, 2.383292071939706e-05], 'true,false': [0.0, nan], 'true': [-1.7270135938613546e-17, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839147;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360621;  // std dev = 6,99e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.33765052052044126;  // std dev = 0,187, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.388674144511302;  // std dev = 0,119, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783617;  // std dev = 5,77e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32979567436979507;  // std dev = 0,033, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.13886556759890115;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926108;  // std dev = 1,05e-08, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.261367747525763;  // std dev = 0,029, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12526097504624362;  // std dev = 0,008, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return -0.08518475138839682;  // std dev = 4,83e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.214128585608259;  // std dev = 0,025, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11165346315690733;  // std dev = 0,007, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07877675473109168;  // std dev = 4,34e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( director(B) )
%   | | then return 0.18029818878373247;  // std dev = 0,022, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333707;  // std dev = 8,33e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.07542444217180516;  // std dev = 0,064, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else return -0.07324622576333707;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1551699595908985;  // std dev = 0,019, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09530625968748756;  // std dev = 0,004, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.06833664896510892;  // std dev = 0,000613, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13589932094552032;  // std dev = 0,017, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08806860537527182;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.06411283387882415;  // std dev = 0,000613, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065619
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.196 seconds
Total inference time: 2.471 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0651
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.108 seconds
Refined model CLL: -0.0651


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065619
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.805999999999999 seconds
Total inference time: 2.471 seconds
AUC ROC: 1.0
Total revision time: 4.805999999999999
Best scored revision CLL: -0.0651


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 03:06:44
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 1.308, 'Inference time': 3.099, 'CLL': -0.067268, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 4.805999999999999, 'Inference time': 2.471, 'CLL': -0.065619, 'AUC ROC': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false;publication(H, A), tempadvisedby(I, B).;true;true
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,true;ta(J, I, K).;false;false
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;publication(L, B).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, B), publication(I, A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
1;true,false,true;publication(I, J), professor(J).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true,false,false;publication(K, B).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(E, D).;true;false
2;true,true,true;publication(E, B).;false;false
2;true,false;tempadvisedby(F, B), publication(G, A).;true;true
2;true;publication(C, B), publication(C, A).;true;true
2;true,false,true;publication(G, H), ta(I, H, J).;false;false
2;true,false,false;publication(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(D, B).;false;true
3;true,false;ta(H, A, I).;true;true
3;true;tempadvisedby(C, B), publication(D, A).;true;true
3;true,false,true;publication(J, B).;false;false
3;true,true,false;publication(D, E), ta(F, E, G).;false;false
3;true,false,false;tempadvisedby(K, B), ta(L, K, M).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false;publication(D, B), publication(E, A).;true;true
4;true;publication(C, B), publication(C, A).;false;true
4;true,false,true;publication(E, F), professor(F).;false;false
4;true,false,false;tempadvisedby(G, B), publication(H, B).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true;ta(D, A, E).;true;true
5;true,true,true;tempadvisedby(F, B).;false;false
5;true,false;ta(I, A, J), publication(K, B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
5;true,false,true;ta(L, M, J), publication(K, M).;false;false
5;true,true,false;tempadvisedby(G, B), publication(H, G).;false;false
5;true,false,false;projectmember(N, B).;false;false
6;;advisedby(A, B) :- student(A), professor(B).;true;false
6;true,false;publication(E, A), tempadvisedby(F, B).;true;true
6;true;publication(C, A), projectmember(D, B).;false;true
6;true,false,true;publication(E, B).;false;false
6;true,false,false;projectmember(G, B), ta(H, A, I).;false;false
7;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
7;true,false;publication(E, A), publication(F, B).;true;true
7;true;publication(D, A), publication(D, B).;false;true
7;true,false,true;publication(F, G), ta(H, G, I).;false;false
7;true,false,false;tempadvisedby(J, B).;false;false
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;tempadvisedby(D, B), ta(E, D, F).;true;false
8;true,true,true;publication(G, D).;false;false
8;true,false;tempadvisedby(H, B), ta(I, H, J).;true;true
8;true;publication(C, A), publication(C, B).;true;true
8;true,false,true;ta(K, A, L), ta(I, M, L).;false;false
8;true,false,false;publication(N, A), publication(P, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;tempadvisedby(D, B), ta(E, D, F).;true;true
9;true;publication(C, B), publication(C, A).;false;true
9;true,false,true;publication(G, A), publication(H, B).;false;false
9;true,false,false;tempadvisedby(I, B), publication(J, A).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048766;  // std dev = 7,88e-08, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839152;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360618;  // std dev = 8,82e-08, 114,000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( movie(C, D) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783616;  // std dev = 5,96e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then if ( movie(E, F), director(F) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926107;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( movie(F, G) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839679;  // std dev = 2,98e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), genre(B, D) )
%   | then return 0.17369090683708208;  // std dev = 0,604, 40,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=35 */
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, B) )
%   | | | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109165;  // std dev = 4,34e-08, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.08804299432191035;  // std dev = 1,033, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.07428769937593727;  // std dev = 0,032, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then return 0.16853289230900997;  // std dev = 0,014, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(G, B) )
%   | | then return -0.07732997294191224;  // std dev = 0,013, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07119806908014857;  // std dev = 0,047, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1462165627053867;  // std dev = 0,012, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( movie(D, A), movie(E, B) )
%   | | then return -0.06359704610618849;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06712223499214157;  // std dev = 0,044, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067295
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.198 seconds
Total inference time: 2.41 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066529
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.382 seconds
Parameter learned model CLL: -0.066529


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'true,false,true': [0.0, 4, 0], 'false': [7.88e-08, 85, 0], 'true,true,true': [2.23e-07, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(E, B), movie(F, A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [0.0, 72, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(D, B)', 'true,false': 'movie(F, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(F, G)'}, {'true,false,true,true': [0.0, 6, 0], 'true,true,true,true': [0.0, 0, 45], 'false': [8.82e-08, 114, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,true,false': 'movie(C, D)'}, {'true,true,true': [0.0, 0, 45], 'true,false': [0.0, 0, 0], 'false': [5.96e-08, 81, 0], 'true,true,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(D, B), movie(E, A)', 'true': 'movie(C, B), movie(C, A)', 'true,false,true': 'movie(E, F), director(F)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 89, 0], 'true,true': [2.98e-08, 0, 45], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(F, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)', 'true,false,true': 'movie(F, G)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 45], 'false': [2.98e-08, 88, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 5, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), genre(B, D)', 'true,false,true': 'movie(E, B)'}, {'true,false,true,false': [0.0, 5, 0], 'false': [4.34e-08, 87, 0], 'true,true': [0.604, 5, 35], 'true,false,true,true': [0.0, 0, 10], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true,false': 'movie(D, A), movie(E, B)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, F)'}, {'true,false,true,false': [0.0, 0, 0], 'false': [2.63e-09, 8, 0], 'true,true': [1.033, 26, 45], 'true,false,true,true': [0.032, 55, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A), movie(G, B)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, E)'}, {'true,false,true': [0.013, 2, 0], 'false': [0.047, 94, 0], 'true,true,true': [0.014, 0, 45], 'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(D, A), movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'false': [0.044, 86, 0], 'true,true': [0.012, 0, 45], 'true,false,false': [0.0, 0, 0]}]]
[{'': [0.07496876301541104, 7.314410515177502e-17], 'true,false': [0.0, nan], 'true': [1.105288700071267e-15, 0.0], 'true,true': [1.105288700071267e-15, nan]}, {'': [0.06424978612186535, -3.0839528461809905e-17], 'true,false': [0.0, nan], 'true': [-9.473903143468002e-16, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-9.473903143468002e-16, nan]}, {'': [0.04627685204491952, 6.817158923136926e-17], 'true,true': [-3.947459643111668e-17, nan], 'true,true,true': [-3.947459643111668e-17, nan], 'true,false': [0.0, nan], 'true': [-3.947459643111668e-17, 0.0], 'true,false,true': [0.0, nan]}, {'': [0.020202215093805483, 4.386066270124075e-17], 'true': [0.020202215093805483, nan], 'true,true': [-4.144832625267251e-16, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.010013797405959831, 0.0], 'true,false': [2.3129646346357427e-18, nan], 'true': [1.973729821555834e-17, 2.3129646346357427e-18], 'true,false,true': [2.3129646346357427e-18, nan]}, {'': [0.010425859500244368, 1.0092936587501423e-17], 'true,false': [0.0, nan], 'true': [-2.960594732333751e-17, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-2.960594732333751e-17, nan]}, {'': [0.012384615955242519, 2.1694013124859382e-17], 'true,false': [0.018500475686226422, nan], 'true': [0.009105702876814604, 0.018500475686226422], 'true,false,true': [-2.7755575615628914e-17, -6.938893903907229e-19]}, {'': [0.014961067609707878, 8.673617379884035e-19], 'true,false': [1.8800899619539094e-05, nan], 'true': [0.01503353138975199, 1.8800899619539094e-05], 'true,false,true': [1.8800899619539094e-05, nan]}, {'': [0.0024704141387834563, 2.3357411736135583e-05], 'true,false': [8.044930608303805e-05, nan], 'true': [4.356138040412855e-06, 8.044930608303805e-05], 'true,true': [4.356138040412855e-06, nan]}, {'': [0.0009395694114590576, 2.293907504431855e-05], 'true,false': [0.0, nan], 'true': [3.4541568759483e-06, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, B), movie(C, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
5;true;movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- actor(A), director(B).;true;true
6;true,false;movie(E, B).;true;true
6;true;movie(C, A), genre(B, D).;true;true
7;;workedunder(A, B) :- actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true
9;true;movie(C, B), movie(C, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048763;  // std dev = 8,69e-08, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839144;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1123163781936062;  // std dev = 8,43e-08, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783624;  // std dev = 4,83e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.32071184716014944;  // std dev = 2,98e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.09269127618926107;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.0851847513883968;  // std dev = 3,33e-08, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), genre(B, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253542;  // std dev = 5,37e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13762409804162873;  // std dev = 0,353, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.1135795588446598;  // std dev = 0,333, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109168;  // std dev = 3,80e-08, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0.1798157331089958;  // std dev = 0,035, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07344043818246318;  // std dev = 0,014, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15480756494186038;  // std dev = 0,031, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06841459886425932;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.06841872519090708;  // std dev = 5,35e-05, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.13561884141203784;  // std dev = 0,028, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07403732457803533;  // std dev = 0,011, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06418451452357649;  // std dev = 5,14e-05, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064319
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.257 seconds
Total inference time: 2.823 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063929
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.199 seconds
Refined model CLL: -0.063929


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064319
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 5.036 seconds
Total inference time: 2.823 seconds
AUC ROC: 1.0
Total revision time: 5.036
Best scored revision CLL: -0.063929


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 03:06:55
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'AUC PR': 1.0, 'Learning time': 1.198, 'Inference time': 2.41, 'CLL': -0.067295, 'AUC ROC': 1.0}, 'AUC PR': 1.0, 'Learning time': 5.036, 'Inference time': 2.823, 'CLL': -0.064319, 'AUC ROC': 1.0}


