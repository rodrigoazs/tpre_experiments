Starting experiment #4 for 1_imdb_uwcse

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.14185106490048888;  // std dev = 0,000, 668,000 (wgt'ed) examples reached here.  /* #neg=668 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.12544463852839238;  // std dev = 0,000, 730,000 (wgt'ed) examples reached here.  /* #neg=730 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360625;  // std dev = 5,48e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.11231637819360664;  // std dev = 0,000, 705,000 (wgt'ed) examples reached here.  /* #neg=705 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783627;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.10159632948783515;  // std dev = 4,47e-07, 724,000 (wgt'ed) examples reached here.  /* #neg=724 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926207;  // std dev = 0,000, 684,000 (wgt'ed) examples reached here.  /* #neg=684 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014917;  // std dev = 3,21e-07, 170,000 (wgt'ed) examples reached here.  /* #pos=170 */
%   | | else if ( actor(A) )
%   | | | then return 0.3207118471601492;  // std dev = 3,67e-07, 212,000 (wgt'ed) examples reached here.  /* #pos=212 */
%   | | | else return -0.09269127618926087;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694874;  // std dev = 4,58e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.08518475138839675;  // std dev = 1,37e-07, 682,000 (wgt'ed) examples reached here.  /* #neg=682 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253467;  // std dev = 2,73e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07877675473109283;  // std dev = 0,000, 719,000 (wgt'ed) examples reached here.  /* #neg=719 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527686;  // std dev = 2,11e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.0732462257633365;  // std dev = 2,46e-07, 702,000 (wgt'ed) examples reached here.  /* #neg=702 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367172;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0684269778442027;  // std dev = 1,58e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.06842697784420264;  // std dev = 1,78e-07, 744,000 (wgt'ed) examples reached here.  /* #neg=744 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1340070300080122;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06419184008202529;  // std dev = 2,52e-07, 757,000 (wgt'ed) examples reached here.  /* #neg=757 */


Starting fold 1

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos	 examples: 78
Target test neg examples: 2265

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(B).;false;true
4;false,true,false;actor(A).;false;false
4;false;movie(C, A), movie(C, B).;true;false
4;false,true;female(A).;false;true
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7914822684328456;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.5581489350995122;  // std dev = 2,510, 30,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   else return -0.1418510649004877;  // std dev = 4,71e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7327299667445832;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.4758860545469176;  // std dev = 2,510, 30,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   else return -0.12544463852839133;  // std dev = 2,79e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5685132372860081;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.2502149663723068;  // std dev = 3,013, 37,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.36067009093303765;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.24380050747233514;  // std dev = 2,834, 34,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   else return -0.10159632948783634;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( publication(C, A), publication(C, B) )
%   | then if ( student(A) )
%   | | then return 0.27555809667425524;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.17384575688869047;  // std dev = 2,779, 38,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2831370424021013;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.06296783175341011;  // std dev = 3,113, 39,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   else return -0.08784687614043525;  // std dev = 0,058, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.22933133430657815;  // std dev = 1,05e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.09211641673343197;  // std dev = 2,958, 36,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   else return -0.08064070416847172;  // std dev = 0,050, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.12465856794059986;  // std dev = 0,966, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.024220274216737413;  // std dev = 3,113, 39,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   else return -0.07469639168109676;  // std dev = 0,039, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17277585054649533;  // std dev = 1,67e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.06304429442169315;  // std dev = 2,958, 36,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   else return -0.06997669960461285;  // std dev = 0,044, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1494582442186529;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.14142049174931867;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.06484152117747341;  // std dev = 0,035, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */


Results
   AUC ROC   = 0.935982
   AUC PR    = 0.358428
   CLL	      = -0.223152
   Precision = 0.157895 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.272727


Total learning time: 1.035 seconds
Total inference time: 1.272 seconds
AUC ROC: 0.935982


Results scoring model
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.228428
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total scoring time: 1.207 seconds
Parameter learned model CLL: -0.228428


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.51, 9, 21], 'false': [4.71e-08, 54, 0], 'true,true': [0.966, 1, 14]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.51, 9, 21], 'false': [2.79e-08, 50, 0], 'true,true': [4.21e-08, 0, 14]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [3.013, 16, 21], 'false': [1.49e-08, 52, 0], 'true,true': [4.21e-08, 0, 14]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.834, 13, 21], 'false': [0.0, 53, 0], 'true,true': [0.966, 1, 14]}], ['advisedby(A, B)', {'': 'student(B)', 'false': 'publication(C, A), publication(C, B)', 'false,true': 'student(A)'}, {'false,true,false': [0.0, 2, 0], 'true': [0.0, 41, 0], 'false,true,true': [0.966, 1, 14], 'false,false': [2.779, 17, 21]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [3.113, 18, 21], 'false': [0.058, 61, 0], 'true,true': [0.0, 0, 14]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.958, 15, 21], 'false': [0.05, 63, 0], 'true,true': [1.05e-08, 0, 14]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [3.113, 18, 21], 'false': [0.039, 46, 0], 'true,true': [0.966, 1, 14]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.958, 15, 21], 'false': [0.044, 59, 0], 'true,true': [1.67e-08, 0, 14]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [0.035, 65, 0], 'true,true': [0.0, 0, 14]}]]
[{'': [0.17283950617284127, 4.11193712824132e-17], 'true': [0.06222222222222188, 0.2099999999999998]}, {'': [0.15749323037079643, 1.5543122344752193e-17], 'true': [1.2688263138573217e-16, 0.2099999999999998]}, {'': [0.19823747711467143, 4.270088556250602e-18], 'true': [1.2688263138573217e-16, 0.24543462381300224]}, {'': [0.18581438757536164, 0.0], 'true': [0.062222222222222415, 0.23615916955017302]}, {'': [-6.769652589177784e-18, 0.16250197040026476], 'false': [0.06897887434289919, 0.2032874783885323], 'false,true': [0.062222222222222255, 0.0]}, {'': [0.19229596813519215, 5.467043465035925e-05], 'true': [-3.172065784643304e-17, 0.24852071005917173]}, {'': [0.17879571141468834, 4.019397049152454e-05], 'true': [7.93016446160826e-18, 0.2430555555555556]}, {'': [0.19879492734211923, 3.240695016683342e-05], 'true': [0.06222222222222224, 0.24852071005917162]}, {'': [0.17742746850496954, 3.289286427006794e-05], 'true': [1.9825411154020653e-17, 0.24305555555555555]}, {'': [0.15055148071561694, 1.846239626570344e-05], 'true': [-1.1895246692412391e-17, 0.21852237252861592]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- student(B).;true;true
4;false;publication(C, A), publication(C, B).;true;true
4;false,true;student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( publication(F, A) )
%   | | then if ( publication(G, B), tempadvisedby(H, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4036034805540577;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.6273797043302815;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1418510649004877;  // std dev = 4,47e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7304865328997829;  // std dev = 0,065, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(F, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2181637744094224;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.551611447897149;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.7415458660374611;  // std dev = 0,070, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1254446385283913;  // std dev = 3,49e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5665794957580575;  // std dev = 0,082, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), projectmember(E, B) )
%   | | then return 0.44947204929600143;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(F, B), publication(G, F) )
%   | | | then return -0.027989463323999167;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2515234388958799;  // std dev = 2,538, 28,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   else return -0.11231637819360629;  // std dev = 4,08e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, D), tempadvisedby(D, E) )
%   | | then return 0.5598907082837665;  // std dev = 0,176, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.05735544679838924;  // std dev = 0,758, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.450784177371474;  // std dev = 0,300, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( tempadvisedby(H, B), publication(I, H) )
%   | | then return 0.06092661678232155;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(J, B), tempadvisedby(K, B) )
%   | | | then return 0.46883775317959026;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.23026860459664075;  // std dev = 1,694, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.10159632948783635;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.09269127618926107;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( publication(C, A), publication(C, B) )
%   | then if ( student(A) )
%   | | then return 0.3313209726467017;  // std dev = 0,179, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( student(A) )
%   | | then if ( publication(D, A), tempadvisedby(E, B) )
%   | | | then return 0.0495307498474054;  // std dev = 0,984, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.3424526201800525;  // std dev = 1,675, 22,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.29570218637328377;  // std dev = 0,088, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.242812731045238;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.24281273104523804;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.023930251429123;  // std dev = 0,908, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( projectmember(K, B) )
%   | | then return 0.42222883491581853;  // std dev = 0,085, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(L, B), publication(M, A) )
%   | | | then return -0.23240211863601026;  // std dev = 0,281, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.07753569689507159;  // std dev = 2,406, 27,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   else return -0.08518475138839682;  // std dev = 2,58e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( ta(F, A, G) )
%   | | | then return 0.2386469239832293;  // std dev = 0,077, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20098766513764846;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.20098766513764843;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.019265026914585703;  // std dev = 0,907, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(K, A) )
%   | | then if ( projectmember(L, B) )
%   | | | then return 0.34607497298209977;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1794692052564818;  // std dev = 1,340, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.17453234557345773;  // std dev = 1,577, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return -0.052455212784095664;  // std dev = 1,351, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.07889333459551222;  // std dev = 0,007, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( publication(D, A) )
%   | | then if ( publication(D, B) )
%   | | | then return 0.19635141078869545;  // std dev = 0,193, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.07949285029022757;  // std dev = 0,540, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( publication(E, B) )
%   | | | then return 0.30091405136390315;  // std dev = 0,803, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.3188667149190173;  // std dev = 0,060, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( publication(F, B) )
%   | | then if ( publication(F, G), tempadvisedby(G, H) )
%   | | | then return 0.19121933810990369;  // std dev = 0,805, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.14853177703392823;  // std dev = 0,915, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.003870065780801757;  // std dev = 1,081, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.0732383125740559;  // std dev = 1,83e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then return 0.20534201261537602;  // std dev = 0,139, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.14461558145390066;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.18514842536728127;  // std dev = 0,050, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(I, B), publication(J, B) )
%   | | then if ( ta(K, I, L) )
%   | | | then return -0.20582072657803815;  // std dev = 1,046, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.09888110513432678;  // std dev = 1,177, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.20902708451910157;  // std dev = 0,979, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.06496852736286746;  // std dev = 1,706, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   else return -0.06853186272397185;  // std dev = 0,006, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(E, F), sameperson(A, F) )
%   | | | then return -0.21533764052039384;  // std dev = 0,824, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13652283343802776;  // std dev = 0,054, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.1679525824977038;  // std dev = 0,125, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(G, B), publication(H, A) )
%   | | then if ( publication(G, I), publication(H, I) )
%   | | | then return -0.42204675349863735;  // std dev = 0,549, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.016439252048364467;  // std dev = 0,757, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.05353509377418681;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.2311829990777437;  // std dev = 0,811, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.0644641151513026;  // std dev = 0,010, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */


Results
   AUC ROC   = 0.951789
   AUC PR    = 0.444647
   CLL	      = -0.210806
   Precision = 0.206587 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.334951


Total learning time: 8.663 seconds
Total inference time: 1.378 seconds
AUC ROC: 0.951789


Results scoring model
   AUC ROC   = 0.967231
   AUC PR    = 0.358601
   CLL	      = -0.220727
   Precision = 0.135458 at threshold = 0.5
   Recall    = 0.971429
   F1        = 0.237762


Total scoring time: 1.494 seconds
Refined model CLL: -0.220727


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.951789
   AUC PR    = 0.444647
   CLL	      = -0.210806
   Precision = 0.206587 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.334951


Total learning time: 12.399000000000001 seconds
Total inference time: 1.378 seconds
AUC ROC: 0.951789
Total revision time: 12.399000000000001
Best scored revision CLL: -0.220727


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 03:05:01
{'Precision': [0.206587, 0.5], 'Recall': 0.884615, 'F1': 0.334951, 'parameter': {'Precision': [0.157895, 0.5], 'Recall': 1.0, 'F1': 0.272727, 'AUC PR': 0.358428, 'Learning time': 1.035, 'Inference time': 1.272, 'CLL': -0.223152, 'AUC ROC': 0.935982}, 'AUC PR': 0.444647, 'Learning time': 12.399000000000001, 'Inference time': 1.378, 'CLL': -0.210806, 'AUC ROC': 0.951789}


Starting fold 2

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos	 examples: 93
Target test neg examples: 3738

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(B).;false;true
4;false,true,false;actor(A).;false;false
4;false;movie(C, A), movie(C, B).;true;false
4;false,true;female(A).;false;true
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7581489350995123;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.43709630352056494;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   else return -0.14185106490048768;  // std dev = 4,59e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7392070123615109;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.48373121920191664;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.12544463852839147;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5750887498568714;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3941507087096059;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.11231637819360639;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.43230702413071775;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3064329890378512;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.10159632948783633;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( publication(C, A), publication(C, B) )
%   | then if ( student(A) )
%   | | then return 0.23075955327502803;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.15564001861963467;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2818079352461939;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.19323693845202072;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.08702346702946441;  // std dev = 0,036, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.22840856387389868;  // std dev = 1,67e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.0686416448495008;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   else return -0.08026358284220227;  // std dev = 0,033, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1906599367026267;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.12805009601068917;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.07467041546033563;  // std dev = 0,031, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.06295718690558337;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.19498526653924372;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.06858687839341747;  // std dev = 0,017, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15455084460994284;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.010151699417195448;  // std dev = 1,970, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   else return -0.06487180752856819;  // std dev = 0,023, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */


Results
   AUC ROC   = 0.932863
   AUC PR    = 0.29479
   CLL	      = -0.257717
   Precision = 0.114251 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.205072


Total learning time: 0.827 seconds
Total inference time: 1.769 seconds
AUC ROC: 0.932863


Results scoring model
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.214589
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total scoring time: 0.729 seconds
Parameter learned model CLL: -0.214589


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.152, 8, 11], 'false': [4.59e-08, 45, 0], 'true,true': [0.949, 1, 9]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.854, 5, 11], 'false': [0.0, 42, 0], 'true,true': [0.0, 0, 9]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.854, 5, 11], 'false': [0.0, 32, 0], 'true,true': [0.0, 0, 9]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.854, 5, 11], 'false': [0.0, 40, 0], 'true,true': [3.33e-08, 0, 9]}], ['advisedby(A, B)', {'': 'student(B)', 'false': 'publication(C, A), publication(C, B)', 'false,true': 'student(A)'}, {'false,true,false': [2.63e-09, 3, 0], 'true': [0.0, 34, 0], 'false,true,true': [0.949, 1, 9], 'false,false': [2.068, 7, 11]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.854, 5, 11], 'false': [0.036, 35, 0], 'true,true': [0.0, 0, 9]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.068, 7, 11], 'false': [0.033, 37, 0], 'true,true': [1.67e-08, 0, 9]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.854, 5, 11], 'false': [0.031, 34, 0], 'true,true': [0.0, 0, 9]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.535, 3, 11], 'false': [0.017, 38, 0], 'true,true': [0.949, 1, 9]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.97, 6, 11], 'false': [0.023, 34, 0], 'true,true': [0.0, 0, 9]}]]
[{'': [0.21403091557669457, 4.6876083261951054e-17], 'true': [0.08999999999999977, 0.2437673130193904]}, {'': [0.15253771975717675, -1.850371707708594e-17], 'true': [0.0, 0.21484375]}, {'': [0.14504296761876162, 0.0], 'true': [-4.9343245538895844e-17, 0.2148437499999999]}, {'': [0.14115052043251297, -9.714451465470119e-18], 'true': [1.2335811384723962e-16, 0.21484375000000006]}, {'': [-6.530723674265627e-18, 0.1748132670324412], 'false': [0.08780244480730233, 0.23765432098765438], 'false,true': [0.09, 2.3129646346357427e-18]}, {'': [0.13930744686740532, 3.606266889287621e-05], 'true': [-2.4671622769447922e-17, 0.21484375000000003]}, {'': [0.1641085403061137, 2.9749156160114956e-05], 'true': [3.0839528461809905e-17, 0.23765432098765432]}, {'': [0.1384031661916986, 2.8119254649004967e-05], 'true': [-1.2335811384723961e-17, 0.21484375000000003]}, {'': [0.1399510876824199, 7.899174274126372e-06], 'true': [0.09, 0.16836734693877556]}, {'': [0.15404052778083555, 1.5187076624283555e-05], 'true': [0.0, 0.22837370242214536]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- student(B).;true;true
4;false;publication(C, A), publication(C, B).;true;true
4;false,true;student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(E, B), publication(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( publication(F, A), publication(G, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.30259337954395665;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.5194734122109544;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(E, A, F), publication(G, B) )
%   | | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( tempadvisedby(H, B), ta(I, H, J) )
%   | | | then return 0.5815293635409781;  // std dev = 0,816, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11794938022416339;  // std dev = 0,859, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5770044919914998;  // std dev = 0,073, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return -0.32363783308998273;  // std dev = 0,242, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2859055824538261;  // std dev = 1,168, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7142013241650899;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.1123163781936064;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.43410943258660833;  // std dev = 0,073, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return 0.06888582473451167;  // std dev = 0,864, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( ta(F, A, G) )
%   | | | then return 0.318873151051907;  // std dev = 0,616, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5999490707149736;  // std dev = 0,172, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( publication(C, A), publication(C, B) )
%   | then if ( student(A) )
%   | | then return 0.3322110958398401;  // std dev = 0,066, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.1788670745666457;  // std dev = 1,027, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( ta(F, A, G), publication(H, B) )
%   | | | then return 0.28345967069492634;  // std dev = 0,733, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.02163149163503336;  // std dev = 1,120, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.08476490092615936;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.24583559885159945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then return 0.27689350202211244;  // std dev = 0,605, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( ta(H, A, I) )
%   | | | then return 0.2077321547353882;  // std dev = 0,732, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.18357474603584756;  // std dev = 0,960, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.08546389736430217;  // std dev = 0,014, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.2678198046232976;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.20314010385018766;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(E, B), publication(F, A) )
%   | | then return -0.04144011434623124;  // std dev = 0,776, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.20313304674228785;  // std dev = 0,700, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.40139699728779066;  // std dev = 0,329, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07873476214876209;  // std dev = 0,008, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.0186532189779653;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.17222735892881547;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(E, A, F) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return -0.024480128481879044;  // std dev = 0,643, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2635313765171278;  // std dev = 0,176, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( tempadvisedby(J, B), ta(K, J, L) )
%   | | | then return -0.010370807429616723;  // std dev = 0,911, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.06565831959192346;  // std dev = 0,795, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07343465855457673;  // std dev = 0,006, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.21548315711766164;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.14903999597844764;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( publication(E, B), ta(F, A, G) )
%   | | then if ( ta(H, I, G), tempadvisedby(I, J) )
%   | | | then return 0.2227667489536166;  // std dev = 0,140, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.029397593480285616;  // std dev = 0,686, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(K, B), ta(L, K, M) )
%   | | | then return 0.03885410950190949;  // std dev = 0,675, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.24379359036404602;  // std dev = 1,031, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return -0.06930128921803144;  // std dev = 0,012, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.18128458591087904;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1311087974777354;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( tempadvisedby(E, B), publication(F, A) )
%   | | then return 0.00597576977126887;  // std dev = 0,483, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.03377050274415102;  // std dev = 0,765, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.3892750200442096;  // std dev = 0,299, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.06465409475314117;  // std dev = 0,008, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */


Results
   AUC ROC   = 0.947909
   AUC PR    = 0.213972
   CLL	      = -0.235179
   Precision = 0.160853 at threshold = 0.5
   Recall    = 0.892473
   F1        = 0.272578


Total learning time: 3.641 seconds
Total inference time: 1.796 seconds
AUC ROC: 0.947909


Results scoring model
   AUC ROC   = 0.985191
   AUC PR    = 0.782363
   CLL	      = -0.169793
   Precision = 0.404255 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.567164


Total scoring time: 0.808 seconds
Refined model CLL: -0.169793


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.947909
   AUC PR    = 0.213972
   CLL	      = -0.235179
   Precision = 0.160853 at threshold = 0.5
   Recall    = 0.892473
   F1        = 0.272578


Total learning time: 6.005 seconds
Total inference time: 1.796 seconds
AUC ROC: 0.947909
Total revision time: 6.005
Best scored revision CLL: -0.169793


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 03:05:11
{'Precision': [0.160853, 0.5], 'Recall': 0.892473, 'F1': 0.272578, 'parameter': {'Precision': [0.114251, 0.5], 'Recall': 1.0, 'F1': 0.205072, 'AUC PR': 0.29479, 'Learning time': 0.827, 'Inference time': 1.769, 'CLL': -0.257717, 'AUC ROC': 0.932863}, 'AUC PR': 0.213972, 'Learning time': 6.005, 'Inference time': 1.796, 'CLL': -0.235179, 'AUC ROC': 0.947909}


Starting fold 3

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos	 examples: 104
Target test neg examples: 3988

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(B).;false;true
4;false,true,false;actor(A).;false;false
4;false;movie(C, A), movie(C, B).;true;false
4;false,true;female(A).;false;true
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.37354825492810284;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.3622791568859589;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.09269127618926103;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.27438517030270054;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.21263374100066273;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.08808071951449263;  // std dev = 0,045, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.16884928515026176;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.08201421093332935;  // std dev = 0,041, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.013021710865965578;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   else return -0.07863327152058788;  // std dev = 0,037, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.057522746236497155;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.06996086929619434;  // std dev = 0,026, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1290260221387959;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.06341209549011496;  // std dev = 5,27e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.904213
   AUC PR    = 0.119816
   CLL	      = -0.350939
   Precision = 0.119816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.213992


Total learning time: 0.771 seconds
Total inference time: 1.312 seconds
AUC ROC: 0.904213


Results scoring model
   AUC ROC   = 0.961538
   AUC PR    = 0.5625
   CLL	      = -0.183914
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total scoring time: 0.556 seconds
Parameter learned model CLL: -0.183914


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.0, 0, 9], 'false': [1.49e-08, 23, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [2.98e-08, 0, 9], 'false': [7.45e-09, 18, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.279, 2, 9], 'false': [1.67e-08, 18, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.949, 1, 9], 'false': [0.0, 22, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'student(B)', 'false': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true': [0.0, 21, 0], 'false,true': [0.0, 0, 0], 'false,false': [0.949, 1, 9]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.949, 1, 9], 'false': [0.045, 23, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.949, 1, 9], 'false': [0.041, 18, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.5, 3, 9], 'false': [0.037, 10, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.279, 2, 9], 'false': [0.026, 12, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.949, 1, 9], 'false': [5.27e-09, 16, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [-2.9605947323337506e-16, 9.654113257610057e-18], 'true': [nan, -2.9605947323337506e-16]}, {'': [9.868649107779169e-17, 3.0839528461809902e-18], 'true': [nan, 9.868649107779169e-17]}, {'': [0.14876033057851223, 1.5419764230904953e-17], 'true': [nan, 0.14876033057851223]}, {'': [0.0899999999999999, -3.784851220313033e-18], 'true': [nan, 0.0899999999999999]}, {'': [-7.93016446160826e-18, 0.08999999999999996], 'false': [nan, 0.08999999999999996]}, {'': [0.09, 8.805962956731277e-05], 'true': [nan, 0.09]}, {'': [0.09, 9.50745064000991e-05], 'true': [nan, 0.09]}, {'': [0.1875, 0.0001346668266243252], 'true': [nan, 0.1875]}, {'': [0.1487603305785124, 5.641351434408406e-05], 'true': [nan, 0.1487603305785124]}, {'': [0.09000000000000001, 1.734723475976807e-18], 'true': [nan, 0.09000000000000001]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- student(B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then return 0.42468600128852124;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, A, E) )
%   | then return 0.6719824395413228;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3345204374450441;  // std dev = 0,419, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.5014687131556564;  // std dev = 0,034, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3461660308594121;  // std dev = 0,831, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.13786723569863243;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.4016504717560799;  // std dev = 0,122, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.35568245720691793;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.06758880534485903;  // std dev = 0,425, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else return -0.08754749670849153;  // std dev = 0,046, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return -0.06306579645365146;  // std dev = 1,163, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.15343737842417465;  // std dev = 0,838, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08136137561172041;  // std dev = 0,043, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.28509995042743164;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.12138227064398184;  // std dev = 0,842, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07508458983570229;  // std dev = 0,040, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( ta(D, A, E) )
%   | | then return -0.013482849108218176;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.45332262730822565;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.09741409045216104;  // std dev = 0,845, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07137247474072549;  // std dev = 0,052, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D) )
%   | then return -0.07104028484778946;  // std dev = 1,137, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.2311824355840688;  // std dev = 0,076, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06726949708583782;  // std dev = 0,035, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.904662
   AUC PR    = 0.118728
   CLL	      = -0.324858
   Precision = 0.119816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.213992


Total learning time: 1.904 seconds
Total inference time: 1.674 seconds
AUC ROC: 0.904662


Results scoring model
   AUC ROC   = 0.9884
   AUC PR    = 0.906713
   CLL	      = -0.1654
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total scoring time: 0.582 seconds
Refined model CLL: -0.1654


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.904662
   AUC PR    = 0.118728
   CLL	      = -0.324858
   Precision = 0.119816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.213992


Total learning time: 3.8129999999999997 seconds
Total inference time: 1.674 seconds
AUC ROC: 0.904662
Total revision time: 3.8129999999999997
Best scored revision CLL: -0.1654


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 03:05:19
{'Precision': [0.119816, 0.5], 'Recall': 1.0, 'F1': 0.213992, 'parameter': {'Precision': [0.119816, 0.5], 'Recall': 1.0, 'F1': 0.213992, 'AUC PR': 0.119816, 'Learning time': 0.771, 'Inference time': 1.312, 'CLL': -0.350939, 'AUC ROC': 0.904213}, 'AUC PR': 0.118728, 'Learning time': 3.8129999999999997, 'Inference time': 1.674, 'CLL': -0.324858, 'AUC ROC': 0.904662}


Starting fold 4

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos	 examples: 80
Target test neg examples: 2591

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(B).;false;true
4;false,true,false;actor(A).;false;false
4;false;movie(C, A), movie(C, B).;true;false
4;false,true;female(A).;false;true
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.44638422921715937;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5861400788776209;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else return 0.3502756893779172;  // std dev = 2,981, 36,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   else return -0.12544463852839158;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.51657321823011;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.33777537752302206;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   else return -0.11231637819360635;  // std dev = 2,11e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3265376051502878;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else return 0.35016448433749886;  // std dev = 2,491, 29,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   else return -0.10159632948783633;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.09269127618926101;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( publication(C, A), publication(C, B) )
%   | then if ( student(A) )
%   | | then return 0.14521217288687754;  // std dev = 1,749, 17,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.15853225461337692;  // std dev = 2,781, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15941850855884543;  // std dev = 1,561, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | else return 0.18429805942306293;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   else return -0.08751304235682865;  // std dev = 0,042, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.31173284402718865;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.08137820043478251;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   else return -0.08082177558095083;  // std dev = 0,043, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.24903541788587982;  // std dev = 2,11e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.06106002631824246;  // std dev = 2,870, 34,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   else return -0.07343918854183491;  // std dev = 0,020, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2054131820648317;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.14728991480679138;  // std dev = 2,491, 29,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   else return -0.0694070145018774;  // std dev = 0,030, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.10247479702618541;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.02742906924878661;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   else return -0.06526025554143498;  // std dev = 0,032, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */


Results
   AUC ROC   = 0.936897
   AUC PR    = 0.369816
   CLL	      = -0.226098
   Precision = 0.142857 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.25


Total learning time: 0.994 seconds
Total inference time: 1.295 seconds
AUC ROC: 0.936897


Results scoring model
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.237048
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total scoring time: 1.062 seconds
Parameter learned model CLL: -0.237048


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.87, 14, 20], 'false': [5.16e-08, 55, 0], 'true,true': [0.0, 0, 13]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.981, 16, 20], 'false': [0.0, 64, 0], 'true,true': [1.317, 2, 13]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.807, 13, 20], 'false': [2.11e-08, 57, 0], 'true,true': [0.964, 1, 13]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.491, 9, 20], 'false': [0.0, 46, 0], 'true,true': [1.317, 2, 13]}], ['advisedby(A, B)', {'': 'student(B)', 'false': 'publication(C, A), publication(C, B)', 'false,true': 'student(A)'}, {'false,true,false': [0.0, 0, 0], 'true': [0.0, 42, 0], 'false,true,true': [1.749, 4, 13], 'false,false': [2.781, 19, 20]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.664, 11, 20], 'false': [0.042, 47, 0], 'true,true': [1.561, 3, 13]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.87, 14, 20], 'false': [0.043, 52, 0], 'true,true': [0.0, 0, 13]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.87, 14, 20], 'false': [0.02, 52, 0], 'true,true': [2.11e-08, 0, 13]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.491, 9, 20], 'false': [0.03, 42, 0], 'true,true': [0.0, 0, 13]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.807, 13, 20], 'false': [0.032, 52, 0], 'true,true': [0.964, 1, 13]}]]
[{'': [0.20914440923494962, 4.844609562000683e-17], 'true': [-2.7328566760003855e-16, 0.2422145328719722]}, {'': [0.21982876542088767, -3.469446951953614e-17], 'true': [0.11555555555555568, 0.24691358024691348]}, {'': [0.194076691710578, 7.791038769299344e-18], 'true': [0.06632653061224472, 0.238751147842057]}, {'': [0.18058519872948564, -8.4473491004088e-18], 'true': [0.11555555555555565, 0.2140309155766943]}, {'': [-1.4538634846281813e-17, 0.19273040626596968], 'false': [0.17993079584775085, 0.19825586259539335], 'false,true': [0.17993079584775085, nan]}, {'': [0.2029958837275566, 3.835321356327033e-05], 'true': [0.15234375000000003, 0.2289281997918835]}, {'': [0.18583648042366582, 3.6329663417781726e-05], 'true': [-3.416070845000482e-17, 0.24221453287197225]}, {'': [0.1822891725090468, 7.462786007508826e-06], 'true': [3.416070845000482e-17, 0.24221453287197225]}, {'': [0.1485052605581568, 2.0985521041215944e-05], 'true': [-2.5620531337503614e-17, 0.21403091557669432]}, {'': [0.18856849585645857, 2.0305277608084865e-05], 'true': [0.0663265306122449, 0.23875114784205692]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- student(B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( publication(E, A), publication(F, B) )
%   | | | then return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3966104735610507;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6581489350995123;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.14185106490048768;  // std dev = 5,16e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(E, F), ta(G, F, H) )
%   | | | then return 0.3800129722356795;  // std dev = 1,297, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.042045781930552924;  // std dev = 0,890, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.5527212043484538;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.44207006173775426;  // std dev = 1,987, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   else return -0.12544463852839155;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, A) )
%   | then if ( publication(D, B) )
%   | | then if ( publication(E, C) )
%   | | | then return 0.22203310341295115;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( publication(D, F), ta(G, F, H) )
%   | | | then return 0.5273957544687652;  // std dev = 0,790, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.18645677093834367;  // std dev = 0,078, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( ta(I, A, J) )
%   | | then if ( ta(K, L, J), publication(M, L) )
%   | | | then return 0.4093033017536511;  // std dev = 1,404, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.7012872300747148;  // std dev = 0,061, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(N, A), publication(N, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3245273913892534;  // std dev = 1,383, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.1123163781936064;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then if ( publication(F, A), ta(G, E, H) )
%   | | then return 0.4717162541919069;  // std dev = 0,133, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(I, J, D), publication(K, J) )
%   | | | then return 0.07904865089509053;  // std dev = 1,240, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.31464421577169754;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( publication(L, A), ta(M, A, N) )
%   | | then return 0.5506657404633087;  // std dev = 0,119, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(P, A), tempadvisedby(Q, B) )
%   | | | then return 0.48860241869149884;  // std dev = 0,227, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3529623987838363;  // std dev = 1,626, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else return -0.10159632948783633;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.09269127618926103;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( publication(C, B), student(A) )
%   | then if ( publication(C, A) )
%   | | then return 0.33512447750747637;  // std dev = 0,111, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | | then return -0.15227144582170063;  // std dev = 0,784, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.20583621178810207;  // std dev = 2,299, 27,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | else if ( professor(A) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.2453787700523166;  // std dev = 0,830, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then if ( publication(C, E), ta(F, E, G) )
%   | | then if ( ta(H, D, I) )
%   | | | then return 0.1332832381482112;  // std dev = 0,740, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4220497772501338;  // std dev = 0,298, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.015777165111726704;  // std dev = 0,966, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( ta(J, A, K) )
%   | | then if ( ta(L, M, K), tempadvisedby(M, N) )
%   | | | then return 0.42216643357441413;  // std dev = 0,259, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.22562468501021093;  // std dev = 0,817, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(P, B), publication(P, A) )
%   | | | then return 0.2648179279019245;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.49578257781533025;  // std dev = 0,108, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839682;  // std dev = 1,67e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2285411855979209;  // std dev = 0,131, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.07154073080662372;  // std dev = 1,004, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.28642326644122373;  // std dev = 1,357, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | | then return 0.20870948326498678;  // std dev = 0,983, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3295086377583057;  // std dev = 0,101, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109176;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.19100314367263646;  // std dev = 0,115, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( inphase(A, E), inphase(D, E) )
%   | | | then return -0.341372248348891;  // std dev = 0,913, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.09633070244129599;  // std dev = 1,884, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.11045064569169473;  // std dev = 1,251, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.2523549391350785;  // std dev = 0,066, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return 0.16013748101439595;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.011511186316672917;  // std dev = 0,927, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.148701972350483;  // std dev = 0,023, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(G, A, H), publication(I, A) )
%   | | then return 0.26741185005293705;  // std dev = 0,852, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(J, A) )
%   | | | then return -0.17759399388492347;  // std dev = 1,102, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.043342051690074615;  // std dev = 2,167, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.06842697784420272;  // std dev = 5,27e-09, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( ta(G, A, F), tempadvisedby(H, B) )
%   | | | then return -0.1447990789930176;  // std dev = 1,159, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.1787576536407665;  // std dev = 1,259, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else if ( publication(C, A) )
%   | | | then return 0.1567866973355709;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.09787567391504699;  // std dev = 1,637, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | else return -0.14755454943363858;  // std dev = 0,709, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.0641918400820262;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */


Results
   AUC ROC   = 0.951908
   AUC PR    = 0.378453
   CLL	      = -0.215002
   Precision = 0.173575 at threshold = 0.5
   Recall    = 0.8375
   F1        = 0.287554


Total learning time: 7.082 seconds
Total inference time: 1.661 seconds
AUC ROC: 0.951908


Results scoring model
   AUC ROC   = 0.964575
   AUC PR    = 0.319558
   CLL	      = -0.217582
   Precision = 0.167539 at threshold = 0.5
   Recall    = 0.969697
   F1        = 0.285714


Total scoring time: 1.384 seconds
Refined model CLL: -0.217582


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.951908
   AUC PR    = 0.378453
   CLL	      = -0.215002
   Precision = 0.173575 at threshold = 0.5
   Recall    = 0.8375
   F1        = 0.287554


Total learning time: 10.522 seconds
Total inference time: 1.661 seconds
AUC ROC: 0.951908
Total revision time: 10.522
Best scored revision CLL: -0.217582


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 03:05:33
{'Precision': [0.173575, 0.5], 'Recall': 0.8375, 'F1': 0.287554, 'parameter': {'Precision': [0.142857, 0.5], 'Recall': 1.0, 'F1': 0.25, 'AUC PR': 0.369816, 'Learning time': 0.994, 'Inference time': 1.295, 'CLL': -0.226098, 'AUC ROC': 0.936897}, 'AUC PR': 0.378453, 'Learning time': 10.522, 'Inference time': 1.661, 'CLL': -0.215002, 'AUC ROC': 0.951908}


Starting fold 5

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos	 examples: 97
Target test neg examples: 3734

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- actor(B).;false;true
4;false,true,false;actor(A).;false;false
4;false;movie(C, A), movie(C, B).;true;false
4;false,true;female(A).;false;true
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5248156017661789;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   else return -0.14185106490048777;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4132078869437164;  // std dev = 2,103, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.40895579165987167;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2780238632770435;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   else return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.09269127618926097;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( publication(C, A), publication(C, B) )
%   | then if ( student(A) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.21637207061160862;  // std dev = 1,865, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.23965767181980205;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.08950744549004683;  // std dev = 0,044, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.0016291399176516837;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   else return -0.08119173608559661;  // std dev = 0,042, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.13568361905060156;  // std dev = 1,879, 17,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.07755303468696259;  // std dev = 0,048, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.14691269043934377;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.06847024581905267;  // std dev = 0,022, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16233165750613557;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.06600673447167464;  // std dev = 0,040, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */


Results
   AUC ROC   = 0.937621
   AUC PR    = 0.323785
   CLL	      = -0.271556
   Precision = 0.12125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.216276


Total learning time: 0.821 seconds
Total inference time: 1.591 seconds
AUC ROC: 0.937621


Results scoring model
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.275057
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total scoring time: 0.76 seconds
Parameter learned model CLL: -0.275057


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 6, 12], 'false': [0.0, 26, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.103, 7, 12], 'false': [0.0, 31, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [1.49e-08, 24, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 6, 12], 'false': [0.0, 26, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'student(B)', 'false': 'publication(C, A), publication(C, B)', 'false,true': 'student(A)'}, {'false,true,false': [0.0, 1, 0], 'true': [0.0, 29, 0], 'false,true,true': [0.0, 0, 4], 'false,false': [1.865, 8, 12]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.732, 4, 12], 'false': [0.044, 19, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.268, 9, 12], 'false': [0.042, 28, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.879, 5, 12], 'false': [0.048, 25, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.732, 4, 12], 'false': [0.022, 30, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.549, 3, 12], 'false': [0.04, 34, 0], 'true,true': [0.0, 0, 4]}]]
[{'': [0.19834710743801612, 0.0], 'true': [0.0, 0.22222222222222188]}, {'': [0.2056954669108213, -1.7906822977825105e-18], 'true': [0.0, 0.23268698060941825]}, {'': [0.17137256302598117, 9.25185853854297e-18], 'true': [0.0, 0.20761245674740506]}, {'': [0.18471266843113732, -8.540177112501205e-18], 'true': [0.0, 0.2222222222222222]}, {'': [0.0, 0.144647958041409], 'false': [0.027344342783207666, 0.17388003808393865], 'false,true': [0.0, 0.0]}, {'': [0.15003851230488757, 9.965698291434555e-05], 'true': [0.0, 0.18750000000000003]}, {'': [0.21153615825579755, 6.202166426574698e-05], 'true': [0.0, 0.24489795918367344]}, {'': [0.1683316754247269, 9.073924675901956e-05], 'true': [0.0, 0.20761245674740486]}, {'': [0.15000544040259411, 1.6050330092025796e-05], 'true': [0.0, 0.18750000000000003]}, {'': [0.1264491331617021, 4.6043957410287185e-05], 'true': [0.0, 0.16000000000000006]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- student(B).;true;true
4;false;publication(C, A), publication(C, B).;true;true
4;false,true;student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( projectmember(D, B) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.14185106490048774;  // std dev = 1,05e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return -0.22337780021753648;  // std dev = 0,043, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.5859236323627681;  // std dev = 1,270, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.7602824915255714;  // std dev = 0,008, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( projectmember(D, B), ta(E, A, F) )
%   | | then return 0.022542539791564103;  // std dev = 0,759, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(G, B), publication(H, B) )
%   | | | then return 0.44599269179934786;  // std dev = 1,125, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.6177546748361812;  // std dev = 0,054, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360639;  // std dev = 1,05e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E) )
%   | | then if ( ta(F, G, E), publication(H, G) )
%   | | | then return 0.5650201426460014;  // std dev = 0,078, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2534375077120969;  // std dev = 1,121, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(I, B) )
%   | | | then return -0.316028408949368;  // std dev = 0,897, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.4453467835034488;  // std dev = 0,010, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(B) )
%   then return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( publication(C, A), publication(C, B) )
%   | then if ( student(A) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then if ( ta(G, H, F), publication(I, H) )
%   | | | then return 0.229958554591994;  // std dev = 0,878, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0832640870033492;  // std dev = 1,322, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( projectmember(J, B) )
%   | | | then return -0.05497547460803709;  // std dev = 1,159, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.23966389963406876;  // std dev = 0,792, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( hasposition(B, D) )
%   | | then if ( ta(E, A, F) )
%   | | | then return -0.04143558170604669;  // std dev = 1,912, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.2371727265779882;  // std dev = 0,674, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.3334972424819756;  // std dev = 0,841, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.08471619027008236;  // std dev = 0,011, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B) )
%   | | then if ( publication(D, E), projectmember(F, E) )
%   | | | then return 0.5304562710586311;  // std dev = 0,035, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.410103254282461;  // std dev = 0,141, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.005997152570815502;  // std dev = 0,915, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.07850871832083932;  // std dev = 0,010, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( publication(E, F), inphase(F, G) )
%   | | | then return 0.18111113753230032;  // std dev = 0,776, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3740717846621033;  // std dev = 0,086, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(H, A, I) )
%   | | | then return -0.10805373596246026;  // std dev = 0,794, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.36084525336749734;  // std dev = 0,154, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.072480768486331;  // std dev = 0,013, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then if ( publication(D, G), projectmember(H, G) )
%   | | | then return 0.008058246733659994;  // std dev = 0,815, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2923838106143875;  // std dev = 0,123, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( projectmember(I, B) )
%   | | | then return -0.003219099649920426;  // std dev = 0,890, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.2649181286690618;  // std dev = 0,805, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.06834612872961332;  // std dev = 0,009, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( ta(G, H, E), publication(I, H) )
%   | | | then return 0.20612684408215062;  // std dev = 0,025, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.31791776482896017;  // std dev = 0,044, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(J, B) )
%   | | | then return -0.3799912610490611;  // std dev = 0,790, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.1097331248715873;  // std dev = 1,097, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else return -0.06285683705745897;  // std dev = 0,017, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */


Results
   AUC ROC   = 0.954586
   AUC PR    = 0.364809
   CLL	      = -0.208028
   Precision = 0.193732 at threshold = 0.5
   Recall    = 0.701031
   F1        = 0.303571


Total learning time: 4.211 seconds
Total inference time: 1.904 seconds
AUC ROC: 0.954586


Results scoring model
   AUC ROC   = 0.965399
   AUC PR    = 0.598742
   CLL	      = -0.232902
   Precision = 0.307692 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.470588


Total scoring time: 0.87 seconds
Refined model CLL: -0.232902


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.954586
   AUC PR    = 0.364809
   CLL	      = -0.208028
   Precision = 0.193732 at threshold = 0.5
   Recall    = 0.701031
   F1        = 0.303571


Total learning time: 6.662 seconds
Total inference time: 1.904 seconds
AUC ROC: 0.954586
Total revision time: 6.662
Best scored revision CLL: -0.232902


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 03:05:44
{'Precision': [0.193732, 0.5], 'Recall': 0.701031, 'F1': 0.303571, 'parameter': {'Precision': [0.12125, 0.5], 'Recall': 1.0, 'F1': 0.216276, 'AUC PR': 0.323785, 'Learning time': 0.821, 'Inference time': 1.591, 'CLL': -0.271556, 'AUC ROC': 0.937621}, 'AUC PR': 0.364809, 'Learning time': 6.662, 'Inference time': 1.904, 'CLL': -0.208028, 'AUC ROC': 0.954586}


