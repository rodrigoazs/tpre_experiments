Starting experiment #2 for 1_imdb_uwcse

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.14185106490048932;  // std dev = 0,000, 752,000 (wgt'ed) examples reached here.  /* #neg=752 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.12544463852839233;  // std dev = 0,000, 663,000 (wgt'ed) examples reached here.  /* #neg=663 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360626;  // std dev = 4,71e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.1123163781936065;  // std dev = 0,000, 690,000 (wgt'ed) examples reached here.  /* #neg=690 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783621;  // std dev = 3,94e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.10159632948783512;  // std dev = 4,50e-07, 712,000 (wgt'ed) examples reached here.  /* #neg=712 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.09269127618926198;  // std dev = 0,000, 687,000 (wgt'ed) examples reached here.  /* #neg=687 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1,83e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.08518475138839675;  // std dev = 1,30e-07, 715,000 (wgt'ed) examples reached here.  /* #neg=715 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.07877675473109269;  // std dev = 0,000, 686,000 (wgt'ed) examples reached here.  /* #neg=686 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 7,45e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.07324622576333639;  // std dev = 2,73e-07, 720,000 (wgt'ed) examples reached here.  /* #neg=720 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0684269778442027;  // std dev = 1,67e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.06842697784420256;  // std dev = 1,84e-07, 700,000 (wgt'ed) examples reached here.  /* #neg=700 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.06419184008202533;  // std dev = 2,51e-07, 700,000 (wgt'ed) examples reached here.  /* #neg=700 */


Starting fold 1

Target train facts examples: 708
Target train pos examples: 35
Target train neg examples: 1814

Target test facts examples: 1679
Target test pos	 examples: 78
Target test neg examples: 2265

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.4945125714631487;  // std dev = 2,763, 33,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   else return -0.14185106490048768;  // std dev = 4,94e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.35432462725691954;  // std dev = 3,013, 37,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   else return -0.12544463852839147;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.19862169388971723;  // std dev = 3,313, 44,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=21 */
%   else return -0.11231637819360636;  // std dev = 1,83e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.2797321414674312;  // std dev = 2,898, 35,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   else return -0.10159632948783634;  // std dev = 1,05e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.2336954439277379;  // std dev = 2,834, 34,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   else return -0.09269127618926104;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.1594951791478522;  // std dev = 2,898, 35,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   else return -0.0851847513883968;  // std dev = 1,83e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.19731343248064953;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   else return -0.07877675473109175;  // std dev = 1,29e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.05394347911196874;  // std dev = 2,958, 36,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=21 */
%   else return -0.07324622576333704;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.009826969796915342;  // std dev = 3,065, 38,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=21 */
%   else return -0.06842697784420268;  // std dev = 2,36e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.022325266288617942;  // std dev = 3,013, 37,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   else return -0.0641918400820262;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */


Results
   AUC ROC   = 0.935982
   AUC PR    = 0.358428
   CLL	      = -0.215918
   Precision = 0.157895 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.272727


Total learning time: 1.015 seconds
Total inference time: 1.296 seconds
AUC ROC: 0.935982


Results scoring model
   AUC ROC   = 0.937707
   AUC PR    = 0.29769
   CLL	      = -0.219898
   Precision = 0.089744 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.164706


Total scoring time: 1.089 seconds
Parameter learned model CLL: -0.219898


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.763, 12, 21], 'false': [4.94e-08, 51, 0], 'true,true': [0.0, 0, 14]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [3.013, 16, 21], 'false': [0.0, 46, 0], 'true,true': [5.16e-08, 0, 14]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [3.313, 23, 21], 'false': [1.83e-08, 56, 0], 'true,true': [0.0, 0, 14]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.898, 14, 21], 'false': [1.05e-08, 57, 0], 'true,true': [4.21e-08, 0, 14]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.834, 13, 21], 'false': [0.0, 63, 0], 'true,true': [0.0, 0, 14]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.898, 14, 21], 'false': [1.83e-08, 67, 0], 'true,true': [2.11e-08, 0, 14]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.603, 10, 21], 'false': [1.29e-08, 62, 0], 'true,true': [0.0, 0, 14]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.958, 15, 21], 'false': [0.0, 47, 0], 'true,true': [0.0, 0, 14]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [3.065, 17, 21], 'false': [2.36e-08, 71, 0], 'true,true': [0.0, 0, 14]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [3.013, 16, 21], 'false': [0.0, 44, 0], 'true,true': [0.0, 0, 14]}]]
[{'': [0.1901312811226817, 4.7891973611281265e-17], 'true': [-2.5376526277146434e-16, 0.23140495867768562]}, {'': [0.2046143629929251, -1.4481169886415085e-17], 'true': [1.9032394707859825e-16, 0.24543462381300257]}, {'': [0.2125678282105205, 5.9476233462061954e-18], 'true': [-2.5376526277146434e-16, 0.24948347107438]}, {'': [0.17530280121428135, 1.947759692324836e-18], 'true': [1.2688263138573217e-16, 0.24000000000000016]}, {'': [0.1688437358573258, -2.2909364000201642e-17], 'true': [-3.172065784643304e-17, 0.23615916955017296]}, {'': [0.17329675519693652, 4.9711478714559245e-18], 'true': [3.172065784643304e-17, 0.23999999999999996]}, {'': [0.15057082419600631, 2.6860234466737657e-18], 'true': [-3.172065784643304e-17, 0.2185223725286161]}, {'': [0.1780575998652968, -1.1810883240693154e-18], 'true': [0.0, 0.2430555555555556]}, {'': [0.18468659092175313, 7.818472004402511e-18], 'true': [-1.9825411154020653e-17, 0.24722991689750684]}, {'': [0.180544426760141, -1.8924256101565167e-18], 'true': [0.0, 0.24543462381300218]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), publication(E, B) )
%   | | then if ( publication(D, F), tempadvisedby(G, F) )
%   | | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(H, B), publication(I, H) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6081489350995123;  // std dev = 2,121, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   else return -0.14185106490048768;  // std dev = 4,94e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return -0.1490779674864458;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.5116831854195523;  // std dev = 0,809, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.7670719622367217;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4549022830544334;  // std dev = 2,175, 22,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   else return -0.12544463852839158;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, D) )
%   | | then return -0.06591768397667544;  // std dev = 0,341, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( publication(F, A) )
%   | | | then return 0.11120489550653916;  // std dev = 1,765, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.34299494549525683;  // std dev = 2,160, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   else return -0.1123163781936063;  // std dev = 3,80e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then return 0.10302854533985199;  // std dev = 0,839, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( publication(G, B), tempadvisedby(H, B) )
%   | | | then return 0.6321835889683409;  // std dev = 0,156, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.34511019776716545;  // std dev = 1,968, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   else return -0.10159632948783633;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return -0.11888503849618426;  // std dev = 1,022, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( publication(G, B) )
%   | | | then return 0.3224847890915334;  // std dev = 1,483, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.11219444078111396;  // std dev = 1,920, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   else return -0.09269127618926103;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, B), publication(E, A) )
%   | | then if ( tempadvisedby(F, B) )
%   | | | then return -0.21656137525753155;  // std dev = 0,109, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.10293463121770656;  // std dev = 0,984, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(G, A) )
%   | | | then return 0.15094208416935614;  // std dev = 1,139, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.34641525706322435;  // std dev = 1,281, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else return -0.0851847513883968;  // std dev = 2,69e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(D, B), publication(E, B) )
%   | | then if ( ta(F, D, G) )
%   | | | then return -0.20597884344546596;  // std dev = 1,096, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.05732593289119838;  // std dev = 1,033, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( publication(H, B) )
%   | | | then return 0.4126641942408555;  // std dev = 0,264, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.11331870697728198;  // std dev = 1,686, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   else return -0.07877675473109179;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( projectmember(D, B), publication(E, A) )
%   | | then return 0.4191350868093453;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.24561334901796006;  // std dev = 0,465, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.039853580233414475;  // std dev = 2,189, 25,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   else return -0.07324622576333704;  // std dev = 1,05e-08, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( projectmember(D, B), publication(E, A) )
%   | | then return 0.3220929084250998;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | | then return -0.22239653713455299;  // std dev = 0,812, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.022487503931816172;  // std dev = 2,304, 27,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   else return -0.06842697784420272;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( publication(D, F), tempadvisedby(F, G) )
%   | | | then return 0.2562831289588528;  // std dev = 0,038, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.4386185690425945;  // std dev = 0,586, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( publication(H, B) )
%   | | | then return -0.009893269821029158;  // std dev = 1,982, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return 0.23548110553344767;  // std dev = 0,954, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.06419184008202622;  // std dev = 5,27e-09, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */


Results
   AUC ROC   = 0.948426
   AUC PR    = 0.394507
   CLL	      = -0.205461
   Precision = 0.185976 at threshold = 0.5
   Recall    = 0.782051
   F1        = 0.300493


Total learning time: 4.862 seconds
Total inference time: 1.578 seconds
AUC ROC: 0.948426


Results scoring model
   AUC ROC   = 0.9682
   AUC PR    = 0.381843
   CLL	      = -0.220011
   Precision = 0.120275 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.214724


Total scoring time: 1.31 seconds
Refined model CLL: -0.220011


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.935982
   AUC PR    = 0.358428
   CLL	      = -0.215918
   Precision = 0.157895 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.272727


Total learning time: 8.276 seconds
Total inference time: 1.296 seconds
AUC ROC: 0.935982
Total revision time: 8.276
Best scored revision CLL: -0.219898


Dataset: 1_imdb_uwcse, Fold: 1, Type: Transfer (trRDN-B), Time: 01:26:23
{'Precision': [0.157895, 0.5], 'Recall': 1.0, 'F1': 0.272727, 'parameter': {'Precision': [0.157895, 0.5], 'Recall': 1.0, 'F1': 0.272727, 'AUC PR': 0.358428, 'Learning time': 1.015, 'Inference time': 1.296, 'CLL': -0.215918, 'AUC ROC': 0.935982}, 'AUC PR': 0.358428, 'Learning time': 8.276, 'Inference time': 1.296, 'CLL': -0.215918, 'AUC ROC': 0.935982}


Starting fold 2

Target train facts examples: 422
Target train pos examples: 20
Target train neg examples: 341

Target test facts examples: 1965
Target test pos	 examples: 93
Target test neg examples: 3738

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7581489350995123;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.5456489350995123;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.1418510649004877;  // std dev = 2,36e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7392070123615109;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5113854758191948;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   else return -0.1254446385283913;  // std dev = 2,98e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4750887498568715;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.32470283176002834;  // std dev = 1,970, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   else return -0.1123163781936064;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4569953426367642;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18201483672818894;  // std dev = 2,152, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   else return -0.10159632948783634;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3476375178867111;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.16989991326349768;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   else return -0.09269127618926105;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.27347204477457265;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.24991425309762683;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   else return -0.08518475138839683;  // std dev = 1,83e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2226050144813399;  // std dev = 1,29e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.004236871471838555;  // std dev = 2,225, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   else return -0.07877675473109176;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.18646360117077287;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.14068673191609465;  // std dev = 1,854, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.07324622576333704;  // std dev = 7,45e-09, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15981325325586815;  // std dev = 9,13e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2043223971391794;  // std dev = 1,535, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.06842697784420275;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.03950210585459688;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return -0.0190276734689017;  // std dev = 2,068, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   else return -0.0641918400820262;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */


Results
   AUC ROC   = 0.932863
   AUC PR    = 0.29479
   CLL	      = -0.250446
   Precision = 0.114251 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.205072


Total learning time: 0.894 seconds
Total inference time: 1.641 seconds
AUC ROC: 0.932863


Results scoring model
   AUC ROC   = 0.956745
   AUC PR    = 0.591831
   CLL	      = -0.209917
   Precision = 0.285714 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.444444


Total scoring time: 0.712 seconds
Parameter learned model CLL: -0.209917


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.854, 5, 11], 'false': [2.36e-08, 30, 0], 'true,true': [0.949, 1, 9]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.713, 4, 11], 'false': [2.98e-08, 42, 0], 'true,true': [0.0, 0, 9]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.97, 6, 11], 'false': [0.0, 33, 0], 'true,true': [0.949, 1, 9]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.152, 8, 11], 'false': [0.0, 34, 0], 'true,true': [0.0, 0, 9]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.068, 7, 11], 'false': [0.0, 43, 0], 'true,true': [1.49e-08, 0, 9]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.713, 4, 11], 'false': [1.83e-08, 37, 0], 'true,true': [1.83e-08, 0, 9]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.225, 9, 11], 'false': [0.0, 35, 0], 'true,true': [1.29e-08, 0, 9]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.854, 5, 11], 'false': [7.45e-09, 29, 0], 'true,true': [0.0, 0, 9]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.535, 3, 11], 'false': [0.0, 38, 0], 'true,true': [9.13e-09, 0, 9]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.068, 7, 11], 'false': [0.0, 43, 0], 'true,true': [0.949, 1, 9]}]]
[{'': [0.17751479289940847, 1.850371707708594e-17], 'true': [0.08999999999999977, 0.2148437499999999]}, {'': [0.13438690640483938, 2.114710523095536e-17], 'true': [0.0, 0.19555555555555562]}, {'': [0.18239812970271022, -6.7286243916676156e-18], 'true': [0.08999999999999994, 0.2283737024221453]}, {'': [0.1819059338928579, -3.2653618371328133e-18], 'true': [-4.9343245538895844e-17, 0.24376731301939045]}, {'': [0.16545635979114667, -6.454785026890445e-18], 'true': [2.4671622769447922e-17, 0.23765432098765427]}, {'': [0.12235229321019747, 9.00180830777154e-18], 'true': [3.700743415417188e-17, 0.19555555555555557]}, {'': [0.18089564358936416, -2.3790493384824783e-18], 'true': [1.850371707708594e-17, 0.2475]}, {'': [0.13798280821321834, 1.914177628664063e-18], 'true': [0.0, 0.21484375000000006]}, {'': [0.10295633225770906, -3.652049423109067e-18], 'true': [9.25185853854297e-18, 0.16836734693877556]}, {'': [0.18570715572698487, -1.290957005378089e-18], 'true': [0.09, 0.23765432098765438]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(E, A, F), publication(G, B) )
%   | | then if ( ta(E, H, I), publication(J, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( publication(K, A), publication(L, B) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5248156017661788;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.14185106490048768;  // std dev = 4,08e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7366049332824657;  // std dev = 0,057, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A) )
%   | | then if ( ta(E, A, F), publication(G, B) )
%   | | | then return 0.4694734122109544;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.14593774687406644;  // std dev = 0,781, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tempadvisedby(H, B), publication(I, H) )
%   | | | then return 0.42757709712051506;  // std dev = 0,792, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7670820389608096;  // std dev = 0,097, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1254446385283914;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A) )
%   | then if ( publication(C, D), professor(D) )
%   | | then if ( tempadvisedby(E, B), publication(C, B) )
%   | | | then return 0.5999474444917338;  // std dev = 1,49e-08, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4355519224744093;  // std dev = 0,633, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.6508847313326385;  // std dev = 0,121, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then if ( ta(I, A, J) )
%   | | | then return 0.28938558095951095;  // std dev = 0,915, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3932873830835956;  // std dev = 0,890, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.007950536040574751;  // std dev = 1,007, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else return -0.11231637819360638;  // std dev = 1,29e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.25147785889745594;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.4426767011821805;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( ta(E, A, F) )
%   | | then if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.2206582093414772;  // std dev = 0,919, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4915161025290332;  // std dev = 0,099, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(J, A), publication(K, B) )
%   | | | then return -0.22278993772768962;  // std dev = 0,037, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.2540435864988942;  // std dev = 1,103, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.10159632948783634;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.3611361117657717;  // std dev = 0,078, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return -0.04843359854772766;  // std dev = 0,765, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.5127111752852704;  // std dev = 0,104, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.001139874563295444;  // std dev = 1,240, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return -0.09269127618926098;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.2828092868353664;  // std dev = 0,069, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, B) )
%   | | then return 0.3821306274595234;  // std dev = 0,132, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.23347015912529673;  // std dev = 0,887, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.08518475138839682;  // std dev = 2,24e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.22922540214463138;  // std dev = 0,060, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then if ( ta(F, E, G) )
%   | | | then return -0.3940773644307403;  // std dev = 0,470, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.10454220325778531;  // std dev = 0,401, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tempadvisedby(H, B) )
%   | | | then return 0.3074860537903847;  // std dev = 0,094, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.20637839059225455;  // std dev = 0,725, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07877675473109176;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.19132428662305534;  // std dev = 0,053, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(D, A), tempadvisedby(E, B) )
%   | | then return -0.11363101612245116;  // std dev = 0,796, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( publication(F, B) )
%   | | | then return 0.24866872340529728;  // std dev = 0,095, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.10359832314926946;  // std dev = 0,819, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07324622576333704;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.16350262438728638;  // std dev = 0,047, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( ta(D, A, E) )
%   | | then return 0.2316843383246177;  // std dev = 0,087, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( publication(F, A) )
%   | | | then return -0.0706082318845379;  // std dev = 0,780, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.18709330616163986;  // std dev = 0,043, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.06842697784420274;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.14238446872015167;  // std dev = 0,042, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( tempadvisedby(D, B) )
%   | | then if ( ta(E, A, F) )
%   | | | then return -0.0490600678721153;  // std dev = 1,049, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.1948447500822046;  // std dev = 1,009, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.10891904522869394;  // std dev = 0,807, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06419184008202619;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */


Results
   AUC ROC   = 0.949815
   AUC PR    = 0.267053
   CLL	      = -0.239221
   Precision = 0.155819 at threshold = 0.5
   Recall    = 0.849462
   F1        = 0.263333


Total learning time: 4.062 seconds
Total inference time: 1.513 seconds
AUC ROC: 0.949815


Results scoring model
   AUC ROC   = 0.986584
   AUC PR    = 0.784212
   CLL	      = -0.173469
   Precision = 0.413043 at threshold = 0.5
   Recall    = 0.95
   F1        = 0.575758


Total scoring time: 0.808 seconds
Refined model CLL: -0.173469


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.949815
   AUC PR    = 0.267053
   CLL	      = -0.239221
   Precision = 0.155819 at threshold = 0.5
   Recall    = 0.849462
   F1        = 0.263333


Total learning time: 6.476 seconds
Total inference time: 1.513 seconds
AUC ROC: 0.949815
Total revision time: 6.476
Best scored revision CLL: -0.173469


Dataset: 1_imdb_uwcse, Fold: 2, Type: Transfer (trRDN-B), Time: 01:26:33
{'Precision': [0.155819, 0.5], 'Recall': 0.849462, 'F1': 0.263333, 'parameter': {'Precision': [0.114251, 0.5], 'Recall': 1.0, 'F1': 0.205072, 'AUC PR': 0.29479, 'Learning time': 0.894, 'Inference time': 1.641, 'CLL': -0.250446, 'AUC ROC': 0.932863}, 'AUC PR': 0.267053, 'Learning time': 6.476, 'Inference time': 1.513, 'CLL': -0.239221, 'AUC ROC': 0.949815}


Starting fold 3

Target train facts examples: 162
Target train pos examples: 9
Target train neg examples: 91

Target test facts examples: 2225
Target test pos	 examples: 104
Target test neg examples: 3988

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.7581489350995123;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.6392070123615109;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.49932275605826126;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2940309504262396;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.10159632948783631;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.09585416994984924;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   else return -0.09269127618926094;  // std dev = 9,13e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2807033763521628;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.08518475138839687;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.31707056199127676;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.07877675473109173;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.07086783167112162;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.05772136312877208;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.06842697784420275;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( yearsinprogram(A, C), yearsinprogram(B, C) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.04736538758792723;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else return -0.0641918400820262;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 0.904213
   AUC PR    = 0.119816
   CLL	      = -0.33738
   Precision = 0.119816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.213992


Total learning time: 1.309 seconds
Total inference time: 1.737 seconds
AUC ROC: 0.904213


Results scoring model
   AUC ROC   = 0.961538
   AUC PR    = 0.5625
   CLL	      = -0.180534
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total scoring time: 0.543 seconds
Parameter learned model CLL: -0.180534


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.949, 1, 9], 'false': [0.0, 17, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.949, 1, 9], 'false': [0.0, 19, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.949, 1, 9], 'false': [1.05e-08, 13, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.279, 2, 9], 'false': [0.0, 23, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.664, 4, 9], 'false': [9.13e-09, 19, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.949, 1, 9], 'false': [7.45e-09, 17, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [0.0, 0, 9], 'false': [0.0, 18, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.279, 2, 9], 'false': [3.73e-09, 18, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.279, 2, 9], 'false': [0.0, 27, 0], 'true,true': [0.0, 0, 0]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'yearsinprogram(A, C), yearsinprogram(B, C)'}, {'true,false': [1.279, 2, 9], 'false': [0.0, 16, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.08999999999999977, -3.2653618371328133e-18], 'true': [nan, 0.08999999999999977]}, {'': [0.09000000000000012, 0.0], 'true': [nan, 0.09000000000000012]}, {'': [0.09, 8.540177112501205e-18], 'true': [nan, 0.09]}, {'': [0.14876033057851237, -6.033820786006285e-18], 'true': [nan, 0.14876033057851237]}, {'': [0.21301775147928995, 4.382459307730881e-18], 'true': [nan, 0.21301775147928995]}, {'': [0.09000000000000001, 3.2653618371328133e-18], 'true': [nan, 0.09000000000000001]}, {'': [-1.2335811384723961e-17, -1.5419764230904951e-18], 'true': [nan, -1.2335811384723961e-17]}, {'': [0.14876033057851237, 7.709882115452476e-19], 'true': [nan, 0.14876033057851237]}, {'': [0.14876033057851237, -4.11193712824132e-18], 'true': [nan, 0.14876033057851237]}, {'': [0.14876033057851237, 0.0], 'true': [nan, 0.14876033057851237]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( tempadvisedby(E, B) )
%   | | then return 0.3053664367462845;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.11130022992038217;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.3886997700796179;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.2709648458785868;  // std dev = 0,909, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.48334284639060393;  // std dev = 0,111, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.07241187743253609;  // std dev = 1,161, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.36698272182940606;  // std dev = 0,107, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.3896550235955327;  // std dev = 0,018, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.13554197891346462;  // std dev = 0,839, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B) )
%   | then return 0.3159724842124082;  // std dev = 0,032, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.08931191036672853;  // std dev = 0,879, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then return -0.07859256460964414;  // std dev = 1,146, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.2333006809661476;  // std dev = 0,041, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), tempadvisedby(E, B) )
%   | then return 0.00857265578741595;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.21064358151764942;  // std dev = 0,097, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D) )
%   | then return 0.24060284595193654;  // std dev = 0,057, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.021251825442237915;  // std dev = 0,848, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.904616
   AUC PR    = 0.118096
   CLL	      = -0.356333
   Precision = 0.119816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.213992


Total learning time: 1.792 seconds
Total inference time: 1.71 seconds
AUC ROC: 0.904616


Results scoring model
   AUC ROC   = 0.978632
   AUC PR    = 0.819114
   CLL	      = -0.183709
   Precision = 0.5625 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.72


Total scoring time: 0.516 seconds
Refined model CLL: -0.183709


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.904213
   AUC PR    = 0.119816
   CLL	      = -0.33738
   Precision = 0.119816 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.213992


Total learning time: 4.16 seconds
Total inference time: 1.737 seconds
AUC ROC: 0.904213
Total revision time: 4.16
Best scored revision CLL: -0.180534


Dataset: 1_imdb_uwcse, Fold: 3, Type: Transfer (trRDN-B), Time: 01:26:42
{'Precision': [0.119816, 0.5], 'Recall': 1.0, 'F1': 0.213992, 'parameter': {'Precision': [0.119816, 0.5], 'Recall': 1.0, 'F1': 0.213992, 'AUC PR': 0.119816, 'Learning time': 1.309, 'Inference time': 1.737, 'CLL': -0.33738, 'AUC ROC': 0.904213}, 'AUC PR': 0.119816, 'Learning time': 4.16, 'Inference time': 1.737, 'CLL': -0.33738, 'AUC ROC': 0.904213}


Starting fold 4

Target train facts examples: 681
Target train pos examples: 33
Target train neg examples: 1488

Target test facts examples: 1706
Target test pos	 examples: 80
Target test neg examples: 2591

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7867203636709409;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.4642095411601184;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   else return -0.1418510649004877;  // std dev = 3,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7336614886487067;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.5610276008004401;  // std dev = 2,148, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   else return -0.1254446385283913;  // std dev = 3,16e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4980240338421423;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.25597886527633934;  // std dev = 2,928, 35,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   else return -0.11231637819360638;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.37418597266651227;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.27202466953900656;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   else return -0.10159632948783635;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.22270704943193304;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else return 0.16743930588684508;  // std dev = 2,807, 33,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   else return -0.09269127618926107;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.23533390996432285;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.38938483128395224;  // std dev = 1,615, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   else return -0.0851847513883968;  // std dev = 2,58e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.18767502943721986;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.08976558526428134;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   else return -0.07877675473109179;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.22473066667599095;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.08582639819795101;  // std dev = 3,121, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.18800303222399734;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.08880437638867081;  // std dev = 2,582, 30,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=20 */
%   else return -0.0684269778442027;  // std dev = 1,29e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.16096823126634202;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.04579907475914593;  // std dev = 2,664, 31,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   else return -0.06419184008202623;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */


Results
   AUC ROC   = 0.936897
   AUC PR    = 0.369816
   CLL	      = -0.235563
   Precision = 0.142857 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.25


Total learning time: 1.004 seconds
Total inference time: 1.183 seconds
AUC ROC: 0.936897


Results scoring model
   AUC ROC   = 0.935362
   AUC PR    = 0.272865
   CLL	      = -0.247891
   Precision = 0.101852 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.184874


Total scoring time: 1.1 seconds
Parameter learned model CLL: -0.247891


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.807, 13, 20], 'false': [3.94e-08, 47, 0], 'true,true': [0.964, 1, 13]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.148, 6, 20], 'false': [3.16e-08, 44, 0], 'true,true': [0.0, 0, 13]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.928, 15, 20], 'false': [0.0, 49, 0], 'true,true': [0.964, 1, 13]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.664, 11, 20], 'false': [0.0, 62, 0], 'true,true': [0.964, 1, 13]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.807, 13, 20], 'false': [0.0, 58, 0], 'true,true': [1.317, 2, 13]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.615, 3, 20], 'false': [2.58e-08, 55, 0], 'true,true': [0.964, 1, 13]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.582, 10, 20], 'false': [0.0, 52, 0], 'true,true': [0.964, 1, 13]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [3.121, 19, 20], 'false': [1.29e-08, 53, 0], 'true,true': [1.05e-08, 0, 13]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.582, 10, 20], 'false': [1.29e-08, 52, 0], 'true,true': [0.0, 0, 13]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.664, 11, 20], 'false': [0.0, 55, 0], 'true,true': [0.0, 0, 13]}]]
[{'': [0.20914440923494962, 3.307047307394083e-17], 'true': [0.06632653061224467, 0.23875114784205664]}, {'': [0.1249659639848517, 2.2709107321878203e-17], 'true': [-4.099285014000578e-16, 0.17751479289940833]}, {'': [0.20583384971960159, -2.2657612747452172e-18], 'true': [0.06632653061224499, 0.2448979591836736]}, {'': [0.18057786736849557, -1.7906822977825105e-18], 'true': [0.06632653061224493, 0.22892819979188364]}, {'': [0.20090877053069353, -3.828355257328126e-18], 'true': [0.11555555555555559, 0.23875114784205695]}, {'': [0.10118369977743813, 1.2111523905001707e-17], 'true': [0.06632653061224486, 0.11342155009451806]}, {'': [0.1746987113011068, 0.0], 'true': [0.06632653061224487, 0.22222222222222224]}, {'': [0.20546029281509892, 3.142140635731575e-18], 'true': [8.540177112501205e-18, 0.24983563445101908]}, {'': [0.15711433870269628, 3.2025664171879517e-18], 'true': [-2.5620531337503614e-17, 0.2222222222222222]}, {'': [0.16405135855588443, -5.046468293750711e-19], 'true': [-2.5620531337503614e-17, 0.22892819979188342]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, A) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( ta(D, A, E) )
%   | | | then return 0.724815601766179;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.40360348055405776;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.1418510649004877;  // std dev = 3,80e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( ta(D, A, E) )
%   | | then if ( publication(F, A), publication(G, B) )
%   | | | then return 0.49558159415244657;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7551579976398202;  // std dev = 0,100, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | | then return 0.0016114478971488988;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.4266114478971489;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.12544463852839124;  // std dev = 4,47e-08, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D) )
%   | then if ( tempadvisedby(E, B), publication(F, E) )
%   | | then return -0.1398466536992823;  // std dev = 0,832, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( ta(G, H, D), publication(I, H) )
%   | | | then return 0.32516219476800373;  // std dev = 1,878, 18,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.5793306861623413;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(J, A) )
%   | | then if ( publication(J, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.26321585491727595;  // std dev = 1,003, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7250766559177753;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360635;  // std dev = 2,36e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.4349944700136946;  // std dev = 0,095, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), ta(E, A, F) )
%   | | then return 0.24599168455474194;  // std dev = 1,185, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( ta(G, A, H) )
%   | | | then return 0.04498755046026537;  // std dev = 2,102, 18,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.17935565667222442;  // std dev = 1,593, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else return -0.10159632948783633;  // std dev = 1,49e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then return 0.3328505645807286;  // std dev = 0,086, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( publication(C, E), professor(E) )
%   | | | then return -0.11194934713809059;  // std dev = 1,361, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.28416844279933556;  // std dev = 0,817, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( tempadvisedby(F, B), ta(G, A, H) )
%   | | then return 0.3276119662238085;  // std dev = 1,005, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.48642339453367783;  // std dev = 0,106, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926105;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), ta(D, A, E) )
%   | then if ( tempadvisedby(F, B), publication(G, B) )
%   | | then return 0.19252295017808055;  // std dev = 0,750, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.4446644341030556;  // std dev = 0,189, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(H, A, I) )
%   | | then if ( ta(J, K, I), publication(L, K) )
%   | | | then return -0.045913272161012264;  // std dev = 1,422, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.19200130975839869;  // std dev = 0,980, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( publication(M, A) )
%   | | | then return 0.15971947990003166;  // std dev = 1,179, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.39626058485134985;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839682;  // std dev = 2,47e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.22843328009964237;  // std dev = 0,057, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(D, A), ta(E, A, F) )
%   | | then return 0.22452955073829975;  // std dev = 0,837, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(G, A) )
%   | | | then return -0.08223459250525005;  // std dev = 1,180, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.10367785295306758;  // std dev = 1,767, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   else return -0.07877675473109179;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.19072404678775487;  // std dev = 0,050, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then if ( ta(D, G, H), tempadvisedby(G, I) )
%   | | | then return 0.23857459391038613;  // std dev = 0,915, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.20427518454617224;  // std dev = 1,807, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( tempadvisedby(J, B), publication(K, B) )
%   | | | then return 0.23535740363398178;  // std dev = 0,655, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3912466357063884;  // std dev = 0,290, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.07324622576333704;  // std dev = 1,29e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.1630353503765321;  // std dev = 0,044, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), publication(G, A) )
%   | | | then return -0.18292150046788055;  // std dev = 1,033, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1759387921882801;  // std dev = 1,326, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( publication(H, A) )
%   | | | then return -0.04076564938423409;  // std dev = 1,119, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.20090836434504453;  // std dev = 1,304, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.06842697784420271;  // std dev = 1,05e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.14610642827024062;  // std dev = 0,034, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.030995421953409413;  // std dev = 0,912, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | then if ( publication(H, A) )
%   | | | then return 0.15676634693456487;  // std dev = 0,656, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.30673965866352115;  // std dev = 0,050, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( publication(I, A) )
%   | | | then return -0.11651588571481418;  // std dev = 1,495, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.02554904511335232;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else return -0.06419184008202623;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */


Results
   AUC ROC   = 0.953319
   AUC PR    = 0.391017
   CLL	      = -0.239242
   Precision = 0.188917 at threshold = 0.5
   Recall    = 0.9375
   F1        = 0.314465


Total learning time: 6.37 seconds
Total inference time: 1.414 seconds
AUC ROC: 0.953319


Results scoring model
   AUC ROC   = 0.955584
   AUC PR    = 0.361658
   CLL	      = -0.244374
   Precision = 0.140909 at threshold = 0.5
   Recall    = 0.939394
   F1        = 0.245059


Total scoring time: 1.328 seconds
Refined model CLL: -0.244374


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.953319
   AUC PR    = 0.391017
   CLL	      = -0.239242
   Precision = 0.188917 at threshold = 0.5
   Recall    = 0.9375
   F1        = 0.314465


Total learning time: 9.802 seconds
Total inference time: 1.414 seconds
AUC ROC: 0.953319
Total revision time: 9.802
Best scored revision CLL: -0.244374


Dataset: 1_imdb_uwcse, Fold: 4, Type: Transfer (trRDN-B), Time: 01:26:55
{'Precision': [0.188917, 0.5], 'Recall': 0.9375, 'F1': 0.314465, 'parameter': {'Precision': [0.142857, 0.5], 'Recall': 1.0, 'F1': 0.25, 'AUC PR': 0.369816, 'Learning time': 1.004, 'Inference time': 1.183, 'CLL': -0.235563, 'AUC ROC': 0.936897}, 'AUC PR': 0.391017, 'Learning time': 9.802, 'Inference time': 1.414, 'CLL': -0.239242, 'AUC ROC': 0.953319}


Starting fold 5

Target train facts examples: 414
Target train pos examples: 16
Target train neg examples: 345

Target test facts examples: 1973
Target test pos	 examples: 97
Target test neg examples: 3734

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.48972788246793336;  // std dev = 2,103, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   else return -0.14185106490048774;  // std dev = 1,83e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.45422535409131953;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5589769059024781;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.32372606336708826;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.24333634311174368;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.09269127618926104;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.09957559092635569;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   else return -0.08518475138839685;  // std dev = 1,58e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.20864537832092295;  // std dev = 1,549, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.02601043328550247;  // std dev = 2,000, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14662208412922886;  // std dev = 2,449, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return -0.06842697784420274;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.13755488154010453;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   else return -0.06419184008202618;  // std dev = 3,73e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */


Results
   AUC ROC   = 0.937621
   AUC PR    = 0.323785
   CLL	      = -0.256081
   Precision = 0.12125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.216276


Total learning time: 0.846 seconds
Total inference time: 1.402 seconds
AUC ROC: 0.937621


Results scoring model
   AUC ROC   = 0.926087
   AUC PR    = 0.46579
   CLL	      = -0.258683
   Precision = 0.190476 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.32


Total scoring time: 0.706 seconds
Parameter learned model CLL: -0.258683


Structure after Parameter Learning
[['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.103, 7, 12], 'false': [1.83e-08, 27, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 6, 12], 'false': [0.0, 23, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.309, 2, 12], 'false': [1.49e-08, 20, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.732, 4, 12], 'false': [0.0, 24, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.732, 4, 12], 'false': [0.0, 29, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 6, 12], 'false': [1.58e-08, 33, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.549, 3, 12], 'false': [0.0, 26, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.0, 6, 12], 'false': [3.73e-09, 20, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'professor(B), student(A)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [2.449, 12, 12], 'false': [0.0, 25, 0], 'true,true': [0.0, 0, 4]}], ['advisedby(A, B)', {'': 'student(A), professor(B)', 'true': 'publication(C, A), publication(C, B)'}, {'true,false': [1.732, 4, 12], 'false': [3.73e-09, 26, 0], 'true,true': [0.0, 0, 4]}]]
[{'': [0.21172022684309977, 1.2335811384723961e-17], 'true': [0.0, 0.23268698060941798]}, {'': [0.1922844428268781, -2.413528314402514e-18], 'true': [0.0, 0.22222222222222204]}, {'': [0.09524034828532241, 1.1102230246251566e-17], 'true': [0.0, 0.1224489795918368]}, {'': [0.15140737584898623, -8.0953762212251e-18], 'true': [0.0, 0.1875]}, {'': [0.1509579149802791, -8.613799328988284e-18], 'true': [0.0, 0.18749999999999994]}, {'': [0.18541971672765278, 7.569702440626067e-18], 'true': [0.0, 0.2222222222222222]}, {'': [0.12631599511816538, -2.135044278125301e-18], 'true': [0.0, 0.15999999999999998]}, {'': [0.18521393371678488, 6.938893903907229e-19], 'true': [0.0, 0.2222222222222222]}, {'': [0.2252595878403679, -2.220446049250313e-18], 'true': [0.0, 0.24999999999999997]}, {'': [0.15000201396007892, 5.337610695313253e-19], 'true': [0.0, 0.18749999999999992]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;advisedby(A, B) :- professor(B), student(A).;true;true
0;true;publication(C, A), publication(C, B).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;true
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;true
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- student(A), professor(B).;true;true
3;true;publication(C, A), publication(C, B).;true;true
4;;advisedby(A, B) :- professor(B), student(A).;true;true
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- student(A), professor(B).;true;true
5;true;publication(C, A), publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;true
6;true;publication(C, A), publication(C, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;true
7;true;publication(C, A), publication(C, B).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;true
8;true;publication(C, A), publication(C, B).;true;true
9;;advisedby(A, B) :- student(A), professor(B).;true;true
9;true;publication(C, A), publication(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E), hasposition(B, F) )
%   | | then if ( ta(G, H, E), publication(I, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( publication(J, B) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.14185106490048774;  // std dev = 1,83e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then if ( ta(G, H, F), publication(I, H) )
%   | | | then return 0.3861400788776212;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.7816289395752953;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( projectmember(J, B) )
%   | | | then return 0.3736903534982484;  // std dev = 1,140, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.06667210898284173;  // std dev = 0,809, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E), publication(F, B) )
%   | | then return 0.628201607367659;  // std dev = 0,021, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( ta(G, A, H) )
%   | | | then return -0.29848560378401223;  // std dev = 0,083, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2109329757977332;  // std dev = 1,395, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return -0.20403487486160243;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.12429665511788444;  // std dev = 1,616, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.3876996901694805;  // std dev = 1,037, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.10159632948783635;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( ta(G, H, E), ta(G, F, I) )
%   | | | then return 0.32814294151018153;  // std dev = 0,639, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.2310430584981116;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( projectmember(J, B) )
%   | | | then return 0.587739361208453;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19095171486361764;  // std dev = 0,874, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.092691276189261;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, A) )
%   | | then return -0.42432039966736235;  // std dev = 0,403, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( tempadvisedby(E, B) )
%   | | | then return 0.19736741444823958;  // std dev = 1,289, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.45892251783244187;  // std dev = 0,152, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.08518475138839685;  // std dev = 1,58e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B), ta(E, A, F) )
%   | | then if ( ta(G, H, F), publication(I, H) )
%   | | | then return 0.16749620301856355;  // std dev = 0,683, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3394709933124895;  // std dev = 0,122, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(J, A, K) )
%   | | | then return -0.3489419563340279;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2583666355098746;  // std dev = 0,704, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.07877675473109176;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( ta(D, A, E), tempadvisedby(F, B) )
%   | | then if ( projectmember(G, B) )
%   | | | then return -0.2509319963581383;  // std dev = 0,676, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2962386190467126;  // std dev = 0,084, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( publication(H, B) )
%   | | | then return -0.2537318677052425;  // std dev = 1,214, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.18658069127650448;  // std dev = 0,533, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( projectmember(D, B), ta(E, A, F) )
%   | | then return -0.2853429691812731;  // std dev = 0,728, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( ta(G, A, H) )
%   | | | then return -0.03469032931991396;  // std dev = 1,261, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.16375315733427806;  // std dev = 0,801, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( publication(D, B) )
%   | | then if ( tempadvisedby(E, B), ta(F, A, G) )
%   | | | then return 0.08464534537849457;  // std dev = 0,897, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.3414567320044139;  // std dev = 0,104, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.12845067517520317;  // std dev = 1,083, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06419184008202618;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */


Results
   AUC ROC   = 0.954264
   AUC PR    = 0.36273
   CLL	      = -0.187891
   Precision = 0.21519 at threshold = 0.5
   Recall    = 0.701031
   F1        = 0.329298


Total learning time: 3.774 seconds
Total inference time: 1.777 seconds
AUC ROC: 0.954264


Results scoring model
   AUC ROC   = 0.970833
   AUC PR    = 0.585788
   CLL	      = -0.211166
   Precision = 0.326531 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.492308


Total scoring time: 0.867 seconds
Refined model CLL: -0.211166


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.954264
   AUC PR    = 0.36273
   CLL	      = -0.187891
   Precision = 0.21519 at threshold = 0.5
   Recall    = 0.701031
   F1        = 0.329298


Total learning time: 6.1930000000000005 seconds
Total inference time: 1.777 seconds
AUC ROC: 0.954264
Total revision time: 6.1930000000000005
Best scored revision CLL: -0.211166


Dataset: 1_imdb_uwcse, Fold: 5, Type: Transfer (trRDN-B), Time: 01:27:05
{'Precision': [0.21519, 0.5], 'Recall': 0.701031, 'F1': 0.329298, 'parameter': {'Precision': [0.12125, 0.5], 'Recall': 1.0, 'F1': 0.216276, 'AUC PR': 0.323785, 'Learning time': 0.846, 'Inference time': 1.402, 'CLL': -0.256081, 'AUC ROC': 0.937621}, 'AUC PR': 0.36273, 'Learning time': 6.1930000000000005, 'Inference time': 1.777, 'CLL': -0.187891, 'AUC ROC': 0.954264}


