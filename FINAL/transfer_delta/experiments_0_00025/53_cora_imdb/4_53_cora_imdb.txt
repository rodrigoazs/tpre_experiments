Starting experiment #4 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22045486536166034;  // std dev = 0,481, 7.858,000 (wgt'ed) examples reached here.  /* #neg=5.011 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8463842292171592;  // std dev = 0,994, 85,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=84 */
%   | | | else return -0.13872606490048775;  // std dev = 0,998, 320,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.19905802600860326;  // std dev = 3,144, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return -0.05851773156715442;  // std dev = 4,387, 252,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.005619180842516932;  // std dev = 6,372, 345,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=47 */
%   | | | else return -0.10736830627979806;  // std dev = 1,390, 58,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8291400883035377;  // std dev = 5,96e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.24410607469809695;  // std dev = 5,974, 147,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=61 */
%   | | | else return -0.11133610217265291;  // std dev = 2,168, 84,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=5 */
%   | else return 0.18435244351592647;  // std dev = 0,479, 7.770,000 (wgt'ed) examples reached here.  /* #neg=5.010 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.43929854523353234;  // std dev = 0,692, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13204087755562133;  // std dev = 3,229, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else if ( title(L, I), venue(L, A) )
%   | | | then return 0.055042948576086166;  // std dev = 6,894, 384,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=83 */
%   | | | else return -0.051871963402704085;  // std dev = 4,388, 253,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=21 */
%   | else return -0.017102333315562324;  // std dev = 0,327, 402,000 (wgt'ed) examples reached here.  /* #neg=353 #pos=49 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.15623790250866293;  // std dev = 0,478, 8.021,000 (wgt'ed) examples reached here.  /* #neg=5.174 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7433551765705777;  // std dev = 0,235, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14638783683564502;  // std dev = 0,042, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.13811626616978656;  // std dev = 3,169, 47,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return -0.13752069152387308;  // std dev = 0,009, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.018330886143454603;  // std dev = 8,271, 684,000 (wgt'ed) examples reached here.  /* #neg=602 #pos=82 */
%   | | | else return 0.03220215022227701;  // std dev = 3,464, 108,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=21 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.02450761698670535;  // std dev = 5,332, 258,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=48 */
%   | | | else return -0.12358035852607113;  // std dev = 1,05e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.12905859718674417;  // std dev = 0,477, 8.047,000 (wgt'ed) examples reached here.  /* #neg=5.200 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.009294510213918203;  // std dev = 0,726, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.15423411137815424;  // std dev = 3,077, 42,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.04783073510892734;  // std dev = 6,824, 380,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=83 */
%   | | | else return -0.04481755837787303;  // std dev = 4,390, 254,000 (wgt'ed) examples reached here.  /* #neg=233 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.008851884425356811;  // std dev = 6,369, 366,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=47 */
%   | | | else return -0.0933864790442307;  // std dev = 1,392, 61,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=2 */
%   | | else return -0.11080607421283604;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7297511457812861;  // std dev = 0,287, 46,000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return -0.24088409895176752;  // std dev = 0,165, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.5554018340887823;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.04688306980238104;  // std dev = 4,425, 133,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=25 */
%   | else return 0.112329021705994;  // std dev = 0,480, 7.662,000 (wgt'ed) examples reached here.  /* #neg=4.902 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | then if ( haswordtitle(K, I) )
%   | | then if ( author(L, J), venue(L, A) )
%   | | | then return 0.13782753865763364;  // std dev = 0,606, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06083018509259262;  // std dev = 3,244, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else return -0.01853100383302675;  // std dev = 0,280, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else return -0.005410683059615497;  // std dev = 0,317, 1.076,000 (wgt'ed) examples reached here.  /* #neg=925 #pos=151 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08924432817095823;  // std dev = 0,477, 7.936,000 (wgt'ed) examples reached here.  /* #neg=5.089 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then return 0.038531677104112025;  // std dev = 0,346, 392,000 (wgt'ed) examples reached here.  /* #neg=307 #pos=85 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.05676912956080838;  // std dev = 3,225, 50,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return -0.04699355156376876;  // std dev = 4,408, 280,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=21 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.00582619240265974;  // std dev = 6,364, 363,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=47 */
%   | | | else return -0.08438633676742942;  // std dev = 1,393, 65,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=2 */
%   | | else return -0.09986274949980924;  // std dev = 6,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07265922771208454;  // std dev = 0,478, 7.904,000 (wgt'ed) examples reached here.  /* #neg=5.057 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.07831131672865822;  // std dev = 0,364, 66,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.2719884309561932;  // std dev = 0,833, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.13715818442321395;  // std dev = 0,031, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.025295721891269093;  // std dev = 3,186, 54,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return -0.0119030393993808;  // std dev = 1,156, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.01363840927572496;  // std dev = 8,437, 728,000 (wgt'ed) examples reached here.  /* #neg=640 #pos=88 */
%   | | | else return 0.0037889087120848556;  // std dev = 5,190, 264,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=46 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, B), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.048376053328531704;  // std dev = 0,475, 7.434,000 (wgt'ed) examples reached here.  /* #neg=4.825 #pos=2.609 */
%   | | else return 0.04628670134035033;  // std dev = 0,374, 670,000 (wgt'ed) examples reached here.  /* #neg=536 #pos=134 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.16317988993778176;  // std dev = 0,301, 292,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=30 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.40598412076237345;  // std dev = 4,684, 109,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=78 */
%   | | | else return 0.071029078933885;  // std dev = 5,078, 189,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=49 */
%   else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | then return 0.5738921280618949;  // std dev = 0,322, 77,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=68 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.03208659429311307;  // std dev = 5,042, 214,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=47 */
%   | | | else return 0.02146526060240489;  // std dev = 1,309, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else return -0.09133412546421682;  // std dev = 0,003, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5216897369673315;  // std dev = 0,411, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.24602839709929522;  // std dev = 0,119, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.33542900327369635;  // std dev = 0,960, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.07990636199713523;  // std dev = 4,432, 145,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=27 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.22149519604667178;  // std dev = 4,262, 73,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=39 */
%   | | | else return -0.04743062044951368;  // std dev = 4,447, 102,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=27 */
%   | | else return 0.045586197067983246;  // std dev = 0,477, 7.500,000 (wgt'ed) examples reached here.  /* #neg=4.806 #pos=2.694 */
%   else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | then return 0.00318118385784506;  // std dev = 0,334, 684,000 (wgt'ed) examples reached here.  /* #neg=563 #pos=121 */
%   | else return -0.01848907650288512;  // std dev = 0,313, 435,000 (wgt'ed) examples reached here.  /* #neg=386 #pos=49 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.036991523328642285;  // std dev = 0,474, 7.886,000 (wgt'ed) examples reached here.  /* #neg=5.039 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), title(H, E) )
%   | | | then return 0.002695735289222566;  // std dev = 6,886, 451,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=85 */
%   | | | else return -0.06672495256390751;  // std dev = 3,310, 157,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=15 */
%   | | else if ( haswordtitle(E, I), haswordvenue(A, I) )
%   | | | then return 0.0715132920418218;  // std dev = 4,075, 109,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=21 */
%   | | | else return -0.12492382851719772;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.012277897592513756;  // std dev = 6,383, 378,000 (wgt'ed) examples reached here.  /* #neg=331 #pos=47 */
%   | | | else return -0.045177373849842245;  // std dev = 1,358, 40,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=2 */
%   | | else return -0.08255314088708787;  // std dev = 0,003, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,true;author(K, J), venue(K, B).;false;false
1;false,true,false;title(L, I), venue(L, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true;haswordauthor(J, H).;true;true
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true,true,false;haswordtitle(G, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;haswordtitle(H, D).;false;false
2;false,true;author(F, E), venue(F, A).;true;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
2;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;title(H, E), venue(H, A).;false;false
3;false,true;haswordauthor(F, D).;true;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true,true;author(G, F), venue(G, A).;false;false
3;false,false,true;title(K, J), venue(K, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,true;author(L, J), venue(L, A).;false;false
4;true,true;author(F, E), venue(F, B).;true;true
4;true,true,true;samebib(F, G), venue(G, A).;false;false
4;false,true;haswordtitle(K, I).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
4;true,true,false;haswordauthor(H, C).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordauthor(G, D).;false;false
5;false,false,true;title(J, I), venue(J, B).;false;false
5;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true;title(F, E), venue(F, A).;false;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(G, E), venue(G, B).;false;false
6;false,false,true;haswordtitle(J, H).;false;false
6;false,false;haswordvenue(B, H), haswordauthor(I, H).;true;true
6;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;false,true;haswordtitle(F, D).;false;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;false,false,true;title(J, I), venue(J, A).;false;false
7;true,true;haswordvenue(B, C).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;false
7;true,false;title(F, D), venue(F, A).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;false;haswordvenue(A, G), haswordvenue(B, G).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true;author(F, E), venue(F, A).;true;true
8;true,true,true;samebib(F, G), venue(G, B).;false;false
8;true,false;haswordvenue(A, I), haswordauthor(J, I).;true;false
8;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;true,false,true;author(K, J), venue(K, B).;false;false
8;true,true,false;haswordauthor(H, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
9;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
9;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
9;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;false,true,true;author(H, G), title(H, E).;false;false
9;false,false,true;title(L, K), venue(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4945125714631494;  // std dev = 4,513, 88,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048766;  // std dev = 8,33e-09, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.4159705428354187;  // std dev = 0,483, 89,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12544463852839155;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3599532553715427;  // std dev = 4,420, 86,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360625;  // std dev = 6,84e-09, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2960479965871124;  // std dev = 4,320, 84,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11014943552614498;  // std dev = 0,021, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783615;  // std dev = 5,67e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5581150657582439;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.4418849342417563;  // std dev = 7,45e-09, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then if ( genre(A, H) )
%   | | then return -0.09197446492717966;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20608646026553423;  // std dev = 3,008, 78,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08457606390681323;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.08518475138839679;  // std dev = 3,23e-09, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1127224549393788;  // std dev = 3,301, 85,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.0787767547310918;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07874044082458564;  // std dev = 0,001, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.34447648476074344;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09187764649115446;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(A, E) )
%   | | then return -0.18576800520683334;  // std dev = 0,277, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.41178488035980476;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.073248690833676;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.36763883660895275;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.07527657710350544;  // std dev = 0,277, 84,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.0679665420533619;  // std dev = 0,014, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.05593994989488045;  // std dev = 2,573, 85,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.06394668143891258;  // std dev = 0,010, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978388
   AUC PR    = 0.863056
   CLL	      = -0.164417
   Precision = 0.799401 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.809091


Total learning time: 1.32 seconds
Total inference time: 2.628 seconds
AUC ROC: 0.978388


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.166538
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.646 seconds
Parameter learned model CLL: -0.166538


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [8.33e-09, 77, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.513, 32, 56], 'false,true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, G)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(B, F)'}, {'false,true,false,true': [0.0, 5, 0], 'true,true': [0.483, 33, 56], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 70, 0], 'false,true,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [6.84e-09, 71, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.42, 30, 56], 'false,true,true,false': [2.63e-09, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [4.32, 28, 56], 'false,true,true': [0.021, 3, 0], 'false,true,false,false': [5.67e-08, 75, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, B)', 'false': 'movie(G, B)', 'false,true': 'genre(A, H)'}, {'false,true,false': [0.0, 72, 0], 'false,true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 56], 'true,true,false': [7.45e-09, 33, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [3.23e-09, 81, 0], 'true': [3.008, 22, 56], 'false,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)', 'false,true': 'genre(B, E)'}, {'false,true,false': [0.001, 72, 0], 'true': [3.301, 29, 56], 'false,true,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.0, 25, 0], 'true,true,true': [0.0, 0, 56], 'false': [0.0, 0, 0], 'true,false,true': [0.277, 3, 0], 'true,false,false,false': [0.0, 72, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(G, B)', 'true,true': 'genre(A, E)', 'true,true,true': 'genre(B, F)'}, {'false,true': [0.014, 78, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0], 'true,true,false': [0.277, 28, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'movie(E, A)'}, {'false,true,false': [0.0, 0, 0], 'true': [2.573, 29, 56], 'false,true,true': [0.01, 74, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.23140495867768565, 7.307797124114954e-17], 'false': [7.307797124114954e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 7.209240419643874e-17]}, {'': [0.2333038757732619, -2.5953265510717945e-17], 'false,true,false': [0.0, -3.172065784643304e-17], 'true': [0.2333038757732619, nan], 'false': [-2.5953265510717945e-17, nan], 'false,true': [0.0, -2.6645352591003756e-17]}, {'': [0.2271498107084918, 4.650934292348629e-17], 'false': [4.650934292348629e-17, nan], 'false,true,true': [nan, 2.3129646346357427e-18], 'false,true': [2.3129646346357427e-18, 4.5347137625534564e-17]}, {'': [0.2222222222222216, 8.332815034802965e-06], 'false,true,false': [nan, 4.2928623618839385e-17], 'false': [8.332815034802965e-06, nan], 'false,true': [0.00014631124580510627, 4.2928623618839385e-17]}, {'': [0.23330387577326103, 2.5619753288151273e-08], 'true,true': [-3.806478941571965e-16, 5.3828995133340925e-17], 'true,true,true': [nan, -3.806478941571965e-16], 'true': [0.23330387577326103, nan], 'false': [2.5619753288151273e-08, nan], 'false,true': [0.0, 0.0]}, {'': [0.11599361631392477, 8.712595879027256e-09], 'false': [8.712595879027256e-09, nan], 'false,true': [0.0, 1.2335811384723961e-17]}, {'': [0.1281734219877778, 1.701439239202666e-08], 'false': [1.701439239202666e-08, nan], 'false,true': [0.0, 1.7670577414117016e-08]}, {'': [0.07260580724279993, nan], 'true,false': [0.02554181392695691, 0.02192498171048644], 'true': [0.003281833167187888, 0.022052065794021053], 'true,true': [-4.7580986769649563e-17, 0.0], 'true,false,false': [-1.4210854715202004e-16, -6.1679056923619804e-18]}, {'': [0.07825031922753034, 2.58876913857187e-06], 'true': [0.07825031922753034, nan], 'false': [2.58876913857187e-06, nan], 'true,true': [0.0, 0.07687394048568126], 'true,true,true': [nan, 0.0]}, {'': [0.07785843725425633, 1.286269214005185e-06], 'false': [1.286269214005185e-06, nan], 'false,true': [1.286269214005185e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(B, F).;true;true
1;false,false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;genre(B, E).;true;true
4;false;genre(A, H).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false;genre(A, E).;true;true
7;false,false;movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(A, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(B, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839158;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, D) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, E) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.09269127618926105;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839686;  // std dev = 2,28e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.08518475138839682;  // std dev = 5,27e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839682;  // std dev = 1,05e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.25664313714018494;  // std dev = 0,616, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return -0.062051661927794495;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.05853682241453471;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.06842697784420264;  // std dev = 2,04e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.06419184008202618;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.055392983037874204;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.1340070300080109;  // std dev = 5,89e-09, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.06419184008202626;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078577
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 3.221 seconds
Total inference time: 3.011 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064616
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.677 seconds
Refined model CLL: -0.064616


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078577
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 7.864000000000001 seconds
Total inference time: 3.011 seconds
AUC ROC: 1.0
Total revision time: 7.864000000000001
Best scored revision CLL: -0.064616


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 03:03:44
{'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'parameter': {'Precision': [0.799401, 0.5], 'Recall': 0.819018, 'F1': 0.809091, 'AUC PR': 0.863056, 'Learning time': 1.32, 'Inference time': 2.628, 'CLL': -0.164417, 'AUC ROC': 0.978388}, 'AUC PR': 1.0, 'Learning time': 7.864000000000001, 'Inference time': 3.011, 'CLL': -0.078577, 'AUC ROC': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,true;author(K, J), venue(K, B).;false;false
1;false,true,false;title(L, I), venue(L, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true;haswordauthor(J, H).;true;true
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true,true,false;haswordtitle(G, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;haswordtitle(H, D).;false;false
2;false,true;author(F, E), venue(F, A).;true;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
2;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;title(H, E), venue(H, A).;false;false
3;false,true;haswordauthor(F, D).;true;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true,true;author(G, F), venue(G, A).;false;false
3;false,false,true;title(K, J), venue(K, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,true;author(L, J), venue(L, A).;false;false
4;true,true;author(F, E), venue(F, B).;true;true
4;true,true,true;samebib(F, G), venue(G, A).;false;false
4;false,true;haswordtitle(K, I).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
4;true,true,false;haswordauthor(H, C).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordauthor(G, D).;false;false
5;false,false,true;title(J, I), venue(J, B).;false;false
5;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true;title(F, E), venue(F, A).;false;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(G, E), venue(G, B).;false;false
6;false,false,true;haswordtitle(J, H).;false;false
6;false,false;haswordvenue(B, H), haswordauthor(I, H).;true;true
6;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;false,true;haswordtitle(F, D).;false;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;false,false,true;title(J, I), venue(J, A).;false;false
7;true,true;haswordvenue(B, C).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;false
7;true,false;title(F, D), venue(F, A).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;false;haswordvenue(A, G), haswordvenue(B, G).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true;author(F, E), venue(F, A).;true;true
8;true,true,true;samebib(F, G), venue(G, B).;false;false
8;true,false;haswordvenue(A, I), haswordauthor(J, I).;true;false
8;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;true,false,true;author(K, J), venue(K, B).;false;false
8;true,true,false;haswordauthor(H, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
9;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
9;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
9;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;false,true,true;author(H, G), title(H, E).;false;false
9;false,false,true;title(L, K), venue(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4686752508889868;  // std dev = 4,753, 95,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 8,33e-09, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.382896414088746;  // std dev = 0,491, 98,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.1254446385283914;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.12544463852839155;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.36524343812932525;  // std dev = 4,541, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360621;  // std dev = 7,57e-09, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.28624436578520696;  // std dev = 4,541, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783616;  // std dev = 5,27e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5736944344159308;  // std dev = 1,79e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.4263055655840688;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then if ( genre(A, H) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1563966409523634;  // std dev = 3,476, 91,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839679;  // std dev = 3,36e-09, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07179455752830456;  // std dev = 3,753, 101,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=58 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.0787767547310918;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07877675473109168;  // std dev = 3,49e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.37637925720781007;  // std dev = 5,96e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(A, E) )
%   | | then return -0.13433767818645886;  // std dev = 0,273, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.37870348787894614;  // std dev = 4,71e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.347648282019333;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.10166462662593102;  // std dev = 0,275, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.0682721585646664;  // std dev = 0,007, 98,000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.06117020511440325;  // std dev = 2,710, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.06389369410325656;  // std dev = 0,010, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.977686
   AUC PR    = 0.861626
   CLL	      = -0.161218
   Precision = 0.800604 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.80916


Total learning time: 1.346 seconds
Total inference time: 2.55 seconds
AUC ROC: 0.977686


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.153243
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.566 seconds
Parameter learned model CLL: -0.153243


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [8.33e-09, 72, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.753, 37, 58], 'false,true,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, G)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(B, F)'}, {'false,true,false,true': [0.0, 6, 0], 'true,true': [0.491, 40, 58], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 69, 0], 'false,true,true': [5.27e-09, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [7.57e-09, 89, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.541, 32, 58], 'false,true,true,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [4.541, 32, 58], 'false,true,true': [0.0, 3, 0], 'false,true,false,false': [5.27e-08, 70, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, B)', 'false': 'movie(G, B)', 'false,true': 'genre(A, H)'}, {'false,true,false': [0.0, 78, 0], 'false,true,true': [0.0, 8, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [1.79e-07, 0, 58], 'true,true,false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [3.36e-09, 85, 0], 'true': [3.476, 33, 58], 'false,true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)', 'false,true': 'genre(B, E)'}, {'false,true,false': [3.49e-08, 69, 0], 'true': [3.753, 43, 58], 'false,true,true': [0.0, 8, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [4.71e-08, 23, 0], 'true,true,true': [5.96e-08, 0, 58], 'false': [0.0, 0, 0], 'true,false,true': [0.273, 5, 0], 'true,false,false,false': [0.0, 59, 0], 'true,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(G, B)', 'true,true': 'genre(A, E)', 'true,true,true': 'genre(B, F)'}, {'false,true': [0.007, 98, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 3, 0], 'true,true,false': [0.275, 28, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'movie(E, A)'}, {'false,true,false': [0.0, 0, 0], 'true': [2.71, 32, 58], 'false,true,true': [0.01, 93, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.23778393351800514, 7.105427357601002e-17], 'false': [7.105427357601002e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 6.78469626159818e-17]}, {'': [0.24156601416076356, -2.1930331350620375e-17], 'false,true,false': [-2.3129646346357427e-18, -3.539841527790354e-17], 'true': [0.24156601416076356, nan], 'false': [-2.1930331350620375e-17, nan], 'false,true': [4.625929269271485e-18, -2.6645352591003756e-17]}, {'': [0.22913580246913673, 5.968940992608368e-17], 'false': [5.968940992608368e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 5.98771968337163e-17]}, {'': [0.2291358024691353, 4.258389683493751e-17], 'false,true,false': [nan, 3.9650822308041306e-17], 'false': [4.258389683493751e-17, nan], 'false,true': [-1.1564823173178713e-18, 3.9650822308041306e-17]}, {'': [0.2033226642280142, 0.0], 'true,true': [5.512831570552502e-16, -7.723290606088045e-17], 'true,true,true': [nan, 5.512831570552502e-16], 'true': [0.2033226642280142, nan], 'false': [0.0, nan], 'false,true': [0.0, 0.0]}, {'': [0.13277473793713584, 1.3721857607726653e-17], 'false': [1.3721857607726653e-17, nan], 'false,true': [0.0, 1.1755302613678128e-17]}, {'': [0.13948798542898244, 2.0906797216967234e-17], 'false': [2.0906797216967234e-17, nan], 'false,true': [0.0, 1.769920763895177e-17]}, {'': [0.07706754147322217, nan], 'true,false': [0.014928662236666243, 0.018830118470363845], 'true': [0.017175964374533476, 0.018638638939952053], 'true,true': [6.125368411725002e-17, 0.0], 'true,false,false': [9.654113257610057e-17, 0.0]}, {'': [0.07977888313088094, 5.632717189482718e-07], 'true': [0.07977888313088094, nan], 'false': [5.632717189482718e-07, nan], 'true,true': [-1.850371707708594e-17, 0.07575685316068578], 'true,true,true': [nan, -1.850371707708594e-17]}, {'': [0.08157523880555567, 1.0043125156750158e-06], 'false': [1.0043125156750158e-06, nan], 'false,true': [1.0043125156750158e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(B, F).;true;true
1;false,false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;genre(B, E).;true;true
4;false;genre(A, H).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false;genre(A, E).;true;true
7;false,false;movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(A, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 3,65e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(B, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1254446385283916;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926104;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( genre(A, E) )
%   | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694892;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2551722425694892;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then return -0.0851847513883968;  // std dev = 1,61e-09, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.08518475138839686;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.07877675473109175;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.15325433360159993;  // std dev = 0,073, 42,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( female(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 9,13e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(A) )
%   | | | then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.15585495865988452;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.06842697784420271;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08435405699830623;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06419184008202618;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then return 0.1340070300080109;  // std dev = 4,17e-09, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.13643115829922517;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return -0.07855819990347476;  // std dev = 0,000783, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.998125
   AUC PR    = 0.950144
   CLL	      = -0.083496
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.343 seconds
Total inference time: 2.933 seconds
AUC ROC: 0.998125


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066251
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.653 seconds
Refined model CLL: -0.066251


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.998125
   AUC PR    = 0.950144
   CLL	      = -0.083496
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 6.9079999999999995 seconds
Total inference time: 2.933 seconds
AUC ROC: 0.998125
Total revision time: 6.9079999999999995
Best scored revision CLL: -0.066251


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 03:03:58
{'Precision': [0.736364, 0.5], 'Recall': 1.0, 'F1': 0.848168, 'parameter': {'Precision': [0.800604, 0.5], 'Recall': 0.817901, 'F1': 0.80916, 'AUC PR': 0.861626, 'Learning time': 1.346, 'Inference time': 2.55, 'CLL': -0.161218, 'AUC ROC': 0.977686}, 'AUC PR': 0.950144, 'Learning time': 6.9079999999999995, 'Inference time': 2.933, 'CLL': -0.083496, 'AUC ROC': 0.998125}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,true;author(K, J), venue(K, B).;false;false
1;false,true,false;title(L, I), venue(L, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true;haswordauthor(J, H).;true;true
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true,true,false;haswordtitle(G, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;haswordtitle(H, D).;false;false
2;false,true;author(F, E), venue(F, A).;true;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
2;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;title(H, E), venue(H, A).;false;false
3;false,true;haswordauthor(F, D).;true;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true,true;author(G, F), venue(G, A).;false;false
3;false,false,true;title(K, J), venue(K, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,true;author(L, J), venue(L, A).;false;false
4;true,true;author(F, E), venue(F, B).;true;true
4;true,true,true;samebib(F, G), venue(G, A).;false;false
4;false,true;haswordtitle(K, I).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
4;true,true,false;haswordauthor(H, C).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordauthor(G, D).;false;false
5;false,false,true;title(J, I), venue(J, B).;false;false
5;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true;title(F, E), venue(F, A).;false;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(G, E), venue(G, B).;false;false
6;false,false,true;haswordtitle(J, H).;false;false
6;false,false;haswordvenue(B, H), haswordauthor(I, H).;true;true
6;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;false,true;haswordtitle(F, D).;false;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;false,false,true;title(J, I), venue(J, A).;false;false
7;true,true;haswordvenue(B, C).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;false
7;true,false;title(F, D), venue(F, A).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;false;haswordvenue(A, G), haswordvenue(B, G).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true;author(F, E), venue(F, A).;true;true
8;true,true,true;samebib(F, G), venue(G, B).;false;false
8;true,false;haswordvenue(A, I), haswordauthor(J, I).;true;false
8;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;true,false,true;author(K, J), venue(K, B).;false;false
8;true,true,false;haswordauthor(H, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
9;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
9;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
9;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;false,true,true;author(H, G), title(H, E).;false;false
9;false,false,true;title(L, K), venue(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5401412722642597;  // std dev = 7,524, 261,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.14185106490048766;  // std dev = 5,37e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return -0.14185106490048843;  // std dev = 0,000, 208,000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.43826104684687456;  // std dev = 0,474, 270,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.12544463852839124;  // std dev = 2,11e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.1254446385283914;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.1254446385283915;  // std dev = 0,000, 175,000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3926145938170672;  // std dev = 7,331, 255,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.11231637819360682;  // std dev = 0,000, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2722974795550616;  // std dev = 7,703, 267,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783627;  // std dev = 2,79e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783655;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.4609085412619135;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.5390914587380853;  // std dev = 4,04e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.09523689947086919;  // std dev = 0,482, 134,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then if ( genre(A, H) )
%   | | then return -0.09269127618926105;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.09269127618926049;  // std dev = 8,02e-08, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20007631456475686;  // std dev = 6,318, 248,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839679;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.08518475138839678;  // std dev = 5,59e-09, 216,000 (wgt'ed) examples reached here.  /* #neg=216 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09669552489181103;  // std dev = 6,970, 272,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=178 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.07877675473109146;  // std dev = 6,50e-08, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.27697255552934386;  // std dev = 2,410, 140,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=129 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( genre(A, E) )
%   | | then return -0.16246116115766984;  // std dev = 1,296, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.07758213547871799;  // std dev = 5,268, 113,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=49 */
%   | | | else return -0.07324622576333678;  // std dev = 8,49e-08, 158,000 (wgt'ed) examples reached here.  /* #neg=158 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.48903931776301496;  // std dev = 1,49e-08, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.47063088914780243;  // std dev = 2,98e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.11333049095343314;  // std dev = 0,382, 245,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.06756889832111547;  // std dev = 0,034, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07392274184290179;  // std dev = 6,062, 256,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.06326525394634001;  // std dev = 0,033, 269,000 (wgt'ed) examples reached here.  /* #neg=269 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993692
   AUC PR    = 0.961008
   CLL	      = -0.253856
   Precision = 0.069012 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.129114


Total learning time: 2.104 seconds
Total inference time: 2.387 seconds
AUC ROC: 0.993692


Results scoring model
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.213224
   Precision = 0.226752 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.369678


Total scoring time: 1.785 seconds
Parameter learned model CLL: -0.213224


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [0.0, 208, 0], 'false,true,true,true': [0.0, 8, 0], 'true': [7.524, 83, 178], 'false,true,true,false': [5.37e-08, 52, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, G)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(B, F)'}, {'false,true,false,true': [0.0, 32, 0], 'true,true': [0.474, 92, 178], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 175, 0], 'false,true,true': [2.11e-08, 47, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [0.0, 238, 0], 'false,true,true,true': [0.0, 6, 0], 'true': [7.331, 77, 178], 'false,true,true,false': [0.0, 37, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [7.703, 89, 178], 'false,true,true': [2.79e-08, 48, 0], 'false,true,false,false': [0.0, 221, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, B)', 'false': 'movie(G, B)', 'false,true': 'genre(A, H)'}, {'false,true,false': [8.02e-08, 229, 0], 'false,true,true': [0.0, 46, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [1.49e-08, 9, 0], 'true,true,true,false': [4.04e-07, 0, 129], 'true,true,false': [0.482, 85, 49]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [5.59e-09, 216, 0], 'true': [6.318, 70, 178], 'false,true,true': [1.83e-08, 57, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)', 'false,true': 'genre(B, E)'}, {'false,true,false': [6.5e-08, 226, 0], 'true': [6.97, 94, 178], 'false,true,true': [0.0, 46, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [5.268, 64, 49], 'true,true,true': [2.41, 11, 129], 'false': [0.0, 0, 0], 'true,false,true': [1.296, 54, 0], 'true,false,false,false': [8.49e-08, 158, 0], 'true,true,false': [0.0, 48, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(G, B)', 'true,true': 'genre(A, E)', 'true,true,true': 'genre(B, F)'}, {'false,true': [0.034, 287, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [1.49e-08, 6, 0], 'true,true,true,false': [2.98e-08, 15, 0], 'true,true,false': [0.382, 67, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'movie(E, A)'}, {'false,true,false': [0.0, 0, 0], 'true': [6.062, 78, 178], 'false,true,true': [0.033, 269, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.21687878921331705, -6.296787303844171e-17], 'false': [-6.296787303844171e-17, nan], 'false,true,true': [-6.938893903907228e-18, 5.551115123125783e-17], 'false,true': [6.29126380620922e-17, -2.391249591500337e-16]}, {'': [0.22463648834019193, -8.042560493347591e-17], 'false,true,false': [-1.0408340855860843e-17, -3.2989484160290367e-17], 'true': [0.22463648834019193, nan], 'false': [-8.042560493347591e-17, nan], 'false,true': [9.448706592554524e-18, -5.577932104396922e-17]}, {'': [0.21078046905036354, -1.1536837124218708e-16], 'false': [-1.1536837124218708e-16, nan], 'false,true,true': [0.0, -9.00180830777154e-18], 'false,true': [2.581914010756178e-18, -8.396644724055806e-17]}, {'': [0.22222222222222396, -6.273379172603116e-17], 'false,true,false': [nan, -8.03781375294231e-17], 'false': [-6.273379172603116e-17, nan], 'false,true': [1.61907524424502e-17, -8.03781375294231e-17]}, {'': [0.22615700692041538, 6.782453386800957e-17], 'true,true': [0.060964083175804595, 0.23195589218088686], 'true,true,true': [2.4671622769447922e-17, 1.266859141277698e-15], 'true': [0.22615700692041538, nan], 'false': [6.782453386800957e-17, nan], 'false,true': [-3.620292471603771e-18, 2.8119185776532347e-17]}, {'': [0.16095190719915284, 3.416070845000482e-17], 'false': [3.416070845000482e-17, nan], 'false,true': [5.843279076974508e-18, 3.0839528461809905e-17]}, {'': [0.17859612466001543, 8.163404592832034e-18], 'false': [8.163404592832034e-18, nan], 'false,true': [-1.3274405729213829e-17, 1.8667466785732722e-17]}, {'': [0.09574315171875364, nan], 'true,false': [0.031113645635349543, 0.1024112582173534], 'true': [0.05420870202476658, 0.09162337988303124], 'true,true': [0.041478833415960814, -8.0953762212251e-18], 'true,false,false': [0.24559479990602218, 4.567373202571847e-17]}, {'': [0.1593042984824135, 3.959660294254379e-06], 'true': [0.1593042984824135, nan], 'false': [3.959660294254379e-06, nan], 'true,true': [6.915719266984528e-05, 0.14554397442973535], 'true,true,true': [3.700743415417188e-17, 5.921189464667501e-17]}, {'': [0.14353681610461988, 4.089765538880094e-06], 'false': [4.089765538880094e-06, nan], 'false,true': [4.089765538880094e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
0;false,true;genre(B, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(B, F).;true;true
1;false,false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
2;false,true;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;genre(B, E).;true;true
4;false;genre(A, H).;true;true
4;true,true;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false;genre(A, E).;true;true
7;false,false;movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(A, E).;true;true
8;true,true;genre(B, F).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 6,50e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14185106490048768;  // std dev = 4,34e-08, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.1418510649004885;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( genre(B, D) )
%   | then return -0.12544463852839124;  // std dev = 2,36e-08, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( genre(A, E) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.12544463852839158;  // std dev = 0,000, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( actor(B) )
%   | | | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.11231637819360679;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.10159632948783656;  // std dev = 0,000, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return 0.32071184716014944;  // std dev = 9,88e-08, 47,000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return 0.3207118471601501;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.32071184716014944;  // std dev = 9,88e-08, 42,000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return 0.3207118471601498;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.09269127618926104;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( genre(A, F) )
%   | then return -0.09269127618926101;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( actor(B) )
%   | | then return -0.09269127618926057;  // std dev = 3,23e-09, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.0851847513883968;  // std dev = 2,08e-09, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839686;  // std dev = 2,08e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.0851847513883968;  // std dev = 3,73e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.08518475138839676;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.08518475138839676;  // std dev = 2,98e-08, 90,000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253578;  // std dev = 1,09e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( genre(B, D) )
%   | then return -0.0787767547310917;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07877675473109166;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.0787767547310917;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109162;  // std dev = 2,69e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.07877675473109166;  // std dev = 3,07e-08, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.09017194097145306;  // std dev = 1,011, 72,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=47 */
%   | | | else return 0.14058818390027103;  // std dev = 0,866, 96,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=82 */
%   | | else return -0.07324622576333703;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.08606278010578139;  // std dev = 1,057, 77,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=49 */
%   | | | else return -0.07324622576333677;  // std dev = 1,01e-07, 214,000 (wgt'ed) examples reached here.  /* #neg=214 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.1646023122196176;  // std dev = 0,003, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | | else return 0.1581084705505798;  // std dev = 0,019, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return -0.0684269778442027;  // std dev = 2,79e-09, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return -0.07947411182589464;  // std dev = 0,000149, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.08100452809887478;  // std dev = 0,002, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( actor(A) )
%   | | then return -0.06842697784420261;  // std dev = 3,23e-09, 142,000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.06842697784420265;  // std dev = 2,24e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.14319809750407442;  // std dev = 0,000252, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.13818182808624102;  // std dev = 0,002, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.06419184008202625;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return -0.07388508610427139;  // std dev = 0,000131, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.07543134930836326;  // std dev = 0,002, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202622;  // std dev = 0,000, 97,000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else return -0.06419184008202623;  // std dev = 0,000, 126,000 (wgt'ed) examples reached here.  /* #neg=126 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064139
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.324 seconds
Total inference time: 2.985 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06731
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.579 seconds
Refined model CLL: -0.06731


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064139
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.792000000000002 seconds
Total inference time: 2.985 seconds
AUC ROC: 1.0
Total revision time: 9.792000000000002
Best scored revision CLL: -0.06731


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 03:04:13
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [0.069012, 0.5], 'Recall': 1.0, 'F1': 0.129114, 'AUC PR': 0.961008, 'Learning time': 2.104, 'Inference time': 2.387, 'CLL': -0.253856, 'AUC ROC': 0.993692}, 'AUC PR': 1.0, 'Learning time': 9.792000000000002, 'Inference time': 2.985, 'CLL': -0.064139, 'AUC ROC': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,true;author(K, J), venue(K, B).;false;false
1;false,true,false;title(L, I), venue(L, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true;haswordauthor(J, H).;true;true
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true,true,false;haswordtitle(G, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;haswordtitle(H, D).;false;false
2;false,true;author(F, E), venue(F, A).;true;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
2;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;title(H, E), venue(H, A).;false;false
3;false,true;haswordauthor(F, D).;true;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true,true;author(G, F), venue(G, A).;false;false
3;false,false,true;title(K, J), venue(K, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,true;author(L, J), venue(L, A).;false;false
4;true,true;author(F, E), venue(F, B).;true;true
4;true,true,true;samebib(F, G), venue(G, A).;false;false
4;false,true;haswordtitle(K, I).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
4;true,true,false;haswordauthor(H, C).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordauthor(G, D).;false;false
5;false,false,true;title(J, I), venue(J, B).;false;false
5;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true;title(F, E), venue(F, A).;false;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(G, E), venue(G, B).;false;false
6;false,false,true;haswordtitle(J, H).;false;false
6;false,false;haswordvenue(B, H), haswordauthor(I, H).;true;true
6;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;false,true;haswordtitle(F, D).;false;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;false,false,true;title(J, I), venue(J, A).;false;false
7;true,true;haswordvenue(B, C).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;false
7;true,false;title(F, D), venue(F, A).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;false;haswordvenue(A, G), haswordvenue(B, G).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true;author(F, E), venue(F, A).;true;true
8;true,true,true;samebib(F, G), venue(G, B).;false;false
8;true,false;haswordvenue(A, I), haswordauthor(J, I).;true;false
8;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;true,false,true;author(K, J), venue(K, B).;false;false
8;true,true,false;haswordauthor(H, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
9;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
9;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
9;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;false,true,true;author(H, G), title(H, E).;false;false
9;false,false,true;title(L, K), venue(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.510322848142991;  // std dev = 3,956, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14185106490048763;  // std dev = 8,93e-09, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.42694968162395863;  // std dev = 0,479, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12544463852839155;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.31133829398944945;  // std dev = 4,199, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360626;  // std dev = 6,32e-09, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.25945783041984066;  // std dev = 4,108, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783621;  // std dev = 3,94e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5724688924822655;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.4275311075177352;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then if ( genre(A, H) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926105;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15823836951393724;  // std dev = 3,056, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839682;  // std dev = 2,79e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12932069638273003;  // std dev = 2,988, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.07877675473109177;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07877675473109173;  // std dev = 2,36e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3616761374693511;  // std dev = 8,94e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.39367191193286705;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.07324622576333704;  // std dev = 1,29e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.3763312559282302;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.1085412369330161;  // std dev = 0,268, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.0684269778442027;  // std dev = 1,49e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.03139728528081379;  // std dev = 2,466, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978805
   AUC PR    = 0.865091
   CLL	      = -0.160932
   Precision = 0.80814 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.816446


Total learning time: 1.155 seconds
Total inference time: 2.622 seconds
AUC ROC: 0.978805


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.165939
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.223 seconds
Parameter learned model CLL: -0.165939


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [8.93e-09, 86, 0], 'false,true,true,true': [0.0, 3, 0], 'true': [3.956, 24, 45], 'false,true,true,false': [0.0, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, G)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(B, F)'}, {'false,true,false,true': [0.0, 4, 0], 'true,true': [0.479, 25, 45], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 49, 0], 'false,true,true': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [6.32e-09, 66, 0], 'false,true,true,true': [0.0, 1, 0], 'true': [4.199, 29, 45], 'false,true,true,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [4.108, 27, 45], 'false,true,true': [0.0, 6, 0], 'false,true,false,false': [3.94e-08, 57, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, B)', 'false': 'movie(G, B)', 'false,true': 'genre(A, H)'}, {'false,true,false': [0.0, 50, 0], 'false,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 45], 'true,true,false': [0.0, 30, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [2.79e-09, 43, 0], 'true': [3.056, 25, 45], 'false,true,true': [2.63e-09, 6, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)', 'false,true': 'genre(B, E)'}, {'false,true,false': [2.36e-08, 60, 0], 'true': [2.988, 24, 45], 'false,true,true': [2.63e-09, 10, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.0, 23, 0], 'true,true,true': [8.94e-08, 0, 45], 'false': [0.0, 0, 0], 'true,false,true': [1.86e-09, 3, 0], 'true,false,false,false': [1.29e-08, 47, 0], 'true,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(G, B)', 'true,true': 'genre(A, E)', 'true,true,true': 'genre(B, F)'}, {'false,true': [1.49e-08, 52, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0], 'true,true,false': [0.268, 19, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'movie(E, A)'}, {'false,true,false': [0.0, 0, 0], 'true': [2.466, 29, 45], 'false,true,true': [0.0, 73, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.2268431001890362, 7.864079757761526e-17], 'false': [7.864079757761526e-17, nan], 'false,true,true': [0.0, -7.93016446160826e-18], 'false,true': [-1.1102230246251566e-17, 7.229359230117299e-17]}, {'': [0.22959183673469485, -2.6798486801296883e-17], 'false,true,false': [0.0, -3.172065784643304e-17], 'true': [0.22959183673469485, nan], 'false': [-2.6798486801296883e-17, nan], 'false,true': [0.0, -2.0947604238210502e-17]}, {'': [0.23831263696128543, 4.5347137625534564e-17], 'false': [4.5347137625534564e-17, nan], 'false,true,true': [0.0, 0.0], 'false,true': [0.0, 4.0371746350005693e-17]}, {'': [0.2343749999999998, 3.348291661567932e-17], 'false,true,false': [nan, 2.7268635692547703e-17], 'false': [3.348291661567932e-17, nan], 'false,true': [0.0, 2.7268635692547703e-17]}, {'': [0.24000000000000019, -4.353815782843751e-18], 'true,true': [-7.500173321912169e-16, -1.7763568394002506e-16], 'true,true,true': [nan, -7.500173321912169e-16], 'true': [0.24000000000000019, nan], 'false': [-4.353815782843751e-18, nan], 'false,true': [0.0, -3.3306690738754695e-18]}, {'': [0.1333902949568287, 6.797283824235652e-18], 'false': [6.797283824235652e-18, nan], 'false,true': [1.1564823173178713e-18, 7.745742032268534e-18]}, {'': [0.12940797688953118, 1.8239378261699e-17], 'false': [1.8239378261699e-17, nan], 'false,true': [6.938893903907229e-19, 9.25185853854297e-18]}, {'': [0.07856206839097958, nan], 'true,false': [1.1564823173178713e-18, 0.022650837266560985], 'true': [0.017024171583591735, 0.022156786153273916], 'true,true': [1.7763568394002506e-16, -6.938893903907229e-19], 'true,false,false': [-9.654113257610057e-17, 3.543264972207946e-18]}, {'': [0.07451349078175815, 4.270088556250602e-18], 'true': [0.07451349078175815, nan], 'false': [4.270088556250602e-18, nan], 'true,true': [0.0, 0.07206082047009267], 'true,true,true': [nan, 0.0]}, {'': [0.08217313886329936, -7.604267291953127e-18], 'false': [-7.604267291953127e-18, nan], 'false,true': [-7.604267291953127e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
0;false,true;genre(B, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(B, F).;true;true
1;false,false;genre(A, G).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
2;false,true;genre(B, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;genre(B, E).;true;true
4;false;genre(A, H).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false;genre(A, E).;true;true
7;false,false;movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(A, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839155;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360636;  // std dev = 2,95e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.10159632948783631;  // std dev = 7,45e-09, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.29897271672536685;  // std dev = 0,146, 46,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926094;  // std dev = 1,86e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(A, E) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.25932591165591373;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,83e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.21268754994326874;  // std dev = 5,89e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.17924242794087028;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.16521528051285886;  // std dev = 0,058, 36,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( female(A) )
%   | | | then return 0.15436981972705688;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.15620981093078612;  // std dev = 2,79e-08, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842697784420271;  // std dev = 7,45e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08572276035202495;  // std dev = 0,001, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13527511692581698;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1367070660149815;  // std dev = 5,89e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(A) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.10698992391852793;  // std dev = 0,176, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then return -0.07899948322881852;  // std dev = 0,000935, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07882871419149776;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.999064
   AUC PR    = 0.968999
   CLL	      = -0.078909
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 2.489 seconds
Total inference time: 3.278 seconds
AUC ROC: 0.999064


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067661
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.541 seconds
Refined model CLL: -0.067661


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999064
   AUC PR    = 0.968999
   CLL	      = -0.078909
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 6.4079999999999995 seconds
Total inference time: 3.278 seconds
AUC ROC: 0.999064
Total revision time: 6.4079999999999995
Best scored revision CLL: -0.067661


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 03:04:27
{'Precision': [0.743929, 0.5], 'Recall': 1.0, 'F1': 0.853165, 'parameter': {'Precision': [0.80814, 0.5], 'Recall': 0.824926, 'F1': 0.816446, 'AUC PR': 0.865091, 'Learning time': 1.155, 'Inference time': 2.622, 'CLL': -0.160932, 'AUC ROC': 0.978805}, 'AUC PR': 0.968999, 'Learning time': 6.4079999999999995, 'Inference time': 3.278, 'CLL': -0.078909, 'AUC ROC': 0.999064}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,true;author(K, J), venue(K, B).;false;false
1;false,true,false;title(L, I), venue(L, A).;false;false
1;true,true;haswordauthor(F, C).;false;true
1;false,true;haswordauthor(J, H).;true;true
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
1;true,true,false;haswordtitle(G, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;haswordtitle(H, D).;false;false
2;false,true;author(F, E), venue(F, A).;true;true
2;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
2;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,true,true;samebib(F, G), venue(G, B).;false;false
2;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;title(H, E), venue(H, A).;false;false
3;false,true;haswordauthor(F, D).;true;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true,true;author(G, F), venue(G, A).;false;false
3;false,false,true;title(K, J), venue(K, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,true;author(L, J), venue(L, A).;false;false
4;true,true;author(F, E), venue(F, B).;true;true
4;true,true,true;samebib(F, G), venue(G, A).;false;false
4;false,true;haswordtitle(K, I).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false;haswordvenue(B, I), haswordauthor(J, I).;true;false
4;true,true,false;haswordauthor(H, C).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;haswordauthor(G, D).;false;false
5;false,false,true;title(J, I), venue(J, B).;false;false
5;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
5;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
5;false,true;title(F, E), venue(F, A).;false;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(G, E), venue(G, B).;false;false
6;false,false,true;haswordtitle(J, H).;false;false
6;false,false;haswordvenue(B, H), haswordauthor(I, H).;true;true
6;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
6;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
6;false,true;haswordtitle(F, D).;false;true
7;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
7;false,false,true;title(J, I), venue(J, A).;false;false
7;true,true;haswordvenue(B, C).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;false
7;true,false;title(F, D), venue(F, A).;false;true
7;true;venue(E, B), title(E, D).;true;true
7;false;haswordvenue(A, G), haswordvenue(B, G).;false;true
7;true,false,false;haswordvenue(B, C).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true;author(F, E), venue(F, A).;true;true
8;true,true,true;samebib(F, G), venue(G, B).;false;false
8;true,false;haswordvenue(A, I), haswordauthor(J, I).;true;false
8;true;haswordvenue(B, D), haswordauthor(E, D).;true;true
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
8;true,false,true;author(K, J), venue(K, B).;false;false
8;true,true,false;haswordauthor(H, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,true,false;haswordtitle(E, I), haswordvenue(A, I).;false;false
9;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
9;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
9;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
9;false,true,true;author(H, G), title(H, E).;false;false
9;false,false,true;title(L, K), venue(L, B).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4919517520009212;  // std dev = 4,059, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.4209891907731656;  // std dev = 0,482, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(B, F) )
%   | | then return -0.1254446385283914;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839155;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.360456805625391;  // std dev = 3,956, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360622;  // std dev = 7,21e-09, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.30033208410285056;  // std dev = 3,844, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783617;  // std dev = 5,05e-08, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5563274248482837;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.14064227212141364;  // std dev = 0,460, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then if ( genre(A, H) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13186533731063715;  // std dev = 3,589, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839679;  // std dev = 1,86e-09, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12343908363485284;  // std dev = 3,461, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07888180385662132;  // std dev = 0,006, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.33367319970669024;  // std dev = 0,853, 36,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(A, E) )
%   | | then return -0.27568115215117167;  // std dev = 0,278, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.1780092753350154;  // std dev = 2,657, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.07323909522060755;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.40437004761068657;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.04438656153639867;  // std dev = 0,391, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.06806124725711611;  // std dev = 0,014, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.103864889239506;  // std dev = 2,963, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.0642324994882584;  // std dev = 0,018, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.982257
   AUC PR    = 0.888508
   CLL	      = -0.210453
   Precision = 0.808989 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.831169


Total learning time: 1.151 seconds
Total inference time: 2.661 seconds
AUC ROC: 0.982257


Results scoring model
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.21579
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total scoring time: 1.384 seconds
Parameter learned model CLL: -0.21579


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [8.12e-09, 65, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.059, 26, 45], 'false,true,true,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, G)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(B, F)'}, {'false,true,false,true': [0.0, 0, 0], 'true,true': [0.482, 26, 45], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 69, 0], 'false,true,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [7.21e-09, 79, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [3.956, 24, 45], 'false,true,true,false': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [3.844, 22, 45], 'false,true,true': [2.63e-09, 3, 0], 'false,true,false,false': [5.05e-08, 67, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(B, E)', 'true,true,true': 'genre(A, F)', 'true': 'movie(D, B)', 'false': 'movie(G, B)', 'false,true': 'genre(A, H)'}, {'false,true,false': [0.0, 64, 0], 'false,true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 35], 'true,true,false': [0.46, 23, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [1.86e-09, 66, 0], 'true': [3.589, 27, 45], 'false,true,true': [2.63e-09, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)', 'false,true': 'genre(B, E)'}, {'false,true,false': [0.006, 61, 0], 'true': [3.461, 24, 45], 'false,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [2.657, 24, 10], 'true,true,true': [0.853, 1, 35], 'false': [0.0, 0, 0], 'true,false,true': [0.278, 2, 0], 'true,false,false,false': [0.0, 58, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(G, B)', 'true,true': 'genre(A, E)', 'true,true,true': 'genre(B, F)'}, {'false,true': [0.014, 79, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0], 'true,true,false': [0.391, 29, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'movie(E, A)'}, {'false,true,false': [0.0, 0, 0], 'true': [2.963, 20, 45], 'false,true,true': [0.018, 69, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.23209680618924847, 6.75787928032704e-17], 'false': [6.75787928032704e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 6.832141690000964e-17]}, {'': [0.23209680618924922, -3.172065784643304e-17], 'false,true,false': [nan, -3.539841527790354e-17], 'true': [0.23209680618924922, nan], 'false': [-3.172065784643304e-17, nan], 'false,true': [0.0, -3.539841527790354e-17]}, {'': [0.22684310018903564, 2.127460364739764e-06], 'false': [2.127460364739764e-06, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 5.0592441628488145e-17]}, {'': [0.22053909556694126, 4.7140425092383e-06], 'false,true,false': [nan, 3.811213368116209e-17], 'false': [4.7140425092383e-06, nan], 'false,true': [2.3129646346357427e-18, 3.811213368116209e-17]}, {'': [0.2238321799307952, 4.390309993109155e-06], 'true,true': [-5.582835780972216e-16, 0.21120293847566574], 'true,true,true': [nan, -5.582835780972216e-16], 'true': [0.2238321799307952, nan], 'false': [4.390309993109155e-06, nan], 'false,true': [0.0, -1.734723475976807e-18]}, {'': [0.1789215914493522, 2.3433915328782415e-06], 'false': [2.3433915328782415e-06, nan], 'false,true': [2.3129646346357427e-18, 4.20539024479226e-18]}, {'': [0.17355431769960475, 6.516149039550732e-07], 'false': [6.516149039550732e-07, nan], 'false,true': [0.0, 6.621191264810826e-07]}, {'': [0.10235383918454175, nan], 'true,false': [0.038590940646234834, 0.07928378967986065], 'true': [0.024012926725343078, 0.0789761712392628], 'true,true': [0.020204724931906788, 0.0], 'true,false,false': [0.2076124567474049, -9.570888143320315e-19]}, {'': [0.1531246267832926, 2.4275986402010467e-06], 'true': [0.1531246267832926, nan], 'false': [2.4275986402010467e-06, nan], 'true,true': [0.0, 0.1525087785732045], 'true,true,true': [nan, 0.0]}, {'': [0.13506647000075966, 4.592324100294631e-06], 'false': [4.592324100294631e-06, nan], 'false,true': [4.592324100294631e-06, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(B, F).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;true;genre(B, E).;true;true
4;false;genre(A, H).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(B, E).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
7;true;movie(C, B).;true;true
7;false;genre(A, E).;true;true
7;false,false;movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(A, E).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048766;  // std dev = 6,32e-08, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then return -0.12544463852839138;  // std dev = 2,63e-09, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.3207118471601496;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( actor(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.09269127618926097;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( genre(A, E) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,05e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.07877675473109172;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(B, D) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1770964977452775;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | | else return 0.1543380683354033;  // std dev = 0,239, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.457841559875266;  // std dev = 0,551, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( female(A) )
%   | | | then return 0.15351826845571628;  // std dev = 0,006, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.15328359864903585;  // std dev = 0,005, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.0684269778442027;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07162914241607804;  // std dev = 0,014, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13461153192089048;  // std dev = 0,001, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.1344284269949301;  // std dev = 0,001, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.2890152950968661;  // std dev = 0,599, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06399975029179399;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076959
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.765 seconds
Total inference time: 2.771 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065392
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.531 seconds
Refined model CLL: -0.065392


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076959
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 6.831 seconds
Total inference time: 2.771 seconds
AUC ROC: 1.0
Total revision time: 6.831
Best scored revision CLL: -0.065392


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 03:04:40
{'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'parameter': {'Precision': [0.808989, 0.5], 'Recall': 0.854599, 'F1': 0.831169, 'AUC PR': 0.888508, 'Learning time': 1.151, 'Inference time': 2.661, 'CLL': -0.210453, 'AUC ROC': 0.982257}, 'AUC PR': 1.0, 'Learning time': 6.831, 'Inference time': 2.771, 'CLL': -0.076959, 'AUC ROC': 1.0}


