Starting experiment #5 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.21411292609725657;  // std dev = 0,479, 7.998,000 (wgt'ed) examples reached here.  /* #neg=5.151 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7711924133603812;  // std dev = 2,703, 92,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=84 */
%   | | | else return -0.13844970435627024;  // std dev = 0,998, 294,000 (wgt'ed) examples reached here.  /* #neg=293 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.1642713840791042;  // std dev = 3,226, 49,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.06169839314476256;  // std dev = 4,395, 262,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.01813972469430231;  // std dev = 6,486, 388,000 (wgt'ed) examples reached here.  /* #neg=340 #pos=48 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18515702528636954;  // std dev = 0,479, 8.017,000 (wgt'ed) examples reached here.  /* #neg=5.170 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.18926851707556036;  // std dev = 0,471, 48,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.36380250134910264;  // std dev = 0,993, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1370624342388964;  // std dev = 0,022, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.02350100251982583;  // std dev = 8,317, 708,000 (wgt'ed) examples reached here.  /* #neg=626 #pos=82 */
%   | | | else return 0.058084359450604035;  // std dev = 3,508, 98,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=21 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.029527170255928156;  // std dev = 5,470, 263,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=48 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8022997106918965;  // std dev = 8,43e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.2356330440252309;  // std dev = 4,701, 90,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=39 */
%   | | | else return 0.03505833138155202;  // std dev = 4,551, 116,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=27 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.3222997106918975;  // std dev = 4,327, 75,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=39 */
%   | | | else return -0.020068710360734727;  // std dev = 4,712, 152,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=27 */
%   | | else return 0.16116476996985307;  // std dev = 0,480, 7.507,000 (wgt'ed) examples reached here.  /* #neg=4.813 #pos=2.694 */
%   else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | then if ( title(M, L), venue(M, A) )
%   | | then return 0.03839697648824046;  // std dev = 0,344, 431,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=85 */
%   | | else return -0.012978794514225046;  // std dev = 0,327, 283,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=36 */
%   | else return -0.02639058766371362;  // std dev = 0,310, 449,000 (wgt'ed) examples reached here.  /* #neg=400 #pos=49 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13226515385433632;  // std dev = 0,478, 7.980,000 (wgt'ed) examples reached here.  /* #neg=5.133 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( author(G, E), venue(G, B) )
%   | | | then return 0.34771039633078593;  // std dev = 0,956, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.12723622118962077;  // std dev = 0,037, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.11023750699936628;  // std dev = 2,829, 54,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return 0.06281141683340045;  // std dev = 1,086, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.24047379731183613;  // std dev = 1,225, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.03169085935539084;  // std dev = 3,271, 70,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.012226707252461756;  // std dev = 8,471, 702,000 (wgt'ed) examples reached here.  /* #neg=614 #pos=88 */
%   | | | else return 0.016692439615091398;  // std dev = 5,323, 265,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=46 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.6144757062130919;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.13137762941804398;  // std dev = 6,073, 164,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=61 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.6144757062130917;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.15358130662199224;  // std dev = 2,103, 65,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=5 */
%   | else return 0.11410651491135876;  // std dev = 0,481, 7.619,000 (wgt'ed) examples reached here.  /* #neg=4.859 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.6404154034677452;  // std dev = 2,530, 91,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=84 */
%   | | | else return -0.13313509504629262;  // std dev = 1,018, 326,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=1 */
%   | | else return -0.016954863126918313;  // std dev = 0,324, 290,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=36 */
%   | else return -0.009444704356554019;  // std dev = 0,327, 398,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=49 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.391561612206165;  // std dev = 0,964, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.4629901836347364;  // std dev = 2,11e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( author(G, E), venue(G, B) )
%   | | | then return 0.15413774288449014;  // std dev = 4,672, 89,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=39 */
%   | | | else return -0.035279080748091954;  // std dev = 4,616, 128,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=27 */
%   | else return 0.09198635512364073;  // std dev = 0,480, 7.635,000 (wgt'ed) examples reached here.  /* #neg=4.875 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( haswordauthor(J, H) )
%   | | then return 0.15601315210502148;  // std dev = 0,458, 48,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | else if ( title(K, I), venue(K, A) )
%   | | | then return 0.018644814629049548;  // std dev = 5,778, 402,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=83 */
%   | | | else return -0.04337349899956811;  // std dev = 4,386, 247,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=21 */
%   | else return -0.01676547141707618;  // std dev = 0,317, 427,000 (wgt'ed) examples reached here.  /* #neg=378 #pos=49 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07206481443978541;  // std dev = 0,479, 7.893,000 (wgt'ed) examples reached here.  /* #neg=5.046 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.002715659499322267;  // std dev = 0,762, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.0928844910644538;  // std dev = 3,197, 49,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.18960532773376876;  // std dev = 1,078, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.11714487073951979;  // std dev = 0,021, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.04603657048327151;  // std dev = 0,889, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.03364880041713936;  // std dev = 2,411, 68,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.012125098228090027;  // std dev = 8,221, 708,000 (wgt'ed) examples reached here.  /* #neg=620 #pos=88 */
%   | | | else return 0.010254681876865507;  // std dev = 4,368, 240,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=46 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6300104893015853;  // std dev = 0,677, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.32981816361803235;  // std dev = 0,077, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.012352585799206553;  // std dev = 4,498, 123,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | | else return 0.6294098044396879;  // std dev = 0,492, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.05324886048627113;  // std dev = 0,479, 7.742,000 (wgt'ed) examples reached here.  /* #neg=4.982 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then return 0.004499159941052983;  // std dev = 0,301, 695,000 (wgt'ed) examples reached here.  /* #neg=574 #pos=121 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return 0.003220163698196607;  // std dev = 6,345, 357,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=47 */
%   | | | else return -0.09172556667965331;  // std dev = 1,389, 54,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=2 */
%   | | else return -0.10834062969733521;  // std dev = 0,015, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.04369787535324702;  // std dev = 0,477, 7.936,000 (wgt'ed) examples reached here.  /* #neg=5.089 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.025351819332318205;  // std dev = 3,404, 64,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return -0.01974480801497132;  // std dev = 5,915, 542,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=83 */
%   | | else return 0.05679543050554595;  // std dev = 0,381, 116,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=21 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 6.423730145428547E-4;  // std dev = 6,353, 363,000 (wgt'ed) examples reached here.  /* #neg=316 #pos=47 */
%   | | | else return -0.08495525059707373;  // std dev = 1,392, 60,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=2 */
%   | | else return -0.09937380083631107;  // std dev = 0,012, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, B), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.021747857849371943;  // std dev = 0,473, 7.538,000 (wgt'ed) examples reached here.  /* #neg=4.929 #pos=2.609 */
%   | | else return 0.04198032522234022;  // std dev = 0,368, 680,000 (wgt'ed) examples reached here.  /* #neg=546 #pos=134 */
%   | else if ( title(F, D), venue(F, A) )
%   | | then return -0.17908990682599002;  // std dev = 0,301, 292,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=30 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.3117138133726587;  // std dev = 5,228, 121,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=78 */
%   | | | else return 0.046378153757650704;  // std dev = 4,490, 207,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=49 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.5569544867662651;  // std dev = 2,016, 82,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=78 */
%   | | | else return -0.11867813628165162;  // std dev = 1,204, 214,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=2 */
%   | | else return -0.005324352592478723;  // std dev = 0,326, 39,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | else return 0.48510611944130166;  // std dev = 0,335, 40,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=31 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
0;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false,true;author(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;author(G, E), venue(G, A).;false;false
1;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
1;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
1;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,true;haswordtitle(F, D).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true;haswordauthor(F, C).;false;true
2;false,true;title(M, L), venue(M, A).;false;false
2;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
2;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
2;true,false,true;author(J, I), venue(J, A).;false;false
2;true,true,false;author(G, E), venue(G, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;haswordtitle(H, D).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false,true,true;author(G, E), venue(G, B).;false;false
3;false,false,true;author(K, J), venue(K, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,true;samebib(K, L), venue(L, B).;false;false
4;true,true;haswordtitle(F, D).;true;true
4;true,true,true;haswordauthor(G, C).;false;false
4;false,true;title(K, J), venue(K, A).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
4;true,true,false;haswordauthor(H, C).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,false;title(K, I), venue(K, A).;false;false
5;true,true;haswordauthor(E, C).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;false,true;haswordauthor(J, H).;false;true
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
5;true,true,false;author(G, E), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(H, E), venue(H, A).;false;false
6;false,true;haswordtitle(F, D).;true;true
6;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
6;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true,true;author(G, E), title(G, F).;false;false
6;false,false,true;author(K, J), venue(K, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true;author(F, E), venue(F, B).;true;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,false;haswordtitle(H, C).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;false
8;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
8;false,true,true;haswordauthor(G, D).;false;false
8;false,false,true;title(J, I), venue(J, B).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;false,true,true;samebib(I, J), venue(J, B).;false;false
9;true,true;haswordvenue(B, C).;false;false
9;true,false;title(F, D), venue(F, A).;false;true
9;true;venue(E, B), title(E, D).;true;true
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;false,true;title(I, H), venue(I, A).;true;false
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5495069597908709;  // std dev = 4,157, 81,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048766;  // std dev = 8,54e-09, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.43620872653797804;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839158;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.6930217133793948;  // std dev = 1,58e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.30697828662060495;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360626;  // std dev = 4,94e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.297461841613136;  // std dev = 3,181, 80,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=56 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783619;  // std dev = 6,04e-09, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.15827287308616694;  // std dev = 0,371, 92,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.4171528883622955;  // std dev = 5,96e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.33949894413904735;  // std dev = 8,94e-08, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839679;  // std dev = 2,11e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1439408561962609;  // std dev = 2,412, 80,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109173;  // std dev = 2,24e-08, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.28996256635680956;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.29711250460704813;  // std dev = 1,29e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.07345096447036552;  // std dev = 0,014, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04585518347332734;  // std dev = 2,233, 93,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=56 */
%   else if ( movie(D, B) )
%   | then return -0.06841392798443684;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.22593935358036657;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.06418032605570359;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(A, E) )
%   | | then return -0.24743428415142668;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.24743428415142674;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.06418032605570365;  // std dev = 0,000, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.973966
   AUC PR    = 0.853081
   CLL	      = -0.121939
   Precision = 0.799401 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.809091


Total learning time: 1.275 seconds
Total inference time: 2.83 seconds
AUC ROC: 0.973966


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112085
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.344 seconds
Parameter learned model CLL: -0.112085


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [8.54e-09, 85, 0], 'false,true,true,true': [0.0, 1, 0], 'true': [4.157, 25, 56], 'false,true,true,false': [0.0, 6, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [0.0, 68, 0], 'true': [4.371, 29, 56], 'false,true,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'genre(A, G)'}, {'false,true,false': [4.94e-08, 64, 0], 'false,true,true': [0.0, 5, 0], 'true,true,true': [1.58e-07, 0, 56], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 41, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [6.04e-09, 86, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [3.181, 24, 56], 'false,true,true,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)'}, {'false,true,false': [0.0, 67, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true': [0.371, 36, 56], 'false,false': [0.0, 0, 0], 'false,true,true,false': [2.63e-09, 3, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'genre(A, G)'}, {'false,true,false': [2.11e-08, 73, 0], 'false,true,true': [0.0, 4, 0], 'true,true,true': [5.96e-08, 0, 56], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [8.94e-08, 35, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [2.24e-08, 59, 0], 'true': [2.412, 24, 56], 'false,true,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)', 'true,true,true': 'genre(A, F)'}, {'false,true': [0.014, 70, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 56], 'true,true,false': [1.29e-08, 37, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [2.233, 37, 56], 'false,true': [0.0, 69, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.49e-08, 25, 0], 'true,true,true': [0.0, 0, 56], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false,false': [0.0, 82, 0], 'true,true,false': [1.32e-09, 3, 0]}]]
[{'': [0.2133821063862213, 7.723290606088045e-17], 'false': [7.723290606088045e-17, nan], 'false,true,true': [0.0, -6.938893903907228e-18], 'false,true': [-7.93016446160826e-18, 7.314410515177502e-17]}, {'': [0.22477508650518985, -3.0839528461809905e-17], 'false': [-3.0839528461809905e-17, nan], 'false,true': [0.0, -3.591898020846095e-17]}, {'': [0.2440216813689028, 4.344350965924526e-17], 'true': [0.2440216813689028, nan], 'false': [4.344350965924526e-17, nan], 'true,true': [4.440892098500626e-16, -1.7330310628295127e-16], 'false,true': [0.0, 3.8163916471489756e-17]}, {'': [0.12647511946444828, 2.837236618486511e-17], 'false': [2.837236618486511e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 3.4855839145208403e-17]}, {'': [0.13794579123328765, 0.0], 'true': [0.13794579123328765, nan], 'false': [0.0, nan], 'false,true,true': [nan, 2.3129646346357427e-18], 'false,true': [2.3129646346357427e-18, -1.6570492904853082e-18]}, {'': [0.1355081646455955, 8.651088503572648e-18], 'true': [0.1355081646455955, nan], 'false': [8.651088503572648e-18, nan], 'true,true': [6.344131569286608e-17, 2.283887364943179e-16], 'false,true': [0.0, 6.083413833562501e-18]}, {'': [0.07271038561568108, 1.1639434935586319e-17], 'false': [1.1639434935586319e-17, nan], 'false,true': [0.0, 8.467802730191872e-18]}, {'': [0.08256787974316522, 2.8923377327397646e-06], 'true': [0.08256787974316522, nan], 'false': [2.8923377327397646e-06, nan], 'true,true': [-3.172065784643304e-17, 1.5603134400137336e-16], 'true,true,true': [nan, -3.172065784643304e-17]}, {'': [0.053610029847258184, -8.045094381341714e-19], 'false': [-8.045094381341714e-19, nan]}, {'': [0.028930346246979217, nan], 'true,false': [0.0, 0.006013025327398524], 'true': [0.004062184426899973, 0.006257939325920092], 'true,true': [-2.3790493384824782e-17, 5.782411586589357e-19], 'true,false,false': [8.881784197001253e-18, -9.477513624848898e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
0;false,true;genre(B, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(B, E).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
5;false;genre(A, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false;genre(A, E).;true;true
9;false,false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048766;  // std dev = 6,83e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.12544463852839138;  // std dev = 1,86e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1254446385283915;  // std dev = 0,000, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.10159632948783626;  // std dev = 3,73e-09, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08518475138839682;  // std dev = 3,36e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( genre(A, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839679;  // std dev = 2,63e-09, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 1,67e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( actor(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.07324622576333704;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 9,31e-10, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.0684269778442027;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13400703000801087;  // std dev = 2,79e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( movie(G, A), movie(G, B) )
%   | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, B) )
%   | | then return -0.06419184008202626;  // std dev = 0,000, 108,000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.995966
   AUC PR    = 0.793115
   CLL	      = -0.082488
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.5 seconds
Total inference time: 2.836 seconds
AUC ROC: 0.995966


Results scoring model
   AUC ROC   = 0.999547
   AUC PR    = 0.949153
   CLL	      = -0.065278
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.684 seconds
Refined model CLL: -0.065278


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.995966
   AUC PR    = 0.793115
   CLL	      = -0.082488
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 6.803 seconds
Total inference time: 2.836 seconds
AUC ROC: 0.995966
Total revision time: 6.803
Best scored revision CLL: -0.065278


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 03:45:08
{'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'parameter': {'Precision': [0.799401, 0.5], 'Recall': 0.819018, 'F1': 0.809091, 'AUC PR': 0.853081, 'Learning time': 1.275, 'Inference time': 2.83, 'CLL': -0.121939, 'AUC ROC': 0.973966}, 'AUC PR': 0.793115, 'Learning time': 6.803, 'Inference time': 2.836, 'CLL': -0.082488, 'AUC ROC': 0.995966}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
0;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false,true;author(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;author(G, E), venue(G, A).;false;false
1;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
1;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
1;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,true;haswordtitle(F, D).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true;haswordauthor(F, C).;false;true
2;false,true;title(M, L), venue(M, A).;false;false
2;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
2;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
2;true,false,true;author(J, I), venue(J, A).;false;false
2;true,true,false;author(G, E), venue(G, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;haswordtitle(H, D).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false,true,true;author(G, E), venue(G, B).;false;false
3;false,false,true;author(K, J), venue(K, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,true;samebib(K, L), venue(L, B).;false;false
4;true,true;haswordtitle(F, D).;true;true
4;true,true,true;haswordauthor(G, C).;false;false
4;false,true;title(K, J), venue(K, A).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
4;true,true,false;haswordauthor(H, C).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,false;title(K, I), venue(K, A).;false;false
5;true,true;haswordauthor(E, C).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;false,true;haswordauthor(J, H).;false;true
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
5;true,true,false;author(G, E), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(H, E), venue(H, A).;false;false
6;false,true;haswordtitle(F, D).;true;true
6;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
6;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true,true;author(G, E), title(G, F).;false;false
6;false,false,true;author(K, J), venue(K, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true;author(F, E), venue(F, B).;true;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,false;haswordtitle(H, C).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;false
8;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
8;false,true,true;haswordauthor(G, D).;false;false
8;false,false,true;title(J, I), venue(J, B).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;false,true,true;samebib(I, J), venue(J, B).;false;false
9;true,true;haswordvenue(B, C).;false;false
9;true,false;title(F, D), venue(F, A).;false;true
9;true;venue(E, B), title(E, D).;true;true
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;false,true;title(I, H), venue(I, A).;true;false
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5325675397506758;  // std dev = 4,346, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14185106490048766;  // std dev = 8,33e-09, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4319883039042014;  // std dev = 4,495, 89,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1254446385283915;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.68055568343791;  // std dev = 0,991, 59,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | | else return -0.3024951640197171;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360626;  // std dev = 4,94e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2553004368918066;  // std dev = 3,583, 91,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=58 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.10159632948783616;  // std dev = 6,32e-09, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.19942887090580894;  // std dev = 0,372, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.42559639288325823;  // std dev = 7,30e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.33554523803042513;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839679;  // std dev = 1,67e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07033934287786944;  // std dev = 3,014, 101,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08260275109727272;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109169;  // std dev = 3,33e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.31092967546304745;  // std dev = 1,37e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.2792035072893207;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.07340690255750885;  // std dev = 0,014, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09757648056612914;  // std dev = 2,039, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( movie(D, B) )
%   | then return -0.06839644867460958;  // std dev = 6,73e-05, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2307142195572194;  // std dev = 2,11e-08, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06418402239525171;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(A, E) )
%   | | then return -0.07897114714076527;  // std dev = 0,173, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2441531775928719;  // std dev = 2,58e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06418402239525178;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.973223
   AUC PR    = 0.851779
   CLL	      = -0.123705
   Precision = 0.800604 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.80916


Total learning time: 1.238 seconds
Total inference time: 3.267 seconds
AUC ROC: 0.973223


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109144
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.735 seconds
Parameter learned model CLL: -0.109144


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [8.33e-09, 77, 0], 'false,true,true,true': [0.0, 1, 0], 'true': [4.346, 28, 58], 'false,true,true,false': [0.0, 5, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [0.0, 75, 0], 'true': [4.495, 31, 58], 'false,true,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'genre(A, G)'}, {'false,true,false': [4.94e-08, 64, 0], 'false,true,true': [0.0, 2, 0], 'true,true,true': [0.991, 1, 58], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [6.32e-09, 73, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [3.583, 33, 58], 'false,true,true,false': [0.0, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)'}, {'false,true,false': [0.0, 79, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true': [0.372, 32, 58], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.86e-09, 3, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'genre(A, G)'}, {'false,true,false': [1.67e-08, 68, 0], 'false,true,true': [0.0, 4, 0], 'true,true,true': [7.3e-08, 0, 58], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 26, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [3.33e-08, 68, 0], 'true': [3.014, 43, 58], 'false,true,true': [0.013, 4, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)', 'true,true,true': 'genre(A, F)'}, {'false,true': [0.014, 76, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [1.37e-07, 0, 58], 'true,true,false': [0.0, 33, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [2.039, 27, 58], 'false,true': [6.73e-05, 84, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [2.58e-08, 19, 0], 'true,true,true': [2.11e-08, 0, 58], 'false': [0.0, 0, 0], 'true,false,true': [0.173, 12, 0], 'true,false,false,false': [0.0, 61, 0], 'true,true,false': [0.0, 4, 0]}]]
[{'': [0.2195781503515409, 7.490661370964911e-17], 'false': [7.490661370964911e-17, nan], 'false,true,true': [0.0, -2.7755575615628915e-18], 'false,true': [-6.938893903907228e-18, 7.209240419643874e-17]}, {'': [0.22699154147203798, -2.5620531337503614e-17], 'false': [-2.5620531337503614e-17, nan], 'false,true': [0.0, -2.6645352591003756e-17]}, {'': [0.2137188208616789, 4.0371746350005693e-17], 'true': [0.2137188208616789, nan], 'false': [4.0371746350005693e-17, nan], 'true,true': [0.016661878770468843, -1.2434497875801754e-16], 'false,true': [0.0, 3.8163916471489756e-17]}, {'': [0.1411053512680553, 4.4408920985006264e-17], 'false': [4.4408920985006264e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 4.258389683493751e-17]}, {'': [0.13814003488609936, 0.0], 'true': [0.13814003488609936, nan], 'false': [0.0, nan], 'false,true,true': [nan, 1.1564823173178713e-18], 'false,true': [1.1564823173178713e-18, 0.0]}, {'': [0.12381513125331525, 4.625929269271485e-18], 'true': [0.12381513125331525, nan], 'false': [4.625929269271485e-18, nan], 'true,true': [9.188052617587502e-17, -2.391249591500337e-16], 'false,true': [0.0, 4.081702296416017e-18]}, {'': [0.0899130178827842, 3.2077642647599444e-06], 'false': [3.2077642647599444e-06, nan], 'false,true': [4.391474458208949e-05, 1.6326809185664067e-17]}, {'': [0.08049320491000299, 2.569081654130606e-06], 'true': [0.08049320491000299, nan], 'false': [2.569081654130606e-06, nan], 'true,true': [3.215818416155626e-16, 0.0], 'true,true,true': [nan, 3.215818416155626e-16]}, {'': [0.04892089232221947, 4.5274455890658464e-09], 'false': [4.5274455890658464e-09, nan]}, {'': [0.029266467233312023, nan], 'true,false': [0.002480463925843699, 0.00586542678395776], 'true': [0.005248666430994968, 0.005512550277423023], 'true,true': [7.656710514656252e-18, 0.0], 'true,false,false': [3.5059674461847047e-17, -6.370132108504997e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
0;false,true;genre(B, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(B, E).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
5;false;genre(A, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false;genre(A, E).;true;true
9;false,false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,58e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.14185106490048766;  // std dev = 7,74e-08, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.1123163781936064;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10330865282349931;  // std dev = 0,005, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.1015963294878363;  // std dev = 2,24e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.09269127618926094;  // std dev = 1,86e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.09439153116811692;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.09269127618926107;  // std dev = 0,000, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694892;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2551722425694892;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08518475138839685;  // std dev = 2,63e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(A, E) )
%   | then return -0.08496357634350298;  // std dev = 0,000109, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839683;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,83e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.13350487239542808;  // std dev = 0,684, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, D) )
%   | then return -0.07860747295144636;  // std dev = 0,000152, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07877675473109179;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06961688521735007;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333702;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( actor(A), actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,05e-08, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.07310963850267804;  // std dev = 0,000167, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0652406609323538;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.06842697784420268;  // std dev = 1,67e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( female(B) )
%   | | | then return -0.06834353230051189;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06824326915714814;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06961051937701183;  // std dev = 0,003, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.11513693411001433;  // std dev = 0,058, 42,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(F, A), movie(F, B) )
%   | | then return -0.06137307563346506;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06405500956837808;  // std dev = 4,00e-05, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202623;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.0638871087902899;  // std dev = 0,008, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.998889
   AUC PR    = 0.966587
   CLL	      = -0.080381
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.511 seconds
Total inference time: 2.566 seconds
AUC ROC: 0.998889


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065781
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 2.205 seconds
Refined model CLL: -0.065781


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.998889
   AUC PR    = 0.966587
   CLL	      = -0.080381
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 7.689 seconds
Total inference time: 2.566 seconds
AUC ROC: 0.998889
Total revision time: 7.689
Best scored revision CLL: -0.065781


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 03:45:23
{'Precision': [0.736364, 0.5], 'Recall': 1.0, 'F1': 0.848168, 'parameter': {'Precision': [0.800604, 0.5], 'Recall': 0.817901, 'F1': 0.80916, 'AUC PR': 0.851779, 'Learning time': 1.238, 'Inference time': 3.267, 'CLL': -0.123705, 'AUC ROC': 0.973223}, 'AUC PR': 0.966587, 'Learning time': 7.689, 'Inference time': 2.566, 'CLL': -0.080381, 'AUC ROC': 0.998889}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
0;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false,true;author(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;author(G, E), venue(G, A).;false;false
1;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
1;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
1;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,true;haswordtitle(F, D).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true;haswordauthor(F, C).;false;true
2;false,true;title(M, L), venue(M, A).;false;false
2;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
2;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
2;true,false,true;author(J, I), venue(J, A).;false;false
2;true,true,false;author(G, E), venue(G, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;haswordtitle(H, D).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false,true,true;author(G, E), venue(G, B).;false;false
3;false,false,true;author(K, J), venue(K, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,true;samebib(K, L), venue(L, B).;false;false
4;true,true;haswordtitle(F, D).;true;true
4;true,true,true;haswordauthor(G, C).;false;false
4;false,true;title(K, J), venue(K, A).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
4;true,true,false;haswordauthor(H, C).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,false;title(K, I), venue(K, A).;false;false
5;true,true;haswordauthor(E, C).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;false,true;haswordauthor(J, H).;false;true
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
5;true,true,false;author(G, E), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(H, E), venue(H, A).;false;false
6;false,true;haswordtitle(F, D).;true;true
6;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
6;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true,true;author(G, E), title(G, F).;false;false
6;false,false,true;author(K, J), venue(K, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true;author(F, E), venue(F, B).;true;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,false;haswordtitle(H, C).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;false
8;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
8;false,true,true;haswordauthor(G, D).;false;false
8;false,false,true;title(J, I), venue(J, B).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;false,true,true;samebib(I, J), venue(J, B).;false;false
9;true,true;haswordvenue(B, C).;false;false
9;true,false;title(F, D), venue(F, A).;false;true
9;true;venue(E, B), title(E, D).;true;true
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;false,true;title(I, H), venue(I, A).;true;false
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5617062473524732;  // std dev = 7,264, 253,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.14185106490048768;  // std dev = 4,08e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.14185106490048835;  // std dev = 0,000, 191,000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.47882418983829866;  // std dev = 7,264, 253,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.12544463852839144;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.12544463852839183;  // std dev = 0,000, 243,000 (wgt'ed) examples reached here.  /* #neg=243 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.6439251262213013;  // std dev = 2,194, 134,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=129 */
%   | | else return 0.10732551557886309;  // std dev = 5,303, 115,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.11231637819360635;  // std dev = 1,83e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.11231637819360668;  // std dev = 0,000, 213,000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2334615052797746;  // std dev = 7,409, 278,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=178 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10159632948783627;  // std dev = 2,98e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.10159632948783655;  // std dev = 0,000, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.23994884420635668;  // std dev = 0,421, 251,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926107;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.09269127618926047;  // std dev = 8,16e-08, 237,000 (wgt'ed) examples reached here.  /* #neg=237 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.3741628334012665;  // std dev = 2,194, 134,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=129 */
%   | | else return -0.04710181718385358;  // std dev = 5,384, 120,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.08518475138839679;  // std dev = 2,11e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -0.08518475138839678;  // std dev = 8,02e-08, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09659866784913738;  // std dev = 6,785, 272,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.07877675473109143;  // std dev = 6,32e-08, 241,000 (wgt'ed) examples reached here.  /* #neg=241 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.6960646255677704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.303935374432229;  // std dev = 2,70e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | else return -0.041648726202319984;  // std dev = 0,495, 115,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=49 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.07324622576333681;  // std dev = 1,16e-07, 257,000 (wgt'ed) examples reached here.  /* #neg=257 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10242597370303766;  // std dev = 5,893, 248,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=178 */
%   else if ( movie(D, B) )
%   | then return -0.06842697784420282;  // std dev = 0,000, 265,000 (wgt'ed) examples reached here.  /* #neg=265 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.17954083732608145;  // std dev = 2,151, 137,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=129 */
%   | | else return -0.06419184008202618;  // std dev = 5,27e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else if ( genre(A, E) )
%   | | then return -0.16467982598990275;  // std dev = 1,264, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.056804824843106005;  // std dev = 5,303, 115,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=49 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 176,000 (wgt'ed) examples reached here.  /* #neg=176 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993632
   AUC PR    = 0.960741
   CLL	      = -0.219799
   Precision = 0.937198 at threshold = 0.5
   Recall    = 0.95098
   F1        = 0.944039


Total learning time: 2.105 seconds
Total inference time: 2.442 seconds
AUC ROC: 0.993632


Results scoring model
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.200459
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total scoring time: 1.753 seconds
Parameter learned model CLL: -0.200459


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [0.0, 191, 0], 'false,true,true,true': [0.0, 5, 0], 'true': [7.264, 75, 178], 'false,true,true,false': [4.08e-08, 40, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [0.0, 243, 0], 'true': [7.264, 75, 178], 'false,true,true': [0.0, 42, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'genre(A, G)'}, {'false,true,false': [0.0, 213, 0], 'false,true,true': [1.83e-08, 45, 0], 'true,true,true': [2.194, 5, 129], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [5.303, 66, 49]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [0.0, 221, 0], 'false,true,true,true': [0.0, 6, 0], 'true': [7.409, 100, 178], 'false,true,true,false': [2.98e-08, 49, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)'}, {'false,true,false': [8.16e-08, 237, 0], 'false,true,true,true': [0.0, 5, 0], 'true,true': [0.421, 73, 178], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 42, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'genre(A, G)'}, {'false,true,false': [8.02e-08, 212, 0], 'false,true,true': [2.11e-08, 45, 0], 'true,true,true': [2.194, 5, 129], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [5.384, 71, 49]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [6.32e-08, 241, 0], 'true': [6.785, 94, 178], 'false,true,true': [0.0, 34, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)', 'true,true,true': 'genre(A, F)'}, {'false,true': [1.16e-07, 257, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 4, 0], 'true,true,true,false': [2.7e-07, 0, 129], 'true,true,false': [0.495, 66, 49]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [5.893, 70, 178], 'false,true': [0.0, 265, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [5.303, 66, 49], 'true,true,true': [2.151, 8, 129], 'false': [0.0, 0, 0], 'true,false,true': [1.264, 50, 0], 'true,false,false,false': [0.0, 176, 0], 'true,true,false': [5.27e-09, 53, 0]}]]
[{'': [0.20856442062835467, -1.8064645824409328e-16], 'false': [-1.8064645824409328e-16, nan], 'false,true,true': [-2.7755575615628915e-18, 4.163336342344337e-17], 'false,true': [4.9343245538895844e-17, -2.2320714212359167e-16]}, {'': [0.20856442062835037, -8.102680320071318e-17], 'false': [-8.102680320071318e-17, nan], 'false,true': [-1.057355261547768e-17, -6.030841121420603e-17]}, {'': [0.20383542200932434, -9.811273240873477e-17], 'true': [0.20383542200932434, nan], 'false': [-9.811273240873477e-17, nan], 'true,true': [0.035921140565829186, 0.24453686200378127], 'false,true': [7.401486830834377e-18, -5.837792429953875e-17]}, {'': [0.19743782390256678, -6.114271729819703e-17], 'false': [-6.114271729819703e-17, nan], 'false,true,true': [0.0, 1.8126090197961738e-17], 'false,true': [2.62416351275037e-17, -8.238759096765868e-17]}, {'': [0.17696082125213755, 7.03662480396226e-17], 'true': [0.17696082125213755, nan], 'false': [7.03662480396226e-17, nan], 'false,true,true': [0.0, -6.6084703846735505e-18], 'false,true': [-3.543264972207946e-18, 2.810691201582675e-17]}, {'': [0.17732213527528154, 3.455947158366246e-17], 'true': [0.17732213527528154, nan], 'false': [3.455947158366246e-17, nan], 'true,true': [0.03592114056582661, 0.24159722222222182], 'false,true': [9.86864910777917e-18, 3.0374026145405226e-17]}, {'': [0.16924160614852357, 9.689219124001367e-18], 'false': [9.689219124001367e-18, nan], 'false,true': [0.0, 1.658424435124715e-17]}, {'': [0.1537934257977574, 5.270319416508525e-17], 'true': [0.1537934257977574, nan], 'false': [5.270319416508525e-17, nan], 'true,true': [0.02917067103849903, 0.2445368620037802], 'true,true,true': [0.0, 5.645785303520176e-16]}, {'': [0.1400396402626722, -2.3461316746795762e-17], 'false': [-2.3461316746795762e-17, nan]}, {'': [0.07794795627210692, nan], 'true,false': [0.03197647848743494, 0.09665132134903821], 'true': [0.03630440041787103, 0.08850620694611211], 'true,true': [0.03377812764202629, 5.236901059552625e-19], 'true,false,false': [0.24453686200378055, -5.046468293750712e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
0;false,true;genre(B, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
3;false,true;genre(B, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
4;false,true;genre(B, G).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;genre(B, E).;true;true
7;true,true;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false;genre(A, E).;true;true
9;false,false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 6,50e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return -0.14185106490048843;  // std dev = 0,000, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.1254446385283918;  // std dev = 0,000, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.11231637819360636;  // std dev = 2,95e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return -0.11231637819360676;  // std dev = 0,000, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.10159632948783658;  // std dev = 0,000, 242,000 (wgt'ed) examples reached here.  /* #neg=242 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926103;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926082;  // std dev = 0,000, 102,000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else return -0.09269127618926067;  // std dev = 0,000, 137,000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.0851847513883968;  // std dev = 3,61e-09, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.08518475138839682;  // std dev = 3,36e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.08518475138839682;  // std dev = 3,48e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.08518475138839678;  // std dev = 1,49e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.08518475138839678;  // std dev = 2,79e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109165;  // std dev = 1,05e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.07877675473109166;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( female(A) )
%   | | | then return -0.0787767547310916;  // std dev = 3,87e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return -0.07877675473109161;  // std dev = 3,49e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.1770964977452775;  // std dev = 0,000, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.17709649774527744;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 110,000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.06842697784420292;  // std dev = 0,000, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.07081318737060784;  // std dev = 0,767, 69,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | | | else return 0.11056415290058715;  // std dev = 0,617, 93,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=82 */
%   | | else return -0.06419184008202614;  // std dev = 1,32e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06419184008202623;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( movie(D, B) )
%   | | then if ( female(A), director(B) )
%   | | | then return 0.09287141546102219;  // std dev = 0,585, 53,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=42 */
%   | | | else return -0.05887616157386429;  // std dev = 0,517, 261,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06437
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.843 seconds
Total inference time: 2.501 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067124
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.532 seconds
Refined model CLL: -0.067124


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06437
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.233 seconds
Total inference time: 2.501 seconds
AUC ROC: 1.0
Total revision time: 9.233
Best scored revision CLL: -0.067124


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 03:45:38
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [0.937198, 0.5], 'Recall': 0.95098, 'F1': 0.944039, 'AUC PR': 0.960741, 'Learning time': 2.105, 'Inference time': 2.442, 'CLL': -0.219799, 'AUC ROC': 0.993632}, 'AUC PR': 1.0, 'Learning time': 9.233, 'Inference time': 2.501, 'CLL': -0.06437, 'AUC ROC': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
0;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false,true;author(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;author(G, E), venue(G, A).;false;false
1;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
1;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
1;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,true;haswordtitle(F, D).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true;haswordauthor(F, C).;false;true
2;false,true;title(M, L), venue(M, A).;false;false
2;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
2;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
2;true,false,true;author(J, I), venue(J, A).;false;false
2;true,true,false;author(G, E), venue(G, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;haswordtitle(H, D).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false,true,true;author(G, E), venue(G, B).;false;false
3;false,false,true;author(K, J), venue(K, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,true;samebib(K, L), venue(L, B).;false;false
4;true,true;haswordtitle(F, D).;true;true
4;true,true,true;haswordauthor(G, C).;false;false
4;false,true;title(K, J), venue(K, A).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
4;true,true,false;haswordauthor(H, C).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,false;title(K, I), venue(K, A).;false;false
5;true,true;haswordauthor(E, C).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;false,true;haswordauthor(J, H).;false;true
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
5;true,true,false;author(G, E), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(H, E), venue(H, A).;false;false
6;false,true;haswordtitle(F, D).;true;true
6;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
6;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true,true;author(G, E), title(G, F).;false;false
6;false,false,true;author(K, J), venue(K, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true;author(F, E), venue(F, B).;true;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,false;haswordtitle(H, C).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;false
8;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
8;false,true,true;haswordauthor(G, D).;false;false
8;false,false,true;title(J, I), venue(J, B).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;false,true,true;samebib(I, J), venue(J, B).;false;false
9;true,true;haswordvenue(B, C).;false;false
9;true,false;title(F, D), venue(F, A).;false;true
9;true;venue(E, B), title(E, D).;true;true
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;false,true;title(I, H), venue(I, A).;true;false
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5199136409818657;  // std dev = 3,901, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14185106490048766;  // std dev = 7,68e-09, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.39057258438812725;  // std dev = 4,199, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1254446385283916;  // std dev = 0,000, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.708789822527958;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2912101774720421;  // std dev = 5,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360628;  // std dev = 4,59e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.29688281262295213;  // std dev = 2,951, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.10159632948783624;  // std dev = 3,95e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.17819139819544805;  // std dev = 0,371, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.42693918684700227;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.330560799915806;  // std dev = 4,21e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08518475138839679;  // std dev = 1,67e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11675519590753695;  // std dev = 2,361, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07877675473109168;  // std dev = 3,73e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.30194676485021205;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2850688844467972;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04939046201686308;  // std dev = 2,026, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   else if ( movie(D, B) )
%   | then return -0.06882321558588454;  // std dev = 0,002, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.23336950635506232;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06416804169638143;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(A, E) )
%   | | then return -0.12993726196350658;  // std dev = 0,240, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.23955262907538183;  // std dev = 5,77e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.06416804169638145;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.974863
   AUC PR    = 0.856178
   CLL	      = -0.119596
   Precision = 0.80814 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.816446


Total learning time: 1.164 seconds
Total inference time: 2.714 seconds
AUC ROC: 0.974863


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.11401
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.448 seconds
Parameter learned model CLL: -0.11401


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [7.68e-09, 55, 0], 'false,true,true,true': [0.0, 1, 0], 'true': [3.901, 23, 45], 'false,true,true,false': [0.0, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [0.0, 62, 0], 'true': [4.199, 29, 45], 'false,true,true': [0.0, 5, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'genre(A, G)'}, {'false,true,false': [4.59e-08, 61, 0], 'false,true,true': [0.0, 8, 0], 'true,true,true': [0.0, 0, 45], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [5.58e-08, 28, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [3.95e-09, 52, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [2.951, 21, 45], 'false,true,true,false': [0.0, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)'}, {'false,true,false': [0.0, 54, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true': [0.371, 28, 45], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 8, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'genre(A, G)'}, {'false,true,false': [1.67e-08, 66, 0], 'false,true,true': [3.73e-09, 8, 0], 'true,true,true': [0.0, 0, 45], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [4.21e-08, 24, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [3.73e-08, 71, 0], 'true': [2.361, 25, 45], 'false,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)', 'true,true,true': 'genre(A, F)'}, {'false,true': [0.0, 76, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 45], 'true,true,false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [2.026, 31, 45], 'false,true': [0.002, 68, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [5.77e-08, 32, 0], 'true,true,true': [0.0, 0, 45], 'false': [0.0, 0, 0], 'true,false,true': [0.24, 8, 0], 'true,false,false,false': [0.0, 55, 0], 'true,true,false': [0.0, 2, 0]}]]
[{'': [0.22383217993079618, 6.344131569286608e-17], 'false': [6.344131569286608e-17, nan], 'false,true,true': [0.0, -7.93016446160826e-18], 'false,true': [-6.938893903907228e-18, 6.055761952500853e-17]}, {'': [0.2383126369612852, -3.314098580970616e-17], 'false': [-3.314098580970616e-17, nan], 'false,true': [0.0, -4.118569284899774e-17]}, {'': [0.23644210921373596, 4.344350965924526e-17], 'true': [0.23644210921373596, nan], 'false': [4.344350965924526e-17, nan], 'true,true': [-1.5789838572446671e-16, 1.1102230246251565e-16], 'false,true': [-1.734723475976807e-18, 3.45807171604557e-17]}, {'': [0.1319809935596301, 2.4462541220554296e-17], 'false': [2.4462541220554296e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 1.4945309946877107e-17]}, {'': [0.13778472141857862, -3.581364595565021e-18], 'true': [0.13778472141857862, nan], 'false': [-3.581364595565021e-18, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -2.05596856412066e-18]}, {'': [0.1301639841086547, 6.00120553851436e-18], 'true': [0.1301639841086547, nan], 'false': [6.00120553851436e-18, nan], 'true,true': [-2.3684757858670006e-16, 7.401486830834377e-17], 'false,true': [1.734723475976807e-18, 4.20539024479226e-18]}, {'': [0.07964777803874734, 2.0531521688273442e-17], 'false': [2.0531521688273442e-17, nan], 'false,true': [0.0, 1.9546180011006276e-17]}, {'': [0.07712974276768483, -4.382459307730881e-18], 'true': [0.07712974276768483, nan], 'false': [-4.382459307730881e-18, nan], 'true,true': [-1.9737298215558337e-16, -3.8616453030440226e-17], 'true,true,true': [nan, -1.9737298215558337e-16]}, {'': [0.05403274074786485, 5.181143481801947e-06], 'false': [5.181143481801947e-06, nan]}, {'': [0.033029191052542414, nan], 'true,false': [0.007209317224242728, 0.007152485948286452], 'true': [0.003606868866021578, 0.007157394163901911], 'true,true': [-1.1842378929335003e-16, 0.0], 'true,false,false': [1.0408340855860843e-16, -4.037174635000569e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
0;false,true;genre(B, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(B, E).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
5;false;genre(A, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false;genre(A, E).;true;true
9;false,false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.14185106490048768;  // std dev = 5,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.1642151258435549;  // std dev = 0,134, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.10850861618730676;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360635;  // std dev = 3,48e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( actor(B) )
%   | | | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10141120895172932;  // std dev = 0,000740, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( actor(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09270684592688133;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.08980763152042046;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08519796512482085;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08273196748816602;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, E) )
%   | then return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.0851847513883968;  // std dev = 1,67e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.08518475138839683;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(B) )
%   | | then return -0.07854984640454733;  // std dev = 0,000666, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07878810101168911;  // std dev = 6,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07326693762485023;  // std dev = 1,06e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07325466241441173;  // std dev = 1,58e-05, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.0712797966597154;  // std dev = 1,58e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1527438580936709;  // std dev = 5,89e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06845009106078509;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06843242075981608;  // std dev = 1,82e-05, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.19260847024263472;  // std dev = 0,563, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06842697784420265;  // std dev = 1,90e-08, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then return 0.09507510909746794;  // std dev = 0,079, 56,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=45 */
%   | | else return -0.2608153084096016;  // std dev = 0,482, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06222322721667206;  // std dev = 0,004, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419358488901655;  // std dev = 1,77e-05, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.06419547207352545;  // std dev = 4,55e-05, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071622
   Precision = 0.836228 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.910811


Total learning time: 2.596 seconds
Total inference time: 3.278 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066047
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.674 seconds
Refined model CLL: -0.066047


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071622
   Precision = 0.836228 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.910811


Total learning time: 6.882 seconds
Total inference time: 3.278 seconds
AUC ROC: 1.0
Total revision time: 6.882
Best scored revision CLL: -0.066047


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 03:45:51
{'Precision': [0.836228, 0.5], 'Recall': 1.0, 'F1': 0.910811, 'parameter': {'Precision': [0.80814, 0.5], 'Recall': 0.824926, 'F1': 0.816446, 'AUC PR': 0.856178, 'Learning time': 1.164, 'Inference time': 2.714, 'CLL': -0.119596, 'AUC ROC': 0.974863}, 'AUC PR': 1.0, 'Learning time': 6.882, 'Inference time': 3.278, 'CLL': -0.071622, 'AUC ROC': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
0;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false,true;author(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;author(G, E), venue(G, A).;false;false
1;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
1;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
1;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,true;haswordtitle(F, D).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true;haswordauthor(F, C).;false;true
2;false,true;title(M, L), venue(M, A).;false;false
2;true,false;haswordvenue(B, H), haswordauthor(I, H).;true;false
2;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
2;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
2;true,false,true;author(J, I), venue(J, A).;false;false
2;true,true,false;author(G, E), venue(G, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;haswordtitle(H, D).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false,false;haswordvenue(B, I), haswordauthor(J, I).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false;haswordvenue(A, D), haswordauthor(E, D).;true;true
3;false,true,true;author(G, E), venue(G, B).;false;false
3;false,false,true;author(K, J), venue(K, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;false,true,true;samebib(K, L), venue(L, B).;false;false
4;true,true;haswordtitle(F, D).;true;true
4;true,true,true;haswordauthor(G, C).;false;false
4;false,true;title(K, J), venue(K, A).;true;false
4;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
4;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
4;true,true,false;haswordauthor(H, C).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,false;title(K, I), venue(K, A).;false;false
5;true,true;haswordauthor(E, C).;true;true
5;true,true,true;haswordtitle(F, C).;false;false
5;false,true;haswordauthor(J, H).;false;true
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
5;true,true,false;author(G, E), venue(G, B).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(H, E), venue(H, A).;false;false
6;false,true;haswordtitle(F, D).;true;true
6;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
6;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true,true;author(G, E), title(G, F).;false;false
6;false,false,true;author(K, J), venue(K, A).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true;author(F, E), venue(F, B).;true;true
7;true,true,true;samebib(F, G), venue(G, A).;false;false
7;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
7;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
7;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
7;true,true,false;haswordtitle(H, C).;false;false
7;false,false,true;title(M, L), venue(M, B).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
8;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;false
8;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;false
8;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
8;false,true,true;haswordauthor(G, D).;false;false
8;false,false,true;title(J, I), venue(J, B).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;false,true,true;samebib(I, J), venue(J, B).;false;false
9;true,true;haswordvenue(B, C).;false;false
9;true,false;title(F, D), venue(F, A).;false;true
9;true;venue(E, B), title(E, D).;true;true
9;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
9;false,true;title(I, H), venue(I, A).;true;false
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5399671169176945;  // std dev = 3,784, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4128345852687828;  // std dev = 4,059, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839158;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.6999790914432029;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.04361065214654129;  // std dev = 2,727, 39,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1123163781936063;  // std dev = 3,33e-08, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3085778306472573;  // std dev = 3,258, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783619;  // std dev = 5,89e-09, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.24526571263102231;  // std dev = 0,397, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.39972181736693296;  // std dev = 7,30e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.1726443648477122;  // std dev = 2,750, 41,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return -0.10023983378076878;  // std dev = 0,021, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.08518475138839679;  // std dev = 1,67e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07127305973538375;  // std dev = 3,349, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07769109793667726;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109169;  // std dev = 3,16e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.29367137907200386;  // std dev = 4,71e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.09801972176554236;  // std dev = 0,456, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.07321531996676682;  // std dev = 0,001, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07037298162871046;  // std dev = 3,022, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   else if ( movie(D, B) )
%   | then return -0.06842894795203112;  // std dev = 1,86e-09, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2241465492244494;  // std dev = 2,98e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.06419357830687301;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(A, E) )
%   | | then return -0.14391145238945793;  // std dev = 0,279, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.08253704314408508;  // std dev = 2,640, 33,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return -0.06419357830687301;  // std dev = 1,05e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.982257
   AUC PR    = 0.888508
   CLL	      = -0.174486
   Precision = 0.808989 at threshold = 0.5
   Recall    = 0.854599
   F1        = 0.831169


Total learning time: 1.146 seconds
Total inference time: 2.887 seconds
AUC ROC: 0.982257


Results scoring model
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.174405
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total scoring time: 1.36 seconds
Parameter learned model CLL: -0.174405


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [8.12e-09, 64, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [3.784, 21, 45], 'false,true,true,false': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [0.0, 67, 0], 'true': [4.059, 26, 45], 'false,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'genre(A, G)'}, {'false,true,false': [3.33e-08, 52, 0], 'false,true,true': [2.63e-09, 3, 0], 'true,true,true': [0.0, 0, 35], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [2.727, 29, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, A)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [5.89e-09, 64, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [3.258, 20, 45], 'false,true,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)'}, {'false,true,false': [0.0, 68, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true': [0.397, 19, 45], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'genre(A, G)'}, {'false,true,false': [1.67e-08, 58, 0], 'false,true,true': [0.021, 2, 0], 'true,true,true': [7.3e-08, 0, 35], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [2.75, 31, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [3.16e-08, 66, 0], 'true': [3.349, 31, 45], 'false,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)', 'true,true,true': 'genre(A, F)'}, {'false,true': [0.001, 61, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [4.71e-08, 0, 35], 'true,true,false': [0.456, 24, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [3.022, 26, 45], 'false,true': [1.86e-09, 54, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [2.64, 23, 10], 'true,true,true': [2.98e-08, 0, 35], 'false': [0.0, 0, 0], 'true,false,true': [0.279, 4, 0], 'true,false,false,false': [1.05e-08, 49, 0], 'true,true,false': [0.0, 2, 0]}]]
[{'': [0.21694214876033094, 6.832141690000964e-17], 'false': [6.832141690000964e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 6.591949208711867e-17]}, {'': [0.2320968061892479, -3.539841527790354e-17], 'false': [-3.539841527790354e-17, nan], 'false,true': [0.0, -3.314098580970616e-17]}, {'': [0.23831263696128405, 2.62416351275037e-17], 'true': [0.23831263696128405, nan], 'false': [2.62416351275037e-17, nan], 'true,true': [-8.120488408686859e-16, 0.19066403681788316], 'false,true': [2.3129646346357427e-18, 2.1350442781253012e-17]}, {'': [0.163297593494338, 3.811213368116209e-17], 'false': [3.811213368116209e-17, nan], 'false,true,true': [nan, -1.1564823173178713e-18], 'false,true': [-1.1564823173178713e-18, 3.469446951953614e-17]}, {'': [0.15789094604108642, 0.0], 'true': [0.15789094604108642, nan], 'false': [0.0, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -1.6326809185664067e-18]}, {'': [0.18087682100599417, 1.4858527605145685e-05], 'true': [0.18087682100599417, nan], 'false': [1.4858527605145685e-05, nan], 'true,true': [1.5225915766287861e-16, 0.18441403926234365], 'false,true': [0.00022665550584110433, 4.785444071660158e-18]}, {'': [0.14759627742559858, 1.732923694260112e-08], 'false': [1.732923694260112e-08, nan], 'false,true': [0.0, 1.5139404881252134e-17]}, {'': [0.1406492137187679, 2.8177463716585982e-08], 'true': [0.1406492137187679, nan], 'false': [2.8177463716585982e-08, nan], 'true,true': [6.344131569286608e-17, 0.20761245674740486], 'true,true,true': [nan, 6.344131569286608e-17]}, {'': [0.12859236295666257, 3.0839528461809902e-18], 'false': [3.0839528461809902e-18, nan]}, {'': [0.07569657411295373, nan], 'true,false': [0.019465857000331162, 0.08507722249325765], 'true': [0.004251133703531465, 0.08225758178122923], 'true,true': [2.5376526277146434e-17, 0.0], 'true,false,false': [0.21120293847566549, 2.2657612747452172e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(B, E).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
5;false;genre(A, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;true;genre(B, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false;genre(A, E).;true;true
9;false,false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 3,94e-08, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048766;  // std dev = 5,96e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.5553664367462843;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0.5553664367462844;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926101;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.092691276189261;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601494;  // std dev = 5,27e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.3207118471601494;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(A) )
%   | | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( genre(A, E) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.0851847513883968;  // std dev = 1,75e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.08518475138839682;  // std dev = 1,18e-08, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.1770964977452775;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( female(A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( actor(A), actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.07324622576333702;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.15274385809367086;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.0684269778442027;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.12299598166967576;  // std dev = 0,045, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202625;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | | else return 0.10097388499300493;  // std dev = 0,256, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.995635
   AUC PR    = 0.749353
   CLL	      = -0.084467
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.437 seconds
Total inference time: 3.928 seconds
AUC ROC: 0.995635


Results scoring model
   AUC ROC   = 0.999174
   AUC PR    = 0.919621
   CLL	      = -0.067163
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.352 seconds
Refined model CLL: -0.067163


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.995635
   AUC PR    = 0.749353
   CLL	      = -0.084467
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 6.295 seconds
Total inference time: 3.928 seconds
AUC ROC: 0.995635
Total revision time: 6.295
Best scored revision CLL: -0.067163


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 03:46:05
{'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'parameter': {'Precision': [0.808989, 0.5], 'Recall': 0.854599, 'F1': 0.831169, 'AUC PR': 0.888508, 'Learning time': 1.146, 'Inference time': 2.887, 'CLL': -0.174486, 'AUC ROC': 0.982257}, 'AUC PR': 0.749353, 'Learning time': 6.295, 'Inference time': 3.928, 'CLL': -0.084467, 'AUC ROC': 0.995635}


