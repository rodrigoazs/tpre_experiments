Starting experiment #2 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.8126943896449667;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.26754490825387595;  // std dev = 6,002, 149,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=61 */
%   | | | else return -0.08567128961958881;  // std dev = 2,172, 89,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=5 */
%   | else return 0.21570820443491326;  // std dev = 0,479, 7.719,000 (wgt'ed) examples reached here.  /* #neg=4.959 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.8126943896449664;  // std dev = 1,954, 88,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=84 */
%   | | | else return -0.13851773156715455;  // std dev = 0,998, 300,000 (wgt'ed) examples reached here.  /* #neg=299 #pos=1 */
%   | | else if ( haswordtitle(I, L), haswordauthor(M, L) )
%   | | | then return -0.04185106490048765;  // std dev = 3,912, 170,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=17 */
%   | | | else return 0.013886640017545138;  // std dev = 4,005, 122,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=19 */
%   | else return -0.030487428536851456;  // std dev = 0,315, 440,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=49 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.64159887982857;  // std dev = 0,282, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.33730368246773174;  // std dev = 4,379, 77,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=39 */
%   | | | else return 0.044343255881483926;  // std dev = 4,605, 126,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=27 */
%   | else return 0.1867638496003566;  // std dev = 0,479, 7.736,000 (wgt'ed) examples reached here.  /* #neg=4.976 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( haswordtitle(I, G) )
%   | | then if ( author(J, H), title(J, I) )
%   | | | then return 0.4437666711764107;  // std dev = 0,698, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19723559774885208;  // std dev = 3,159, 45,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else return -0.011634038403704323;  // std dev = 0,330, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.010375833157134334;  // std dev = 0,325, 772,000 (wgt'ed) examples reached here.  /* #neg=669 #pos=103 */
%   | | else return 0.015273716541983066;  // std dev = 0,323, 287,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=48 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7733484412836309;  // std dev = 0,454, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.19148830274156442;  // std dev = 0,131, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.4744649754400209;  // std dev = 1,333, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.011946192520078672;  // std dev = 4,643, 153,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=27 */
%   | else return 0.15722379904271908;  // std dev = 0,479, 7.766,000 (wgt'ed) examples reached here.  /* #neg=5.006 #pos=2.760 */
%   else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | then if ( author(K, J), venue(K, B) )
%   | | then if ( samebib(K, L), venue(L, A) )
%   | | | then return 0.7880653456829029;  // std dev = 0,126, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1376128725193897;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.09492144384992342;  // std dev = 0,376, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | else return -0.0038017009660393647;  // std dev = 0,327, 1.070,000 (wgt'ed) examples reached here.  /* #neg=919 #pos=151 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13604536740340764;  // std dev = 0,478, 7.891,000 (wgt'ed) examples reached here.  /* #neg=5.044 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6625799369075481;  // std dev = 2,177, 89,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=84 */
%   | | | else return -0.12477107177924823;  // std dev = 1,012, 302,000 (wgt'ed) examples reached here.  /* #neg=301 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.14200889632229427;  // std dev = 3,199, 49,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.05169328464794654;  // std dev = 4,367, 240,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 6.834453867495602E-5;  // std dev = 6,354, 343,000 (wgt'ed) examples reached here.  /* #neg=296 #pos=47 */
%   | | | else return -0.09241633599731545;  // std dev = 1,384, 44,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=2 */
%   | | else return -0.14020074905583974;  // std dev = 0,012, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.10708434619257665;  // std dev = 0,477, 7.989,000 (wgt'ed) examples reached here.  /* #neg=5.142 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return 0.10219570083776018;  // std dev = 2,236, 49,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return -0.006774551339810937;  // std dev = 6,381, 532,000 (wgt'ed) examples reached here.  /* #neg=448 #pos=84 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.044558568306889326;  // std dev = 4,103, 115,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=21 */
%   | | | else return -0.1374613414370703;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.010219320878335174;  // std dev = 6,394, 370,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=47 */
%   | | | else return -0.09167005788356966;  // std dev = 1,390, 57,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=2 */
%   | | else return -0.12563196971759577;  // std dev = 0,017, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordauthor(D, C) )
%   | then if ( haswordtitle(E, C) )
%   | | then if ( author(F, D), title(F, E) )
%   | | | then return 0.35576432141010306;  // std dev = 0,060, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3080849031246374;  // std dev = 0,949, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.3906447092197926;  // std dev = 0,085, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.08496435706636456;  // std dev = 0,477, 7.987,000 (wgt'ed) examples reached here.  /* #neg=5.161 #pos=2.826 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.49936643985959683;  // std dev = 2,376, 90,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=84 */
%   | | | else return -0.11203702493618026;  // std dev = 1,008, 318,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=1 */
%   | | else if ( haswordauthor(K, G) )
%   | | | then return 0.23144751213863796;  // std dev = 2,929, 36,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return -0.053150282047754974;  // std dev = 4,368, 257,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=21 */
%   | else return -0.0071790220707599805;  // std dev = 0,330, 390,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=49 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07392057193265332;  // std dev = 0,478, 7.885,000 (wgt'ed) examples reached here.  /* #neg=5.038 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.14733786808373986;  // std dev = 0,448, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.040210170218770255;  // std dev = 3,278, 60,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.19180421465684389;  // std dev = 1,278, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.12880914166315852;  // std dev = 0,045, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.004607180530220646;  // std dev = 7,558, 520,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=68 */
%   | | | else return -0.031963162651241675;  // std dev = 3,265, 251,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=35 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.018832518062858513;  // std dev = 3,970, 271,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=48 */
%   | | | else return -0.11064597312964342;  // std dev = 0,010, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05249236311195628;  // std dev = 0,476, 8.029,000 (wgt'ed) examples reached here.  /* #neg=5.182 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.020873505415457565;  // std dev = 0,507, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.08797378461582128;  // std dev = 3,161, 48,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.5216451318881411;  // std dev = 0,784, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.10678936380354738;  // std dev = 0,062, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.022091473507735545;  // std dev = 7,938, 703,000 (wgt'ed) examples reached here.  /* #neg=621 #pos=82 */
%   | | | else return 0.02758822344255687;  // std dev = 2,296, 94,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.01199617124751302;  // std dev = 3,704, 228,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=48 */
%   | | | else return -0.10043097794920967;  // std dev = 0,009, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.02906898325927739;  // std dev = 6,155, 188,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=69 */
%   | | | else return -0.07705686357433053;  // std dev = 2,229, 34,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else return 0.5499837719105929;  // std dev = 0,216, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.04393056483678703;  // std dev = 0,477, 7.745,000 (wgt'ed) examples reached here.  /* #neg=4.985 #pos=2.760 */
%   else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, B) )
%   | | then if ( samebib(I, J), venue(J, A) )
%   | | | then return 0.7594001243689696;  // std dev = 2,551, 91,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=84 */
%   | | | else return -0.13572686791594202;  // std dev = 0,913, 534,000 (wgt'ed) examples reached here.  /* #neg=533 #pos=1 */
%   | | else return -0.026667631696177006;  // std dev = 0,217, 239,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=36 */
%   | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return -0.018993471134857293;  // std dev = 0,238, 279,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=49 */
%   | | else return -0.09034619396882318;  // std dev = 0,004, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, B), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.029524565531102134;  // std dev = 0,475, 7.415,000 (wgt'ed) examples reached here.  /* #neg=4.806 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.6401014299807162;  // std dev = 2,774, 139,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=131 */
%   | | | else return -0.1238929177057783;  // std dev = 1,804, 561,000 (wgt'ed) examples reached here.  /* #neg=558 #pos=3 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.20527960788514768;  // std dev = 4,881, 231,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=27 */
%   | | | else return -0.06433777177736001;  // std dev = 1,325, 51,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.35174833839646935;  // std dev = 4,933, 114,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=78 */
%   | | | else return 0.04258869830930093;  // std dev = 4,000, 198,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=49 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.6221756330314844;  // std dev = 0,214, 71,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=68 */
%   | else return -0.012017906583241892;  // std dev = 0,225, 289,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=49 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,true,true;samebib(J, K), venue(K, B).;false;false
0;false,true,false;haswordtitle(I, L), haswordauthor(M, L).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;title(J, I), venue(J, A).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
0;true,true,false;haswordtitle(G, D).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,true;author(J, H), title(J, I).;false;false
1;true,true;haswordvenue(B, D).;false;true
1;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;false,true;haswordtitle(I, G).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
1;true,true,false;author(F, E), venue(F, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,true;samebib(K, L), venue(L, A).;false;false
2;true,true;author(F, E), venue(F, A).;true;true
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true;author(K, J), venue(K, B).;true;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false;haswordvenue(A, I), haswordauthor(J, I).;true;false
2;true,true,false;haswordauthor(H, C).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;haswordauthor(H, D).;false;false
3;false,true;title(F, E), venue(F, A).;true;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,false,true;title(K, J), venue(K, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
4;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,true,true;haswordvenue(A, F).;false;false
4;false,false,true;title(K, J), venue(K, B).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,true;samebib(I, J), venue(J, B).;false;false
5;false,true,false;haswordauthor(K, G).;false;false
5;true,true;haswordtitle(E, C).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;false,true;title(I, H), venue(I, A).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(H, E), venue(H, A).;false;false
6;false,true;haswordtitle(F, D).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true,true;author(G, E), venue(G, A).;false;false
6;false,false,true;title(K, J), venue(K, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(H, E), venue(H, A).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true,true;samebib(I, J), venue(J, A).;false;false
8;true,true;haswordtitle(F, C).;true;false
8;true,true,true;haswordtitle(F, D).;false;false
8;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false;haswordvenue(A, G), haswordtitle(H, G).;true;true
8;false,true;title(I, H), venue(I, B).;true;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;true
9;true,false;title(G, D), venue(G, A).;true;true
9;true;venue(E, B), title(E, D).;true;true
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.4803711573217353;  // std dev = 0,485, 90,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048766;  // std dev = 8,54e-09, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.4720467782564953;  // std dev = 4,214, 82,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.1254446385283914;  // std dev = 0,000, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.29994032054537123;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.4089204389482983;  // std dev = 0,454, 79,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360622;  // std dev = 6,83e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.37713347402062847;  // std dev = 3,582, 73,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783617;  // std dev = 6,18e-09, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1743645279616525;  // std dev = 4,332, 86,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.09310771439906229;  // std dev = 0,034, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09788580720120522;  // std dev = 0,481, 90,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0851523046681628;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08515230466816281;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09319753025096479;  // std dev = 4,445, 87,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07874889260022104;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07576234797171347;  // std dev = 4,420, 86,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07874889260022096;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07322205494307894;  // std dev = 3,65e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.014010763195474545;  // std dev = 0,483, 93,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06840582026926544;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.068479916187324;  // std dev = 0,005, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.40282864520875467;  // std dev = 1,03e-07, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06417317240902616;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.4218538085330525;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06870863920990848;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5971713547912448;  // std dev = 1,03e-07, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.06416872272411511;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978388
   AUC PR    = 0.863056
   CLL	      = -0.204617
   Precision = 0.799401 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.809091


Total learning time: 1.019 seconds
Total inference time: 2.912 seconds
AUC ROC: 0.978388


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.214174
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.542 seconds
Parameter learned model CLL: -0.214174


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)'}, {'false,true,false': [8.54e-09, 82, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true': [0.485, 34, 56], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'true,true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,true': [0.0, 92, 0], 'true,true,true': [4.214, 26, 56], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true,true,true': 'genre(B, F)', 'false,true': 'genre(B, H)', 'true': 'movie(D, B)', 'false': 'movie(G, A)', 'false,true,true': 'genre(A, I)'}, {'false,true,false': [6.83e-08, 83, 0], 'false,true,true,false': [2.63e-09, 3, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 4, 0], 'true,true,false': [0.454, 23, 56]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [6.18e-09, 84, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [3.582, 17, 56], 'false,true,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'movie(E, A)'}, {'false,true,false': [0.0, 0, 0], 'true': [4.332, 30, 56], 'false,true,true': [0.034, 83, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [0.0, 67, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [0.481, 34, 56], 'false,true,true,false': [2.63e-09, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [4.445, 31, 56], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 73, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [3.65e-08, 83, 0], 'true': [4.42, 30, 56], 'false,true,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, A)', 'false,true': 'genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'false,true,false': [0.005, 65, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true': [0.483, 37, 56], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 6, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(A, F)', 'true': 'genre(B, D)', 'true,false,true': 'movie(C, B)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)'}, {'true,true,false,true': [0.0, 0, 0], 'true,true,true': [1.03e-07, 0, 56], 'true,false,false,true': [1.03e-07, 24, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false,false': [0.0, 60, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [2.63e-09, 7, 0], 'true,false,true,false': [0.0, 5, 0]}]]
[{'': [0.2350617283950614, 7.229359230117299e-17], 'true': [0.2350617283950614, nan], 'false': [7.229359230117299e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 7.311224796312007e-17]}, {'': [0.21653777513384956, -1.68946982008176e-17], 'true': [0.21653777513384956, nan], 'false': [-1.68946982008176e-17, nan], 'true,true': [0.21653777513384956, nan]}, {'': [0.21948033096240535, 5.680210823663592e-17], 'false,true,true': [nan, 2.3129646346357427e-18], 'true,true': [0.0, 0.2063771831437286], 'true,true,true': [nan, 0.0], 'true': [0.21948033096240535, nan], 'false': [5.680210823663592e-17, nan], 'false,true': [2.3129646346357427e-18, 5.617996028223683e-17]}, {'': [0.17577763605598934, 3.317907889684376e-17], 'false': [3.317907889684376e-17, nan], 'false,true,true': [nan, -1.1564823173178713e-18], 'false,true': [-1.1564823173178713e-18, 3.700743415417188e-17]}, {'': [0.21821478230024596, 1.4220504171761095e-05], 'false': [1.4220504171761095e-05, nan], 'false,true': [1.4220504171761095e-05, nan]}, {'': [0.2309293418027953, -1.5860328923216522e-18], 'false': [-1.5860328923216522e-18, nan], 'false,true,true': [nan, 2.3129646346357427e-18], 'false,true': [2.3129646346357427e-18, -3.3140985809706165e-18]}, {'': [0.22712036518367837, -7.604267291953127e-19], 'false,true,false': [nan, -7.604267291953127e-19], 'false': [-7.604267291953127e-19, nan], 'false,true': [nan, -7.604267291953127e-19]}, {'': [0.22714981070849136, 1.0283853012054867e-06], 'false': [1.0283853012054867e-06, nan], 'false,true': [-1.1564823173178713e-18, 1.6051417223496238e-17]}, {'': [0.23371289435888717, 3.221043742128898e-07], 'true': [0.23371289435888717, nan], 'false': [3.221043742128898e-07, nan], 'false,true,true': [nan, -1.734723475976807e-18], 'false,true': [-1.734723475976807e-18, 3.513731246825772e-07]}, {'': [0.11852317395613168, nan], 'true,true': [1.9032394707859825e-16, 9.912705577010326e-19], 'true,false': [0.025451328697198388, 0.05797791954907919], 'true': [0.021539821990944664, 0.05563171281229225], 'true,false,true': [0.0, -6.938893903907229e-19], 'true,true,false': [nan, 9.912705577010326e-19], 'true,false,false': [4.440892098500626e-16, -3.7007434154171884e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(A, E).;true;true
2;false;genre(B, H).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(B, F).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;true;movie(C, B).;true;true
9;false;genre(A, F).;true;true
9;false,true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 4,47e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 6,99e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839144;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return -0.12544463852839144;  // std dev = 0,000, 84,000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.1123163781936064;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( genre(B, E) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else return -0.09269127618926098;  // std dev = 1,05e-08, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08518475138839679;  // std dev = 1,67e-08, 64,000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( female(A) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.2310410287992905;  // std dev = 0,547, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333702;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( female(B) )
%   | | | then return -0.06654717398540104;  // std dev = 0,008, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06775561932320212;  // std dev = 0,009, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13400703000801087;  // std dev = 2,79e-08, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.10661124288013364;  // std dev = 0,808, 30,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, F) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return -0.055413049889335375;  // std dev = 6,93e-05, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then return -0.06419605088652384;  // std dev = 1,82e-05, 92,000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078071
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.154 seconds
Total inference time: 2.436 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064367
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.522 seconds
Refined model CLL: -0.064367


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078071
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 6.237 seconds
Total inference time: 2.436 seconds
AUC ROC: 1.0
Total revision time: 6.237
Best scored revision CLL: -0.064367


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 01:25:13
{'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'parameter': {'Precision': [0.799401, 0.5], 'Recall': 0.819018, 'F1': 0.809091, 'AUC PR': 0.863056, 'Learning time': 1.019, 'Inference time': 2.912, 'CLL': -0.204617, 'AUC ROC': 0.978388}, 'AUC PR': 1.0, 'Learning time': 6.237, 'Inference time': 2.436, 'CLL': -0.078071, 'AUC ROC': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,true,true;samebib(J, K), venue(K, B).;false;false
0;false,true,false;haswordtitle(I, L), haswordauthor(M, L).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;title(J, I), venue(J, A).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
0;true,true,false;haswordtitle(G, D).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,true;author(J, H), title(J, I).;false;false
1;true,true;haswordvenue(B, D).;false;true
1;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;false,true;haswordtitle(I, G).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
1;true,true,false;author(F, E), venue(F, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,true;samebib(K, L), venue(L, A).;false;false
2;true,true;author(F, E), venue(F, A).;true;true
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true;author(K, J), venue(K, B).;true;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false;haswordvenue(A, I), haswordauthor(J, I).;true;false
2;true,true,false;haswordauthor(H, C).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;haswordauthor(H, D).;false;false
3;false,true;title(F, E), venue(F, A).;true;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,false,true;title(K, J), venue(K, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
4;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,true,true;haswordvenue(A, F).;false;false
4;false,false,true;title(K, J), venue(K, B).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,true;samebib(I, J), venue(J, B).;false;false
5;false,true,false;haswordauthor(K, G).;false;false
5;true,true;haswordtitle(E, C).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;false,true;title(I, H), venue(I, A).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(H, E), venue(H, A).;false;false
6;false,true;haswordtitle(F, D).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true,true;author(G, E), venue(G, A).;false;false
6;false,false,true;title(K, J), venue(K, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(H, E), venue(H, A).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true,true;samebib(I, J), venue(J, A).;false;false
8;true,true;haswordtitle(F, C).;true;false
8;true,true,true;haswordtitle(F, D).;false;false
8;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false;haswordvenue(A, G), haswordtitle(H, G).;true;true
8;false,true;title(I, H), venue(I, B).;true;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;true
9;true,false;title(G, D), venue(G, A).;true;true
9;true;venue(E, B), title(E, D).;true;true
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.4686752508889868;  // std dev = 0,488, 95,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.40158599518434207;  // std dev = 4,753, 95,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.12544463852839152;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.4801801760596701;  // std dev = 0,425, 76,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, A) )
%   | then if ( genre(B, G) )
%   | | then if ( genre(A, H) )
%   | | | then return -0.12725564760276237;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360626;  // std dev = 4,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2966456180953312;  // std dev = 4,245, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783615;  // std dev = 6,59e-09, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2061428508283965;  // std dev = 4,381, 87,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.09293091869410765;  // std dev = 0,021, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09579773188197394;  // std dev = 0,483, 96,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08516607830943614;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08516607830943627;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13358986858790214;  // std dev = 4,347, 87,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08525558438595639;  // std dev = 0,022, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07876072025633896;  // std dev = 2,11e-08, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.056036233377595224;  // std dev = 4,643, 93,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07279273355877729;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07323231574619117;  // std dev = 0,000, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.10129386118837407;  // std dev = 0,462, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.068414802015849;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.06839919708879383;  // std dev = 0,000653, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.391753458509282;  // std dev = 1,03e-07, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.09081868265399994;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06418109723046038;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.48994320901649063;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06381929628445916;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.608246541490718;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.0641820344981531;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.977686
   AUC PR    = 0.861626
   CLL	      = -0.212221
   Precision = 0.800604 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.80916


Total learning time: 1.262 seconds
Total inference time: 2.507 seconds
AUC ROC: 0.977686


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.207932
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.664 seconds
Parameter learned model CLL: -0.207932


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)'}, {'false,true,false': [8.12e-09, 63, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true': [0.488, 37, 58], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'true,true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,true': [0.0, 73, 0], 'true,true,true': [4.753, 37, 58], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'false,true': 'genre(B, G)', 'true': 'movie(D, B)', 'false': 'movie(F, A)', 'false,true,true': 'genre(A, H)'}, {'false,true,false': [4.83e-08, 63, 0], 'false,true,true,true': [2.63e-09, 3, 0], 'true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 8, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.425, 18, 58]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [6.59e-09, 77, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.245, 27, 58], 'false,true,true,false': [0.0, 5, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'movie(E, A)'}, {'false,true,false': [0.0, 0, 0], 'true': [4.381, 29, 58], 'false,true,true': [0.021, 88, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [0.0, 75, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [0.483, 38, 58], 'false,true,true,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [4.347, 29, 58], 'false,true,true': [0.022, 4, 0], 'false,true,false,false': [2.11e-08, 89, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [0.0, 80, 0], 'true': [4.643, 35, 58], 'false,true,true': [0.0, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, A)', 'false,true': 'genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'false,true,false': [0.000653, 74, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true': [0.462, 27, 58], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(A, F)', 'true': 'genre(B, D)', 'true,false,true': 'movie(C, B)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)'}, {'true,true,false,true': [0.0, 1, 0], 'true,true,true': [1.03e-07, 0, 58], 'true,false,false,true': [0.0, 33, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false,false': [0.0, 72, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 6, 0], 'true,false,true,false': [0.0, 6, 0]}]]
[{'': [0.23778393351800514, 6.857259857978908e-17], 'true': [0.23778393351800514, nan], 'false': [6.857259857978908e-17, nan], 'false,true,true': [nan, -2.7755575615628915e-18], 'false,true': [-2.7755575615628915e-18, 6.344131569286608e-17]}, {'': [0.23778393351800273, -3.0417069167812506e-17], 'true': [0.23778393351800273, nan], 'false': [-3.0417069167812506e-17, nan], 'true,true': [0.23778393351800273, nan]}, {'': [0.18074792243767462, 8.681102467558336e-06], 'false,true,true': [2.3129646346357427e-18, -1.734723475976807e-18], 'true,true': [nan, 0.18074792243767462], 'true': [0.18074792243767462, nan], 'false': [8.681102467558336e-06, nan], 'false,true': [4.4267458607472054e-05, 3.700743415417188e-17]}, {'': [0.2120043929979173, 4.06179155350667e-17], 'false': [4.06179155350667e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 4.469729060179202e-17]}, {'': [0.22060956953324873, 4.996282121238785e-06], 'false': [4.996282121238785e-06, nan], 'false,true': [4.996282121238785e-06, nan]}, {'': [0.23374593841396482, -3.794433122136611e-17], 'false': [-3.794433122136611e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -3.700743415417188e-17]}, {'': [0.21721375975850307, 7.179299203560304e-06], 'false,true,false': [nan, 4.989766402809692e-18], 'false': [7.179299203560304e-06, nan], 'false,true': [0.0001265497801865769, 4.989766402809692e-18]}, {'': [0.23180603256381418, 1.4296498837902507e-08], 'false': [1.4296498837902507e-08, nan], 'false,true': [-1.982541115402065e-18, -2.7755575615628915e-18]}, {'': [0.21324663011206674, 5.617736253521758e-09], 'true': [0.21324663011206674, nan], 'false': [5.617736253521758e-09, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 5.763158707018469e-09]}, {'': [0.1222704190888567, nan], 'true,true': [1.8376105235175005e-16, 8.688501516690131e-05], 'true,false': [0.022234480285966047, 0.06379235393553669], 'true': [0.020320004014539296, 0.061910166973484226], 'true,false,true': [0.0, -5.782411586589357e-19], 'true,true,false': [0.0, -5.782411586589357e-19], 'true,false,false': [-8.612639221334548e-16, -7.709882115452476e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(B, G).;true;true
2;false,true;genre(A, H).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(B, F).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;false,false;movie(C, B).;true;true
9;true,false;genre(A, E).;true;true
9;true;movie(C, B).;true;true
9;false;genre(A, F).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 4,94e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 7,60e-08, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1254446385283914;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else return -0.1254446385283915;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1123163781936064;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.11231637819360632;  // std dev = 2,79e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926093;  // std dev = 2,63e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694892;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2551722425694892;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.25009550289892535;  // std dev = 0,571, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839685;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.08518475138839679;  // std dev = 1,05e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.08518475138839686;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07691562989648376;  // std dev = 0,010, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07330369658213726;  // std dev = 0,000209, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.06284653597084765;  // std dev = 8,95e-05, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.0684233144734369;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06854204081101466;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06701705712139222;  // std dev = 0,012, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.15274385809367078;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(B, D) )
%   | then return -0.06842697784420271;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06842697784420275;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.10815500347452803;  // std dev = 0,067, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else return 0.11513094714229326;  // std dev = 0,058, 42,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(B) )
%   | | | then return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06227940458057132;  // std dev = 0,011, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419121449401077;  // std dev = 7,11e-06, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.06421225688188521;  // std dev = 0,000331, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081228
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.512 seconds
Total inference time: 2.747 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065784
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.526 seconds
Refined model CLL: -0.065784


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081228
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 6.964 seconds
Total inference time: 2.747 seconds
AUC ROC: 1.0
Total revision time: 6.964
Best scored revision CLL: -0.065784


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 01:25:26
{'Precision': [0.736364, 0.5], 'Recall': 1.0, 'F1': 0.848168, 'parameter': {'Precision': [0.800604, 0.5], 'Recall': 0.817901, 'F1': 0.80916, 'AUC PR': 0.861626, 'Learning time': 1.262, 'Inference time': 2.507, 'CLL': -0.212221, 'AUC ROC': 0.977686}, 'AUC PR': 1.0, 'Learning time': 6.964, 'Inference time': 2.747, 'CLL': -0.081228, 'AUC ROC': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,true,true;samebib(J, K), venue(K, B).;false;false
0;false,true,false;haswordtitle(I, L), haswordauthor(M, L).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;title(J, I), venue(J, A).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
0;true,true,false;haswordtitle(G, D).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,true;author(J, H), title(J, I).;false;false
1;true,true;haswordvenue(B, D).;false;true
1;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;false,true;haswordtitle(I, G).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
1;true,true,false;author(F, E), venue(F, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,true;samebib(K, L), venue(L, A).;false;false
2;true,true;author(F, E), venue(F, A).;true;true
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true;author(K, J), venue(K, B).;true;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false;haswordvenue(A, I), haswordauthor(J, I).;true;false
2;true,true,false;haswordauthor(H, C).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;haswordauthor(H, D).;false;false
3;false,true;title(F, E), venue(F, A).;true;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,false,true;title(K, J), venue(K, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
4;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,true,true;haswordvenue(A, F).;false;false
4;false,false,true;title(K, J), venue(K, B).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,true;samebib(I, J), venue(J, B).;false;false
5;false,true,false;haswordauthor(K, G).;false;false
5;true,true;haswordtitle(E, C).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;false,true;title(I, H), venue(I, A).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(H, E), venue(H, A).;false;false
6;false,true;haswordtitle(F, D).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true,true;author(G, E), venue(G, A).;false;false
6;false,false,true;title(K, J), venue(K, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(H, E), venue(H, A).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true,true;samebib(I, J), venue(J, A).;false;false
8;true,true;haswordtitle(F, C).;true;false
8;true,true,true;haswordtitle(F, D).;false;false
8;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false;haswordvenue(A, G), haswordtitle(H, G).;true;true
8;false,true;title(I, H), venue(I, B).;true;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;true
9;true,false;title(G, D), venue(G, A).;true;true
9;true;venue(E, B), title(E, D).;true;true
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.5673122817130546;  // std dev = 0,454, 251,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.14185106490048835;  // std dev = 0,000, 239,000 (wgt'ed) examples reached here.  /* #neg=239 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.46421112222350835;  // std dev = 7,429, 258,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.12544463852839197;  // std dev = 0,000, 287,000 (wgt'ed) examples reached here.  /* #neg=287 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.31680874122191566;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.3168087412219157;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.44713975663216;  // std dev = 0,425, 233,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return -0.1123163781936063;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.11231637819360617;  // std dev = 3,16e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.1123163781936068;  // std dev = 0,000, 238,000 (wgt'ed) examples reached here.  /* #neg=238 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3164567215945636;  // std dev = 6,739, 245,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.10159632948783626;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.10159632948783652;  // std dev = 0,000, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19855735731548352;  // std dev = 7,198, 261,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.09269127618926044;  // std dev = 1,37e-07, 276,000 (wgt'ed) examples reached here.  /* #neg=276 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1692172497120497;  // std dev = 0,440, 252,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.08518475138839678;  // std dev = 5,67e-09, 224,000 (wgt'ed) examples reached here.  /* #neg=224 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11115142534571362;  // std dev = 7,197, 258,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109146;  // std dev = 6,32e-08, 229,000 (wgt'ed) examples reached here.  /* #neg=229 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08203581228930172;  // std dev = 7,202, 260,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return -0.07324622576333671;  // std dev = 1,25e-07, 235,000 (wgt'ed) examples reached here.  /* #neg=235 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.031565062321040394;  // std dev = 0,458, 273,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420274;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 249,000 (wgt'ed) examples reached here.  /* #neg=249 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.32683119021380924;  // std dev = 1,784, 134,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=129 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.4560383828651892;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.16709687254409927;  // std dev = 5,068, 103,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=49 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 175,000 (wgt'ed) examples reached here.  /* #neg=175 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993692
   AUC PR    = 0.961008
   CLL	      = -0.292917
   Precision = 0.06871 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.128585


Total learning time: 1.709 seconds
Total inference time: 2.444 seconds
AUC ROC: 0.993692


Results scoring model
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.241949
   Precision = 0.211401 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.34902


Total scoring time: 1.666 seconds
Parameter learned model CLL: -0.241949


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)'}, {'false,true,false': [0.0, 239, 0], 'false,true,true,true': [0.0, 6, 0], 'true,true': [0.454, 73, 178], 'false,false': [0.0, 0, 0], 'false,true,true,false': [4.47e-08, 42, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'true,true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,true': [0.0, 287, 0], 'true,true,true': [7.429, 80, 178], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true,true,true': 'genre(B, F)', 'false,true': 'genre(B, H)', 'true': 'movie(D, B)', 'false': 'movie(G, A)', 'false,true,true': 'genre(A, I)'}, {'false,true,false': [0.0, 238, 0], 'false,true,true,false': [3.16e-08, 49, 0], 'true,true,true,true': [0.0, 4, 0], 'false,true,true,true': [5.27e-09, 11, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 14, 0], 'true,true,false': [0.425, 55, 178]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [0.0, 196, 0], 'false,true,true,true': [0.0, 7, 0], 'true': [6.739, 67, 178], 'false,true,true,false': [0.0, 40, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'movie(E, A)'}, {'false,true,false': [0.0, 0, 0], 'true': [7.198, 83, 178], 'false,true,true': [1.37e-07, 276, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [5.67e-09, 224, 0], 'false,true,true,true': [2.63e-09, 7, 0], 'true': [0.44, 74, 178], 'false,true,true,false': [1.67e-08, 42, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [7.197, 80, 178], 'false,true,true': [0.0, 40, 0], 'false,true,false,false': [6.32e-08, 229, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [1.25e-07, 235, 0], 'true': [7.202, 82, 178], 'false,true,true': [0.0, 39, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, A)', 'false,true': 'genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'false,true,false': [0.0, 249, 0], 'false,true,true,true': [0.0, 4, 0], 'true,true': [0.458, 95, 178], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 35, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(A, F)', 'true': 'genre(B, D)', 'true,false,true': 'movie(C, B)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)'}, {'true,true,false,true': [0.0, 2, 0], 'true,true,true': [1.784, 5, 129], 'true,false,false,true': [5.068, 54, 49], 'true,false,true,true': [1.49e-08, 9, 0], 'true,false,false,false': [0.0, 175, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 40, 0], 'true,false,true,false': [0.0, 35, 0]}]]
[{'': [0.20625069443342725, -3.0946983264812726e-18], 'true': [0.20625069443342725, nan], 'false': [-3.0946983264812726e-18, nan], 'false,true,true': [-6.938893903907228e-18, 4.7580986769649563e-17], 'false,true': [5.3198186596622086e-17, -1.7094647408454293e-16]}, {'': [0.21392945135508365, -8.046215648851309e-17], 'true': [0.21392945135508365, nan], 'false': [-8.046215648851309e-17, nan], 'true,true': [0.21392945135508365, nan]}, {'': [0.20625069443342248, -8.643347037350212e-17], 'false,true,true': [2.523234146875356e-18, 2.0391851472706958e-17], 'true,true': [-6.167905692361981e-17, 0.18033119048057736], 'true,true,true': [0.0, -3.172065784643304e-17], 'true': [0.20625069443342248, nan], 'false': [-8.643347037350212e-17, nan], 'false,true': [3.700743415417188e-17, -8.396644724055806e-17]}, {'': [0.1853712592223111, -7.310110450206792e-17], 'false': [-7.310110450206792e-17, nan], 'false,true,true': [0.0, -2.0816681711721685e-17], 'false,true': [-4.724353296277262e-18, -9.516197353929913e-17]}, {'': [0.19850650134597692, 6.75787928032704e-17], 'false': [6.75787928032704e-17, nan], 'false,true': [6.75787928032704e-17, nan]}, {'': [0.19364696241523285, 3.416070845000482e-17], 'false': [3.416070845000482e-17, nan], 'false,true,true': [9.912705577010326e-19, 6.6084703846735505e-18], 'false,true': [3.398641912117826e-18, 3.172065784643304e-17]}, {'': [0.20074220586547784, 9.079890907715035e-18], 'false,true,false': [nan, 1.7453287723364907e-17], 'false': [9.079890907715035e-18, nan], 'false,true': [-4.163336342344337e-18, 1.7453287723364907e-17]}, {'': [0.19947676553721005, 4.3760615569166756e-17], 'false': [4.3760615569166756e-17, nan], 'false,true': [-7.11681426041767e-18, 6.614094614788166e-17]}, {'': [0.2098060681216122, -4.70302809042601e-17], 'true': [0.2098060681216122, nan], 'false': [-4.70302809042601e-17, nan], 'false,true,true': [0.0, -2.3790493384824783e-18], 'false,true': [0.0, -5.35047240783208e-18]}, {'': [0.09817761546878316, nan], 'true,true': [0.02375522358344479, -1.982541115402065e-18], 'true,false': [0.024982577284969998, 0.09487741093644456], 'true': [0.04586643926006895, 0.08553490533218612], 'true,false,true': [2.4671622769447922e-17, -1.5860328923216522e-18], 'true,true,false': [0.0, -2.0816681711721684e-18], 'true,false,false': [0.24941087755679153, -4.440892098500626e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
0;false,true;genre(B, G).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(A, E).;true;true
2;false;genre(B, H).;true;true
2;true,true;genre(B, F).;true;true
2;false,true;genre(A, I).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
3;false,true;genre(B, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
5;false,true;genre(B, F).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;false,true;genre(A, G).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;false,false;movie(C, B).;true;true
9;true,false;genre(A, E).;true;true
9;true;movie(C, B).;true;true
9;false;genre(A, F).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 6,14e-08, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14185106490048768;  // std dev = 4,59e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.14185106490048813;  // std dev = 0,000, 261,000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else return -0.12544463852839197;  // std dev = 0,000, 283,000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.5553664367462833;  // std dev = 4,41e-08, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( genre(B, F) )
%   | then if ( genre(A, G) )
%   | | then return -0.11231637819360632;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360626;  // std dev = 1,29e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.11231637819360629;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.11231637819360667;  // std dev = 0,000, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783626;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.10159632948783655;  // std dev = 0,000, 211,000 (wgt'ed) examples reached here.  /* #neg=211 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015033;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015033;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 76,000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926092;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return -0.09269127618926087;  // std dev = 0,000, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.09269127618926094;  // std dev = 0,000, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then return -0.08518475138839679;  // std dev = 1,32e-09, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return -0.08518475138839686;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839678;  // std dev = 0,000, 41,000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.08518475138839678;  // std dev = 1,49e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.08518475138839678;  // std dev = 2,79e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253576;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253576;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109176;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109151;  // std dev = 6,41e-08, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | | else return -0.07877675473109162;  // std dev = 2,89e-08, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.07877675473109168;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333703;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( actor(A) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1527438580936715;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420276;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( genre(B, D) )
%   | then if ( genre(A, E) )
%   | | then return -0.0684269778442027;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420268;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06842697784420265;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420261;  // std dev = 1,86e-09, 120,000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else return -0.06842697784420261;  // std dev = 1,86e-09, 119,000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.07484318819008945;  // std dev = 0,742, 67,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=47 */
%   | | | else return 0.12261629034766394;  // std dev = 0,430, 87,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=82 */
%   | | else return -0.06419184008202615;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(D, B) )
%   | | then return -0.06419184008202619;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202625;  // std dev = 1,83e-08, 232,000 (wgt'ed) examples reached here.  /* #neg=232 */
%   | | | else return 0.06193471361163382;  // std dev = 0,837, 77,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=49 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064102
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.856 seconds
Total inference time: 2.852 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067292
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.655 seconds
Refined model CLL: -0.067292


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064102
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 8.886 seconds
Total inference time: 2.852 seconds
AUC ROC: 1.0
Total revision time: 8.886
Best scored revision CLL: -0.067292


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:25:41
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [0.06871, 0.5], 'Recall': 1.0, 'F1': 0.128585, 'AUC PR': 0.961008, 'Learning time': 1.709, 'Inference time': 2.444, 'CLL': -0.292917, 'AUC ROC': 0.993692}, 'AUC PR': 1.0, 'Learning time': 8.886, 'Inference time': 2.852, 'CLL': -0.064102, 'AUC ROC': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,true,true;samebib(J, K), venue(K, B).;false;false
0;false,true,false;haswordtitle(I, L), haswordauthor(M, L).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;title(J, I), venue(J, A).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
0;true,true,false;haswordtitle(G, D).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,true;author(J, H), title(J, I).;false;false
1;true,true;haswordvenue(B, D).;false;true
1;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;false,true;haswordtitle(I, G).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
1;true,true,false;author(F, E), venue(F, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,true;samebib(K, L), venue(L, A).;false;false
2;true,true;author(F, E), venue(F, A).;true;true
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true;author(K, J), venue(K, B).;true;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false;haswordvenue(A, I), haswordauthor(J, I).;true;false
2;true,true,false;haswordauthor(H, C).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;haswordauthor(H, D).;false;false
3;false,true;title(F, E), venue(F, A).;true;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,false,true;title(K, J), venue(K, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
4;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,true,true;haswordvenue(A, F).;false;false
4;false,false,true;title(K, J), venue(K, B).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,true;samebib(I, J), venue(J, B).;false;false
5;false,true,false;haswordauthor(K, G).;false;false
5;true,true;haswordtitle(E, C).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;false,true;title(I, H), venue(I, A).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(H, E), venue(H, A).;false;false
6;false,true;haswordtitle(F, D).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true,true;author(G, E), venue(G, A).;false;false
6;false,false,true;title(K, J), venue(K, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(H, E), venue(H, A).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true,true;samebib(I, J), venue(J, A).;false;false
8;true,true;haswordtitle(F, C).;true;false
8;true,true,true;haswordtitle(F, D).;false;false
8;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false;haswordvenue(A, G), haswordtitle(H, G).;true;true
8;false,true;title(I, H), venue(I, B).;true;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;true
9;true,false;title(G, D), venue(G, A).;true;true
9;true;venue(E, B), title(E, D).;true;true
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.4502541982574076;  // std dev = 0,491, 76,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.4278908836890929;  // std dev = 4,059, 71,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.12566938409513256;  // std dev = 0,002, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.2845800927679481;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3771846131144048;  // std dev = 0,473, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return -0.12723068908074062;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11229397269613894;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11229397269613896;  // std dev = 0,000, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24470275711153638;  // std dev = 4,164, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10157786248482707;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10157786248482713;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23092832021248463;  // std dev = 3,912, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.09267581369537022;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08763939009822144;  // std dev = 0,488, 80,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08517162835398327;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0851716283539833;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18202034694605915;  // std dev = 3,732, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07876548609975782;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07876548609975785;  // std dev = 1,49e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10691888933934292;  // std dev = 3,909, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07671493190626123;  // std dev = 0,023, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07323645018563295;  // std dev = 2,11e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.12358898189590366;  // std dev = 0,451, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06841842103566817;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06841065343531755;  // std dev = 0,000308, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3938569168990844;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.09103551607780612;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06418429034946943;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(A, F) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.4425951552605061;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0639761381191043;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.6061430831009157;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.06418475690937908;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978805
   AUC PR    = 0.865091
   CLL	      = -0.207955
   Precision = 0.80814 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.816446


Total learning time: 1.229 seconds
Total inference time: 2.94 seconds
AUC ROC: 0.978805


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.221298
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.48 seconds
Parameter learned model CLL: -0.221298


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)'}, {'false,true,false': [8.12e-09, 61, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true': [0.491, 31, 45], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'true,true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,true': [0.002, 73, 0], 'true,true,true': [4.059, 26, 45], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true,true,true': 'genre(B, F)', 'false,true': 'genre(B, H)', 'true': 'movie(D, B)', 'false': 'movie(G, A)', 'false,true,true': 'genre(A, I)'}, {'false,true,false': [0.0, 73, 0], 'false,true,true,false': [0.0, 8, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 3, 0], 'true,true,false': [0.473, 23, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [0.0, 61, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.164, 29, 45], 'false,true,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'movie(E, A)'}, {'false,true,false': [0.0, 0, 0], 'true': [3.912, 24, 45], 'false,true,true': [0.0, 70, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [0.0, 44, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [0.488, 35, 45], 'false,true,true,false': [1.86e-09, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [3.732, 21, 45], 'false,true,true': [0.0, 5, 0], 'false,true,false,false': [1.49e-08, 55, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [2.11e-08, 56, 0], 'true': [3.909, 24, 45], 'false,true,true': [0.023, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, A)', 'false,true': 'genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'false,true,false': [0.000308, 57, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true': [0.451, 20, 45], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(A, F)', 'true': 'genre(B, D)', 'true,false,true': 'movie(C, B)', 'true,true,false': 'genre(A, E)', 'true,false,false': 'movie(C, B)'}, {'true,true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 45], 'true,false,false,true': [0.0, 18, 0], 'true,false,true,true': [0.0, 4, 0], 'true,false,false,false': [0.0, 58, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [1.86e-09, 5, 0], 'true,false,true,false': [0.0, 5, 0]}]]
[{'': [0.24151662049861528, 6.832141690000964e-17], 'true': [0.24151662049861528, nan], 'false': [6.832141690000964e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 6.188128333976282e-17]}, {'': [0.23209680618924702, 3.6367610233943906e-06], 'true': [0.23209680618924702, nan], 'false': [3.6367610233943906e-06, nan], 'true,true': [0.23209680618924702, nan]}, {'': [0.23209680618924883, 2.6876182636027776e-06], 'false,true,true': [0.0, 0.0], 'true,true': [-9.25185853854297e-18, 0.22383217993079643], 'true,true,true': [nan, -9.25185853854297e-18], 'true': [0.23209680618924883, nan], 'false': [2.6876182636027776e-06, nan], 'false,true': [2.2035110751013793e-05, -1.2166827667125003e-17]}, {'': [0.23430883056369, -2.7755575615628914e-17], 'false': [-2.7755575615628914e-17, nan], 'false,true,true': [nan, -2.3129646346357427e-18], 'false,true': [-2.3129646346357427e-18, -2.1840452943445702e-17]}, {'': [0.2218336870316268, -1.9032394707859827e-17], 'false': [-1.9032394707859827e-17, nan], 'false,true': [-1.9032394707859827e-17, nan]}, {'': [0.23840323145824543, -3.543264972207946e-18], 'false': [-3.543264972207946e-18, nan], 'false,true,true': [nan, 1.1564823173178713e-18], 'false,true': [1.1564823173178713e-18, -2.523234146875356e-18]}, {'': [0.21107905055448795, 8.326672684688674e-18], 'false,true,false': [nan, 4.037174635000569e-18], 'false': [8.326672684688674e-18, nan], 'false,true': [0.0, 4.037174635000569e-18]}, {'': [0.22142050421796364, 9.261602160573876e-06], 'false': [9.261602160573876e-06, nan], 'false,true': [7.259901048447101e-05, 7.93016446160826e-18]}, {'': [0.20372498101495914, 1.4192444864443727e-09], 'true': [0.20372498101495914, nan], 'false': [1.4192444864443727e-09, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 1.6592294244208405e-09]}, {'': [0.1078178543796307, nan], 'true,true': [-1.973729821555834e-17, 0.00010013726709917914], 'true,false': [0.03539564447928917, 0.05308906782042564], 'true': [0.022218157769212675, 0.051364916741424106], 'true,false,true': [0.0, 0.0], 'true,true,false': [0.0, 6.938893903907229e-19], 'true,false,false': [-4.9343245538895844e-17, -1.4834876622146487e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(A, E).;true;true
2;false;genre(B, H).;true;true
2;false,true;genre(A, I).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(B, F).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;false,false;movie(C, B).;true;true
9;true,false;genre(A, E).;true;true
9;true;movie(C, B).;true;true
9;false;genre(A, F).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 3,16e-08, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048766;  // std dev = 5,77e-08, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.13513726035718227;  // std dev = 0,150, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.12544463852839152;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.11135363534450367;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.11157244053748157;  // std dev = 0,002, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, E) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360635;  // std dev = 1,49e-08, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.10166924839530689;  // std dev = 1,73e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10078244974321902;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.1042763416642788;  // std dev = 0,009, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.09851270996240805;  // std dev = 0,037, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( actor(A) )
%   | then return -0.09269127618926105;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return -0.09246613412593428;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08472653614209613;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08478424480813006;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08417840477337724;  // std dev = 0,000202, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.08651893848610347;  // std dev = 0,008, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839685;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839679;  // std dev = 1,67e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.08518475138839685;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07841986785832898;  // std dev = 1,73e-05, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(B) )
%   | | | then return -0.07843669240866327;  // std dev = 1,37e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07784286535372557;  // std dev = 1,53e-05, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253542;  // std dev = 9,13e-09, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( genre(A, D) )
%   | then return -0.08134197841196289;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then return -0.07248615103896125;  // std dev = 0,000150, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.07244943834835338;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.07381059402568901;  // std dev = 0,003, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.06818285065874735;  // std dev = 1,64e-05, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( female(B) )
%   | | | then return -0.06819793800133618;  // std dev = 1,45e-05, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06771575352637141;  // std dev = 2,93e-05, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.15274385809367086;  // std dev = 4,93e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then return -0.06943153495284451;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420271;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.0684269778442027;  // std dev = 1,05e-08, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.06798726513899177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.1176972706125688;  // std dev = 0,055, 49,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then if ( movie(D, B) )
%   | | then return -0.06380373947359737;  // std dev = 1,32e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06411782410213587;  // std dev = 0,000407, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06399863756425914;  // std dev = 0,002, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072012
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 2.673 seconds
Total inference time: 2.71 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065927
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.532 seconds
Refined model CLL: -0.065927


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072012
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 6.914 seconds
Total inference time: 2.71 seconds
AUC ROC: 1.0
Total revision time: 6.914
Best scored revision CLL: -0.065927


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:25:54
{'Precision': [0.743929, 0.5], 'Recall': 1.0, 'F1': 0.853165, 'parameter': {'Precision': [0.80814, 0.5], 'Recall': 0.824926, 'F1': 0.816446, 'AUC PR': 0.865091, 'Learning time': 1.229, 'Inference time': 2.94, 'CLL': -0.207955, 'AUC ROC': 0.978805}, 'AUC PR': 1.0, 'Learning time': 6.914, 'Inference time': 2.71, 'CLL': -0.072012, 'AUC ROC': 1.0}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;false,true,true;samebib(J, K), venue(K, B).;false;false
0;false,true,false;haswordtitle(I, L), haswordauthor(M, L).;false;false
0;true,true;haswordauthor(F, C).;false;true
0;false,true;title(J, I), venue(J, A).;true;true
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
0;true,true,false;haswordtitle(G, D).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;false,true,true;author(J, H), title(J, I).;false;false
1;true,true;haswordvenue(B, D).;false;true
1;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;false,true;haswordtitle(I, G).;true;false
1;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
1;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
1;true,true,false;author(F, E), venue(F, B).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;false,true,true;samebib(K, L), venue(L, A).;false;false
2;true,true;author(F, E), venue(F, A).;true;true
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true;author(K, J), venue(K, B).;true;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false;haswordvenue(A, I), haswordauthor(J, I).;true;false
2;true,true,false;haswordauthor(H, C).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true,false;haswordauthor(H, D).;false;false
3;false,true;title(F, E), venue(F, A).;true;true
3;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,false,true;title(K, J), venue(K, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
4;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
4;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,true,true;haswordvenue(A, F).;false;false
4;false,false,true;title(K, J), venue(K, B).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;false,true,true;samebib(I, J), venue(J, B).;false;false
5;false,true,false;haswordauthor(K, G).;false;false
5;true,true;haswordtitle(E, C).;true;false
5;true,true,true;author(F, D), title(F, E).;false;false
5;true;haswordauthor(D, C).;true;false
5;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
5;false,true;title(I, H), venue(I, A).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true,false;author(H, E), venue(H, A).;false;false
6;false,true;haswordtitle(F, D).;true;true
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
6;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
6;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
6;false,true,true;author(G, E), venue(G, A).;false;false
6;false,false,true;title(K, J), venue(K, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(H, E), venue(H, A).;false;false
7;false,true;haswordtitle(F, D).;true;true
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,true,true;author(G, E), title(G, F).;false;false
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;false,true,true;samebib(I, J), venue(J, A).;false;false
8;true,true;haswordtitle(F, C).;true;false
8;true,true,true;haswordtitle(F, D).;false;false
8;false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false;haswordvenue(A, G), haswordtitle(H, G).;true;true
8;false,true;title(I, H), venue(I, B).;true;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true;haswordvenue(B, C).;false;true
9;true,false;title(G, D), venue(G, A).;true;true
9;true;venue(E, B), title(E, D).;true;true
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true,false;samebib(E, F), venue(F, A).;false;false
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.5297907261442888;  // std dev = 0,470, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048766;  // std dev = 8,33e-09, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.43295248308391726;  // std dev = 3,956, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.12544463852839158;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.3021128499218935;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.36952894112288226;  // std dev = 0,470, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, A) )
%   | then if ( genre(B, H) )
%   | | then if ( genre(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360625;  // std dev = 5,37e-08, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3202007977254701;  // std dev = 3,630, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10159632948783623;  // std dev = 5,10e-09, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14917298560238076;  // std dev = 4,159, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.09269127618926107;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24409976671741782;  // std dev = 0,429, 61,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839683;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.08518475138839679;  // std dev = 2,08e-09, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11299063951934771;  // std dev = 3,818, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109175;  // std dev = 2,11e-08, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10064407830073535;  // std dev = 3,704, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 7,45e-09, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return -0.03381930969124785;  // std dev = 0,492, 78,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then if ( genre(B, F) )
%   | | then if ( genre(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06842697784420268;  // std dev = 1,83e-08, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3951867945009071;  // std dev = 6,66e-08, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then if ( movie(C, B) )
%   | | | then return -0.4387884106307845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2923132054990926;  // std dev = 2,622, 32,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return -0.06419184008202625;  // std dev = 0,000, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.982257
   AUC PR    = 0.888508
   CLL	      = -0.243438
   Precision = 0.104077 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.188531


Total learning time: 1.176 seconds
Total inference time: 2.546 seconds
AUC ROC: 0.982257


Results scoring model
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.250641
   Precision = 0.078534 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.145631


Total scoring time: 1.271 seconds
Parameter learned model CLL: -0.250641


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)', 'false,true,true': 'genre(B, G)'}, {'false,true,false': [8.33e-09, 70, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true': [0.47, 22, 45], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'true,true': 'movie(D, B)'}, {'true,false': [0.0, 0, 0], 'false,true': [0.0, 58, 0], 'true,true,true': [3.956, 24, 45], 'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'genre(A, E)', 'true,true,true': 'genre(B, F)', 'false,true': 'genre(B, H)', 'true': 'movie(D, B)', 'false': 'movie(G, A)', 'false,true,true': 'genre(A, I)'}, {'false,true,false': [5.37e-08, 68, 0], 'false,true,true,false': [0.0, 1, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0], 'true,true,false': [0.47, 22, 45]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [5.1e-09, 56, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [3.63, 19, 45], 'false,true,true,false': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'movie(E, A)'}, {'false,true,false': [0.0, 0, 0], 'true': [4.159, 29, 45], 'false,true,true': [0.0, 59, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [2.08e-09, 60, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [0.429, 16, 45], 'false,true,true,false': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [3.818, 22, 45], 'false,true,true': [0.0, 3, 0], 'false,true,false,false': [2.11e-08, 58, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [7.45e-09, 53, 0], 'true': [3.704, 21, 45], 'false,true,true': [1.86e-09, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, A)', 'false,true': 'genre(B, F)', 'false,true,true': 'genre(A, G)'}, {'false,true,false': [1.83e-08, 57, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true': [0.492, 33, 45], 'false,false': [0.0, 0, 0], 'false,true,true,false': [1.86e-09, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(A, E)', 'true': 'genre(B, D)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,true,true': [0.0, 4, 0], 'true,true,true': [6.66e-08, 0, 35], 'true,false,false,true': [2.622, 22, 10], 'false': [0.0, 0, 0], 'true,false,false,false': [0.0, 57, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0]}]]
[{'': [0.22053909556694173, 6.78469626159818e-17], 'true': [0.22053909556694173, nan], 'false': [6.78469626159818e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 6.97854472621527e-17]}, {'': [0.22684310018903572, -3.6369374944617196e-17], 'true': [0.22684310018903572, nan], 'false': [-3.6369374944617196e-17, nan], 'true,true': [0.22684310018903572, nan]}, {'': [0.22383217993079682, 4.344350965924526e-17], 'false,true,true': [nan, 0.0], 'true,true': [0.0, 0.2205390955669424], 'true,true,true': [nan, 0.0], 'true': [0.22383217993079682, nan], 'false': [4.344350965924526e-17, nan], 'false,true': [0.0, 4.244970388272657e-17]}, {'': [0.20591762373052555, 2.7268635692547703e-17], 'false': [2.7268635692547703e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 2.577303450022685e-17]}, {'': [0.23379409439705998, -5.645201820127915e-18], 'false': [-5.645201820127915e-18, nan], 'false,true': [-5.645201820127915e-18, nan]}, {'': [0.18440428604399417, 3.640075490574284e-18], 'false': [3.640075490574284e-18, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 4.625929269271485e-18]}, {'': [0.21761576591990361, 1.0920226471722851e-17], 'false,true,false': [nan, 7.656710514656252e-18], 'false': [1.0920226471722851e-17, nan], 'false,true': [0.0, 7.656710514656252e-18]}, {'': [0.2078328653355174, 9.912705577010326e-19], 'false': [9.912705577010326e-19, nan], 'false,true': [1.1564823173178713e-18, 1.047380211910525e-18]}, {'': [0.24197878790829114, 8.058070340021298e-18], 'true': [0.24197878790829114, nan], 'false': [8.058070340021298e-18, nan], 'false,true,true': [nan, 6.938893903907229e-19], 'false,true': [6.938893903907229e-19, 5.843279076974508e-18]}, {'': [0.12462571348925429, nan], 'true,true': [1.2688263138573217e-16, nan], 'true,false': [0.022451614506702567, 0.08923049966218623], 'true': [1.2688263138573217e-16, 0.08806429679338608], 'true,false,true': [0.0, 0.0], 'true,false,false': [0.21484375000000008, -2.921639538487254e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(A, E).;true;true
2;false;genre(B, H).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;false;genre(B, F).;true;true
9;;workedunder(A, B) :- genre(B, D).;true;true
9;false;genre(A, E).;true;true
9;false,true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048766;  // std dev = 7,15e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return -0.1254446385283916;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.11231637819360642;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.09269127618926103;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08518475138839679;  // std dev = 1,05e-08, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109176;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333702;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 59,000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(B, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.06842697784420274;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.11418714299900742;  // std dev = 0,059, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( genre(A, D) )
%   | then if ( movie(E, B) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202625;  // std dev = 0,000, 85,000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | | else return 0.10097388499300493;  // std dev = 0,256, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999707
   AUC PR    = 0.989873
   CLL	      = -0.081311
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.211 seconds
Total inference time: 2.645 seconds
AUC ROC: 0.999707


Results scoring model
   AUC ROC   = 0.999946
   AUC PR    = 0.997367
   CLL	      = -0.066617
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.422 seconds
Refined model CLL: -0.066617


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999707
   AUC PR    = 0.989873
   CLL	      = -0.081311
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 6.079999999999999 seconds
Total inference time: 2.645 seconds
AUC ROC: 0.999707
Total revision time: 6.079999999999999
Best scored revision CLL: -0.066617


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:26:06
{'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'parameter': {'Precision': [0.104077, 0.5], 'Recall': 1.0, 'F1': 0.188531, 'AUC PR': 0.888508, 'Learning time': 1.176, 'Inference time': 2.546, 'CLL': -0.243438, 'AUC ROC': 0.982257}, 'AUC PR': 0.989873, 'Learning time': 6.079999999999999, 'Inference time': 2.645, 'CLL': -0.081311, 'AUC ROC': 0.999707}


