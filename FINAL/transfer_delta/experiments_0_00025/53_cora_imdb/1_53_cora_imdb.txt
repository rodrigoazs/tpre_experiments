Starting experiment #1 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.2154083151973864;  // std dev = 0,479, 7.969,000 (wgt'ed) examples reached here.  /* #neg=5.122 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.8019691598186129;  // std dev = 2,172, 89,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=84 */
%   | | | else return -0.13855073486748457;  // std dev = 0,998, 303,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.19905802600860326;  // std dev = 3,144, 44,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return -0.06260578188161985;  // std dev = 4,397, 265,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.002385189529568068;  // std dev = 6,360, 337,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=47 */
%   | | | else return -0.11286555765411088;  // std dev = 1,394, 69,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18671018484888505;  // std dev = 0,479, 7.978,000 (wgt'ed) examples reached here.  /* #neg=5.131 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.4311641607407533;  // std dev = 0,734, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15308799110884547;  // std dev = 3,188, 47,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.5303569698383767;  // std dev = 0,804, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1354096458829799;  // std dev = 0,031, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.057384475277683714;  // std dev = 6,969, 381,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=83 */
%   | | | else return -0.054854161325564144;  // std dev = 4,397, 264,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.01866459886447995;  // std dev = 6,419, 388,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=47 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.162136033921467;  // std dev = 0,480, 7.902,000 (wgt'ed) examples reached here.  /* #neg=5.055 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), venue(G, A) )
%   | | | then return 0.016569056399925754;  // std dev = 1,016, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.15959124603891797;  // std dev = 3,120, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.44775641464000543;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.12207863115480493;  // std dev = 0,026, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return -0.024475886285767308;  // std dev = 0,939, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.07150462608765129;  // std dev = 2,970, 67,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.021946877849451134;  // std dev = 8,513, 752,000 (wgt'ed) examples reached here.  /* #neg=664 #pos=88 */
%   | | | else return 0.001979468825518226;  // std dev = 5,369, 290,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=46 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.7293680374640498;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.2948225829185954;  // std dev = 4,327, 75,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=39 */
%   | | | else return 0.01589401149002384;  // std dev = 4,527, 112,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=27 */
%   | else return 0.13058437719551946;  // std dev = 0,479, 7.758,000 (wgt'ed) examples reached here.  /* #neg=4.998 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then if ( samebib(I, J), venue(J, B) )
%   | | | then return 0.6594277900238328;  // std dev = 2,167, 89,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=84 */
%   | | | else return -0.13043883060747274;  // std dev = 1,021, 327,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=1 */
%   | | else if ( haswordtitle(H, K), haswordauthor(L, K) )
%   | | | then return -0.050959804924217714;  // std dev = 3,715, 163,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=17 */
%   | | | else return 0.025925576772659928;  // std dev = 4,016, 125,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=19 */
%   | else return -0.02182114178889784;  // std dev = 0,314, 433,000 (wgt'ed) examples reached here.  /* #neg=384 #pos=49 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.11209353061118836;  // std dev = 0,480, 7.880,000 (wgt'ed) examples reached here.  /* #neg=5.033 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.4886590434919344;  // std dev = 2,538, 91,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=84 */
%   | | | else return -0.11560682289097558;  // std dev = 1,009, 295,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.17638522522422526;  // std dev = 3,041, 39,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return -0.04563505125861541;  // std dev = 4,383, 265,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.11615098343296681;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1387747014436936;  // std dev = 0,019, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.01039146443460746;  // std dev = 1,083, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.0032023265391850336;  // std dev = 6,320, 357,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=46 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.09033221253331389;  // std dev = 0,480, 7.886,000 (wgt'ed) examples reached here.  /* #neg=5.039 #pos=2.847 */
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.7145286867061901;  // std dev = 3,393, 95,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=84 */
%   | | | else return -0.13041083488607005;  // std dev = 0,775, 529,000 (wgt'ed) examples reached here.  /* #neg=528 #pos=1 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return -0.12173963979592851;  // std dev = 0,016, 47,000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0.0019194701793641817;  // std dev = 3,160, 187,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=36 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.014154119288460228;  // std dev = 3,657, 253,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=47 */
%   | | | else return -0.047194123425770715;  // std dev = 1,373, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else return -0.11003930262487674;  // std dev = 1,05e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.08337743303590062;  // std dev = 6,299, 178,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=69 */
%   | | | else return 0.0258794299864132;  // std dev = 2,381, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( haswordauthor(G, C) )
%   | | | then return 0.5754082538077973;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4487565703181885;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.06467827905554072;  // std dev = 0,478, 7.815,000 (wgt'ed) examples reached here.  /* #neg=5.055 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then return -0.007704022410778038;  // std dev = 0,254, 704,000 (wgt'ed) examples reached here.  /* #neg=583 #pos=121 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.009920799228160996;  // std dev = 5,595, 369,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=47 */
%   | | | else return -0.07961649858269979;  // std dev = 1,378, 61,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=2 */
%   | | else return -0.09899464700330697;  // std dev = 0,008, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.05643181582744872;  // std dev = 0,479, 7.931,000 (wgt'ed) examples reached here.  /* #neg=5.084 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.01836106863486165;  // std dev = 0,365, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.12952346739417514;  // std dev = 0,806, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.09109083987171915;  // std dev = 0,038, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.02769719956229255;  // std dev = 4,960, 568,000 (wgt'ed) examples reached here.  /* #neg=485 #pos=83 */
%   | | | else return 0.03281041323356458;  // std dev = 3,659, 127,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.019044592783273247;  // std dev = 5,729, 419,000 (wgt'ed) examples reached here.  /* #neg=372 #pos=47 */
%   | | | else return -0.09076507668510424;  // std dev = 0,005, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, A), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.02976331766705212;  // std dev = 0,474, 7.583,000 (wgt'ed) examples reached here.  /* #neg=4.974 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.6119485802128565;  // std dev = 3,790, 147,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=133 */
%   | | | else return -0.12115236922619162;  // std dev = 1,601, 571,000 (wgt'ed) examples reached here.  /* #neg=569 #pos=2 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.1397761646658254;  // std dev = 4,722, 155,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=27 */
%   | | | else return -0.05490134211162104;  // std dev = 0,702, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.37244391797652876;  // std dev = 4,894, 113,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=78 */
%   | | | else return 0.05512665089595993;  // std dev = 3,948, 187,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=49 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.5855695993040768;  // std dev = 0,292, 75,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=68 */
%   | else return -0.009424856114396788;  // std dev = 0,232, 281,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=49 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.03484493883631284;  // std dev = 0,475, 7.950,000 (wgt'ed) examples reached here.  /* #neg=5.103 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then return 0.004391911259275488;  // std dev = 0,242, 396,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=85 */
%   | | else if ( haswordtitle(E, G), haswordauthor(H, G) )
%   | | | then return -0.06038692529827194;  // std dev = 2,669, 176,000 (wgt'ed) examples reached here.  /* #neg=159 #pos=17 */
%   | | | else return 0.01232850201121413;  // std dev = 3,023, 122,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=19 */
%   | else return -0.02462796572867921;  // std dev = 0,235, 447,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=49 */


Starting fold 1

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos	 examples: 326
Target test neg examples: 10928

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;author(H, E), venue(H, A).;false;false
1;false,true;haswordtitle(F, D).;true;true
1;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
1;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,true,true;author(G, E), venue(G, A).;false;false
1;false,false,true;title(K, J), venue(K, A).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
2;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,true,true;author(G, E), venue(G, A).;false;false
2;false,false,true;author(K, J), venue(K, A).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true,true;samebib(I, J), venue(J, B).;false;false
3;false,true,false;haswordtitle(H, K), haswordauthor(L, K).;false;false
3;true,true;haswordvenue(B, D).;false;true
3;false,true;title(I, H), venue(I, A).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
3;true,true,false;author(F, E), venue(F, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordauthor(H, D).;false;false
4;false,true;title(F, E), venue(F, A).;true;true
4;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
4;false,false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,true,true;samebib(F, G), venue(G, B).;false;false
4;false,false,true;author(K, J), venue(K, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;title(H, E), venue(H, A).;false;false
5;false,true;title(F, E), venue(F, B).;true;true
5;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
5;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
5;false,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(K, J), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,true;haswordtitle(F, C).;true;true
6;true,true,true;haswordtitle(F, D).;false;false
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
6;true,true,false;haswordauthor(G, C).;false;false
6;false,false,true;title(L, K), venue(L, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(G, E), venue(G, A).;false;false
7;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,true;haswordtitle(F, D).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true;haswordvenue(B, C).;false;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true;venue(E, A), title(E, D).;true;true
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
8;true,false,true;haswordvenue(B, C).;false;false
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,true,false;haswordtitle(E, G), haswordauthor(H, G).;false;false
9;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
9;false,true;title(F, E), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5495069597908709;  // std dev = 4,157, 81,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 8,54e-09, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.39960741934843563;  // std dev = 4,600, 90,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839155;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3595764180667665;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360621;  // std dev = 7,45e-08, 91,000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.26409295945140565;  // std dev = 4,467, 87,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=56 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783615;  // std dev = 6,45e-09, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15230561051029398;  // std dev = 4,758, 94,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18538557210462045;  // std dev = 4,320, 84,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=56 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.08518475138839679;  // std dev = 1,83e-08, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.19035803878250054;  // std dev = 0,450, 78,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=56 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109168;  // std dev = 3,73e-08, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.04073848280176243;  // std dev = 4,641, 91,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.09037301188334881;  // std dev = 0,024, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.5845721989905427;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.09913161280041873;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.41542780100945725;  // std dev = 8,43e-08, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5845721989905427;  // std dev = 7,30e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.06842697784420268;  // std dev = 2,24e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07868868735862707;  // std dev = 3,198, 82,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=56 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.06734327220186746;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06419184008202625;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.976731
   AUC PR    = 0.863424
   CLL	      = -0.211412
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.819018
   F1        = 0.900506


Total learning time: 1.142 seconds
Total inference time: 2.415 seconds
AUC ROC: 0.976731


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.222025
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.9 seconds
Parameter learned model CLL: -0.222025


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [8.54e-09, 75, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.157, 25, 56], 'false,true,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [4.6, 34, 56], 'false,true,true': [0.0, 4, 0], 'false,true,false,false': [0.0, 70, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [4.371, 29, 56], 'false,true,true': [7.45e-09, 11, 0], 'false,true,false,false': [7.45e-08, 91, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)'}, {'false,true,false': [6.45e-09, 75, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [4.467, 31, 56], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [0.0, 70, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.758, 38, 56], 'false,true,true,false': [1.86e-09, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, G)', 'false': 'movie(D, A)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)'}, {'false,true,false,true': [0.0, 2, 0], 'false,true,true,false': [0.0, 5, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.32, 28, 56], 'false,true,false,false': [1.83e-08, 72, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true': [0.45, 22, 56], 'false,true': [3.73e-08, 71, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [0.0, 70, 0], 'true': [4.641, 35, 56], 'false,true,true': [0.024, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true,false': 'genre(B, E)', 'true,false,false': 'movie(C, B)'}, {'true,true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 1, 0], 'true,false,false,true': [7.3e-08, 31, 0], 'true,false,true,true': [8.43e-08, 0, 56], 'true,false,false,false': [2.24e-08, 63, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [0.0, 71, 0], 'true': [3.198, 26, 56], 'false,true,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.2133821063862213, 7.401486830834377e-17], 'false': [7.401486830834377e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 7.105427357601002e-17]}, {'': [0.2350617283950612, -2.700542492331462e-17], 'false,true,false': [nan, -3.172065784643304e-17], 'false': [-2.700542492331462e-17, nan], 'false,true': [0.0, -3.172065784643304e-17]}, {'': [0.22477508650519035, 6.530723674265627e-17], 'false,true,false': [nan, 6.100126508929432e-17], 'false': [6.530723674265627e-17, nan], 'false,true': [5.046468293750712e-18, 6.100126508929432e-17]}, {'': [0.22935658607477846, 4.4971059225322796e-17], 'false,true,true': [nan, 0.0], 'true,true': [0.22935658607477846, nan], 'true': [0.22935658607477846, nan], 'false': [4.4971059225322796e-17, nan], 'false,true': [0.0, 4.2928623618839385e-17]}, {'': [0.24083295608872785, 0.0], 'false': [0.0, nan], 'false,true,true': [nan, 1.1564823173178713e-18], 'false,true': [1.1564823173178713e-18, 0.0]}, {'': [0.22222222222222288, 9.837419205539362e-18], 'false,true,false': [0.0, 4.625929269271485e-18], 'false': [9.837419205539362e-18, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 6.00120553851436e-18]}, {'': [0.20249835634450988, 1.9546180011006276e-17], 'true': [0.20249835634450988, nan], 'false': [1.9546180011006276e-17, nan]}, {'': [0.23668639053254417, 1.6069601079351143e-05], 'false': [1.6069601079351143e-05, nan], 'false,true': [0.00029332680280062806, -2.3790493384824783e-18]}, {'': [0.1341225603906752, nan], 'true,true': [0.0, 0.0], 'true,false': [0.014567183370103957, 0.05888305815150913], 'true': [0.05891314068015281, 0.13356915961033528], 'true,false,true': [1.2688263138573217e-16, 0.0], 'true,true,false': [0.0, nan], 'true,false,false': [1.71905500587121e-16, 7.93016446160826e-18]}, {'': [0.12469239094146131, 3.863065555940902e-07], 'false': [3.863065555940902e-07, nan], 'false,true': [0.0, -6.254777603522009e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(B, E).;true;true
5;false,false;genre(A, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;false,true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 3,33e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048766;  // std dev = 7,30e-08, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360638;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.18174467721347862;  // std dev = 0,439, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0.3207118471601496;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.0834585446272672;  // std dev = 0,007, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.2551722425694894;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 1,75e-08, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.0851847513883968;  // std dev = 2,24e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109179;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(B) )
%   | | | then return -0.07702484591769752;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07834417166278348;  // std dev = 0,005, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109175;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.07348267520181868;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07279475575817958;  // std dev = 0,002, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.17709649774527722;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 1,05e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.07324622576333704;  // std dev = 1,18e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return -0.06359070776008319;  // std dev = 0,000115, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, F) )
%   | then if ( movie(D, B) )
%   | | then if ( movie(G, A), movie(G, B) )
%   | | | then return 0.1527438580936708;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842974557881423;  // std dev = 6,12e-05, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.06844354291578728;  // std dev = 0,000300, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1340070300080109;  // std dev = 5,89e-09, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( actor(A) )
%   | | then if ( female(A) )
%   | | | then return -0.06420200739723453;  // std dev = 6,04e-05, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.06427775124741263;  // std dev = 0,000277, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.19611375703215775;  // std dev = 0,609, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.06419167382095517;  // std dev = 5,89e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.06419169229440749;  // std dev = 2,72e-07, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( actor(B) )
%   | | | then return -0.06419084500469067;  // std dev = 1,49e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075959
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 2.658 seconds
Total inference time: 2.851 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064267
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total scoring time: 1.622 seconds
Refined model CLL: -0.064267


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075959
   Precision = 0.735892 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847854


Total learning time: 7.321999999999999 seconds
Total inference time: 2.851 seconds
AUC ROC: 1.0
Total revision time: 7.321999999999999
Best scored revision CLL: -0.064267


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:40:02
{'Precision': [0.735892, 0.5], 'Recall': 1.0, 'F1': 0.847854, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 0.819018, 'F1': 0.900506, 'AUC PR': 0.863424, 'Learning time': 1.142, 'Inference time': 2.415, 'CLL': -0.211412, 'AUC ROC': 0.976731}, 'AUC PR': 1.0, 'Learning time': 7.321999999999999, 'Inference time': 2.851, 'CLL': -0.075959, 'AUC ROC': 1.0}


Starting fold 2

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos	 examples: 324
Target test neg examples: 10813

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;author(H, E), venue(H, A).;false;false
1;false,true;haswordtitle(F, D).;true;true
1;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
1;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,true,true;author(G, E), venue(G, A).;false;false
1;false,false,true;title(K, J), venue(K, A).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
2;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,true,true;author(G, E), venue(G, A).;false;false
2;false,false,true;author(K, J), venue(K, A).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true,true;samebib(I, J), venue(J, B).;false;false
3;false,true,false;haswordtitle(H, K), haswordauthor(L, K).;false;false
3;true,true;haswordvenue(B, D).;false;true
3;false,true;title(I, H), venue(I, A).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
3;true,true,false;author(F, E), venue(F, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordauthor(H, D).;false;false
4;false,true;title(F, E), venue(F, A).;true;true
4;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
4;false,false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,true,true;samebib(F, G), venue(G, B).;false;false
4;false,false,true;author(K, J), venue(K, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;title(H, E), venue(H, A).;false;false
5;false,true;title(F, E), venue(F, B).;true;true
5;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
5;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
5;false,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(K, J), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,true;haswordtitle(F, C).;true;true
6;true,true,true;haswordtitle(F, D).;false;false
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
6;true,true,false;haswordauthor(G, C).;false;false
6;false,false,true;title(L, K), venue(L, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(G, E), venue(G, A).;false;false
7;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,true;haswordtitle(F, D).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true;haswordvenue(B, C).;false;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true;venue(E, A), title(E, D).;true;true
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
8;true,false,true;haswordvenue(B, C).;false;false
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,true,false;haswordtitle(E, G), haswordauthor(H, G).;false;false
9;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
9;false,true;title(F, E), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5025933795439576;  // std dev = 4,541, 90,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.14185106490048766;  // std dev = 8,33e-09, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.46775113915390504;  // std dev = 4,292, 85,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283915;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.36294874489593865;  // std dev = 4,397, 87,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360621;  // std dev = 7,45e-08, 93,000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.3306533721831266;  // std dev = 4,058, 81,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=58 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783619;  // std dev = 6,04e-09, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24127804411756423;  // std dev = 4,120, 82,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14813668017022583;  // std dev = 4,346, 86,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=58 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839679;  // std dev = 1,83e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.02285491335223026;  // std dev = 0,493, 99,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109161;  // std dev = 4,94e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.023218384793464844;  // std dev = 4,866, 98,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333707;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.5743043084993683;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0806734852029682;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.42569569150063197;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5743043084993681;  // std dev = 9,42e-08, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.06842697784420265;  // std dev = 4,21e-08, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.016886188685469764;  // std dev = 3,688, 98,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=58 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.06572002395841155;  // std dev = 0,010, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06419184008202626;  // std dev = 0,000, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978798
   AUC PR    = 0.865522
   CLL	      = -0.204765
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.817901
   F1        = 0.89983


Total learning time: 1.266 seconds
Total inference time: 2.909 seconds
AUC ROC: 0.978798


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.200154
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.314 seconds
Parameter learned model CLL: -0.200154


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [8.33e-09, 79, 0], 'false,true,true,true': [0.0, 1, 0], 'true': [4.541, 32, 58], 'false,true,true,false': [0.0, 11, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [4.292, 27, 58], 'false,true,true': [0.0, 8, 0], 'false,true,false,false': [0.0, 75, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [4.397, 29, 58], 'false,true,true': [0.0, 4, 0], 'false,true,false,false': [7.45e-08, 93, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)'}, {'false,true,false': [6.04e-09, 86, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [4.058, 23, 58], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [0.0, 75, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.12, 24, 58], 'false,true,true,false': [0.0, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, G)', 'false': 'movie(D, A)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)'}, {'false,true,false,true': [2.63e-09, 6, 0], 'false,true,true,false': [0.0, 5, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'true': [4.346, 28, 58], 'false,true,false,false': [1.83e-08, 70, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true': [0.493, 41, 58], 'false,true': [4.94e-08, 88, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [0.0, 83, 0], 'true': [4.866, 40, 58], 'false,true,true': [0.0, 5, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true,false': 'genre(B, E)', 'true,false,false': 'movie(C, B)'}, {'true,true,false,true': [0.0, 1, 0], 'true,true,true': [1.49e-08, 3, 0], 'true,false,false,true': [9.42e-08, 29, 0], 'true,false,true,true': [0.0, 0, 58], 'true,false,false,false': [4.21e-08, 88, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 4, 0], 'true,false,true,false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [0.0, 88, 0], 'true': [3.688, 40, 58], 'false,true,true': [0.01, 7, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.2291358024691354, 7.564156871072495e-17], 'false': [7.564156871072495e-17, nan], 'false,true,true': [0.0, -1.0092936587501423e-17], 'false,true': [-1.1564823173178714e-17, 7.307797124114954e-17]}, {'': [0.21674740484428867, -2.140188963132832e-17], 'false,true,false': [nan, -2.6645352591003756e-17], 'false': [-2.140188963132832e-17, nan], 'false,true': [0.0, -2.6645352591003756e-17]}, {'': [0.22222222222222135, 6.180623023686439e-17], 'false,true,false': [nan, 5.968940992608368e-17], 'false': [6.180623023686439e-17, nan], 'false,true': [0.0, 5.968940992608368e-17]}, {'': [0.20332266422801376, 2.8060581941075384e-17], 'false,true,true': [nan, 0.0], 'true,true': [0.20332266422801376, nan], 'true': [0.20332266422801376, nan], 'false': [2.8060581941075384e-17, nan], 'false,true': [0.0, 3.4855839145208403e-17]}, {'': [0.2070196311719217, 0.0], 'false': [0.0, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 0.0]}, {'': [0.21957815035154155, 3.24457637610248e-06], 'false,true,false': [1.1564823173178713e-18, 4.758098676964957e-18], 'false': [3.24457637610248e-06, nan], 'false,true,true': [0.0, 0.0], 'false,true': [3.740831884916732e-05, 7.304098846218135e-18]}, {'': [0.242628303234364, 2.7755575615628914e-17], 'true': [0.242628303234364, nan], 'false': [2.7755575615628914e-17, nan]}, {'': [0.24156601416076642, -8.200510977344907e-18], 'false': [-8.200510977344907e-18, nan], 'false,true': [-6.938893903907229e-19, -7.35689956076911e-18]}, {'': [0.1121979308527067, nan], 'true,true': [7.401486830834377e-17, 2.3996310798127945e-05], 'true,false': [0.02839163841660989, 0.04770889777250847], 'true': [0.05941494626475545, 0.1115166758440434], 'true,false,true': [-4.900294729380001e-16, 0.0], 'true,true,false': [0.0, 0.0], 'true,false,false': [3.062684205862501e-16, 2.0185873175002847e-17]}, {'': [0.13878643526470216, 1.191867422920428e-06], 'false': [1.191867422920428e-06, nan], 'false,true': [1.4012075760264384e-05, -1.198536219765794e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
0;false,true;genre(B, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(B, E).;true;true
5;false,true;genre(A, F).;true;true
5;false,false;genre(A, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;false,false;movie(C, B).;true;true
8;true,false;genre(B, E).;true;true
8;true;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995125;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048763;  // std dev = 7,88e-08, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.12544463852839152;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0,000, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(B) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360636;  // std dev = 2,95e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.1123163781936064;  // std dev = 0,000, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.4175135841583103;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.18174467721347862;  // std dev = 0,439, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( female(B) )
%   | | | then return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.10159632948783626;  // std dev = 2,98e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926098;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.08616729991641216;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.09269127618926094;  // std dev = 1,05e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.09269127618926105;  // std dev = 0,000, 68,000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694892;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2551722425694892;  // std dev = 6,45e-09, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 1,61e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07961979861896909;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839687;  // std dev = 9,31e-10, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(A, E) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839679;  // std dev = 2,46e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( actor(A) )
%   | | | then return -0.07498752772957533;  // std dev = 0,009, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.0739770671958376;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( female(A) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527733;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.0953663242018422;  // std dev = 0,125, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 79,000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06737777306644263;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.14221191352520066;  // std dev = 0,216, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.1316799689567305;  // std dev = 0,421, 42,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.0678115457491336;  // std dev = 0,013, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( actor(A) )
%   | | | then return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06425489594880729;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.05974108050017718;  // std dev = 0,001, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.13604402938634988;  // std dev = 0,000588, 58,000 (wgt'ed) examples reached here.  /* #pos=58 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.06425489594880729;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06425489594880729;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(B) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( female(A) )
%   | | | then return -0.06529334840625907;  // std dev = 0,013, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.06459227021017679;  // std dev = 0,013, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077138
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 2.24 seconds
Total inference time: 2.795 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064856
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total scoring time: 1.586 seconds
Refined model CLL: -0.064856


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077138
   Precision = 0.736364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.848168


Total learning time: 6.406000000000001 seconds
Total inference time: 2.795 seconds
AUC ROC: 1.0
Total revision time: 6.406000000000001
Best scored revision CLL: -0.064856


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:40:15
{'Precision': [0.736364, 0.5], 'Recall': 1.0, 'F1': 0.848168, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 0.817901, 'F1': 0.89983, 'AUC PR': 0.865522, 'Learning time': 1.266, 'Inference time': 2.909, 'CLL': -0.204765, 'AUC ROC': 0.978798}, 'AUC PR': 1.0, 'Learning time': 6.406000000000001, 'Inference time': 2.795, 'CLL': -0.077138, 'AUC ROC': 1.0}


Starting fold 3

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos	 examples: 204
Target test neg examples: 10693

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;author(H, E), venue(H, A).;false;false
1;false,true;haswordtitle(F, D).;true;true
1;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
1;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,true,true;author(G, E), venue(G, A).;false;false
1;false,false,true;title(K, J), venue(K, A).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
2;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,true,true;author(G, E), venue(G, A).;false;false
2;false,false,true;author(K, J), venue(K, A).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true,true;samebib(I, J), venue(J, B).;false;false
3;false,true,false;haswordtitle(H, K), haswordauthor(L, K).;false;false
3;true,true;haswordvenue(B, D).;false;true
3;false,true;title(I, H), venue(I, A).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
3;true,true,false;author(F, E), venue(F, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordauthor(H, D).;false;false
4;false,true;title(F, E), venue(F, A).;true;true
4;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
4;false,false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,true,true;samebib(F, G), venue(G, B).;false;false
4;false,false,true;author(K, J), venue(K, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;title(H, E), venue(H, A).;false;false
5;false,true;title(F, E), venue(F, B).;true;true
5;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
5;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
5;false,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(K, J), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,true;haswordtitle(F, C).;true;true
6;true,true,true;haswordtitle(F, D).;false;false
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
6;true,true,false;haswordauthor(G, C).;false;false
6;false,false,true;title(L, K), venue(L, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(G, E), venue(G, A).;false;false
7;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,true;haswordtitle(F, D).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true;haswordvenue(B, C).;false;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true;venue(E, A), title(E, D).;true;true
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
8;true,false,true;haswordvenue(B, C).;false;false
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,true,false;haswordtitle(E, G), haswordauthor(H, G).;false;false
9;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
9;false,true;title(F, E), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5817261708718665;  // std dev = 7,015, 246,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.14185106490048843;  // std dev = 0,000, 207,000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.44600205700689255;  // std dev = 7,615, 264,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.12544463852839152;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839172;  // std dev = 0,000, 214,000 (wgt'ed) examples reached here.  /* #neg=214 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.40175405413914334;  // std dev = 7,088, 248,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360679;  // std dev = 0,000, 236,000 (wgt'ed) examples reached here.  /* #neg=236 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.27884275868228425;  // std dev = 7,461, 259,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=178 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.10159632948783656;  // std dev = 0,000, 228,000 (wgt'ed) examples reached here.  /* #neg=228 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1946008151841372;  // std dev = 7,644, 265,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926101;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.09269127618926051;  // std dev = 4,37e-09, 208,000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2098284180916241;  // std dev = 6,861, 242,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=178 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return -0.08518475138839683;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839678;  // std dev = 0,000, 46,000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.0851847513883968;  // std dev = 1,05e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.08518475138839678;  // std dev = 8,30e-08, 221,000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.12048181027972192;  // std dev = 0,459, 255,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=178 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109143;  // std dev = 5,96e-08, 256,000 (wgt'ed) examples reached here.  /* #neg=256 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0727431628448214;  // std dev = 7,554, 262,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 1,18e-08, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.07324622576333664;  // std dev = 1,29e-07, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.6238634441713754;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06842697784420271;  // std dev = 7,45e-09, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.37613655582862354;  // std dev = 2,98e-07, 129,000 (wgt'ed) examples reached here.  /* #pos=129 */
%   | | | else return -0.06842697784420264;  // std dev = 2,04e-08, 40,000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.1902351255873048;  // std dev = 5,268, 113,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=49 */
%   | | | else return -0.06842697784420261;  // std dev = 6,05e-08, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.049112705567069516;  // std dev = 6,638, 262,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=178 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.06419184008202625;  // std dev = 0,000, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.06419184008202626;  // std dev = 9,31e-10, 223,000 (wgt'ed) examples reached here.  /* #neg=223 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.993692
   AUC PR    = 0.961008
   CLL	      = -0.288476
   Precision = 0.069012 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.129114


Total learning time: 1.833 seconds
Total inference time: 2.815 seconds
AUC ROC: 0.993692


Results scoring model
   AUC ROC   = 0.976419
   AUC PR    = 0.83578
   CLL	      = -0.243027
   Precision = 0.226752 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.369678


Total scoring time: 1.733 seconds
Parameter learned model CLL: -0.243027


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [0.0, 207, 0], 'false,true,true,true': [0.0, 6, 0], 'true': [7.015, 68, 178], 'false,true,true,false': [4.47e-08, 42, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [7.615, 86, 178], 'false,true,true': [0.0, 51, 0], 'false,true,false,false': [0.0, 214, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [7.088, 70, 178], 'false,true,true': [0.0, 39, 0], 'false,true,false,false': [0.0, 236, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)'}, {'false,true,false': [0.0, 228, 0], 'false,true,true,true': [0.0, 5, 0], 'true,true,true': [7.461, 81, 178], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 40, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [4.37e-09, 208, 0], 'false,true,true,true': [0.0, 5, 0], 'true': [7.644, 87, 178], 'false,true,true,false': [0.0, 43, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, G)', 'false': 'movie(D, A)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)'}, {'false,true,false,true': [1.05e-08, 48, 0], 'false,true,true,false': [0.0, 46, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 5, 0], 'true': [6.861, 64, 178], 'false,true,false,false': [8.3e-08, 221, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true': [0.459, 77, 178], 'false,true': [5.96e-08, 256, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [1.29e-07, 223, 0], 'true': [7.554, 84, 178], 'false,true,true': [1.18e-08, 43, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true,false': 'genre(B, E)', 'true,false,false': 'movie(C, B)'}, {'true,true,false,true': [2.63e-09, 7, 0], 'true,true,true': [0.0, 23, 0], 'true,false,false,true': [5.268, 64, 49], 'true,false,true,true': [2.98e-07, 0, 129], 'true,false,false,false': [6.05e-08, 185, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [7.45e-09, 43, 0], 'true,false,true,false': [2.04e-08, 40, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [9.31e-10, 223, 0], 'true': [6.638, 84, 178], 'false,true,true': [0.0, 51, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.20001321964439722, -1.0797463141452503e-16], 'false': [-1.0797463141452503e-16, nan], 'false,true,true': [-6.938893903907228e-18, 4.7580986769649563e-17], 'false,true': [5.3198186596622086e-17, -2.4028015218940584e-16]}, {'': [0.2196395775941255, -8.379041695284201e-17], 'false,true,false': [nan, -6.018031348435427e-17], 'false': [-8.379041695284201e-17, nan], 'false,true': [-2.6122894697062506e-17, -6.018031348435427e-17]}, {'': [0.2025884495317339, -1.0981115007201549e-16], 'false,true,false': [nan, -8.091455942183344e-17], 'false': [-1.0981115007201549e-16, nan], 'false,true': [-5.693451408334136e-18, -8.091455942183344e-17]}, {'': [0.21493418404615142, -6.181461529048491e-17], 'false,true,true': [0.0, -6.938893903907228e-18], 'true,true': [0.21493418404615142, nan], 'true': [0.21493418404615142, nan], 'false': [-6.181461529048491e-17, nan], 'false,true': [2.4671622769447924e-18, -7.985814738531828e-17]}, {'': [0.22051975792096773, 4.683753385137379e-17], 'false': [4.683753385137379e-17, nan], 'false,true,true': [0.0, -1.6782441069915156e-17], 'false,true': [-1.9660199394403815e-17, 1.814787636406506e-17]}, {'': [0.19452223208797167, 3.608224830031759e-17], 'false,true,false': [2.3129646346357427e-18, 3.114652829265145e-17], 'false': [3.608224830031759e-17, nan], 'false,true,true': [0.0, -2.413528314402514e-18], 'false,true': [-4.353815782843751e-18, 3.549411900288604e-17]}, {'': [0.21078046905036388, 1.3877787807814457e-17], 'true': [0.21078046905036388, nan], 'false': [1.3877787807814457e-17, nan]}, {'': [0.2178194743896037, 4.674623261579606e-17], 'false': [4.674623261579606e-17, nan], 'false,true': [3.2273925134452225e-18, 7.467867878644551e-17]}, {'': [0.11159606313872844, nan], 'true,true': [0.0, 3.885780586188048e-18], 'true,false': [0.035706227199112185, 0.09662100218078887], 'true': [0.06657649058827515, 0.10889999255650247], 'true,false,true': [6.885104028683142e-16, 1.0408340855860843e-17], 'true,true,false': [9.912705577010326e-19, 1.290957005378089e-18], 'true,false,false': [0.24559479990602298, 1.9803978277097388e-17]}, {'': [0.1681848858414071, 2.431145309398153e-17], 'false': [2.431145309398153e-17, nan], 'false,true': [-2.7211348642773444e-18, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
0;false,true;genre(B, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, F).;true;true
3;false,true;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
4;false,true;genre(B, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(B, E).;true;true
5;false,true;genre(A, F).;true;true
5;false,false;genre(A, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;false,false;movie(C, B).;true;true
8;true,false;genre(B, E).;true;true
8;true;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;false,true;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995095;  // std dev = 1,09e-06, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.14185106490048768;  // std dev = 5,37e-08, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14185106490048768;  // std dev = 4,71e-08, 45,000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.1418510649004883;  // std dev = 0,000, 245,000 (wgt'ed) examples reached here.  /* #neg=245 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109567;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else return -0.12544463852839155;  // std dev = 0,000, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( genre(A, D) )
%   | then return -0.1254446385283915;  // std dev = 0,000, 44,000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.12544463852839163;  // std dev = 0,000, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.5553664367462835;  // std dev = 3,94e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360643;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then return -0.11231637819360639;  // std dev = 1,86e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.11231637819360636;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.11231637819360675;  // std dev = 0,000, 226,000 (wgt'ed) examples reached here.  /* #neg=226 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.41751358415831014;  // std dev = 1,83e-08, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( actor(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783627;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10159632948783624;  // std dev = 3,95e-09, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.10159632948783655;  // std dev = 0,000, 215,000 (wgt'ed) examples reached here.  /* #neg=215 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.32071184716015017;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.09269127618926103;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926103;  // std dev = 0,000, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926103;  // std dev = 0,000, 83,000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926103;  // std dev = 0,000, 71,000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | | else return -0.09269127618926104;  // std dev = 0,000, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.2551722425694897;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else if ( actor(B) )
%   | | then return -0.08518475138839679;  // std dev = 2,28e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.08518475138839686;  // std dev = 2,28e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839678;  // std dev = 1,32e-09, 38,000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( genre(A, E) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839678;  // std dev = 0,000, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return -0.08518475138839678;  // std dev = 4,83e-08, 125,000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.07877675473109177;  // std dev = 5,02e-09, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109161;  // std dev = 3,41e-08, 70,000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return -0.07877675473109162;  // std dev = 3,25e-08, 69,000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109166;  // std dev = 0,000, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return -0.07877675473109166;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109172;  // std dev = 0,000, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527778;  // std dev = 0,000, 178,000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | else if ( actor(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.07324622576333704;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( actor(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333703;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.07324622576333703;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420276;  // std dev = 0,000, 27,000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return -0.06842697784420271;  // std dev = 1,32e-09, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.10554276505814857;  // std dev = 1,160, 164,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=129 */
%   | | | else return -0.06842697784420261;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.09830180617050199;  // std dev = 0,768, 65,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=49 */
%   | | | else return -0.06842697784420261;  // std dev = 6,50e-08, 231,000 (wgt'ed) examples reached here.  /* #neg=231 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.13999136950235158;  // std dev = 0,000435, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | | else return 0.1396484907418833;  // std dev = 0,000235, 89,000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.06419184008202623;  // std dev = 0,000, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( genre(A, D) )
%   | then if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.06419184008202618;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.06419184008202619;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07528431543762351;  // std dev = 0,001, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.07524234243669527;  // std dev = 0,001, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.06419184008202619;  // std dev = 0,000, 151,000 (wgt'ed) examples reached here.  /* #neg=151 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064107
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.688 seconds
Total inference time: 3.094 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067357
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.032 seconds
Refined model CLL: -0.067357


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064107
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 9.286 seconds
Total inference time: 3.094 seconds
AUC ROC: 1.0
Total revision time: 9.286
Best scored revision CLL: -0.067357


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:40:31
{'Precision': [1.0, 0.5], 'Recall': 1.0, 'F1': 1.0, 'parameter': {'Precision': [0.069012, 0.5], 'Recall': 1.0, 'F1': 0.129114, 'AUC PR': 0.961008, 'Learning time': 1.833, 'Inference time': 2.815, 'CLL': -0.288476, 'AUC ROC': 0.993692}, 'AUC PR': 1.0, 'Learning time': 9.286, 'Inference time': 3.094, 'CLL': -0.064107, 'AUC ROC': 1.0}


Starting fold 4

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos	 examples: 337
Target test neg examples: 12345

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;author(H, E), venue(H, A).;false;false
1;false,true;haswordtitle(F, D).;true;true
1;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
1;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,true,true;author(G, E), venue(G, A).;false;false
1;false,false,true;title(K, J), venue(K, A).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
2;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,true,true;author(G, E), venue(G, A).;false;false
2;false,false,true;author(K, J), venue(K, A).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true,true;samebib(I, J), venue(J, B).;false;false
3;false,true,false;haswordtitle(H, K), haswordauthor(L, K).;false;false
3;true,true;haswordvenue(B, D).;false;true
3;false,true;title(I, H), venue(I, A).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
3;true,true,false;author(F, E), venue(F, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordauthor(H, D).;false;false
4;false,true;title(F, E), venue(F, A).;true;true
4;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
4;false,false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,true,true;samebib(F, G), venue(G, B).;false;false
4;false,false,true;author(K, J), venue(K, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;title(H, E), venue(H, A).;false;false
5;false,true;title(F, E), venue(F, B).;true;true
5;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
5;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
5;false,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(K, J), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,true;haswordtitle(F, C).;true;true
6;true,true,true;haswordtitle(F, D).;false;false
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
6;true,true,false;haswordauthor(G, C).;false;false
6;false,false,true;title(L, K), venue(L, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(G, E), venue(G, A).;false;false
7;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,true;haswordtitle(F, D).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true;haswordvenue(B, C).;false;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true;venue(E, A), title(E, D).;true;true
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
8;true,false,true;haswordvenue(B, C).;false;false
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,true,false;haswordtitle(E, G), haswordauthor(H, G).;false;false
9;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
9;false,true;title(F, E), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5399671169176945;  // std dev = 3,784, 66,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14185106490048766;  // std dev = 7,90e-09, 57,000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3790317683673744;  // std dev = 4,243, 75,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283916;  // std dev = 0,000, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.43283608530897705;  // std dev = 3,513, 62,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360633;  // std dev = 2,79e-08, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.30251055708789387;  // std dev = 3,721, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10159632948783617;  // std dev = 5,74e-09, 67,000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08512986524293886;  // std dev = 4,506, 82,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 74,000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14012653438857806;  // std dev = 4,108, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08518475138839679;  // std dev = 1,83e-08, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.0801100197459858;  // std dev = 0,490, 75,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07899082429198662;  // std dev = 0,014, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11233058361989862;  // std dev = 3,956, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07323169578863874;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07323169578863864;  // std dev = 2,89e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.5675942743878041;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06841425934315266;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.4324057256121957;  // std dev = 5,96e-08, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06841425934315266;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.5675942743878041;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06841425934315261;  // std dev = 1,67e-08, 49,000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.033979601460816355;  // std dev = 3,181, 74,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.06653462829331162;  // std dev = 0,015, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06418061842001521;  // std dev = 2,08e-09, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.977302
   AUC PR    = 0.865431
   CLL	      = -0.201577
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.824926
   F1        = 0.904065


Total learning time: 1.16 seconds
Total inference time: 2.921 seconds
AUC ROC: 0.977302


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.214798
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.151 seconds
Parameter learned model CLL: -0.214798


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [7.9e-09, 57, 0], 'false,true,true,true': [0.0, 1, 0], 'true': [3.784, 21, 45], 'false,true,true,false': [0.0, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [4.243, 30, 45], 'false,true,true': [0.0, 4, 0], 'false,true,false,false': [0.0, 63, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [3.513, 17, 45], 'false,true,true': [0.0, 6, 0], 'false,true,false,false': [2.79e-08, 48, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)'}, {'false,true,false': [5.74e-09, 67, 0], 'false,true,true,true': [0.0, 1, 0], 'true,true,true': [3.721, 20, 45], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 6, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [0.0, 74, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.506, 37, 45], 'false,true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, G)', 'false': 'movie(D, A)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)'}, {'false,true,false,true': [3.73e-09, 8, 0], 'false,true,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [4.108, 27, 45], 'false,true,false,false': [1.83e-08, 55, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true': [0.49, 30, 45], 'false,true': [0.014, 65, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [2.89e-08, 50, 0], 'true': [3.956, 24, 45], 'false,true,true': [0.0, 6, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true,false': 'genre(B, E)', 'true,false,false': 'movie(C, B)'}, {'true,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 4, 0], 'true,false,false,true': [0.0, 19, 0], 'true,false,true,true': [5.96e-08, 0, 45], 'true,false,false,false': [1.67e-08, 49, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [2.63e-09, 7, 0], 'true,false,true,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [2.08e-09, 58, 0], 'true': [3.181, 29, 45], 'false,true,true': [0.015, 7, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.21694214876033094, 6.832141690000964e-17], 'false': [6.832141690000964e-17, nan], 'false,true,true': [0.0, -7.93016446160826e-18], 'false,true': [-6.938893903907228e-18, 6.232831015439475e-17]}, {'': [0.23999999999999985, -3.314098580970616e-17], 'false,true,false': [nan, -4.053195169266444e-17], 'false': [-3.314098580970616e-17, nan], 'false,true': [0.0, -4.053195169266444e-17]}, {'': [0.1990114464099895, 2.4671622769447922e-17], 'false,true,false': [nan, 1.61907524424502e-17], 'false': [2.4671622769447922e-17, nan], 'false,true': [0.0, 1.61907524424502e-17]}, {'': [0.2130177514792893, 3.900783600034334e-17], 'false,true,true': [0.0, 0.0], 'true,true': [0.2130177514792893, nan], 'true': [0.2130177514792893, nan], 'false': [3.900783600034334e-17, nan], 'false,true': [0.0, 3.314098580970616e-17]}, {'': [0.2476204640095181, 0.0], 'false': [0.0, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 0.0]}, {'': [0.23437499999999975, 4.20539024479226e-18], 'false,true,false': [1.734723475976807e-18, 6.0557619525008536e-18], 'false': [4.20539024479226e-18, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 5.28677630773884e-18]}, {'': [0.24000000000000005, 2.9328497217245413e-06], 'true': [0.24000000000000005, nan], 'false': [2.9328497217245413e-06, nan]}, {'': [0.2268431001890357, 1.486905836551549e-17], 'false': [1.486905836551549e-17, nan], 'false,true': [0.0, 1.6653345369377347e-17]}, {'': [0.12190986369344353, nan], 'true,true': [0.0, 9.912705577010326e-19], 'true,false': [0.032145046863312175, 0.05017024653719716], 'true': [0.05766164667569749, 0.12077164609856052], 'true,false,true': [7.894919286223336e-17, 0.0], 'true,true,false': [nan, 9.912705577010326e-19], 'true,false,false': [-4.674623261579606e-17, 5.664403186863044e-18]}, {'': [0.1367351664118732, 4.113068106156218e-06], 'false': [4.113068106156218e-06, nan], 'false,true': [3.32481749014595e-05, 3.3498108501621104e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
0;false,true;genre(B, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, F).;true;true
3;false,true;genre(B, G).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(B, E).;true;true
5;false,false;genre(A, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;false,true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;false;genre(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 2,79e-08, 31,000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839158;  // std dev = 0,000, 54,000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360636;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360636;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.1123163781936064;  // std dev = 0,000, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( female(A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.10159632948783634;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601495;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839685;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.08518475138839679;  // std dev = 1,67e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0.2097577156325355;  // std dev = 7,90e-09, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( actor(A) )
%   | | then if ( actor(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0,000, 43,000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( actor(A) )
%   | | then if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.07324622576333704;  // std dev = 9,13e-09, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.11871757564169022;  // std dev = 0,288, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.12946271746863153;  // std dev = 0,418, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.06842697784420268;  // std dev = 2,11e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.13800515546051684;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13673188115080095;  // std dev = 0,000, 34,000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( female(B) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(A) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.06419184008202618;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06419184008202618;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.06419184008202622;  // std dev = 0,000, 36,000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.0769011447063711;  // std dev = 0,000879, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.999847
   AUC PR    = 0.995368
   CLL	      = -0.082089
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 2.347 seconds
Total inference time: 3.06 seconds
AUC ROC: 0.999847


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0685
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total scoring time: 1.798 seconds
Refined model CLL: -0.0685


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999847
   AUC PR    = 0.995368
   CLL	      = -0.082089
   Precision = 0.743929 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.853165


Total learning time: 6.4559999999999995 seconds
Total inference time: 3.06 seconds
AUC ROC: 0.999847
Total revision time: 6.4559999999999995
Best scored revision CLL: -0.0685


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:40:44
{'Precision': [0.743929, 0.5], 'Recall': 1.0, 'F1': 0.853165, 'parameter': {'Precision': [1.0, 0.5], 'Recall': 0.824926, 'F1': 0.904065, 'AUC PR': 0.865431, 'Learning time': 1.16, 'Inference time': 2.921, 'CLL': -0.201577, 'AUC ROC': 0.977302}, 'AUC PR': 0.995368, 'Learning time': 6.4559999999999995, 'Inference time': 3.06, 'CLL': -0.082089, 'AUC ROC': 0.999847}


Starting fold 5

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos	 examples: 337
Target test neg examples: 12165

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,true,false;haswordauthor(H, D).;false;false
0;false,true;title(F, E), venue(F, A).;true;true
0;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
0;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
0;false,true,true;samebib(F, G), venue(G, B).;false;false
0;false,false,true;title(K, J), venue(K, B).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,true,false;author(H, E), venue(H, A).;false;false
1;false,true;haswordtitle(F, D).;true;true
1;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
1;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
1;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
1;false,true,true;author(G, E), venue(G, A).;false;false
1;false,false,true;title(K, J), venue(K, A).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
2;false,true,false;author(H, E), venue(H, A).;false;false
2;false,true;haswordtitle(F, D).;true;true
2;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
2;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
2;false,true,true;author(G, E), venue(G, A).;false;false
2;false,false,true;author(K, J), venue(K, A).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;false,true,true;samebib(I, J), venue(J, B).;false;false
3;false,true,false;haswordtitle(H, K), haswordauthor(L, K).;false;false
3;true,true;haswordvenue(B, D).;false;true
3;false,true;title(I, H), venue(I, A).;true;true
3;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
3;false;haswordvenue(B, G), haswordtitle(H, G).;true;false
3;true,true,false;author(F, E), venue(F, B).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,true,false;haswordauthor(H, D).;false;false
4;false,true;title(F, E), venue(F, A).;true;true
4;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
4;false,false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
4;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
4;false,true,true;samebib(F, G), venue(G, B).;false;false
4;false,false,true;author(K, J), venue(K, A).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,true,false;title(H, E), venue(H, A).;false;false
5;false,true;title(F, E), venue(F, B).;true;true
5;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;false
5;false;haswordvenue(A, D), haswordtitle(E, D).;true;true
5;false,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(K, J), venue(K, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true,true;haswordtitle(F, C).;true;true
6;true,true,true;haswordtitle(F, D).;false;false
6;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
6;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
6;false;haswordvenue(B, H), haswordtitle(I, H).;false;true
6;true,true,false;haswordauthor(G, C).;false;false
6;false,false,true;title(L, K), venue(L, B).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,true,false;author(G, E), venue(G, A).;false;false
7;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
7;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
7;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,true;haswordtitle(F, D).;false;true
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true;haswordvenue(B, C).;false;true
8;true,false;title(G, D), venue(G, B).;true;true
8;true;venue(E, A), title(E, D).;true;true
8;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
8;true,false,true;haswordvenue(B, C).;false;false
8;true,true,false;samebib(E, F), venue(F, B).;false;false
8;true,false,false;haswordvenue(B, C).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
9;false,true,false;haswordtitle(E, G), haswordauthor(H, G).;false;false
9;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
9;false,true;title(F, E), venue(F, A).;false;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5504566274072049;  // std dev = 3,721, 65,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048766;  // std dev = 8,12e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.40222080677592253;  // std dev = 4,108, 72,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839158;  // std dev = 0,000, 55,000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3428623309717379;  // std dev = 4,009, 70,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360628;  // std dev = 4,59e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( movie(D, B) )
%   | | then return 0.23994528518024366;  // std dev = 4,155, 73,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1015963294878362;  // std dev = 5,74e-09, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2688708407517557;  // std dev = 3,655, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926107;  // std dev = 0,000, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20203602895010797;  // std dev = 3,655, 64,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   else if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(A, G) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08518475138839679;  // std dev = 1,83e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.11034911160803788;  // std dev = 0,473, 68,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=45 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then return -0.07877675473109166;  // std dev = 3,87e-08, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.07364410112814339;  // std dev = 3,956, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.5963754087323585;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.40362459126764166;  // std dev = 0,000, 35,000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.36381726919747465;  // std dev = 2,770, 43,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return -0.06842697784420268;  // std dev = 2,11e-08, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return -0.010664584120635947;  // std dev = 3,773, 78,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=45 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.06419184008202625;  // std dev = 0,000, 72,000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.983069
   AUC PR    = 0.891379
   CLL	      = -0.232402
   Precision = 0.106309 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.192187


Total learning time: 1.08 seconds
Total inference time: 3.012 seconds
AUC ROC: 0.983069


Results scoring model
   AUC ROC   = 0.97178
   AUC PR    = 0.824078
   CLL	      = -0.238653
   Precision = 0.078809 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.146104


Total scoring time: 1.333 seconds
Parameter learned model CLL: -0.238653


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [8.12e-09, 62, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [3.721, 20, 45], 'false,true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [4.108, 27, 45], 'false,true,true': [0.0, 2, 0], 'false,true,false,false': [0.0, 55, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, F)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false,true': [0.0, 0, 0], 'true': [4.009, 25, 45], 'false,true,true': [0.0, 1, 0], 'false,true,false,false': [4.59e-08, 61, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true,true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true,true': 'genre(B, G)'}, {'false,true,false': [5.74e-09, 62, 0], 'false,true,true,true': [0.0, 0, 0], 'true,true,true': [4.155, 28, 45], 'false,false': [0.0, 0, 0], 'false,true,true,false': [0.0, 3, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)', 'false,true,true': 'genre(B, F)'}, {'false,true,false': [0.0, 58, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [3.655, 19, 45], 'false,true,true,false': [0.0, 1, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,false': 'genre(A, G)', 'false': 'movie(D, A)', 'false,true': 'genre(B, E)', 'false,true,true': 'genre(A, F)'}, {'false,true,false,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'true': [3.655, 19, 45], 'false,true,false,false': [1.83e-08, 63, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)'}, {'true,false': [0.0, 0, 0], 'true,true': [0.473, 23, 45], 'false,true': [3.87e-08, 73, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [0.0, 60, 0], 'true': [3.956, 24, 45], 'false,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true': 'movie(C, B)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true,false': 'genre(B, E)', 'true,false,false': 'movie(C, B)'}, {'true,true,false,true': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0], 'true,false,false,true': [2.77, 33, 10], 'true,false,true,true': [0.0, 0, 35], 'true,false,false,false': [2.11e-08, 61, 0], 'false': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)', 'false,true': 'genre(A, E)'}, {'false,true,false': [0.0, 72, 0], 'true': [3.773, 33, 45], 'false,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0]}]]
[{'': [0.21301775147929028, 6.591949208711867e-17], 'false': [6.591949208711867e-17, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 6.446456272017038e-17]}, {'': [0.2343750000000002, -2.921639538487254e-17], 'false,true,false': [nan, -3.633457171500512e-17], 'false': [-2.921639538487254e-17, nan], 'false,true': [0.0, -3.633457171500512e-17]}, {'': [0.22959183673469363, 3.581364595565021e-17], 'false,true,false': [nan, 3.45807171604557e-17], 'false': [3.581364595565021e-17, nan], 'false,true': [0.0, 3.45807171604557e-17]}, {'': [0.23644210921373576, 3.586874387250506e-17], 'false,true,true': [nan, -1.1564823173178713e-18], 'true,true': [0.23644210921373576, nan], 'true': [0.23644210921373576, nan], 'false': [3.586874387250506e-17, nan], 'false,true': [-1.1564823173178713e-18, 3.40229636578677e-17]}, {'': [0.20874023437499978, -1.8817339400426382e-18], 'false': [-1.8817339400426382e-18, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, -1.914177628664063e-18]}, {'': [0.2087402343750005, 4.20539024479226e-18], 'false,true,false': [0.0, 5.28677630773884e-18], 'false': [4.20539024479226e-18, nan], 'false,true,true': [nan, 0.0], 'false,true': [0.0, 4.336808689942018e-18]}, {'': [0.22383217993079563, 2.0531521688273442e-17], 'true': [0.22383217993079563, nan], 'false': [2.0531521688273442e-17, nan]}, {'': [0.22684310018903617, -8.953411488912552e-19], 'false': [-8.953411488912552e-19, nan], 'false,true': [0.0, 0.0]}, {'': [0.13681657139951944, nan], 'true,true': [0.0, 0.0], 'true,false': [0.006017857975719989, 0.09495289502846872], 'true': [0.06968238641931646, 0.13658080808874234], 'true,false,true': [-2.283887364943179e-16, 0.0], 'true,true,false': [nan, 0.0], 'true,false,false': [0.17847485127095744, 7.280150981148568e-18]}, {'': [0.18246621002821964, -6.938893903907228e-18], 'false': [-6.938893903907228e-18, nan], 'false,true': [nan, -6.938893903907228e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, E).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, F).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, E).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(B, E).;true;true
5;false,false;genre(A, G).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(A, D).;true;true
8;true;movie(C, B).;true;true
8;false;genre(B, F).;true;true
8;false,true;movie(C, B).;true;true
8;false,false;movie(C, B).;true;true
9;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0.858148935099512;  // std dev = 2,23e-07, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048766;  // std dev = 6,32e-08, 63,000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0.719473412210955;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1254446385283916;  // std dev = 0,000, 60,000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462839;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.41751358415831025;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then return -0.10159632948783634;  // std dev = 0,000, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.09269127618926104;  // std dev = 0,000, 61,000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2551722425694896;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(A) )
%   | | then if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(B, D) )
%   | then return -0.08518475138839683;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( female(B) )
%   | | | then return -0.0851847513883968;  // std dev = 1,29e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.0851847513883968;  // std dev = 1,67e-08, 37,000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07877675473109172;  // std dev = 9,31e-10, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253556;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( actor(A) )
%   | then if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.07877675473109176;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08573401546017634;  // std dev = 0,014, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527753;  // std dev = 0,000, 45,000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.22317768106161417;  // std dev = 0,671, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.08572848596862966;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( female(B) )
%   | | | then return -0.07322006646348254;  // std dev = 0,000458, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.07321259237780985;  // std dev = 0,000454, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06889091014933012;  // std dev = 0,014, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.1404565894304556;  // std dev = 0,215, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.14110317493998883;  // std dev = 0,215, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06719548020352259;  // std dev = 0,028, 80,000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | | else return 0.11588205210402518;  // std dev = 0,286, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.13619679809103988;  // std dev = 0,001, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.1359053457544795;  // std dev = 0,001, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( female(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06426585739739765;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06424321724767651;  // std dev = 0,000127, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( female(A) )
%   | | | then return -0.06426585739739765;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.05581737766618931;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(B), actor(A) )
%   | then if ( female(A) )
%   | | then return -0.06426585739739761;  // std dev = 9,31e-10, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return -0.06426758611091925;  // std dev = 2,14e-07, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else return -0.07527736963206533;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080062
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 2.63 seconds
Total inference time: 3.222 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066166
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total scoring time: 1.366 seconds
Refined model CLL: -0.066166


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080062
   Precision = 0.742291 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.852086


Total learning time: 6.409000000000001 seconds
Total inference time: 3.222 seconds
AUC ROC: 1.0
Total revision time: 6.409000000000001
Best scored revision CLL: -0.066166


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:40:58
{'Precision': [0.742291, 0.5], 'Recall': 1.0, 'F1': 0.852086, 'parameter': {'Precision': [0.106309, 0.5], 'Recall': 1.0, 'F1': 0.192187, 'AUC PR': 0.891379, 'Learning time': 1.08, 'Inference time': 3.012, 'CLL': -0.232402, 'AUC ROC': 0.983069}, 'AUC PR': 1.0, 'Learning time': 6.409000000000001, 'Inference time': 3.222, 'CLL': -0.080062, 'AUC ROC': 1.0}


