Starting experiment #2 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordvenue(A, D) )
%   | | then return 0.8126943896449667;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( author(F, E), venue(F, A) )
%   | | | then return 0.37814893509951164;  // std dev = 4,327, 75,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=39 */
%   | | | else return 0.029035011048878824;  // std dev = 4,731, 158,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=27 */
%   | else return 0.2109998683646567;  // std dev = 0,478, 7.822,000 (wgt'ed) examples reached here.  /* #neg=5.062 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then return 0.06546600827024404;  // std dev = 0,405, 410,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=85 */
%   | | else if ( haswordauthor(J, G) )
%   | | | then return 0.17064893509951237;  // std dev = 3,211, 48,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return -0.052107475156898016;  // std dev = 4,372, 234,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=21 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.021457944507367443;  // std dev = 0,325, 407,000 (wgt'ed) examples reached here.  /* #neg=358 #pos=49 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.18700674050992985;  // std dev = 0,478, 7.986,000 (wgt'ed) examples reached here.  /* #neg=5.139 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.815508690562167;  // std dev = 1,702, 87,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=84 */
%   | | | else return -0.1468835508171432;  // std dev = 0,998, 320,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=1 */
%   | | else if ( haswordauthor(H, D) )
%   | | | then return 0.2772571923681644;  // std dev = 2,895, 34,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return -0.058702568195814084;  // std dev = 4,403, 273,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.0010394843305769753;  // std dev = 6,357, 335,000 (wgt'ed) examples reached here.  /* #neg=288 #pos=47 */
%   | | | else return -0.1059256897987762;  // std dev = 1,390, 60,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=2 */
%   | | else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7650486250894236;  // std dev = 0,178, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.22533468049595104;  // std dev = 0,000, 29,000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( haswordauthor(H, C) )
%   | | | then return 0.6900384086553474;  // std dev = 4,21e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.013437841605833539;  // std dev = 4,695, 147,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=27 */
%   | else return 0.16253132616272162;  // std dev = 0,480, 7.666,000 (wgt'ed) examples reached here.  /* #neg=4.906 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then if ( title(K, J), venue(K, A) )
%   | | then if ( samebib(K, L), venue(L, B) )
%   | | | then return 0.6586636871944583;  // std dev = 2,172, 89,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=84 */
%   | | | else return -0.12874181595815196;  // std dev = 0,998, 287,000 (wgt'ed) examples reached here.  /* #neg=286 #pos=1 */
%   | | else return -0.013731597676199987;  // std dev = 0,327, 282,000 (wgt'ed) examples reached here.  /* #neg=246 #pos=36 */
%   | else return -0.02475840043026995;  // std dev = 0,315, 436,000 (wgt'ed) examples reached here.  /* #neg=387 #pos=49 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.13095823299070145;  // std dev = 0,477, 8.000,000 (wgt'ed) examples reached here.  /* #neg=5.153 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.7141424992230273;  // std dev = 0,299, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14652529683310264;  // std dev = 0,070, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09171676332850295;  // std dev = 3,241, 52,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | | else return -0.1304135625516513;  // std dev = 0,033, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.014501427020543875;  // std dev = 5,778, 401,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=83 */
%   | | | else return -0.050150087400369366;  // std dev = 4,402, 272,000 (wgt'ed) examples reached here.  /* #neg=251 #pos=21 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.021580879709852896;  // std dev = 6,448, 415,000 (wgt'ed) examples reached here.  /* #neg=368 #pos=47 */
%   | | | else return -0.10987152243031921;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.1092990100895265;  // std dev = 0,477, 7.957,000 (wgt'ed) examples reached here.  /* #neg=5.110 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.22440539661681716;  // std dev = 0,402, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1438024893084847;  // std dev = 3,083, 42,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | else return -0.05282463672300923;  // std dev = 0,229, 27,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.02043615433894309;  // std dev = 8,128, 710,000 (wgt'ed) examples reached here.  /* #neg=628 #pos=82 */
%   | | | else return 0.010211481149647868;  // std dev = 2,807, 110,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=21 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.006248833500751961;  // std dev = 4,438, 254,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=48 */
%   | | | else return -0.09957770047223856;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.6992827413602412;  // std dev = 0,586, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.2690977915990443;  // std dev = 0,000, 39,000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( haswordtitle(H, C) )
%   | | | then return -0.03759474768087265;  // std dev = 4,727, 138,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=36 */
%   | | | else return 0.6529977908744344;  // std dev = 0,326, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.08788792430610429;  // std dev = 0,478, 7.738,000 (wgt'ed) examples reached here.  /* #neg=4.978 #pos=2.760 */
%   else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | then return 0.005870096716387916;  // std dev = 0,299, 690,000 (wgt'ed) examples reached here.  /* #neg=569 #pos=121 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then if ( title(M, L), venue(M, B) )
%   | | | then return -9.150346993736429E-4;  // std dev = 6,363, 359,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=47 */
%   | | | else return -0.08363227406729015;  // std dev = 1,389, 55,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=2 */
%   | | else return -0.09118115650254842;  // std dev = 0,002, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.07255896142812494;  // std dev = 0,476, 7.915,000 (wgt'ed) examples reached here.  /* #neg=5.068 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordtitle(E, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.09408651209077797;  // std dev = 3,174, 49,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | | else return -0.015079140144748452;  // std dev = 5,860, 520,000 (wgt'ed) examples reached here.  /* #neg=437 #pos=83 */
%   | | else if ( haswordtitle(E, H), haswordvenue(A, H) )
%   | | | then return 0.07300364175946288;  // std dev = 4,059, 107,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=21 */
%   | | | else return -0.12176214432617141;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.0058994937375164746;  // std dev = 6,380, 375,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=47 */
%   | | | else return -0.0832347806051743;  // std dev = 1,394, 71,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=2 */
%   | | else return -0.08390166206928634;  // std dev = 0,002, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordtitle(F, C) )
%   | | | then return 0.1240455224807264;  // std dev = 5,138, 152,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=69 */
%   | | | else return 0.5964451388433731;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.13832843172034756;  // std dev = 0,254, 91,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=13 */
%   | else return 0.05364160598966338;  // std dev = 0,477, 7.764,000 (wgt'ed) examples reached here.  /* #neg=5.004 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | then if ( title(I, H), venue(I, A) )
%   | | then return 0.030122663502536253;  // std dev = 0,294, 370,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=85 */
%   | | else return -0.022310314219326915;  // std dev = 0,320, 289,000 (wgt'ed) examples reached here.  /* #neg=253 #pos=36 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( title(L, K), venue(L, B) )
%   | | | then return -0.0032957778567277406;  // std dev = 6,374, 368,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=47 */
%   | | | else return -0.06984541640123808;  // std dev = 1,391, 59,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=2 */
%   | | else return -0.07751596564743432;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(E, C) )
%   | | then return 0.39352293539895455;  // std dev = 0,081, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( author(F, E), venue(F, B) )
%   | | | then return 0.1030973747904276;  // std dev = 3,669, 89,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=39 */
%   | | | else return -0.05608355520060781;  // std dev = 4,421, 113,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=27 */
%   | else return 0.045977149164537545;  // std dev = 0,478, 7.695,000 (wgt'ed) examples reached here.  /* #neg=4.935 #pos=2.760 */
%   else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | then if ( haswordauthor(H, I), haswordvenue(A, I) )
%   | | then return -0.1587268070905456;  // std dev = 0,123, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( author(J, H), venue(J, A) )
%   | | | then return 0.17425601320853323;  // std dev = 1,079, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.040099310684207294;  // std dev = 3,184, 58,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | then return -0.013270362450374744;  // std dev = 0,299, 821,000 (wgt'ed) examples reached here.  /* #neg=718 #pos=103 */
%   | | else return -0.007970899519809347;  // std dev = 0,271, 275,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=48 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, A), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.024256615161691614;  // std dev = 0,472, 7.507,000 (wgt'ed) examples reached here.  /* #neg=4.898 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.7265280458712224;  // std dev = 2,760, 140,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=133 */
%   | | | else return -0.13243207700553689;  // std dev = 1,658, 590,000 (wgt'ed) examples reached here.  /* #neg=588 #pos=2 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.134186565208367;  // std dev = 4,676, 144,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=27 */
%   | | | else return -0.06867813196571147;  // std dev = 0,998, 16,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.35801704321161815;  // std dev = 4,885, 113,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=78 */
%   | | | else return 0.07457986141119048;  // std dev = 4,316, 175,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=49 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then return 0.06874817528151682;  // std dev = 0,338, 312,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=86 */
%   | else return 0.45760994188062826;  // std dev = 0,336, 43,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=31 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5724346493852266;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.48767788391726297;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3912569620992536;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3005711547884894;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22629823971521876;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926094;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.455557872479387;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.544442127520613;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1306190173736879;  // std dev = 0,904, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.10081313366781146;  // std dev = 0,343, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.2962480347273927;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.4663581334061774;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23839901957201737;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.35408538855178556;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.140833
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 0.842 seconds
Total inference time: 1.603 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.194026
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.533 seconds
Parameter learned model CLL: -0.194026


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [1.195, 2, 5], 'false,true,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.195, 2, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)', 'false,true': 'genre(A, G)'}, {'true,true,false': [0.452, 2, 5], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,true,false': [2.63e-09, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.195, 2, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [1.195, 2, 5], 'false,true': [1.32e-09, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'true,true,true,false': [0.0, 0, 5]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [0.904, 2, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.343, 2, 5], 'false,true,true': [0.0, 0, 0], 'false,true,false': [1.86e-09, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'true,true,true': [0.0, 0, 5], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(A, D)', 'true,false': 'genre(B, E)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.0, 2, 0], 'true,false,true,true': [7.45e-09, 0, 5], 'true,false,true,false': [0.0, 0, 0], 'true,false,false,false': [1.32e-09, 3, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.20408163265306106, 0.0], 'true': [0.20408163265306106, nan], 'false': [0.0, nan], 'true,true': [0.20408163265306106, nan], 'false,true': [nan, 0.0]}, {'': [0.20408163265306115, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.20408163265306115, 2.3129646346357427e-18], 'true': [0.20408163265306115, nan], 'false': [2.3129646346357427e-18, nan], 'true,true': [nan, 0.20408163265306115], 'false,true': [nan, 2.3129646346357427e-18]}, {'': [0.2040816326530612, -1.1564823173178713e-18], 'false,true': [nan, -1.1564823173178713e-18], 'false': [-1.1564823173178713e-18, nan]}, {'': [0.20408163265306128, 2.3129646346357427e-18], 'false': [2.3129646346357427e-18, nan]}, {'': [0.2040816326530612, 0.0], 'true': [0.2040816326530612, nan], 'true,true,true': [nan, -4.4408920985006264e-17], 'false': [0.0, nan], 'true,true': [-4.4408920985006264e-17, 0.0]}, {'': [0.11667360691116267, 0.0], 'false,true': [0.0, nan], 'false': [0.0, nan]}, {'': [0.11758711755723952, 1.1564823173178713e-18], 'true': [0.11758711755723952, nan], 'false': [1.1564823173178713e-18, nan], 'false,true': [nan, 1.1564823173178713e-18]}, {'': [0.11868738115823815, -5.782411586589357e-19], 'true': [0.11868738115823815, nan], 'false': [-5.782411586589357e-19, nan], 'true,true': [-1.1102230246251566e-17, 0.0], 'false,true': [-5.782411586589357e-19, nan]}, {'': [0.05388025780557058, nan], 'true': [nan, 0.05388025780557058], 'true,false': [1.1102230246251566e-17, 0.020169184666653284], 'true,false,true': [1.1102230246251566e-17, nan], 'true,false,false': [0.0, 5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(B, E).;true;true
9;false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5724346493852266;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.48767788391726297;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3912569620992536;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3005711547884894;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22629823971521876;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.455557872479387;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.544442127520613;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1306190173736879;  // std dev = 0,342, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10081313366781146;  // std dev = 0,343, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.2962480347273927;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.4663581334061774;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.23839901957201737;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( movie(D, B) )
%   | then return -0.18014925946992996;  // std dev = 0,318, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999547
   AUC PR    = 0.949153
   CLL	      = -0.15046
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 0.948 seconds
Total inference time: 1.316 seconds
AUC ROC: 0.999547


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.202321
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.474 seconds
Refined model CLL: -0.202321


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.140833
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 2.7969999999999997 seconds
Total inference time: 1.603 seconds
AUC ROC: 1.0
Total revision time: 2.7969999999999997
Best scored revision CLL: -0.194026


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:42:14
{'CLL': -0.140833, 'AUC ROC': 1.0, 'F1': 0.973913, 'Recall': 1.0, 'Precision': [0.949153, 0.5], 'parameter_5': {'CLL': -0.140833, 'AUC ROC': 1.0, 'F1': 0.973913, 'Recall': 1.0, 'Precision': [0.949153, 0.5], 'Inference time': 1.603, 'Learning time': 0.842, 'AUC PR': 1.0}, 'Inference time': 1.603, 'Learning time': 2.7969999999999997, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.982164
   AUC PR    = 0.321839
   CLL	      = -0.13584
   Precision = 0.321839 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.486957


Total learning time: 0.953 seconds
Total inference time: 1.098 seconds
AUC ROC: 0.982164


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:42:17
{'CLL': -0.13584, 'AUC ROC': 0.982164, 'F1': 0.486957, 'Recall': 1.0, 'Precision': [0.321839, 0.5], 'Inference time': 1.098, 'Learning time': 0.953, 'AUC PR': 0.321839}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.982164
   AUC PR    = 0.321839
   CLL	      = -0.159815
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.47 seconds
Total inference time: 0.823 seconds
AUC ROC: 0.982164


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:42:18
{'CLL': -0.159815, 'AUC ROC': 0.982164, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.823, 'Learning time': 0.47, 'AUC PR': 0.321839}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5724346493852266;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4876778839172629;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3912569620992537;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3005711547884892;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22629823971521892;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.45555787247938706;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.544442127520613;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13061901737368786;  // std dev = 1,278, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1008131336678114;  // std dev = 0,343, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.29624803472739275;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.4663581334061774;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2383990195720173;  // std dev = 1,49e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.35408538855178545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.139031
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 0.91 seconds
Total inference time: 1.409 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.194026
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.607 seconds
Parameter learned model CLL: -0.194026


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'true,true,true': [1.69, 4, 10], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.69, 4, 10], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.452, 4, 10], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0], 'true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.69, 4, 10], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [1.69, 4, 10], 'false,true': [0.0, 6, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [2.63e-09, 6, 0], 'true,true,true,false': [0.0, 0, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [1.278, 4, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 6, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.343, 4, 10], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [1.86e-09, 6, 0], 'true,true,true': [0.0, 0, 10], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.0, 4, 0], 'true,true,false,false': [0.0, 2, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 0, 10], 'true,false,false,false': [1.32e-09, 3, 0]}]]
[{'': [0.20408163265306115, -6.938893903907228e-18], 'true': [0.20408163265306115, nan], 'false': [-6.938893903907228e-18, nan], 'true,true': [0.20408163265306115, nan], 'false,true': [0.0, 0.0]}, {'': [0.20408163265306115, -2.3129646346357427e-18], 'false,true': [0.0, 0.0], 'false': [-2.3129646346357427e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.20408163265306123, 0.0], 'false,true,true': [nan, 0.0], 'true': [0.20408163265306123, nan], 'false,true': [0.0, 0.0], 'false': [0.0, nan], 'true,true': [nan, 0.20408163265306123]}, {'': [0.20408163265306126, 0.0], 'false,true': [0.0, 0.0], 'false': [0.0, nan], 'false,true,true': [nan, 0.0]}, {'': [0.20408163265306126, 1.1564823173178713e-18], 'false': [1.1564823173178713e-18, nan]}, {'': [0.20408163265306123, 1.1564823173178713e-18], 'true': [0.20408163265306123, nan], 'true,true,true': [nan, -1.3322676295501878e-16], 'false': [1.1564823173178713e-18, nan], 'true,true': [-1.3322676295501878e-16, 0.0]}, {'': [0.11667360691116269, -1.1564823173178713e-18], 'false,true': [-1.1564823173178713e-18, nan], 'false': [-1.1564823173178713e-18, nan]}, {'': [0.11758711755723952, 0.0], 'true': [0.11758711755723952, nan], 'false': [0.0, nan], 'false,true': [0.0, 0.0]}, {'': [0.11868738115823817, 5.782411586589357e-19], 'true': [0.11868738115823817, nan], 'false': [5.782411586589357e-19, nan], 'true,true': [-1.1102230246251566e-17, 0.0], 'false,true': [5.782411586589357e-19, nan]}, {'': [0.05388025780557058, nan], 'true,true,false': [nan, 0.0], 'true,false': [0.007567043664973011, 0.020580800680258464], 'true': [0.0, 0.05879189012268414], 'true,false,true': [2.2204460492503132e-17, 0.0], 'true,true': [nan, 0.0], 'true,false,false': [0.0, 5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10569290570943442;  // std dev = 0,183, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065529
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.147 seconds
Total inference time: 1.521 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096219
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.534 seconds
Refined model CLL: -0.096219


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065529
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 3.1979999999999995 seconds
Total inference time: 1.521 seconds
AUC ROC: 1.0
Total revision time: 3.1979999999999995
Best scored revision CLL: -0.096219


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:42:25
{'CLL': -0.065529, 'AUC ROC': 1.0, 'F1': 0.973913, 'Recall': 1.0, 'Precision': [0.949153, 0.5], 'Inference time': 1.521, 'Learning time': 3.1979999999999995, 'AUC PR': 1.0, 'parameter_10': {'CLL': -0.139031, 'AUC ROC': 1.0, 'F1': 0.973913, 'Recall': 1.0, 'Precision': [0.949153, 0.5], 'Inference time': 1.409, 'Learning time': 0.91, 'AUC PR': 1.0}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3584548159137827;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3758477125459626;  // std dev = 0,142, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.17514190413496675;  // std dev = 0,452, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.29317544697447745;  // std dev = 0,125, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.15654600352885242;  // std dev = 0,425, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.23665032642175374;  // std dev = 0,108, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.14115745372277957;  // std dev = 0,399, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.19681041001903185;  // std dev = 0,094, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12823610122081286;  // std dev = 0,375, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.16768543128476252;  // std dev = 0,083, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11725446613568365;  // std dev = 0,352, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14566367993035953;  // std dev = 0,074, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10782514532820912;  // std dev = 0,331, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.999765
   AUC PR    = 0.983476
   CLL	      = -0.069783
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.471 seconds
Total inference time: 1.379 seconds
AUC ROC: 0.999765


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:42:28
{'CLL': -0.069783, 'AUC ROC': 0.999765, 'F1': 0.973913, 'Recall': 1.0, 'Precision': [0.949153, 0.5], 'Inference time': 1.379, 'Learning time': 1.471, 'AUC PR': 0.983476}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */


Results
   AUC ROC   = 0.983055
   AUC PR    = 0.338212
   CLL	      = -0.15996
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.615 seconds
Total inference time: 0.84 seconds
AUC ROC: 0.983055


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:42:30
{'CLL': -0.15996, 'AUC ROC': 0.983055, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.84, 'Learning time': 0.615, 'AUC PR': 0.338212}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.6081489350995123;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5170719622367218;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.4125724528826601;  // std dev = 0,433, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3151786576185066;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2367600938643422;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4280694542720749;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.40526387906125844;  // std dev = 0,373, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1381693534173058;  // std dev = 1,585, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.10702953174871332;  // std dev = 0,356, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.27627785892542805;  // std dev = 2,58e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.36570476640705424;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22456163303307544;  // std dev = 2,58e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2745963706283144;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.178516
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 0.881 seconds
Total inference time: 1.545 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.988889
   AUC PR    = 0.991667
   CLL	      = -0.228935
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.965517


Total scoring time: 0.532 seconds
Parameter learned model CLL: -0.228935


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'true,true,true': [1.936, 5, 15], 'false,true,false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.936, 5, 15], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 7, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.433, 5, 15], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 7, 0], 'true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.936, 5, 15], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.86e-09, 7, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [1.936, 5, 15], 'false,true': [0.0, 10, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.373, 5, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [3.73e-09, 10, 0], 'true,true,true,false': [0.0, 0, 14]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [1.585, 5, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 10, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.356, 5, 15], 'false,true,true': [1.86e-09, 3, 0], 'false,true,false': [2.63e-09, 7, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [0.913, 5, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 10, 0], 'true,true,true': [2.58e-08, 0, 14], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.913, 5, 1], 'true,true,false,false': [0.0, 2, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 1, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [2.58e-08, 0, 14], 'true,false,false,false': [0.0, 6, 0]}]]
[{'': [0.18749999999999964, -1.1102230246251566e-17], 'true': [0.18749999999999964, nan], 'false': [-1.1102230246251566e-17, nan], 'true,true': [0.18749999999999964, nan], 'false,true': [0.0, -7.93016446160826e-18]}, {'': [0.18750000000000008, 2.7755575615628915e-18], 'false,true': [0.0, -1.982541115402065e-18], 'false': [2.7755575615628915e-18, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.18749999999999994, 0.0], 'false,true,true': [0.0, 0.0], 'true': [0.18749999999999994, nan], 'false,true': [2.3129646346357427e-18, -1.982541115402065e-18], 'false': [0.0, nan], 'true,true': [nan, 0.18749999999999994]}, {'': [0.1874999999999999, 1.3877787807814458e-18], 'false,true': [-1.1564823173178713e-18, 0.0], 'false': [1.3877787807814458e-18, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.18749999999999986, 0.0], 'false': [0.0, nan]}, {'': [0.18750000000000003, 1.3877787807814458e-18], 'true': [0.18750000000000003, nan], 'true,true,true': [nan, 0.0], 'false': [1.3877787807814458e-18, nan], 'true,true': [0.0, 0.1388888888888889]}, {'': [0.12564122628941693, 0.0], 'false,true': [0.0, nan], 'false': [0.0, nan]}, {'': [0.12692479810700089, 6.938893903907229e-19], 'true': [0.12692479810700089, nan], 'false': [6.938893903907229e-19, nan], 'false,true': [1.1564823173178713e-18, 9.912705577010326e-19]}, {'': [0.1282164218247118, 6.938893903907229e-19], 'true': [0.1282164218247118, nan], 'false': [6.938893903907229e-19, nan], 'true,true': [4.7580986769649563e-17, 0.13888888888888892], 'false,true': [6.938893903907229e-19, nan]}, {'': [0.0669539282239153, nan], 'true,true,false': [0.0, 0.0], 'true,false': [0.005187999801353257, 0.08051196106304541], 'true': [5.782411586589357e-19, 0.073333023784734], 'true,false,true': [4.7580986769649563e-17, 0.0], 'true,true': [nan, 5.782411586589357e-19], 'true,false,false': [0.13888888888888887, -5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, F).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, H).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,true;genre(B, F).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7194734122109543;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.41751358415830986;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.2551722425694894;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.028458585728749153;  // std dev = 0,311, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( actor(A) )
%   | then return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08299304306763039;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.21823453692348185;  // std dev = 0,046, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( actor(A) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17959963845779664;  // std dev = 0,011, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07689150892339651;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.15132831786041356;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.15242020021678204;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.02776457383024362;  // std dev = 0,240, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( actor(A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( genre(B, D) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, E) )
%   | then if ( movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13290096724710188;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11395969011316143;  // std dev = 0,188, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.04485697731411873;  // std dev = 0,073, 12,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068184
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.398 seconds
Total inference time: 1.415 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100225
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.552 seconds
Refined model CLL: -0.100225


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068184
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 3.363 seconds
Total inference time: 1.415 seconds
AUC ROC: 1.0
Total revision time: 3.363
Best scored revision CLL: -0.100225


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:42:37
{'CLL': -0.068184, 'AUC ROC': 1.0, 'F1': 0.973913, 'Recall': 1.0, 'Precision': [0.949153, 0.5], 'parameter_15': {'CLL': -0.178516, 'AUC ROC': 1.0, 'F1': 0.973913, 'Recall': 1.0, 'Precision': [0.949153, 0.5], 'Inference time': 1.545, 'Learning time': 0.881, 'AUC PR': 1.0}, 'Inference time': 1.415, 'Learning time': 3.363, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6392070123615109;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.49932275605826126;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3758491322444214;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.28401811356076057;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.29370688540364015;  // std dev = 0,122, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.23403940171802917;  // std dev = 0,516, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.23688259493046412;  // std dev = 0,106, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.20840533739735093;  // std dev = 0,484, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.1968947080139374;  // std dev = 0,092, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(B), actor(A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.18680698907476997;  // std dev = 0,452, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.16769550992119117;  // std dev = 0,081, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.16840794244566765;  // std dev = 0,420, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.14563621334026172;  // std dev = 0,072, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A), actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.15261835491052594;  // std dev = 0,389, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082572
   Precision = 0.523364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.687117


Total learning time: 1.619 seconds
Total inference time: 1.414 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:42:40
{'CLL': -0.082572, 'AUC ROC': 1.0, 'F1': 0.687117, 'Recall': 1.0, 'Precision': [0.523364, 0.5], 'Inference time': 1.414, 'Learning time': 1.619, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.98376
   AUC PR    = 0.343975
   CLL	      = -0.159455
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.618 seconds
Total inference time: 0.888 seconds
AUC ROC: 0.98376


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:42:42
{'CLL': -0.159455, 'AUC ROC': 0.98376, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.888, 'Learning time': 0.618, 'AUC PR': 0.343975}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5988896758402525;  // std dev = 2,277, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5094629858417187;  // std dev = 2,277, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.4070740258573001;  // std dev = 0,438, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3114078147114217;  // std dev = 2,277, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783627;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23403251771721492;  // std dev = 2,277, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926096;  // std dev = 1,32e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.43515058744139706;  // std dev = 5,16e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.34262719033638056;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1360141394623394;  // std dev = 1,909, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.10503111162478469;  // std dev = 0,369, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.28149401309664535;  // std dev = 2,11e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.3175150664606845;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22819051407381913;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2383026077545059;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.190684
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 0.926 seconds
Total inference time: 1.384 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.9825
   AUC PR    = 0.985741
   CLL	      = -0.250935
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.586 seconds
Parameter learned model CLL: -0.250935


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 4, 0], 'true,true,true': [2.277, 7, 20], 'false,true,false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.277, 7, 20], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 9, 0], 'false,true,true,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.438, 7, 20], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 9, 0], 'true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.63e-09, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.277, 7, 20], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.32e-09, 9, 0], 'false,true,true,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [2.277, 7, 20], 'false,true': [1.32e-09, 13, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.416, 7, 2], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [7.45e-09, 13, 0], 'true,true,true,false': [5.16e-08, 0, 18]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [1.909, 7, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [3.73e-09, 13, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.369, 7, 20], 'false,true,true': [0.0, 4, 0], 'false,true,false': [2.63e-09, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [1.247, 7, 2], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 13, 0], 'true,true,true': [2.11e-08, 0, 18], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.247, 7, 2], 'true,true,false,false': [1.32e-09, 3, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 1, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 18], 'true,false,false,false': [0.0, 8, 0]}]]
[{'': [0.19204389574759964, -1.2810265668751807e-17], 'true': [0.19204389574759964, nan], 'false': [-1.2810265668751807e-17, nan], 'true,true': [0.19204389574759964, nan], 'false,true': [0.0, -9.25185853854297e-18]}, {'': [0.1920438957475991, 4.270088556250602e-18], 'false,true': [0.0, 0.0], 'false': [4.270088556250602e-18, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.19204389574759936, 8.540177112501205e-18], 'false,true,true': [0.0, 2.3129646346357427e-18], 'true': [0.19204389574759936, nan], 'false,true': [0.0, -1.5419764230904951e-18], 'false': [8.540177112501205e-18, nan], 'true,true': [nan, 0.19204389574759936]}, {'': [0.19204389574759959, -2.135044278125301e-18], 'false,true': [0.0, 3.0839528461809902e-18], 'false': [-2.135044278125301e-18, nan], 'false,true,true': [0.0, -1.1564823173178713e-18]}, {'': [0.19204389574759945, 2.135044278125301e-18], 'false': [2.135044278125301e-18, nan]}, {'': [0.1920438957475995, 4.270088556250602e-18], 'true': [0.1920438957475995, nan], 'false': [4.270088556250602e-18, nan], 'true,true,true': [nan, 1.4802973661668753e-16], 'true,true': [1.4802973661668753e-16, 0.1728395061728395]}, {'': [0.13498049327956674, 1.0675221390626506e-18], 'false,true': [1.0675221390626506e-18, nan], 'false': [1.0675221390626506e-18, nan]}, {'': [0.13616738286316887, 0.0], 'true': [0.13616738286316887, nan], 'false': [0.0, nan], 'false,true': [0.0, 7.709882115452476e-19]}, {'': [0.13734914147808416, 5.337610695313253e-19], 'true': [0.13734914147808416, nan], 'false': [5.337610695313253e-19, nan], 'true,true': [2.4671622769447922e-17, 0.1728395061728395], 'false,true': [5.337610695313253e-19, nan]}, {'': [0.07564178235807055, nan], 'true,true,false': [0.0, 5.782411586589357e-19], 'true,false': [0.004262531685293214, 0.09905568416141333], 'true': [0.0, 0.08299244572378492], 'true,false,true': [-1.850371707708594e-17, 0.0], 'true,true': [nan, 0.0], 'true,false,false': [0.1728395061728395, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, F).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, H).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,true;genre(B, F).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.7194734122109544;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.41751358415830986;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783627;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( actor(A) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( female(A), actor(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.050958046194757654;  // std dev = 0,373, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( actor(A) )
%   | then return -0.08518475138839687;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08924068313882653;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.21872043014445913;  // std dev = 0,016, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( actor(A) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08224843811599637;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.1836864056254751;  // std dev = 0,014, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.17709649774527736;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.15074199579489522;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.15274385809367094;  // std dev = 3,23e-09, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( female(A), actor(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.025765568783812542;  // std dev = 0,279, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( actor(A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( genre(B, D) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, E) )
%   | then if ( movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13244226026540684;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.11876096307800829;  // std dev = 0,190, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then return -0.03849893554048823;  // std dev = 0,078, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069032
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.669 seconds
Total inference time: 1.434 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100563
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.584 seconds
Refined model CLL: -0.100563


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069032
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 3.765 seconds
Total inference time: 1.434 seconds
AUC ROC: 1.0
Total revision time: 3.765
Best scored revision CLL: -0.100563


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:42:49
{'CLL': -0.069032, 'AUC ROC': 1.0, 'F1': 0.973913, 'Recall': 1.0, 'Precision': [0.949153, 0.5], 'Inference time': 1.434, 'Learning time': 3.765, 'AUC PR': 1.0, 'parameter_20': {'CLL': -0.190684, 'AUC ROC': 1.0, 'F1': 0.973913, 'Recall': 1.0, 'Precision': [0.949153, 0.5], 'Inference time': 1.384, 'Learning time': 0.926, 'AUC PR': 1.0}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.08518475138839686;  // std dev = 1,05e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.2058219239749592;  // std dev = 0,105, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.21360253898505355;  // std dev = 0,628, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.1742978264877709;  // std dev = 0,092, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.19512696750702102;  // std dev = 0,604, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.15067945745701405;  // std dev = 0,082, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06419184008202618;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(B), actor(A) )
%   | then return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.17911283563101837;  // std dev = 0,578, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098777
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 1.718 seconds
Total inference time: 1.438 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:42:52
{'CLL': -0.098777, 'AUC ROC': 1.0, 'F1': 0.506787, 'Recall': 1.0, 'Precision': [0.339394, 0.5], 'Inference time': 1.438, 'Learning time': 1.718, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.98376
   AUC PR    = 0.343975
   CLL	      = -0.159413
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.664 seconds
Total inference time: 0.908 seconds
AUC ROC: 0.98376


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:42:54
{'CLL': -0.159413, 'AUC ROC': 0.98376, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.908, 'Learning time': 0.664, 'AUC PR': 0.343975}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.6157246926752692;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.52329140204601;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.41705713205422834;  // std dev = 0,429, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3182568702797341;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23900178423471655;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926094;  // std dev = 2,28e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4223016734770957;  // std dev = 6,32e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.3049710537956314;  // std dev = 0,445, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13951882740329852;  // std dev = 2,104, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.10806374864538947;  // std dev = 0,368, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.27225409932711353;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.2909115576440209;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22175465236211;  // std dev = 3,33e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2185315794317484;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.207067
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 0.966 seconds
Total inference time: 1.737 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.9808
   AUC PR    = 0.983723
   CLL	      = -0.253244
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.88
   F1        = 0.93617


Total scoring time: 0.604 seconds
Parameter learned model CLL: -0.253244


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 6, 0], 'true,true,true': [2.462, 8, 25], 'false,true,false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.462, 8, 25], 'false,true,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.86e-09, 11, 0], 'false,true,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.429, 8, 25], 'false,true,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [7.45e-09, 11, 0], 'true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.462, 8, 25], 'false,true,true,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 11, 0], 'false,true,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [2.462, 8, 25], 'false,true': [2.28e-09, 17, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.445, 8, 3], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [1.18e-08, 17, 0], 'true,true,true,false': [6.32e-08, 0, 22]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [2.104, 8, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 17, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.368, 8, 25], 'false,true,true': [0.0, 6, 0], 'false,true,false': [2.63e-09, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [1.477, 8, 3], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 17, 0], 'true,true,true': [0.0, 0, 22], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.477, 8, 3], 'true,true,false,false': [0.0, 4, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [3.33e-08, 0, 22], 'true,false,false,false': [3.73e-09, 10, 0]}]]
[{'': [0.1836547291092757, -3.2653618371328133e-18], 'true': [0.1836547291092757, nan], 'false': [-3.2653618371328133e-18, nan], 'true,true': [0.1836547291092757, nan], 'false,true': [-6.938893903907228e-18, -1.0092936587501423e-17]}, {'': [0.18365472910927527, 0.0], 'false,true': [-2.3129646346357427e-18, 2.523234146875356e-18], 'false': [0.0, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.1836547291092741, 1.3061447348531253e-17], 'false,true,true': [0.0, 0.0], 'true': [0.1836547291092741, nan], 'false,true': [0.0, 5.046468293750712e-18], 'false': [1.3061447348531253e-17, nan], 'true,true': [nan, 0.1836547291092741]}, {'': [0.18365472910927455, -8.163404592832034e-18], 'false,true': [0.0, 0.0], 'false': [-8.163404592832034e-18, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.18365472910927466, 4.89804275569922e-18], 'false': [4.89804275569922e-18, nan]}, {'': [0.1836547291092747, 8.163404592832034e-18], 'true': [0.1836547291092747, nan], 'false': [8.163404592832034e-18, nan], 'true,true,true': [nan, 1.8167285857502563e-16], 'true,true': [1.8167285857502563e-16, 0.1983471074380165]}, {'': [0.134152574989817, -2.44902137784961e-18], 'false,true': [-2.44902137784961e-18, nan], 'false': [-2.44902137784961e-18, nan]}, {'': [0.13539670006310986, 0.0], 'true': [0.13539670006310986, nan], 'false': [0.0, nan], 'false,true': [0.0, 6.30808536718839e-19]}, {'': [0.136594715188612, -8.163404592832033e-19], 'true': [0.136594715188612, nan], 'false': [-8.163404592832033e-19, nan], 'true,true': [-1.0092936587501423e-16, 0.1983471074380166], 'false,true': [-8.163404592832033e-19, nan]}, {'': [0.07641512974339522, nan], 'true,true,false': [0.0, 0.0], 'true,false': [0.003400451273921219, 0.10983778885229303], 'true': [-5.782411586589357e-19, 0.08552774436195536], 'true,false,true': [5.0464682937507114e-17, 0.0], 'true,true': [nan, -5.782411586589357e-19], 'true,false,false': [0.19834710743801656, 1.3877787807814458e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false,true;genre(B, F).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, H).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false,true;genre(B, F).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true;genre(B, E).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( genre(A, D) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360638;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( actor(A) )
%   | then return -0.08518475138839687;  // std dev = 1,61e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07324622576333704;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.15274385809367075;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( female(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( genre(B, D) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(B, E) )
%   | then if ( movie(F, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.12161960062738383;  // std dev = 0,192, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.0641918400820262;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065532
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.79 seconds
Total inference time: 1.651 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095328
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.609 seconds
Refined model CLL: -0.095328


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065532
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 3.969 seconds
Total inference time: 1.651 seconds
AUC ROC: 1.0
Total revision time: 3.969
Best scored revision CLL: -0.095328


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:43:02
{'CLL': -0.065532, 'AUC ROC': 1.0, 'F1': 0.973913, 'Recall': 1.0, 'parameter_25': {'CLL': -0.207067, 'AUC ROC': 1.0, 'F1': 0.973913, 'Recall': 1.0, 'Precision': [0.949153, 0.5], 'Inference time': 1.737, 'Learning time': 0.966, 'AUC PR': 1.0}, 'Precision': [0.949153, 0.5], 'Inference time': 1.651, 'Learning time': 3.969, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.7956489350995123;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.6694131893798132;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5204603507259603;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3912519545392304;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.10159632948783633;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2971751345678791;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.09269127618926094;  // std dev = 9,13e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2319331449240747;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.18613927539734212;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.07877675473109175;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.20014505844672598;  // std dev = 0,094, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.3103272286485497;  // std dev = 0,581, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17007196718164164;  // std dev = 0,083, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.27899814487789987;  // std dev = 0,549, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.14743308109061337;  // std dev = 0,074, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.06419184008202618;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.25092823254063706;  // std dev = 0,512, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094532
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 1.771 seconds
Total inference time: 1.612 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:43:06
{'CLL': -0.094532, 'AUC ROC': 1.0, 'F1': 0.506787, 'Recall': 1.0, 'Precision': [0.339394, 0.5], 'Inference time': 1.612, 'Learning time': 1.771, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.7956489350995123;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.98376
   AUC PR    = 0.343975
   CLL	      = -0.159388
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.643 seconds
Total inference time: 0.87 seconds
AUC ROC: 0.98376


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:43:07
{'CLL': -0.159388, 'AUC ROC': 0.98376, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.87, 'Learning time': 0.643, 'AUC PR': 0.343975}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5724346493852266;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.48767788391726297;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3912569620992536;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3005711547884894;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22629823971521876;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926094;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.45555787247938695;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.05555787247938695;  // std dev = 0,490, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12891118267461646;  // std dev = 1,154, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.09823404257966553;  // std dev = 0,437, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.2971425750196809;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.013237617987130168;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23901550430589236;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.010093288842254421;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.288182
   Precision = 0.060354 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.113837


Total learning time: 0.848 seconds
Total inference time: 1.53 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.88
   AUC PR    = 0.885065
   CLL	      = -0.39947
   Precision = 0.714286 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.833333


Total scoring time: 0.522 seconds
Parameter learned model CLL: -0.39947


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'true,true,true': [1.195, 2, 5], 'false,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.195, 2, 5], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.452, 2, 5], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.195, 2, 5], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [1.195, 2, 5], 'false,true': [1.32e-09, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.49, 2, 3], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'true,true,true,false': [0.0, 0, 2]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [1.154, 2, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.437, 2, 5], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [1.095, 2, 3], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'true,true,true': [0.0, 0, 2], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.095, 2, 3], 'true,true,false,false': [0.0, 1, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 2], 'true,false,false,false': [0.0, 2, 0]}]]
[{'': [0.20408163265306106, 0.0], 'true': [0.20408163265306106, nan], 'false': [0.0, nan], 'true,true': [0.20408163265306106, nan], 'false,true': [0.0, 0.0]}, {'': [0.20408163265306115, 0.0], 'false,true': [0.0, 0.0], 'false': [0.0, nan], 'false,true,true': [nan, 0.0]}, {'': [0.20408163265306115, 2.3129646346357427e-18], 'false,true,true': [nan, 0.0], 'true': [0.20408163265306115, nan], 'false,true': [0.0, 0.0], 'false': [2.3129646346357427e-18, nan], 'true,true': [nan, 0.20408163265306115]}, {'': [0.2040816326530612, -1.1564823173178713e-18], 'false,true': [0.0, 0.0], 'false': [-1.1564823173178713e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.20408163265306128, 2.3129646346357427e-18], 'false': [2.3129646346357427e-18, nan]}, {'': [0.2040816326530612, 0.0], 'true': [0.2040816326530612, nan], 'true,true,true': [nan, 0.0], 'false': [0.0, nan], 'true,true': [0.0, 0.24]}, {'': [0.19039267156188996, 0.0], 'false,true': [0.0, nan], 'false': [0.0, nan]}, {'': [0.19075771129370225, 1.1564823173178713e-18], 'true': [0.19075771129370225, nan], 'false': [1.1564823173178713e-18, nan], 'false,true': [0.0, 0.0]}, {'': [0.19108895187978472, -5.782411586589357e-19], 'true': [0.19108895187978472, nan], 'false': [-5.782411586589357e-19, nan], 'true,true': [0.0, 0.24], 'false,true': [-5.782411586589357e-19, nan]}, {'': [0.1321605986907554, nan], 'true,true,false': [nan, 0.0], 'true,false': [0.0, 0.17202584760127393], 'true': [0.0, 0.14589576809213306], 'true,false,true': [0.0, nan], 'true,true': [nan, 0.0], 'true,false,false': [0.24, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.35562791974936;  // std dev = 0,692, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.4230790354252531;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.466736636351317;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1740902835486331;  // std dev = 0,993, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.3543466900730543;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.13475867088830493;  // std dev = 0,992, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.438492868779897;  // std dev = 0,227, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.07380632859154643;  // std dev = 0,892, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13945792601425158;  // std dev = 0,370, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10933456235896699;  // std dev = 0,371, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.2956014867139358;  // std dev = 0,189, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.0023721729597754758;  // std dev = 0,900, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D) )
%   | then return 0.24224696400809925;  // std dev = 0,164, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( movie(E, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.2683715716916642;  // std dev = 0,409, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.31812692174049734;  // std dev = 0,246, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.182356
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 0.896 seconds
Total inference time: 1.506 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.262745
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.461 seconds
Refined model CLL: -0.262745


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.182356
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 2.727 seconds
Total inference time: 1.506 seconds
AUC ROC: 1.0
Total revision time: 2.727
Best scored revision CLL: -0.262745


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:43:14
{'CLL': -0.182356, 'AUC ROC': 1.0, 'F1': 0.966667, 'Recall': 1.0, 'Precision': [0.935484, 0.5], 'parameter_5': {'CLL': -0.288182, 'AUC ROC': 1.0, 'F1': 0.113837, 'Recall': 1.0, 'Precision': [0.060354, 0.5], 'Inference time': 1.53, 'Learning time': 0.848, 'AUC PR': 1.0}, 'Inference time': 1.506, 'Learning time': 2.727, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.168993
   Precision = 0.245763 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.394558


Total learning time: 1.036 seconds
Total inference time: 0.996 seconds
AUC ROC: 0.973999


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:43:16
{'CLL': -0.168993, 'AUC ROC': 0.973999, 'F1': 0.394558, 'Recall': 1.0, 'Precision': [0.245763, 0.5], 'Inference time': 0.996, 'Learning time': 1.036, 'AUC PR': 0.245763}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.162966
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.493 seconds
Total inference time: 0.828 seconds
AUC ROC: 0.973999


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:43:17
{'CLL': -0.162966, 'AUC ROC': 0.973999, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.828, 'Learning time': 0.493, 'AUC PR': 0.245763}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5724346493852266;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4876778839172629;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3912569620992537;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3005711547884892;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22629823971521892;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.45555787247938706;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.11587069894918448;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12981728283049263;  // std dev = 1,540, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.09926726618026928;  // std dev = 0,413, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.2967377088577785;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.14378032189963466;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23873651805493634;  // std dev = 1,05e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.1082797320615642;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.232001
   Precision = 0.06423 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.120708


Total learning time: 0.892 seconds
Total inference time: 1.482 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.94
   AUC PR    = 0.948571
   CLL	      = -0.339618
   Precision = 0.714286 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.833333


Total scoring time: 0.522 seconds
Parameter learned model CLL: -0.339618


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'true,true,true': [1.69, 4, 10], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.69, 4, 10], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.452, 4, 10], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0], 'true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.69, 4, 10], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [1.69, 4, 10], 'false,true': [0.0, 6, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.495, 4, 3], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [2.63e-09, 6, 0], 'true,true,true,false': [0.0, 0, 7]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [1.54, 4, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 6, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.413, 4, 10], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [1.309, 4, 3], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [1.86e-09, 6, 0], 'true,true,true': [0.0, 0, 7], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.309, 4, 3], 'true,true,false,false': [0.0, 2, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [1.05e-08, 0, 7], 'true,false,false,false': [0.0, 4, 0]}]]
[{'': [0.20408163265306115, -6.938893903907228e-18], 'true': [0.20408163265306115, nan], 'false': [-6.938893903907228e-18, nan], 'true,true': [0.20408163265306115, nan], 'false,true': [0.0, 0.0]}, {'': [0.20408163265306115, -2.3129646346357427e-18], 'false,true': [0.0, 0.0], 'false': [-2.3129646346357427e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.20408163265306123, 0.0], 'false,true,true': [nan, 0.0], 'true': [0.20408163265306123, nan], 'false,true': [0.0, 0.0], 'false': [0.0, nan], 'true,true': [nan, 0.20408163265306123]}, {'': [0.20408163265306126, 0.0], 'false,true': [0.0, 0.0], 'false': [0.0, nan], 'false,true,true': [nan, 0.0]}, {'': [0.20408163265306126, 1.1564823173178713e-18], 'false': [1.1564823173178713e-18, nan]}, {'': [0.20408163265306123, 1.1564823173178713e-18], 'true': [0.20408163265306123, nan], 'true,true,true': [nan, -9.516197353929913e-17], 'false': [1.1564823173178713e-18, nan], 'true,true': [-9.516197353929913e-17, 0.24489795918367346]}, {'': [0.16946546434961224, -1.1564823173178713e-18], 'false,true': [-1.1564823173178713e-18, nan], 'false': [-1.1564823173178713e-18, nan]}, {'': [0.17023269524741283, 0.0], 'true': [0.17023269524741283, nan], 'false': [0.0, nan], 'false,true': [0.0, 0.0]}, {'': [0.17096301344743406, 5.782411586589357e-19], 'true': [0.17096301344743406, nan], 'false': [5.782411586589357e-19, nan], 'true,true': [0.0, 0.2448979591836735], 'false,true': [5.782411586589357e-19, nan]}, {'': [0.11030524965047743, nan], 'true,true,false': [nan, 0.0], 'true,false': [1.586032892321652e-17, 0.15629394743206976], 'true': [0.0, 0.12154814129092892], 'true,false,true': [1.586032892321652e-17, nan], 'true,true': [nan, 0.0], 'true,false,false': [0.24489795918367346, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109545;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( movie(E, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064085
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.29 seconds
Total inference time: 1.481 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.56 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064085
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2640000000000002 seconds
Total inference time: 1.481 seconds
AUC ROC: 1.0
Total revision time: 3.2640000000000002
Best scored revision CLL: -0.094637


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:43:24
{'CLL': -0.064085, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.481, 'Learning time': 3.2640000000000002, 'AUC PR': 1.0, 'parameter_10': {'CLL': -0.232001, 'AUC ROC': 1.0, 'F1': 0.120708, 'Recall': 1.0, 'Precision': [0.06423, 0.5], 'Inference time': 1.482, 'Learning time': 0.892, 'AUC PR': 1.0}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.0641918400820262;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 1.181 seconds
Total inference time: 1.178 seconds
AUC ROC: 0.976337


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:43:27
{'CLL': -0.159504, 'AUC ROC': 0.976337, 'F1': 0.417266, 'Recall': 1.0, 'Precision': [0.263636, 0.5], 'Inference time': 1.178, 'Learning time': 1.181, 'AUC PR': 0.263636}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.162069
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.519 seconds
Total inference time: 0.856 seconds
AUC ROC: 0.976337


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:43:28
{'CLL': -0.162069, 'AUC ROC': 0.976337, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.856, 'Learning time': 0.519, 'AUC PR': 0.263636}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.48314893509951234;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4136573287083127;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3366053739648666;  // std dev = 0,484, 24,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.26297558544868965;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20032545170291102;  // std dev = 2,372, 24,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5257988995405442;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.224201100459456;  // std dev = 0,433, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11353202789847672;  // std dev = 2,041, 24,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.08619720016684812;  // std dev = 0,417, 24,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.349271987578704;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.21810357438595782;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2745790737641278;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.16438604635451992;  // std dev = 1,500, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.170914
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 0.916 seconds
Total inference time: 1.811 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.94
   AUC PR    = 0.955
   CLL	      = -0.352702
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.516 seconds
Parameter learned model CLL: -0.352702


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'true,true,true': [2.372, 9, 15], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.372, 9, 15], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.484, 9, 15], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0], 'true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.372, 9, 15], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [2.372, 9, 15], 'false,true': [0.0, 6, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.433, 9, 3], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [2.63e-09, 6, 0], 'true,true,true,false': [0.0, 0, 12]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [2.041, 9, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 6, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.417, 9, 15], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [1.5, 9, 3], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [1.86e-09, 6, 0], 'true,true,true': [0.0, 0, 12], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.5, 9, 3], 'true,true,false,false': [0.0, 2, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 12], 'true,false,false,false': [0.0, 4, 0]}]]
[{'': [0.23437499999999958, -6.938893903907228e-18], 'true': [0.23437499999999958, nan], 'false': [-6.938893903907228e-18, nan], 'true,true': [0.23437499999999958, nan], 'false,true': [0.0, 0.0]}, {'': [0.23437499999999964, -2.3129646346357427e-18], 'false,true': [0.0, 0.0], 'false': [-2.3129646346357427e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.23437500000000008, 0.0], 'false,true,true': [nan, 0.0], 'true': [0.23437500000000008, nan], 'false,true': [0.0, 0.0], 'false': [0.0, nan], 'true,true': [nan, 0.23437500000000008]}, {'': [0.234375, 0.0], 'false,true': [0.0, 0.0], 'false': [0.0, nan], 'false,true,true': [nan, 0.0]}, {'': [0.23437499999999986, 1.1564823173178713e-18], 'false': [1.1564823173178713e-18, nan]}, {'': [0.23437499999999992, 1.1564823173178713e-18], 'true': [0.23437499999999992, nan], 'true,true,true': [nan, -1.4802973661668753e-16], 'false': [1.1564823173178713e-18, nan], 'true,true': [-1.4802973661668753e-16, 0.1875]}, {'': [0.1734906562511879, -1.1564823173178713e-18], 'false,true': [-1.1564823173178713e-18, nan], 'false': [-1.1564823173178713e-18, nan]}, {'': [0.17378875842461808, 0.0], 'true': [0.17378875842461808, nan], 'false': [0.0, nan], 'false,true': [0.0, 0.0]}, {'': [0.1742287570786789, 5.782411586589357e-19], 'true': [0.1742287570786789, nan], 'false': [5.782411586589357e-19, nan], 'true,true': [0.0, 0.1875], 'false,true': [5.782411586589357e-19, nan]}, {'': [0.11581482915202322, nan], 'true,true,false': [nan, 0.0], 'true,false': [0.0, 0.1425072898069828], 'true': [0.0, 0.12339035149475933], 'true,false,true': [0.0, nan], 'true,true': [nan, 0.0], 'true,false,false': [0.18749999999999997, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109543;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7194734122109543;  // std dev = 1,05e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 1,05e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.41751358415830986;  // std dev = 1,05e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.15274385809367075;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( movie(E, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064085
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.514 seconds
Total inference time: 1.579 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.543 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064085
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.489 seconds
Total inference time: 1.579 seconds
AUC ROC: 1.0
Total revision time: 3.489
Best scored revision CLL: -0.094637


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:43:36
{'CLL': -0.064085, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'parameter_15': {'CLL': -0.170914, 'AUC ROC': 1.0, 'F1': 0.966667, 'Recall': 1.0, 'Precision': [0.935484, 0.5], 'Inference time': 1.811, 'Learning time': 0.916, 'AUC PR': 1.0}, 'Inference time': 1.579, 'Learning time': 3.489, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839689;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 1.233 seconds
Total inference time: 1.139 seconds
AUC ROC: 0.976337


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:43:39
{'CLL': -0.159504, 'AUC ROC': 0.976337, 'F1': 0.417266, 'Recall': 1.0, 'Precision': [0.263636, 0.5], 'Inference time': 1.139, 'Learning time': 1.233, 'AUC PR': 0.263636}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.162069
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.572 seconds
Total inference time: 0.828 seconds
AUC ROC: 0.976337


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:43:40
{'CLL': -0.162069, 'AUC ROC': 0.976337, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.828, 'Learning time': 0.572, 'AUC PR': 0.263636}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.48314893509951184;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4136573287083127;  // std dev = 2,739, 32,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.2883946260351334;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.3567666642874473;  // std dev = 0,478, 31,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then if ( genre(A, H) )
%   | | then if ( genre(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2624849594661574;  // std dev = 2,711, 32,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783627;  // std dev = 1,32e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20008682326750843;  // std dev = 2,709, 32,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5209515466321787;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.13717968203438527;  // std dev = 0,467, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11355029514881654;  // std dev = 2,420, 32,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.08612898103607537;  // std dev = 0,428, 32,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.34597579768509495;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.15269549609240815;  // std dev = 1,980, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3059308537911087;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.27234620063567505;  // std dev = 2,98e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.10365554139333245;  // std dev = 1,970, 17,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.191209
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.949 seconds
Total inference time: 1.585 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.9175
   AUC PR    = 0.933393
   CLL	      = -0.38859
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.7
   F1        = 0.823529


Total scoring time: 0.589 seconds
Parameter learned model CLL: -0.38859


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'true,true,true': [2.739, 12, 20], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.739, 12, 20], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 6, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true,true': 'genre(B, I)', 'true,true,true': 'genre(B, F)', 'false,true': 'genre(A, H)', 'false': 'movie(G, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.478, 11, 20], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'true,true,true,false': [0.0, 1, 0], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.711, 12, 20], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.32e-09, 6, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [2.709, 12, 20], 'false,true': [0.0, 8, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.467, 12, 6], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [3.73e-09, 8, 0], 'true,true,true,false': [0.0, 0, 14]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [2.42, 12, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.428, 12, 20], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [1.98, 12, 6], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'true,true,true': [0.0, 0, 14], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.97, 11, 6], 'true,true,false,false': [0.0, 2, 0], 'true,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [2.98e-08, 0, 14], 'true,false,false,false': [0.0, 6, 0]}]]
[{'': [0.23437500000000003, -6.938893903907228e-18], 'true': [0.23437500000000003, nan], 'false': [-6.938893903907228e-18, nan], 'true,true': [0.23437500000000003, nan], 'false,true': [0.0, -6.938893903907228e-18]}, {'': [0.23437499999999964, 0.0], 'false,true': [0.0, -2.3129646346357427e-18], 'false': [0.0, nan], 'false,true,true': [nan, 0.0]}, {'': [0.2343750000000001, -1.734723475976807e-18], 'true,true,true': [nan, 0.0], 'false,true,true': [nan, 0.0], 'true': [0.2343750000000001, nan], 'false,true': [0.0, 0.0], 'false': [-1.734723475976807e-18, nan], 'true,true': [0.0, 0.22892819979188359]}, {'': [0.22969292098206262, 1.734723475976807e-18], 'false,true': [0.0, 0.0], 'false': [1.734723475976807e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.22930567524688567, 0.0], 'false': [0.0, nan]}, {'': [0.22908811252084335, 1.734723475976807e-18], 'true': [0.22908811252084335, nan], 'true,true,true': [nan, -6.344131569286608e-17], 'false': [1.734723475976807e-18, nan], 'true,true': [-6.344131569286608e-17, 0.21777044315366478]}, {'': [0.18304419320854604, 0.0], 'false,true': [0.0, nan], 'false': [0.0, nan]}, {'': [0.1833018030229756, 8.673617379884035e-19], 'true': [0.1833018030229756, nan], 'false': [8.673617379884035e-19, nan], 'false,true': [0.0, 0.0]}, {'': [0.1836723067640216, 0.0], 'true': [0.1836723067640216, nan], 'false': [0.0, nan], 'true,true': [-4.7580986769649563e-17, 0.2177340819417542], 'false,true': [0.0, nan]}, {'': [0.12980207762376098, nan], 'true,true,false': [nan, 0.0], 'true,false': [6.344131569286608e-17, 0.1690982434529678], 'true': [0.012986166833119992, 0.13657222161037666], 'true,false,true': [6.344131569286608e-17, nan], 'true,true': [0.0, 0.0], 'true,false,false': [0.22837370242214533, -5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(A, E).;true;true
2;false;genre(A, H).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109544;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583098;  // std dev = 1,29e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.41751358415830986;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.08518475138839687;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( actor(A), director(B) )
%   | | then return 0.15274385809367075;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.06419184008202618;  // std dev = 8,33e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064085
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.671 seconds
Total inference time: 1.838 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.569 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064085
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.7779999999999996 seconds
Total inference time: 1.838 seconds
AUC ROC: 1.0
Total revision time: 3.7779999999999996
Best scored revision CLL: -0.094637


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:43:48
{'CLL': -0.064085, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.838, 'Learning time': 3.7779999999999996, 'AUC PR': 1.0, 'parameter_20': {'CLL': -0.191209, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.585, 'Learning time': 0.949, 'AUC PR': 1.0}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.1418510649004878;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,29e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839685;  // std dev = 1,05e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109173;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06419184008202619;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 1.285 seconds
Total inference time: 1.06 seconds
AUC ROC: 0.976337


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:43:50
{'CLL': -0.159504, 'AUC ROC': 0.976337, 'F1': 0.417266, 'Recall': 1.0, 'Precision': [0.263636, 0.5], 'Inference time': 1.06, 'Learning time': 1.285, 'AUC PR': 0.263636}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.1418510649004878;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.162069
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.537 seconds
Total inference time: 0.813 seconds
AUC ROC: 0.976337


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:43:52
{'CLL': -0.162069, 'AUC ROC': 0.976337, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.813, 'Learning time': 0.537, 'AUC PR': 0.263636}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5160436719416167;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4410172152320886;  // std dev = 2,924, 38,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839138;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.3009161341768681;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.3747595414988075;  // std dev = 0,468, 37,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then if ( genre(A, H) )
%   | | then if ( genre(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.27662210990117786;  // std dev = 2,896, 38,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783628;  // std dev = 1,32e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2097546773291134;  // std dev = 2,893, 38,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.49545082155767967;  // std dev = 5,16e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.11582332555658846;  // std dev = 0,481, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11936148282922832;  // std dev = 2,618, 38,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.09066602481465344;  // std dev = 0,425, 38,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.32658411691699035;  // std dev = 3,65e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.13924791559234348;  // std dev = 2,203, 21,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.3312532625237447;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2591752417000394;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.09328877367952218;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.208387
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.979 seconds
Total inference time: 1.542 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.9232
   AUC PR    = 0.935153
   CLL	      = -0.375482
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.68
   F1        = 0.809524


Total scoring time: 0.562 seconds
Parameter learned model CLL: -0.375482


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'true,true,true': [2.924, 13, 25], 'false,true,false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.924, 13, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.86e-09, 10, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false,true,true': 'genre(B, I)', 'true,true,true': 'genre(B, F)', 'false,true': 'genre(A, H)', 'false': 'movie(G, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.468, 12, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'true,true,true,false': [0.0, 1, 0], 'false,true,false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.896, 13, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.32e-09, 10, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [2.893, 13, 25], 'false,true': [0.0, 12, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.481, 13, 8], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [5.27e-09, 12, 0], 'true,true,true,false': [5.16e-08, 0, 17]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [2.618, 13, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [3.73e-09, 12, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.425, 13, 25], 'false,true,true': [0.0, 2, 0], 'false,true,false': [2.63e-09, 10, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [2.203, 13, 8], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 12, 0], 'true,true,true': [3.65e-08, 0, 17], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [2.191, 12, 8], 'true,true,false,false': [0.0, 2, 0], 'true,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 17], 'true,false,false,false': [2.63e-09, 9, 0]}]]
[{'': [0.2250692520775636, -1.1564823173178714e-17], 'true': [0.2250692520775636, nan], 'false': [-1.1564823173178714e-17, nan], 'true,true': [0.2250692520775636, nan], 'false,true': [0.0, -1.1102230246251566e-17]}, {'': [0.22506925207756168, 2.3129646346357427e-18], 'false,true': [0.0, 2.7755575615628915e-18], 'false': [2.3129646346357427e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.22506925207756245, 6.938893903907228e-18], 'true,true,true': [nan, 0.0], 'false,true,true': [nan, 0.0], 'true': [0.22506925207756245, nan], 'false,true': [0.0, 0.0], 'false': [6.938893903907228e-18, nan], 'true,true': [0.0, 0.21913805697589492]}, {'': [0.220629857194926, 0.0], 'false,true': [0.0, 1.3877787807814458e-18], 'false': [0.0, nan], 'false,true,true': [nan, 0.0]}, {'': [0.22027981261086285, 2.3129646346357427e-18], 'false': [2.3129646346357427e-18, nan]}, {'': [0.22009961193964622, 2.3129646346357427e-18], 'true': [0.22009961193964622, nan], 'false': [2.3129646346357427e-18, nan], 'true,true,true': [nan, 1.5673736818237505e-16], 'true,true': [1.5673736818237505e-16, 0.2311135564345119]}, {'': [0.18039112584554542, 1.1564823173178713e-18], 'false,true': [1.1564823173178713e-18, nan], 'false': [1.1564823173178713e-18, nan]}, {'': [0.18083989454324745, 1.1564823173178713e-18], 'true': [0.18083989454324745, nan], 'false': [1.1564823173178713e-18, nan], 'false,true': [0.0, 6.938893903907229e-19]}, {'': [0.18134533528534338, 5.782411586589357e-19], 'true': [0.18134533528534338, nan], 'false': [5.782411586589357e-19, nan], 'true,true': [7.836868409118753e-17, 0.2310699860843751], 'false,true': [5.782411586589357e-19, nan]}, {'': [0.12467516520294307, nan], 'true,true,false': [nan, 0.0], 'true,false': [0.005486501798963644, 0.1656984467039951], 'true': [0.015849289634798674, 0.12937260844922693], 'true,false,true': [-3.918434204559376e-17, 0.0], 'true,true': [0.0, 0.0], 'true,false,false': [0.24000000000000007, 7.709882115452476e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;true;genre(A, E).;true;true
2;false;genre(A, H).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.12544463852839138;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.11231637819360638;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(A) )
%   | | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783628;  // std dev = 1,32e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(B) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.2551722425694894;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08518475138839687;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07324622576333704;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.15274385809367075;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.10923217124675651;  // std dev = 0,185, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.0641918400820262;  // std dev = 6,45e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064078
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.079 seconds
Total inference time: 1.491 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095283
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.596 seconds
Refined model CLL: -0.095283


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064078
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.216 seconds
Total inference time: 1.491 seconds
AUC ROC: 1.0
Total revision time: 4.216
Best scored revision CLL: -0.095283


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:44:00
{'CLL': -0.064078, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'parameter_25': {'CLL': -0.208387, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.542, 'Learning time': 0.979, 'AUC PR': 1.0}, 'Precision': [1.0, 0.5], 'Inference time': 1.491, 'Learning time': 4.216, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7914822684328456;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6660633000779167;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5181199435476403;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.38952954024068537;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.10159632948783633;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2956796123843447;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.09269127618926094;  // std dev = 9,13e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.23048996886792547;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.18469472944075366;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07877675473109175;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15155508707642015;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1268039860284982;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1077823579283239;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.13400703000801117;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.0641918400820262;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.975188
   AUC PR    = 0.252639
   CLL	      = -0.15576
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 1.697 seconds
Total inference time: 1.271 seconds
AUC ROC: 0.975188


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:44:03
{'CLL': -0.15576, 'AUC ROC': 0.975188, 'F1': 0.417266, 'Recall': 1.0, 'Precision': [0.263636, 0.5], 'Inference time': 1.271, 'Learning time': 1.697, 'AUC PR': 0.252639}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7914822684328456;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.975188
   AUC PR    = 0.252639
   CLL	      = -0.162095
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.678 seconds
Total inference time: 0.982 seconds
AUC ROC: 0.975188


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:44:05
{'CLL': -0.162095, 'AUC ROC': 0.975188, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.982, 'Learning time': 0.678, 'AUC PR': 0.252639}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5724346493852266;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.48767788391726297;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3912569620992536;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3005711547884894;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22629823971521876;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926094;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.455557872479387;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.544442127520613;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1306190173736879;  // std dev = 0,904, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.10081313366781146;  // std dev = 0,343, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.2962480347273927;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.4663581334061774;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23839901957201737;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.35408538855178556;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.154862
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total learning time: 0.81 seconds
Total inference time: 1.8 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.194026
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.526 seconds
Parameter learned model CLL: -0.194026


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [1.195, 2, 5], 'false,true,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.195, 2, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)', 'false,true': 'genre(A, G)'}, {'true,true,false': [0.452, 2, 5], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,true,false': [2.63e-09, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.195, 2, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [1.195, 2, 5], 'false,true': [1.32e-09, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'true,true,true,false': [0.0, 0, 5]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [0.904, 2, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.343, 2, 5], 'false,true,true': [0.0, 0, 0], 'false,true,false': [1.86e-09, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'true,true,true': [0.0, 0, 5], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(A, D)', 'true,false': 'genre(B, E)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.0, 2, 0], 'true,false,true,true': [7.45e-09, 0, 5], 'true,false,true,false': [0.0, 0, 0], 'true,false,false,false': [1.32e-09, 3, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.20408163265306106, 0.0], 'true': [0.20408163265306106, nan], 'false': [0.0, nan], 'true,true': [0.20408163265306106, nan], 'false,true': [nan, 0.0]}, {'': [0.20408163265306115, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.20408163265306115, 2.3129646346357427e-18], 'true': [0.20408163265306115, nan], 'false': [2.3129646346357427e-18, nan], 'true,true': [nan, 0.20408163265306115], 'false,true': [nan, 2.3129646346357427e-18]}, {'': [0.2040816326530612, -1.1564823173178713e-18], 'false,true': [nan, -1.1564823173178713e-18], 'false': [-1.1564823173178713e-18, nan]}, {'': [0.20408163265306128, 2.3129646346357427e-18], 'false': [2.3129646346357427e-18, nan]}, {'': [0.2040816326530612, 0.0], 'true': [0.2040816326530612, nan], 'true,true,true': [nan, -4.4408920985006264e-17], 'false': [0.0, nan], 'true,true': [-4.4408920985006264e-17, 0.0]}, {'': [0.11667360691116267, 0.0], 'false,true': [0.0, nan], 'false': [0.0, nan]}, {'': [0.11758711755723952, 1.1564823173178713e-18], 'true': [0.11758711755723952, nan], 'false': [1.1564823173178713e-18, nan], 'false,true': [nan, 1.1564823173178713e-18]}, {'': [0.11868738115823815, -5.782411586589357e-19], 'true': [0.11868738115823815, nan], 'false': [-5.782411586589357e-19, nan], 'true,true': [-1.1102230246251566e-17, 0.0], 'false,true': [-5.782411586589357e-19, nan]}, {'': [0.05388025780557058, nan], 'true': [nan, 0.05388025780557058], 'true,false': [1.1102230246251566e-17, 0.020169184666653284], 'true,false,true': [1.1102230246251566e-17, nan], 'true,false,false': [0.0, 5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(B, E).;true;true
9;false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.41257245288266;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3151786576185065;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.23676009386434207;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.4539709588092631;  // std dev = 0,071, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.53955366505644;  // std dev = 0,046, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.12941445653925782;  // std dev = 0,618, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.13217933353768252;  // std dev = 0,658, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.09912703085891571;  // std dev = 0,618, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.10286800179434338;  // std dev = 0,662, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.2956154725939791;  // std dev = 0,062, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.4630978745027653;  // std dev = 0,047, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.23814620430600147;  // std dev = 0,054, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( movie(D, B) )
%   | then return -0.17943089605243176;  // std dev = 0,319, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.944035
   AUC PR    = 0.501068
   CLL	      = -0.171939
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total learning time: 0.953 seconds
Total inference time: 1.65 seconds
AUC ROC: 0.944035


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.202236
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.475 seconds
Refined model CLL: -0.202236


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.154862
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total learning time: 2.7640000000000002 seconds
Total inference time: 1.8 seconds
AUC ROC: 0.97199
Total revision time: 2.7640000000000002
Best scored revision CLL: -0.194026


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:44:12
{'CLL': -0.154862, 'AUC ROC': 0.97199, 'F1': 0.708791, 'Recall': 0.724719, 'Precision': [0.693548, 0.5], 'parameter_5': {'CLL': -0.154862, 'AUC ROC': 0.97199, 'F1': 0.708791, 'Recall': 0.724719, 'Precision': [0.693548, 0.5], 'Inference time': 1.8, 'Learning time': 0.81, 'AUC PR': 0.81824}, 'Inference time': 1.8, 'Learning time': 2.7640000000000002, 'AUC PR': 0.81824}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.575892
   Precision = 0.162113 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.278997


Total learning time: 0.965 seconds
Total inference time: 1.092 seconds
AUC ROC: 0.870167


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:44:14
{'CLL': -0.575892, 'AUC ROC': 0.870167, 'F1': 0.278997, 'Recall': 1.0, 'Precision': [0.162113, 0.5], 'Inference time': 1.092, 'Learning time': 0.965, 'AUC PR': 0.162113}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.236693
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.477 seconds
Total inference time: 0.865 seconds
AUC ROC: 0.870167


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:44:16
{'CLL': -0.236693, 'AUC ROC': 0.870167, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.865, 'Learning time': 0.477, 'AUC PR': 0.162113}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5724346493852266;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4876778839172629;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3912569620992537;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3005711547884892;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783627;  // std dev = 1,32e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22629823971521892;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.45555787247938706;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.34444212752061304;  // std dev = 0,400, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13050916548240016;  // std dev = 1,406, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.10028728969692964;  // std dev = 0,377, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.2963805850301023;  // std dev = 2,11e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.31614269212362045;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23849038518273297;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.23744215742988523;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.179366
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total learning time: 0.892 seconds
Total inference time: 1.827 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 0.98
   AUC PR    = 0.985714
   CLL	      = -0.261951
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.53 seconds
Parameter learned model CLL: -0.261951


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [1.69, 4, 10], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.69, 4, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)', 'false,true': 'genre(A, G)'}, {'true,true,false': [0.452, 4, 10], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.69, 4, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [1.32e-09, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [1.69, 4, 10], 'false,true': [0.0, 6, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.4, 4, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [2.63e-09, 6, 0], 'true,true,true,false': [0.0, 0, 9]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [1.406, 4, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 6, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.377, 4, 10], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [0.894, 4, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [1.86e-09, 6, 0], 'true,true,true': [2.11e-08, 0, 9], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(A, D)', 'true,false': 'genre(B, E)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.894, 4, 1], 'true,false,true,true': [1.49e-08, 0, 9], 'true,false,true,false': [0.0, 0, 0], 'true,false,false,false': [0.0, 6, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.20408163265306115, -6.938893903907228e-18], 'true': [0.20408163265306115, nan], 'false': [-6.938893903907228e-18, nan], 'true,true': [0.20408163265306115, nan], 'false,true': [nan, -6.938893903907228e-18]}, {'': [0.20408163265306115, -2.3129646346357427e-18], 'false,true': [nan, -2.3129646346357427e-18], 'false': [-2.3129646346357427e-18, nan]}, {'': [0.20408163265306123, 0.0], 'true': [0.20408163265306123, nan], 'false': [0.0, nan], 'true,true': [nan, 0.20408163265306123], 'false,true': [nan, 0.0]}, {'': [0.20408163265306126, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.20408163265306126, 1.1564823173178713e-18], 'false': [1.1564823173178713e-18, nan]}, {'': [0.20408163265306123, 1.1564823173178713e-18], 'true': [0.20408163265306123, nan], 'true,true,true': [nan, -1.4802973661668753e-16], 'false': [1.1564823173178713e-18, nan], 'true,true': [-1.4802973661668753e-16, 0.16]}, {'': [0.14123330897600422, -1.1564823173178713e-18], 'false,true': [-1.1564823173178713e-18, nan], 'false': [-1.1564823173178713e-18, nan]}, {'': [0.14223527006325518, 0.0], 'true': [0.14223527006325518, nan], 'false': [0.0, nan], 'false,true': [nan, 0.0]}, {'': [0.1432822164667405, 5.782411586589357e-19], 'true': [0.1432822164667405, nan], 'false': [5.782411586589357e-19, nan], 'true,true': [4.9343245538895844e-17, 0.16000000000000003], 'false,true': [5.782411586589357e-19, nan]}, {'': [0.08010198274164318, nan], 'true': [nan, 0.08010198274164318], 'true,false': [2.4671622769447922e-17, 0.08016917499036379], 'true,false,true': [2.4671622769447922e-17, nan], 'true,false,false': [0.16, -5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(B, E).;true;true
9;false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.01711335259681961;  // std dev = 0,304, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08386056927697362;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.21462578411755162;  // std dev = 0,046, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0776385130182998;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1806968861807281;  // std dev = 0,041, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.1516511481108227;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.019788259803800456;  // std dev = 0,235, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.13315338912461627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return -0.014072507577770801;  // std dev = 0,232, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.0675671884838559;  // std dev = 0,008, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.98947
   AUC PR    = 0.700283
   CLL	      = -0.122215
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.015 seconds
Total inference time: 1.672 seconds
AUC ROC: 0.98947


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100746
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.501 seconds
Refined model CLL: -0.100746


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.98947
   AUC PR    = 0.700283
   CLL	      = -0.122215
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 2.938 seconds
Total inference time: 1.672 seconds
AUC ROC: 0.98947
Total revision time: 2.938
Best scored revision CLL: -0.100746


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:44:23
{'CLL': -0.122215, 'AUC ROC': 0.98947, 'F1': 0.770563, 'Recall': 1.0, 'Precision': [0.626761, 0.5], 'Inference time': 1.672, 'Learning time': 2.938, 'AUC PR': 0.700283, 'parameter_10': {'CLL': -0.179366, 'AUC ROC': 0.97199, 'F1': 0.708791, 'Recall': 0.724719, 'Precision': [0.693548, 0.5], 'Inference time': 1.827, 'Learning time': 0.892, 'AUC PR': 0.81824}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.575892
   Precision = 0.162113 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.278997


Total learning time: 1.053 seconds
Total inference time: 1.189 seconds
AUC ROC: 0.870167


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:44:25
{'CLL': -0.575892, 'AUC ROC': 0.870167, 'F1': 0.278997, 'Recall': 1.0, 'Precision': [0.162113, 0.5], 'Inference time': 1.189, 'Learning time': 1.053, 'AUC PR': 0.162113}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.236693
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.513 seconds
Total inference time: 0.85 seconds
AUC ROC: 0.870167


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:44:27
{'CLL': -0.236693, 'AUC ROC': 0.870167, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.85, 'Learning time': 0.513, 'AUC PR': 0.162113}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5724346493852266;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.48767788391726324;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.39125696209925326;  // std dev = 0,452, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.30057115478848934;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783627;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22629823971521895;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4555578724793871;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.4015849846634702;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13058765795416138;  // std dev = 1,679, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.10047345899325373;  // std dev = 0,368, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.2963253956687155;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.3590716031233837;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23845234441287963;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.27019634958369293;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.170983
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total learning time: 0.903 seconds
Total inference time: 1.477 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 0.986667
   AUC PR    = 0.990476
   CLL	      = -0.242628
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.965517


Total scoring time: 0.559 seconds
Parameter learned model CLL: -0.242628


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [2.07, 6, 15], 'false,true,false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.07, 6, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)', 'false,true': 'genre(A, G)'}, {'true,true,false': [0.452, 6, 15], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.07, 6, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [1.32e-09, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [2.07, 6, 15], 'false,true': [0.0, 9, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.35, 6, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [3.73e-09, 9, 0], 'true,true,true,false': [0.0, 0, 14]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [1.679, 6, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 9, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.368, 6, 15], 'false,true,true': [0.0, 0, 0], 'false,true,false': [2.63e-09, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [0.926, 6, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 9, 0], 'true,true,true': [0.0, 0, 14], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(A, D)', 'true,false': 'genre(B, E)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.926, 6, 1], 'true,false,true,true': [0.0, 0, 14], 'true,false,true,false': [0.0, 1, 0], 'true,false,false,false': [0.0, 8, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.20408163265306084, -9.25185853854297e-18], 'true': [0.20408163265306084, nan], 'false': [-9.25185853854297e-18, nan], 'true,true': [0.20408163265306084, nan], 'false,true': [nan, -9.25185853854297e-18]}, {'': [0.2040816326530611, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.20408163265306142, -1.5419764230904951e-18], 'true': [0.20408163265306142, nan], 'false': [-1.5419764230904951e-18, nan], 'true,true': [nan, 0.20408163265306142], 'false,true': [nan, -1.5419764230904951e-18]}, {'': [0.20408163265306126, 3.0839528461809902e-18], 'false,true': [nan, 3.0839528461809902e-18], 'false': [3.0839528461809902e-18, nan]}, {'': [0.20408163265306126, 0.0], 'false': [0.0, nan]}, {'': [0.20408163265306123, 1.5419764230904951e-18], 'true': [0.20408163265306123, nan], 'true,true,true': [nan, -9.516197353929913e-17], 'false': [1.5419764230904951e-18, nan], 'true,true': [-9.516197353929913e-17, 0.12244897959183672]}, {'': [0.13418231246786685, 0.0], 'false,true': [0.0, nan], 'false': [0.0, nan]}, {'': [0.1351868256064204, 7.709882115452476e-19], 'true': [0.1351868256064204, nan], 'false': [7.709882115452476e-19, nan], 'false,true': [nan, 7.709882115452476e-19]}, {'': [0.13627082120298803, 0.0], 'true': [0.13627082120298803, nan], 'false': [0.0, nan], 'true,true': [0.0, 0.12244897959183675], 'false,true': [0.0, nan]}, {'': [0.07253728274478563, nan], 'true': [nan, 0.07253728274478563], 'true,false': [0.005699151260978693, 0.06770516845112938], 'true,false,true': [-3.9650822308041306e-17, 0.0], 'true,false,false': [0.12244897959183675, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(B, E).;true;true
9;true;movie(C, B).;true;true
9;false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( female(A) )
%   | | then return 0.028267579930898568;  // std dev = 0,278, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0816556973459282;  // std dev = 0,010, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.21242966812019318;  // std dev = 0,039, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07573915739211247;  // std dev = 0,009, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.17907142257189568;  // std dev = 0,034, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.15214346087633462;  // std dev = 1,67e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( female(B) )
%   | | then return -0.07186579651073569;  // std dev = 0,008, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.015867854450764596;  // std dev = 0,206, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.10882188769035518;  // std dev = 0,065, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.1335381345149811;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return -0.025452211014436937;  // std dev = 0,227, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.06516517297870761;  // std dev = 0,006, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.987346
   AUC PR    = 0.640191
   CLL	      = -0.121182
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.333 seconds
Total inference time: 1.553 seconds
AUC ROC: 0.987346


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.09924
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.52 seconds
Refined model CLL: -0.09924


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987346
   AUC PR    = 0.640191
   CLL	      = -0.121182
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 3.315 seconds
Total inference time: 1.553 seconds
AUC ROC: 0.987346
Total revision time: 3.315
Best scored revision CLL: -0.09924


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:44:34
{'CLL': -0.121182, 'AUC ROC': 0.987346, 'F1': 0.770563, 'Recall': 1.0, 'Precision': [0.626761, 0.5], 'parameter_15': {'CLL': -0.170983, 'AUC ROC': 0.97199, 'F1': 0.708791, 'Recall': 0.724719, 'Precision': [0.693548, 0.5], 'Inference time': 1.477, 'Learning time': 0.903, 'AUC PR': 0.81824}, 'Inference time': 1.553, 'Learning time': 3.315, 'AUC PR': 0.640191}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.6302322013528495;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.4930252128087158;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.3713223124091624;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.2802444957903803;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.215871968382499;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.2479446876748457;  // std dev = 0,138, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A) )
%   | then return -0.23874299399535204;  // std dev = 0,554, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.2048973532959467;  // std dev = 0,121, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A) )
%   | then return -0.21431726468432494;  // std dev = 0,524, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1736876963340686;  // std dev = 0,106, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A) )
%   | then return -0.19338007300961182;  // std dev = 0,491, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.1502623662016778;  // std dev = 0,094, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A) )
%   | then return -0.1752381580733237;  // std dev = 0,459, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.977561
   AUC PR    = 0.504309
   CLL	      = -0.354298
   Precision = 0.162113 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.278997


Total learning time: 1.648 seconds
Total inference time: 1.429 seconds
AUC ROC: 0.977561


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:44:37
{'CLL': -0.354298, 'AUC ROC': 0.977561, 'F1': 0.278997, 'Recall': 1.0, 'Precision': [0.162113, 0.5], 'Inference time': 1.429, 'Learning time': 1.648, 'AUC PR': 0.504309}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */


Results
   AUC ROC   = 0.848575
   AUC PR    = 0.136922
   CLL	      = -0.236164
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.63 seconds
Total inference time: 0.929 seconds
AUC ROC: 0.848575


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:44:39
{'CLL': -0.236164, 'AUC ROC': 0.848575, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.929, 'Learning time': 0.63, 'AUC PR': 0.136922}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.572434649385226;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.48767788391726324;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 1,86e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.39125696209925315;  // std dev = 0,452, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3005711547884899;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22629823971521892;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.45555787247938706;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.344442127520613;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13050916548240027;  // std dev = 1,989, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1002872896969296;  // std dev = 0,377, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.2963805850301024;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.31614269212362045;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23849038518273297;  // std dev = 2,11e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.23744215742988523;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.178913
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total learning time: 0.893 seconds
Total inference time: 1.79 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 0.98
   AUC PR    = 0.984161
   CLL	      = -0.261951
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.544 seconds
Parameter learned model CLL: -0.261951


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [2.39, 8, 20], 'false,true,false': [0.0, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.39, 8, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [1.86e-09, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)', 'false,true': 'genre(A, G)'}, {'true,true,false': [0.452, 8, 20], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,true,false': [9.13e-09, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.39, 8, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [2.39, 8, 20], 'false,true': [0.0, 12, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.4, 8, 2], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [5.27e-09, 12, 0], 'true,true,true,false': [0.0, 0, 18]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [1.989, 8, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [3.73e-09, 12, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.377, 8, 20], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.73e-09, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [1.265, 8, 2], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 12, 0], 'true,true,true': [0.0, 0, 18], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(A, D)', 'true,false': 'genre(B, E)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.265, 8, 2], 'true,false,true,true': [2.11e-08, 0, 18], 'true,false,true,false': [0.0, 1, 0], 'true,false,false,false': [5.27e-09, 11, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.20408163265306145, -1.1564823173178714e-17], 'true': [0.20408163265306145, nan], 'false': [-1.1564823173178714e-17, nan], 'true,true': [0.20408163265306145, nan], 'false,true': [nan, -1.1564823173178714e-17]}, {'': [0.20408163265306103, 2.3129646346357427e-18], 'false,true': [nan, 2.3129646346357427e-18], 'false': [2.3129646346357427e-18, nan]}, {'': [0.20408163265306167, 6.938893903907228e-18], 'true': [0.20408163265306167, nan], 'false': [6.938893903907228e-18, nan], 'true,true': [nan, 0.20408163265306167], 'false,true': [nan, 6.938893903907228e-18]}, {'': [0.20408163265306126, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.2040816326530612, 2.3129646346357427e-18], 'false': [2.3129646346357427e-18, nan]}, {'': [0.20408163265306128, 2.3129646346357427e-18], 'true': [0.20408163265306128, nan], 'true,true,true': [nan, -4.9343245538895844e-17], 'false': [2.3129646346357427e-18, nan], 'true,true': [-4.9343245538895844e-17, 0.1600000000000001]}, {'': [0.14123330897600417, 1.1564823173178713e-18], 'false,true': [1.1564823173178713e-18, nan], 'false': [1.1564823173178713e-18, nan]}, {'': [0.1422352700632552, 1.1564823173178713e-18], 'true': [0.1422352700632552, nan], 'false': [1.1564823173178713e-18, nan], 'false,true': [nan, 1.1564823173178713e-18]}, {'': [0.14328221646674041, 5.782411586589357e-19], 'true': [0.14328221646674041, nan], 'false': [5.782411586589357e-19, nan], 'true,true': [-4.9343245538895844e-17, 0.15999999999999998], 'false,true': [5.782411586589357e-19, nan]}, {'': [0.08010198274164314, nan], 'true': [nan, 0.08010198274164314], 'true,false': [0.0045681372045487155, 0.08367737861842343], 'true,false,true': [2.4671622769447922e-17, 0.0], 'true,false,false': [0.16000000000000006, 2.523234146875356e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(B, E).;true;true
9;true;movie(C, B).;true;true
9;false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.25517224256948945;  // std dev = 1,49e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.08499374559054629;  // std dev = 0,340, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.21271764417779843;  // std dev = 0,040, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08209405189776293;  // std dev = 0,016, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17927834339306253;  // std dev = 0,035, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07611876949885725;  // std dev = 0,015, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.15207963223319204;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( female(B) )
%   | | then return -0.06803346061443032;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.04784816062452116;  // std dev = 0,255, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.12308404926624156;  // std dev = 0,192, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(D, B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then if ( female(B) )
%   | | | then return -0.06384452600400638;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.042652888462115596;  // std dev = 0,252, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.987838
   AUC PR    = 0.683067
   CLL	      = -0.125018
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.338 seconds
Total inference time: 1.306 seconds
AUC ROC: 0.987838


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099181
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.528 seconds
Refined model CLL: -0.099181


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987838
   AUC PR    = 0.683067
   CLL	      = -0.125018
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 3.3030000000000004 seconds
Total inference time: 1.306 seconds
AUC ROC: 0.987838
Total revision time: 3.3030000000000004
Best scored revision CLL: -0.099181


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:44:46
{'CLL': -0.125018, 'AUC ROC': 0.987838, 'F1': 0.770563, 'Recall': 1.0, 'Precision': [0.626761, 0.5], 'Inference time': 1.306, 'Learning time': 3.3030000000000004, 'AUC PR': 0.683067, 'parameter_20': {'CLL': -0.178913, 'AUC ROC': 0.97199, 'F1': 0.708791, 'Recall': 0.724719, 'Precision': [0.693548, 0.5], 'Inference time': 1.79, 'Learning time': 0.893, 'AUC PR': 0.81824}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.6392070123615109;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.49932275605826126;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.3758491322444214;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.28401811356076057;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.219396647293074;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.17369760260917727;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.20565273748039026;  // std dev = 0,141, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( female(A) )
%   | then return -0.24479596725556513;  // std dev = 0,594, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.1742495353034726;  // std dev = 0,124, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( female(A) )
%   | then return -0.22168742663341334;  // std dev = 0,566, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.15069398520652955;  // std dev = 0,111, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( female(A) )
%   | then return -0.2015332132982431;  // std dev = 0,535, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.977561
   AUC PR    = 0.504309
   CLL	      = -0.401542
   Precision = 0.162113 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.278997


Total learning time: 1.736 seconds
Total inference time: 1.487 seconds
AUC ROC: 0.977561


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:44:49
{'CLL': -0.401542, 'AUC ROC': 0.977561, 'F1': 0.278997, 'Recall': 1.0, 'Precision': [0.162113, 0.5], 'Inference time': 1.487, 'Learning time': 1.736, 'AUC PR': 0.504309}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.848575
   AUC PR    = 0.136922
   CLL	      = -0.236206
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.636 seconds
Total inference time: 0.908 seconds
AUC ROC: 0.848575


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:44:51
{'CLL': -0.236206, 'AUC ROC': 0.848575, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.908, 'Learning time': 0.636, 'AUC PR': 0.136922}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.6157246926752692;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.52329140204601;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839138;  // std dev = 1,86e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.41705713205422834;  // std dev = 0,429, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3182568702797341;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23900178423471655;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926094;  // std dev = 2,28e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4223016734770957;  // std dev = 6,66e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.3776983265229041;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1397555674953993;  // std dev = 2,043, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.10838492323983719;  // std dev = 0,358, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.27214357273006795;  // std dev = 5,37e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.34581464278416973;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22167745194893126;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2595782586589612;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.06419184008202619;  // std dev = 6,97e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97199
   AUC PR    = 0.81824
   CLL	      = -0.17775
   Precision = 0.693548 at threshold = 0.5
   Recall    = 0.724719
   F1        = 0.708791


Total learning time: 0.954 seconds
Total inference time: 1.618 seconds
AUC ROC: 0.97199


Results scoring model
   AUC ROC   = 0.9872
   AUC PR    = 0.989437
   CLL	      = -0.233489
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.92
   F1        = 0.958333


Total scoring time: 0.592 seconds
Parameter learned model CLL: -0.233489


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'true,true,true': [2.462, 8, 25], 'false,true,false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.462, 8, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.86e-09, 15, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.429, 8, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [1.39e-08, 15, 0], 'true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.462, 8, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 15, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [2.462, 8, 25], 'false,true': [2.28e-09, 17, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.4, 8, 2], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [1.18e-08, 17, 0], 'true,true,true,false': [6.66e-08, 0, 23]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [2.043, 8, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 17, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.358, 8, 25], 'false,true,true': [0.0, 2, 0], 'false,true,false': [3.73e-09, 15, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [1.265, 8, 2], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 17, 0], 'true,true,true': [5.37e-08, 0, 23], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.265, 8, 2], 'true,true,false,false': [0.0, 2, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 23], 'true,false,false,false': [6.97e-09, 14, 0]}]]
[{'': [0.1836547291092757, -3.2653618371328133e-18], 'true': [0.1836547291092757, nan], 'false': [-3.2653618371328133e-18, nan], 'true,true': [0.1836547291092757, nan], 'false,true': [0.0, -1.4802973661668754e-17]}, {'': [0.18365472910927527, 0.0], 'false,true': [0.0, 3.7007434154171884e-18], 'false': [0.0, nan], 'false,true,true': [nan, 0.0]}, {'': [0.1836547291092741, 1.3061447348531253e-17], 'false,true,true': [nan, 0.0], 'true': [0.1836547291092741, nan], 'false,true': [0.0, 1.295260195396016e-17], 'false': [1.3061447348531253e-17, nan], 'true,true': [nan, 0.1836547291092741]}, {'': [0.18365472910927455, -8.163404592832034e-18], 'false,true': [0.0, -5.551115123125783e-18], 'false': [-8.163404592832034e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.18365472910927466, 4.89804275569922e-18], 'false': [4.89804275569922e-18, nan]}, {'': [0.1836547291092747, 8.163404592832034e-18], 'true': [0.1836547291092747, nan], 'false': [8.163404592832034e-18, nan], 'true,true,true': [nan, 1.9308226515220113e-16], 'true,true': [1.9308226515220113e-16, 0.16]}, {'': [0.12652652384896387, -2.44902137784961e-18], 'false,true': [-2.44902137784961e-18, nan], 'false': [-2.44902137784961e-18, nan]}, {'': [0.12784125411120714, 0.0], 'true': [0.12784125411120714, nan], 'false': [0.0, nan], 'false,true': [0.0, 9.251858538542971e-19]}, {'': [0.12913741222034392, -8.163404592832033e-19], 'true': [0.12913741222034392, nan], 'false': [-8.163404592832033e-19, nan], 'true,true': [1.2550347234893073e-16, 0.15999999999999998], 'false,true': [-8.163404592832033e-19, nan]}, {'': [0.06868501123425318, nan], 'true,true,false': [nan, 0.0], 'true,false': [0.0032631749980980007, 0.07594551972049474], 'true': [0.0, 0.07117614298460835], 'true,false,true': [-1.9308226515220113e-17, 0.0], 'true,true': [nan, 0.0], 'true,false,false': [0.16000000000000006, 3.469446951953614e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(A) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(B) )
%   | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.2551722425694895;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.08499374559054629;  // std dev = 0,340, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( female(A) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.21271764417779843;  // std dev = 0,009, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.2117310013293775;  // std dev = 0,007, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08408443019776568;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.17927834339306253;  // std dev = 0,008, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.17855203644695272;  // std dev = 0,007, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0778343054420247;  // std dev = 0,014, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.15207963223319199;  // std dev = 1,86e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.15230065120429398;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( female(B) )
%   | | then return -0.06811292056150142;  // std dev = 0,000769, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.04804573850986571;  // std dev = 0,255, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( female(A) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.11372025479882816;  // std dev = 0,188, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.13366093009171104;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return -0.02121571608386482;  // std dev = 0,301, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.06419184008202619;  // std dev = 6,97e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.995299
   AUC PR    = 0.922374
   CLL	      = -0.121331
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.923 seconds
Total inference time: 1.77 seconds
AUC ROC: 0.995299


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098763
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.621 seconds
Refined model CLL: -0.098763


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.995299
   AUC PR    = 0.922374
   CLL	      = -0.121331
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 4.09 seconds
Total inference time: 1.77 seconds
AUC ROC: 0.995299
Total revision time: 4.09
Best scored revision CLL: -0.098763


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:44:59
{'CLL': -0.121331, 'AUC ROC': 0.995299, 'F1': 0.770563, 'Recall': 1.0, 'parameter_25': {'CLL': -0.17775, 'AUC ROC': 0.97199, 'F1': 0.708791, 'Recall': 0.724719, 'Precision': [0.693548, 0.5], 'Inference time': 1.618, 'Learning time': 0.954, 'AUC PR': 0.81824}, 'Precision': [0.626761, 0.5], 'Inference time': 1.77, 'Learning time': 4.09, 'AUC PR': 0.922374}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.6465415686654066;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.5044629797645588;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.37956420580342304;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 1,05e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.2871467034260754;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.22234379807937285;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.17659966289556142;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.14344282165366493;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.1754860901782482;  // std dev = 0,139, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.3090848391277637;  // std dev = 0,589, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1516354927989628;  // std dev = 0,124, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202618;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.2789872095965256;  // std dev = 0,558, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.977561
   AUC PR    = 0.504309
   CLL	      = -0.393887
   Precision = 0.162113 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.278997


Total learning time: 1.762 seconds
Total inference time: 1.409 seconds
AUC ROC: 0.977561


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:45:03
{'CLL': -0.393887, 'AUC ROC': 0.977561, 'F1': 0.278997, 'Recall': 1.0, 'Precision': [0.162113, 0.5], 'Inference time': 1.409, 'Learning time': 1.762, 'AUC PR': 0.504309}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */


Results
   AUC ROC   = 0.848575
   AUC PR    = 0.136922
   CLL	      = -0.236241
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.66 seconds
Total inference time: 0.941 seconds
AUC ROC: 0.848575


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:45:04
{'CLL': -0.236241, 'AUC ROC': 0.848575, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.941, 'Learning time': 0.66, 'AUC PR': 0.136922}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5724346493852266;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.48767788391726297;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3912569620992536;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3005711547884894;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22629823971521876;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926094;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.455557872479387;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.544442127520613;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1306190173736879;  // std dev = 0,904, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.10081313366781146;  // std dev = 0,343, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.2962480347273927;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.4663581334061774;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23839901957201737;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.35408538855178556;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.142212
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 0.866 seconds
Total inference time: 1.144 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.194026
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.522 seconds
Parameter learned model CLL: -0.194026


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'true,true,true': [1.195, 2, 5], 'false,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.195, 2, 5], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.452, 2, 5], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.195, 2, 5], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [1.195, 2, 5], 'false,true': [1.32e-09, 3, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [0.0, 3, 0], 'true,true,true,false': [0.0, 0, 5]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [0.904, 2, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.343, 2, 5], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'true,true,true': [0.0, 0, 5], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 1, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [7.45e-09, 0, 5], 'true,false,false,false': [0.0, 2, 0]}]]
[{'': [0.20408163265306106, 0.0], 'true': [0.20408163265306106, nan], 'false': [0.0, nan], 'true,true': [0.20408163265306106, nan], 'false,true': [0.0, 0.0]}, {'': [0.20408163265306115, 0.0], 'false,true': [0.0, 0.0], 'false': [0.0, nan], 'false,true,true': [nan, 0.0]}, {'': [0.20408163265306115, 2.3129646346357427e-18], 'false,true,true': [nan, 0.0], 'true': [0.20408163265306115, nan], 'false,true': [0.0, 0.0], 'false': [2.3129646346357427e-18, nan], 'true,true': [nan, 0.20408163265306115]}, {'': [0.2040816326530612, -1.1564823173178713e-18], 'false,true': [0.0, 0.0], 'false': [-1.1564823173178713e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.20408163265306128, 2.3129646346357427e-18], 'false': [2.3129646346357427e-18, nan]}, {'': [0.2040816326530612, 0.0], 'true': [0.2040816326530612, nan], 'true,true,true': [nan, -4.4408920985006264e-17], 'false': [0.0, nan], 'true,true': [-4.4408920985006264e-17, 0.0]}, {'': [0.11667360691116267, 0.0], 'false,true': [0.0, nan], 'false': [0.0, nan]}, {'': [0.11758711755723952, 1.1564823173178713e-18], 'true': [0.11758711755723952, nan], 'false': [1.1564823173178713e-18, nan], 'false,true': [0.0, 0.0]}, {'': [0.11868738115823815, -5.782411586589357e-19], 'true': [0.11868738115823815, nan], 'false': [-5.782411586589357e-19, nan], 'true,true': [-1.1102230246251566e-17, 0.0], 'false,true': [-5.782411586589357e-19, nan]}, {'': [0.0538802578055706, nan], 'true,true,false': [nan, 0.0], 'true,false': [1.1102230246251566e-17, 0.021009567361097173], 'true': [0.0, 0.058791890122684154], 'true,false,true': [1.1102230246251566e-17, nan], 'true,true': [nan, 0.0], 'true,false,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.41257245288266;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2807538536965855;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3151786576185065;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.21248070121827137;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.23676009386434207;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.4539709588092631;  // std dev = 0,071, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.53955366505644;  // std dev = 0,046, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.12941445653925782;  // std dev = 0,618, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.13217933353768252;  // std dev = 0,658, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.09912703085891571;  // std dev = 0,618, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.10286800179434338;  // std dev = 0,662, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.2956154725939791;  // std dev = 0,062, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.4630978745027653;  // std dev = 0,047, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D) )
%   | then return 0.23814620430600147;  // std dev = 0,054, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(E, B) )
%   | | then return -0.20824066004503314;  // std dev = 0,291, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.159005
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 0.873 seconds
Total inference time: 1.257 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.200804
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.462 seconds
Refined model CLL: -0.200804


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.142212
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 2.7230000000000003 seconds
Total inference time: 1.144 seconds
AUC ROC: 1.0
Total revision time: 2.7230000000000003
Best scored revision CLL: -0.194026


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:45:10
{'CLL': -0.142212, 'AUC ROC': 1.0, 'F1': 0.957447, 'Recall': 1.0, 'Precision': [0.918367, 0.5], 'parameter_5': {'CLL': -0.142212, 'AUC ROC': 1.0, 'F1': 0.957447, 'Recall': 1.0, 'Precision': [0.918367, 0.5], 'Inference time': 1.144, 'Learning time': 0.866, 'AUC PR': 1.0}, 'Inference time': 1.144, 'Learning time': 2.7230000000000003, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420274;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.186484
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 0.979 seconds
Total inference time: 0.9 seconds
AUC ROC: 0.969593


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:45:12
{'CLL': -0.186484, 'AUC ROC': 0.969593, 'F1': 0.439024, 'Recall': 1.0, 'Precision': [0.28125, 0.5], 'Inference time': 0.9, 'Learning time': 0.979, 'AUC PR': 0.28125}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.172064
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.485 seconds
Total inference time: 0.773 seconds
AUC ROC: 0.969593


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:45:14
{'CLL': -0.172064, 'AUC ROC': 0.969593, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.773, 'Learning time': 0.485, 'AUC PR': 0.28125}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.6273797043302815;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5328490890947368;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.4239325089396988;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3229819329672577;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10159632948783627;  // std dev = 1,32e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24247055537624246;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4134760789617883;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.5865239210382118;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14281647397198796;  // std dev = 1,153, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.111453906151099;  // std dev = 0,322, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.2655419107093397;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.5043399534515143;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2170566166158363;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.38060532994673696;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.148973
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 0.916 seconds
Total inference time: 1.258 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.175126
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.508 seconds
Parameter learned model CLL: -0.175126


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'true,true,true': [1.519, 3, 10], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.519, 3, 10], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 6, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.421, 3, 10], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 6, 0], 'true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.519, 3, 10], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.32e-09, 6, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [1.519, 3, 10], 'false,true': [0.0, 7, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [1.05e-08, 3, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [2.63e-09, 7, 0], 'true,true,true,false': [0.0, 0, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [1.153, 3, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 7, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.322, 3, 10], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 7, 0], 'true,true,true': [0.0, 0, 10], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [7.45e-09, 3, 0], 'true,true,false,false': [0.0, 1, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 10], 'true,false,false,false': [0.0, 6, 0]}]]
[{'': [0.1775147928994082, -7.93016446160826e-18], 'true': [0.1775147928994082, nan], 'false': [-7.93016446160826e-18, nan], 'true,true': [0.1775147928994082, nan], 'false,true': [0.0, -6.938893903907228e-18]}, {'': [0.1775147928994084, -1.982541115402065e-18], 'false,true': [0.0, -2.3129646346357427e-18], 'false': [-1.982541115402065e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.177514792899408, -1.982541115402065e-18], 'false,true,true': [nan, 0.0], 'true': [0.177514792899408, nan], 'false,true': [0.0, 0.0], 'false': [-1.982541115402065e-18, nan], 'true,true': [nan, 0.177514792899408]}, {'': [0.17751479289940836, 0.0], 'false,true': [0.0, 0.0], 'false': [0.0, nan], 'false,true,true': [nan, 0.0]}, {'': [0.1775147928994082, 0.0], 'false': [0.0, nan]}, {'': [0.17751479289940816, 9.912705577010326e-19], 'true': [0.17751479289940816, nan], 'true,true,true': [nan, -1.7763568394002506e-16], 'false': [9.912705577010326e-19, nan], 'true,true': [-1.7763568394002506e-16, 7.401486830834377e-17]}, {'': [0.1022692963297318, -9.912705577010326e-19], 'false,true': [-9.912705577010326e-19, nan], 'false': [-9.912705577010326e-19, nan]}, {'': [0.10370479605751445, 9.912705577010326e-19], 'true': [0.10370479605751445, nan], 'false': [9.912705577010326e-19, nan], 'false,true': [0.0, 0.0]}, {'': [0.10521622806457837, 9.912705577010326e-19], 'true': [0.10521622806457837, nan], 'false': [9.912705577010326e-19, nan], 'true,true': [-4.4408920985006264e-17, -3.700743415417188e-17], 'false,true': [9.912705577010326e-19, nan]}, {'': [0.04588877526662416, nan], 'true,true,false': [nan, 0.0], 'true,false': [-5.551115123125783e-18, 0.02224833257074786], 'true': [0.0, 0.047823132058158656], 'true,false,true': [-5.551115123125783e-18, nan], 'true,true': [nan, 0.0], 'true,false,false': [1.850371707708594e-17, -5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420272;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064721
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.243 seconds
Total inference time: 1.228 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.496 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064721
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.163 seconds
Total inference time: 1.228 seconds
AUC ROC: 1.0
Total revision time: 3.163
Best scored revision CLL: -0.094637


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:45:20
{'CLL': -0.064721, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.228, 'Learning time': 3.163, 'AUC PR': 1.0, 'parameter_10': {'CLL': -0.148973, 'AUC ROC': 1.0, 'F1': 0.957447, 'Recall': 1.0, 'Precision': [0.918367, 0.5], 'Inference time': 1.258, 'Learning time': 0.916, 'AUC PR': 1.0}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.14185106490048777;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926096;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109173;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.0641918400820262;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.186484
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 1.085 seconds
Total inference time: 0.902 seconds
AUC ROC: 0.969593


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:45:22
{'CLL': -0.186484, 'AUC ROC': 0.969593, 'F1': 0.439024, 'Recall': 1.0, 'Precision': [0.28125, 0.5], 'Inference time': 0.902, 'Learning time': 1.085, 'AUC PR': 0.28125}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.14185106490048777;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.172064
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.523 seconds
Total inference time: 0.703 seconds
AUC ROC: 0.969593


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:45:24
{'CLL': -0.172064, 'AUC ROC': 0.969593, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.703, 'Learning time': 0.523, 'AUC PR': 0.28125}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.6081489350995123;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5170719622367218;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.4125724528826601;  // std dev = 0,433, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3151786576185066;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10159632948783627;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.2367600938643422;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4280694542720749;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.5719305457279251;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13842923894842024;  // std dev = 1,467, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.10756571116529404;  // std dev = 0,330, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.2761187153614321;  // std dev = 1,49e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.4909501149686827;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22445074300957202;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.3711810078903083;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.146546
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 1.227 seconds
Total inference time: 1.415 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.181726
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.548 seconds
Parameter learned model CLL: -0.181726


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'true,true,true': [1.936, 5, 15], 'false,true,false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.936, 5, 15], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 9, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.433, 5, 15], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 9, 0], 'true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.936, 5, 15], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.32e-09, 9, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [1.936, 5, 15], 'false,true': [0.0, 10, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.0, 5, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [3.73e-09, 10, 0], 'true,true,true,false': [0.0, 0, 15]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [1.467, 5, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 10, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.33, 5, 15], 'false,true,true': [0.0, 1, 0], 'false,true,false': [2.63e-09, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [1.49e-08, 5, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 10, 0], 'true,true,true': [1.49e-08, 0, 15], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.0, 5, 0], 'true,true,false,false': [0.0, 1, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 15], 'true,false,false,false': [2.63e-09, 9, 0]}]]
[{'': [0.18749999999999964, -1.1102230246251566e-17], 'true': [0.18749999999999964, nan], 'false': [-1.1102230246251566e-17, nan], 'true,true': [0.18749999999999964, nan], 'false,true': [0.0, -9.25185853854297e-18]}, {'': [0.18750000000000008, 2.7755575615628915e-18], 'false,true': [0.0, 0.0], 'false': [2.7755575615628915e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.18749999999999994, 0.0], 'false,true,true': [nan, 0.0], 'true': [0.18749999999999994, nan], 'false,true': [0.0, -1.5419764230904951e-18], 'false': [0.0, nan], 'true,true': [nan, 0.18749999999999994]}, {'': [0.1874999999999999, 1.3877787807814458e-18], 'false,true': [0.0, 3.0839528461809902e-18], 'false': [1.3877787807814458e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.18749999999999986, 0.0], 'false': [0.0, nan]}, {'': [0.18750000000000003, 1.3877787807814458e-18], 'true': [0.18750000000000003, nan], 'true,true,true': [nan, 0.0], 'false': [1.3877787807814458e-18, nan], 'true,true': [0.0, 4.4408920985006264e-17]}, {'': [0.1076716794952199, 0.0], 'false,true': [0.0, nan], 'false': [0.0, nan]}, {'': [0.10894131941929217, 6.938893903907229e-19], 'true': [0.10894131941929217, nan], 'false': [6.938893903907229e-19, nan], 'false,true': [0.0, 7.709882115452476e-19]}, {'': [0.110323985712002, 6.938893903907229e-19], 'true': [0.110323985712002, nan], 'false': [6.938893903907229e-19, nan], 'true,true': [1.4802973661668754e-17, 4.4408920985006264e-17], 'false,true': [6.938893903907229e-19, nan]}, {'': [0.04868620808294876, nan], 'true,true,false': [nan, 0.0], 'true,false': [-3.700743415417188e-17, 0.021637274039913102], 'true': [0.0, 0.050055478498559965], 'true,false,true': [-3.700743415417188e-17, nan], 'true,true': [nan, 0.0], 'true,false,false': [0.0, 7.709882115452476e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7194734122109543;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.41751358415830986;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10159632948783627;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08518475138839687;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109172;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.07324622576333704;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.06842697784420272;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064721
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.394 seconds
Total inference time: 1.293 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.539 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064721
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.708 seconds
Total inference time: 1.293 seconds
AUC ROC: 1.0
Total revision time: 3.708
Best scored revision CLL: -0.094637


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:45:31
{'CLL': -0.064721, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'parameter_15': {'CLL': -0.146546, 'AUC ROC': 1.0, 'F1': 0.957447, 'Recall': 1.0, 'Precision': [0.918367, 0.5], 'Inference time': 1.415, 'Learning time': 1.227, 'AUC PR': 1.0}, 'Inference time': 1.293, 'Learning time': 3.708, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1015963294878363;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839689;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109172;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.186484
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 1.118 seconds
Total inference time: 0.888 seconds
AUC ROC: 0.969593


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:45:33
{'CLL': -0.186484, 'AUC ROC': 0.969593, 'F1': 0.439024, 'Recall': 1.0, 'Precision': [0.28125, 0.5], 'Inference time': 0.888, 'Learning time': 1.118, 'AUC PR': 0.28125}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.172064
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.539 seconds
Total inference time: 0.715 seconds
AUC ROC: 0.969593


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:45:34
{'CLL': -0.172064, 'AUC ROC': 0.969593, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.715, 'Learning time': 0.539, 'AUC PR': 0.28125}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5988896758402525;  // std dev = 2,277, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5094629858417187;  // std dev = 2,277, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839138;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.4070740258573001;  // std dev = 0,438, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3114078147114217;  // std dev = 2,277, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23403251771721492;  // std dev = 2,277, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926096;  // std dev = 1,32e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4351505874413971;  // std dev = 4,71e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.5648494125586029;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13636391166072062;  // std dev = 1,724, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.1057586074064818;  // std dev = 0,334, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.28127618141367533;  // std dev = 2,58e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.48453996131002885;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22803918585409017;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.3667000774749916;  // std dev = 1,05e-08, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.145164
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 0.993 seconds
Total inference time: 1.398 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.184908
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.527 seconds
Parameter learned model CLL: -0.184908


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'true,true,true': [2.277, 7, 20], 'false,true,false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.277, 7, 20], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.86e-09, 11, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.438, 7, 20], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [7.45e-09, 11, 0], 'true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.277, 7, 20], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 11, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [2.277, 7, 20], 'false,true': [1.32e-09, 13, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.0, 7, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [7.45e-09, 13, 0], 'true,true,true,false': [4.71e-08, 0, 20]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [1.724, 7, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [3.73e-09, 13, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.334, 7, 20], 'false,true,true': [0.0, 2, 0], 'false,true,false': [2.63e-09, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [2.58e-08, 7, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 13, 0], 'true,true,true': [2.58e-08, 0, 20], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.05e-08, 7, 0], 'true,true,false,false': [0.0, 2, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 20], 'true,false,false,false': [3.73e-09, 10, 0]}]]
[{'': [0.19204389574759964, -1.2810265668751807e-17], 'true': [0.19204389574759964, nan], 'false': [-1.2810265668751807e-17, nan], 'true,true': [0.19204389574759964, nan], 'false,true': [0.0, -1.0092936587501423e-17]}, {'': [0.1920438957475991, 4.270088556250602e-18], 'false,true': [0.0, 2.523234146875356e-18], 'false': [4.270088556250602e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.19204389574759936, 8.540177112501205e-18], 'false,true,true': [nan, 0.0], 'true': [0.19204389574759936, nan], 'false,true': [0.0, 5.046468293750712e-18], 'false': [8.540177112501205e-18, nan], 'true,true': [nan, 0.19204389574759936]}, {'': [0.19204389574759959, -2.135044278125301e-18], 'false,true': [0.0, 0.0], 'false': [-2.135044278125301e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.19204389574759945, 2.135044278125301e-18], 'false': [2.135044278125301e-18, nan]}, {'': [0.1920438957475995, 4.270088556250602e-18], 'true': [0.1920438957475995, nan], 'false': [4.270088556250602e-18, nan], 'true,true,true': [nan, 1.1102230246251565e-16], 'true,true': [1.1102230246251565e-16, -6.344131569286608e-17]}, {'': [0.11013199168096201, 1.0675221390626506e-18], 'false,true': [1.0675221390626506e-18, nan], 'false': [1.0675221390626506e-18, nan]}, {'': [0.11131458125379881, 0.0], 'true': [0.11131458125379881, nan], 'false': [0.0, nan], 'false,true': [0.0, 6.30808536718839e-19]}, {'': [0.11262882170626864, 5.337610695313253e-19], 'true': [0.11262882170626864, nan], 'false': [5.337610695313253e-19, nan], 'true,true': [3.3306690738754695e-17, 9.516197353929913e-17], 'false,true': [5.337610695313253e-19, nan]}, {'': [0.05003207869330667, nan], 'true,true,false': [nan, 0.0], 'true,false': [0.0038729692752686846, 0.022165350720906255], 'true': [0.0, 0.05218435577343163], 'true,false,true': [-3.3306690738754695e-17, 0.0], 'true,true': [nan, 0.0], 'true,false,false': [1.586032892321652e-17, 1.3877787807814458e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109546;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7194734122109543;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 1,05e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4175135841583098;  // std dev = 1,18e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783627;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.10923217124675651;  // std dev = 0,185, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064715
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.762 seconds
Total inference time: 1.256 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095444
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.548 seconds
Refined model CLL: -0.095444


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064715
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.83 seconds
Total inference time: 1.256 seconds
AUC ROC: 1.0
Total revision time: 3.83
Best scored revision CLL: -0.095444


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:45:42
{'CLL': -0.064715, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.256, 'Learning time': 3.83, 'AUC PR': 1.0, 'parameter_20': {'CLL': -0.145164, 'AUC ROC': 1.0, 'F1': 0.957447, 'Recall': 1.0, 'Precision': [0.918367, 0.5], 'Inference time': 1.398, 'Learning time': 0.993, 'AUC PR': 1.0}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6189976143448207;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.4851287515461648;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.11231637819360635;  // std dev = 1,58e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.36568225360444984;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.4175135841583098;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.10159632948783631;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.27560196347331406;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.21158287903019785;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.2551722425694894;  // std dev = 2,11e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.08518475138839685;  // std dev = 1,05e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.16608044254560703;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.07877675473109173;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.20542390126569265;  // std dev = 0,173, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then return -0.29615350505054633;  // std dev = 0,546, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17416570592691544;  // std dev = 0,153, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then return -0.2641319450661807;  // std dev = 0,511, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1506878681215932;  // std dev = 0,136, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then return -0.23595722214990533;  // std dev = 0,472, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.140472
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 1.587 seconds
Total inference time: 1.011 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:45:44
{'CLL': -0.140472, 'AUC ROC': 1.0, 'F1': 0.439024, 'Recall': 1.0, 'Precision': [0.28125, 0.5], 'Inference time': 1.011, 'Learning time': 1.587, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.96877
   AUC PR    = 0.275129
   CLL	      = -0.172151
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.64 seconds
Total inference time: 0.77 seconds
AUC ROC: 0.96877


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:45:46
{'CLL': -0.172151, 'AUC ROC': 0.96877, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.77, 'Learning time': 0.64, 'AUC PR': 0.275129}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.6157246926752692;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.52329140204601;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.12544463852839138;  // std dev = 1,86e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.41705713205422834;  // std dev = 0,429, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3182568702797341;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.23900178423471655;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926094;  // std dev = 2,28e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4223016734770957;  // std dev = 7,30e-08, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.46658721541179304;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13997527333125506;  // std dev = 1,967, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.10872743082383059;  // std dev = 0,344, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.2720322229487478;  // std dev = 3,65e-08, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.41273263237157565;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.22159967124971913;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.31022638120802576;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.170063
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 0.989 seconds
Total inference time: 1.319 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.9936
   AUC PR    = 0.995152
   CLL	      = -0.209381
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.979592


Total scoring time: 0.616 seconds
Parameter learned model CLL: -0.209381


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'true,true,true': [2.462, 8, 25], 'false,true,false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.462, 8, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.86e-09, 15, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.429, 8, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [1.39e-08, 15, 0], 'true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.462, 8, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 15, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [2.462, 8, 25], 'false,true': [2.28e-09, 17, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.314, 8, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [1.18e-08, 17, 0], 'true,true,true,false': [7.3e-08, 0, 24]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [1.967, 8, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 17, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.344, 8, 25], 'false,true,true': [0.0, 2, 0], 'false,true,false': [3.73e-09, 15, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [0.943, 8, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 17, 0], 'true,true,true': [3.65e-08, 0, 24], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.943, 8, 1], 'true,true,false,false': [0.0, 2, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 24], 'true,false,false,false': [6.97e-09, 13, 0]}]]
[{'': [0.1836547291092757, -3.2653618371328133e-18], 'true': [0.1836547291092757, nan], 'false': [-3.2653618371328133e-18, nan], 'true,true': [0.1836547291092757, nan], 'false,true': [0.0, -1.4802973661668754e-17]}, {'': [0.18365472910927527, 0.0], 'false,true': [0.0, 3.7007434154171884e-18], 'false': [0.0, nan], 'false,true,true': [nan, 0.0]}, {'': [0.1836547291092741, 1.3061447348531253e-17], 'false,true,true': [nan, 0.0], 'true': [0.1836547291092741, nan], 'false,true': [0.0, 1.295260195396016e-17], 'false': [1.3061447348531253e-17, nan], 'true,true': [nan, 0.1836547291092741]}, {'': [0.18365472910927455, -8.163404592832034e-18], 'false,true': [0.0, -5.551115123125783e-18], 'false': [-8.163404592832034e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.18365472910927466, 4.89804275569922e-18], 'false': [4.89804275569922e-18, nan]}, {'': [0.1836547291092747, 8.163404592832034e-18], 'true': [0.1836547291092747, nan], 'false': [8.163404592832034e-18, nan], 'true,true,true': [nan, 2.220446049250313e-16], 'true,true': [2.220446049250313e-16, 0.09876543209876537]}, {'': [0.11720341367129412, -2.44902137784961e-18], 'false,true': [-2.44902137784961e-18, nan], 'false': [-2.44902137784961e-18, nan]}, {'': [0.11855935877089041, 0.0], 'true': [0.11855935877089041, nan], 'false': [0.0, nan], 'false,true': [0.0, 9.251858538542971e-19]}, {'': [0.11994156222499162, -8.163404592832033e-19], 'true': [0.11994156222499162, nan], 'false': [-8.163404592832033e-19, nan], 'true,true': [5.551115123125783e-17, 0.0987654320987654], 'false,true': [-8.163404592832033e-19, nan]}, {'': [0.05924933417752699, nan], 'true,true,false': [nan, 0.0], 'true,false': [0.005799535239002323, 0.05503701657133069], 'true': [0.0, 0.061343523405723376], 'true,false,true': [-3.700743415417188e-17, 0.0], 'true,true': [nan, 0.0], 'true,false,false': [0.09876543209876545, 3.736327486719277e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( female(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(A) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( female(B) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.32071184716014967;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( female(A), actor(B) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.028267579930898568;  // std dev = 0,278, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( female(A) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.21421096977863155;  // std dev = 0,013, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.20975771563253562;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0822314858688955;  // std dev = 0,009, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.18038412357697747;  // std dev = 0,011, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.17709649774527741;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07623623055937027;  // std dev = 0,009, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(A) )
%   | | | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.15174477684966237;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.1527438580936708;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( female(A), actor(B) )
%   | | then return -0.0682221393208836;  // std dev = 0,000502, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.010722688067060412;  // std dev = 0,211, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( female(A) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.11129119883923799;  // std dev = 0,186, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.12234827294389132;  // std dev = 0,192, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( actor(A), actor(B) )
%   | | | then return -0.0648055839480288;  // std dev = 0,012, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.0057491697440336526;  // std dev = 0,217, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067368
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.093 seconds
Total inference time: 1.458 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098049
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.578 seconds
Refined model CLL: -0.098049


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067368
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.276 seconds
Total inference time: 1.458 seconds
AUC ROC: 1.0
Total revision time: 4.276
Best scored revision CLL: -0.098049


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:45:54
{'CLL': -0.067368, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'parameter_25': {'CLL': -0.170063, 'AUC ROC': 1.0, 'F1': 0.957447, 'Recall': 1.0, 'Precision': [0.918367, 0.5], 'Inference time': 1.319, 'Learning time': 0.989, 'AUC PR': 1.0}, 'Precision': [1.0, 0.5], 'Inference time': 1.458, 'Learning time': 4.276, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.1418510649004878;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6392070123615109;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.7194734122109542;  // std dev = 5,96e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( movie(C, A), movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.5993227560582612;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5160909770439381;  // std dev = 0,157, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return -0.2084366667763172;  // std dev = 0,235, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.37070812147993604;  // std dev = 0,241, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.4270950278035377;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.10394753876554343;  // std dev = 0,073, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2816365645652176;  // std dev = 0,241, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.32721500311871754;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.09467720497887151;  // std dev = 0,068, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.21864253475862813;  // std dev = 0,243, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.2596048514692501;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.08688393990903027;  // std dev = 0,063, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.17380116199773732;  // std dev = 0,246, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.21288400160190335;  // std dev = 1,49e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.08024692510769164;  // std dev = 0,059, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.14108678164681188;  // std dev = 0,249, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.1793861065079591;  // std dev = 2,11e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.07453068707825417;  // std dev = 0,055, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.1165523624165405;  // std dev = 0,252, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.15447854621438278;  // std dev = 1,97e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.06955882581300384;  // std dev = 0,052, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.15235147714249006;  // std dev = 0,113, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06976612018369173;  // std dev = 0,046, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.06359833617132803;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.2608278447268579;  // std dev = 0,497, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.128501
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 1.799 seconds
Total inference time: 1.139 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:45:57
{'CLL': -0.128501, 'AUC ROC': 1.0, 'F1': 0.439024, 'Recall': 1.0, 'Precision': [0.28125, 0.5], 'Inference time': 1.139, 'Learning time': 1.799, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.1418510649004878;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.96877
   AUC PR    = 0.275129
   CLL	      = -0.172129
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.658 seconds
Total inference time: 0.766 seconds
AUC ROC: 0.96877


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:45:59
{'CLL': -0.172129, 'AUC ROC': 0.96877, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.766, 'Learning time': 0.658, 'AUC PR': 0.275129}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(C, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.873008
   AUC PR    = 0.078809
   CLL	      = -0.604065
   Precision = 0.074013 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.137825


Total learning time: 0.808 seconds
Total inference time: 1.209 seconds
AUC ROC: 0.873008


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.522 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [0.0, 0, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)', 'false,true': 'genre(A, G)'}, {'true,true,false': [0.0, 0, 5], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.49e-08, 0, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [0.0, 0, 5], 'false,true': [0.0, 5, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.0, 0, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [0.0, 5, 0], 'true,true,true,false': [0.0, 0, 4]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [0.0, 0, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 5, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 5], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [0.0, 0, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [1.86e-09, 5, 0], 'true,true,true': [0.0, 0, 4], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(A, D)', 'true,false': 'genre(B, E)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.0, 0, 1], 'true,false,true,true': [0.0, 0, 4], 'true,false,true,false': [0.0, 2, 0], 'true,false,false,false': [1.32e-09, 3, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'false': [-2.7755575615628915e-18, nan], 'true,true': [0.0, nan], 'false,true': [nan, -2.7755575615628915e-18]}, {'': [0.0, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'false,true': [nan, 0.0], 'true,true': [nan, -4.4408920985006264e-17], 'false': [0.0, nan], 'true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [-2.2204460492503132e-17, 0.0], 'false': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'true,true,true': [nan, 0.0], 'false': [0.0, nan], 'true,true': [0.0, 0.0]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'false,true': [-1.3877787807814458e-18, nan], 'false': [-1.3877787807814458e-18, nan]}, {'': [0.0, -6.938893903907229e-19], 'true': [0.0, nan], 'false': [-6.938893903907229e-19, nan], 'false,true': [nan, -6.938893903907229e-19]}, {'': [0.0, 6.938893903907229e-19], 'false,true': [6.938893903907229e-19, nan], 'true,true': [0.0, 0.0], 'false': [6.938893903907229e-19, nan], 'true': [0.0, nan]}, {'': [0.009820698026241881, nan], 'true': [nan, 0.009820698026241881], 'true,false': [0.008729509356659448, 0.007365523519681409], 'true,false,true': [0.0, 0.0], 'true,false,false': [0.0, 5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(B, E).;true;true
9;true;movie(C, B).;true;true
9;false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.06794073997799871;  // std dev = 0,229, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(D, B) )
%   | then return -0.01464212255951686;  // std dev = 0,172, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.969312
   AUC PR    = 0.779331
   CLL	      = -0.581138
   Precision = 0.074013 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.137825


Total learning time: 0.662 seconds
Total inference time: 1.108 seconds
AUC ROC: 0.969312


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102393
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.46 seconds
Refined model CLL: -0.102393


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.873008
   AUC PR    = 0.078809
   CLL	      = -0.604065
   Precision = 0.074013 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.137825


Total learning time: 2.452 seconds
Total inference time: 1.209 seconds
AUC ROC: 0.873008
Total revision time: 2.452
Best scored revision CLL: -0.094637


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:46:04
{'CLL': -0.604065, 'AUC ROC': 0.873008, 'F1': 0.137825, 'Recall': 1.0, 'Precision': [0.074013, 0.5], 'parameter_5': {'CLL': -0.604065, 'AUC ROC': 0.873008, 'F1': 0.137825, 'Recall': 1.0, 'Precision': [0.074013, 0.5], 'Inference time': 1.209, 'Learning time': 0.808, 'AUC PR': 0.078809}, 'Inference time': 1.209, 'Learning time': 2.452, 'AUC PR': 0.078809}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.864075
   AUC PR    = 0.074013
   CLL	      = -0.613037
   Precision = 0.074013 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.137825


Total learning time: 1.004 seconds
Total inference time: 1.051 seconds
AUC ROC: 0.864075


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:46:06
{'CLL': -0.613037, 'AUC ROC': 0.864075, 'F1': 0.137825, 'Recall': 1.0, 'Precision': [0.074013, 0.5], 'Inference time': 1.051, 'Learning time': 1.004, 'AUC PR': 0.074013}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.864075
   AUC PR    = 0.074013
   CLL	      = -0.210156
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.491 seconds
Total inference time: 0.783 seconds
AUC ROC: 0.864075


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:46:08
{'CLL': -0.210156, 'AUC ROC': 0.864075, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.783, 'Learning time': 0.491, 'AUC PR': 0.074013}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.6914822684328455;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5851860008555358;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.46125983910675544;  // std dev = 0,373, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.34884632569484214;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783627;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.26212705508354195;  // std dev = 1,291, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.366119309430901;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.3005473572357657;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1573706392214866;  // std dev = 1,123, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.12452917763483669;  // std dev = 0,326, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.2320234748077825;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.29620900621067275;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.19326326051664167;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2249122679496748;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.236094
   Precision = 0.078534 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.145631


Total learning time: 0.9 seconds
Total inference time: 1.281 seconds
AUC ROC: 0.971565


Results scoring model
   AUC ROC   = 0.99
   AUC PR    = 0.991667
   CLL	      = -0.210232
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.532 seconds
Parameter learned model CLL: -0.210232


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [1.291, 2, 10], 'false,true,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.291, 2, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)', 'false,true': 'genre(A, G)'}, {'true,true,false': [0.373, 2, 10], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.291, 2, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [1.32e-09, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [1.291, 2, 10], 'false,true': [0.0, 8, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.471, 2, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [3.73e-09, 8, 0], 'true,true,true,false': [1.49e-08, 0, 9]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [1.123, 2, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.326, 2, 10], 'false,true,true': [0.0, 0, 0], 'false,true,false': [2.63e-09, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [0.816, 2, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 8, 0], 'true,true,true': [1.49e-08, 0, 9], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(A, D)', 'true,false': 'genre(B, E)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.816, 2, 1], 'true,false,true,true': [7.45e-09, 0, 9], 'true,false,true,false': [0.0, 2, 0], 'true,false,false,false': [0.0, 6, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.1388888888888887, -6.938893903907228e-18], 'true': [0.1388888888888887, nan], 'false': [-6.938893903907228e-18, nan], 'true,true': [0.1388888888888887, nan], 'false,true': [nan, -6.938893903907228e-18]}, {'': [0.13888888888888914, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.1388888888888891, -1.734723475976807e-18], 'true': [0.1388888888888891, nan], 'false': [-1.734723475976807e-18, nan], 'true,true': [nan, 0.1388888888888891], 'false,true': [nan, -1.734723475976807e-18]}, {'': [0.138888888888889, 1.734723475976807e-18], 'false,true': [nan, 1.734723475976807e-18], 'false': [1.734723475976807e-18, nan]}, {'': [0.1388888888888888, 0.0], 'false': [0.0, nan]}, {'': [0.13888888888888892, 1.734723475976807e-18], 'true': [0.13888888888888892, nan], 'false': [1.734723475976807e-18, nan], 'true,true,true': [nan, 2.4671622769447922e-17], 'true,true': [2.4671622769447922e-17, 0.22222222222222224]}, {'': [0.10517166323587777, 0.0], 'false,true': [0.0, nan], 'false': [0.0, nan]}, {'': [0.10658320528457334, 8.673617379884035e-19], 'true': [0.10658320528457334, nan], 'false': [8.673617379884035e-19, nan], 'false,true': [nan, 8.673617379884035e-19]}, {'': [0.1078735969311017, 0.0], 'true': [0.1078735969311017, nan], 'false': [0.0, nan], 'true,true': [2.4671622769447922e-17, 0.22222222222222224], 'false,true': [0.0, nan]}, {'': [0.058617937028785205, nan], 'true': [nan, 0.058617937028785205], 'true,false': [0.00986030015567656, 0.07981430872606521], 'true,false,true': [6.1679056923619804e-18, 0.0], 'true,false,false': [0.2222222222222222, -5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(B, E).;true;true
9;true;movie(C, B).;true;true
9;false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), female(A) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.6359267128772901;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), female(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5398498420741675;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3293194512490402;  // std dev = 0,783, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.5261784947573075;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.4732900013584101;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.30768102842424505;  // std dev = 0,406, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.14336088988829893;  // std dev = 0,747, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.32278207687145644;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.36031957318346447;  // std dev = 0,054, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.28079998804755446;  // std dev = 0,747, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.2988694895836357;  // std dev = 0,113, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.11137408096801438;  // std dev = 0,336, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.2412553315272382;  // std dev = 0,100, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.08783263122237983;  // std dev = 0,338, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.23200709440402634;  // std dev = 0,108, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.28571653612534026;  // std dev = 0,687, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.1466433826946508;  // std dev = 0,103, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return -0.0597203619594602;  // std dev = 0,551, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.14369046177945458;  // std dev = 0,435, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.99294
   AUC PR    = 0.918848
   CLL	      = -0.220384
   Precision = 0.12605 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.223881


Total learning time: 1.179 seconds
Total inference time: 1.242 seconds
AUC ROC: 0.99294


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.195015
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.489 seconds
Refined model CLL: -0.195015


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.99294
   AUC PR    = 0.918848
   CLL	      = -0.220384
   Precision = 0.12605 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.223881


Total learning time: 3.0999999999999996 seconds
Total inference time: 1.242 seconds
AUC ROC: 0.99294
Total revision time: 3.0999999999999996
Best scored revision CLL: -0.195015


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:46:14
{'CLL': -0.220384, 'AUC ROC': 0.99294, 'F1': 0.223881, 'Recall': 1.0, 'Precision': [0.12605, 0.5], 'Inference time': 1.242, 'Learning time': 3.0999999999999996, 'AUC PR': 0.918848, 'parameter_10': {'CLL': -0.236094, 'AUC ROC': 0.971565, 'F1': 0.145631, 'Recall': 1.0, 'Precision': [0.078534, 0.5], 'Inference time': 1.281, 'Learning time': 0.9, 'AUC PR': 0.823063}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.6189976143448207;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.4851287515461648;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2877361057467734;  // std dev = 0,450, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.41664743071791405;  // std dev = 0,196, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.15256150660130055;  // std dev = 0,135, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.22945477343598797;  // std dev = 0,416, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3215725154765704;  // std dev = 0,177, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.13633282361543514;  // std dev = 0,127, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.2993951704195189;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2062526570952321;  // std dev = 0,204, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else return -0.12301186841877085;  // std dev = 0,119, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2405667499876747;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.18754914793872254;  // std dev = 0,225, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.10023791295594059;  // std dev = 0,058, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.10599814065475194;  // std dev = 0,324, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.18132540118904014;  // std dev = 0,147, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.11219955268314451;  // std dev = 0,129, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.18300197620238512;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1268309005295146;  // std dev = 0,209, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.09216266710948287;  // std dev = 0,067, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.07386640649913585;  // std dev = 0,289, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.1346663244654854;  // std dev = 0,135, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.10292679634487482;  // std dev = 0,134, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.128991
   Precision = 0.529412 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.692308


Total learning time: 1.542 seconds
Total inference time: 1.231 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:46:17
{'CLL': -0.128991, 'AUC ROC': 1.0, 'F1': 0.692308, 'Recall': 1.0, 'Precision': [0.529412, 0.5], 'Inference time': 1.231, 'Learning time': 1.542, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.980428
   AUC PR    = 0.360179
   CLL	      = -0.166224
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.593 seconds
Total inference time: 0.813 seconds
AUC ROC: 0.980428


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:46:19
{'CLL': -0.166224, 'AUC ROC': 0.980428, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.813, 'Learning time': 0.593, 'AUC PR': 0.360179}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.6476226193100386;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5494185715067316;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.43580662724469027;  // std dev = 0,408, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.331164704788703;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24856222263410194;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.39829490647166976;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.4017050935283303;  // std dev = 0,400, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14706768401582196;  // std dev = 1,474, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.11500351527838289;  // std dev = 0,340, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.25484421799107265;  // std dev = 1,49e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.3678147367148645;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.20952597674926673;  // std dev = 1,49e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2762993035717525;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.192194
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total learning time: 0.94 seconds
Total inference time: 1.397 seconds
AUC ROC: 0.971565


Results scoring model
   AUC ROC   = 0.991111
   AUC PR    = 0.992982
   CLL	      = -0.213544
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.965517


Total scoring time: 0.516 seconds
Parameter learned model CLL: -0.213544


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [1.777, 4, 15], 'false,true,false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.777, 4, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [1.86e-09, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)', 'false,true': 'genre(A, G)'}, {'true,true,false': [0.408, 4, 15], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,true,false': [7.45e-09, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.777, 4, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [1.777, 4, 15], 'false,true': [0.0, 11, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.4, 4, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [5.27e-09, 11, 0], 'true,true,true,false': [0.0, 0, 14]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [1.474, 4, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 11, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.34, 4, 15], 'false,true,true': [0.0, 0, 0], 'false,true,false': [2.63e-09, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [0.894, 4, 1], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 11, 0], 'true,true,true': [1.49e-08, 0, 14], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(A, D)', 'true,false': 'genre(B, E)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.894, 4, 1], 'true,false,true,true': [1.49e-08, 0, 14], 'true,false,true,false': [0.0, 2, 0], 'true,false,false,false': [2.63e-09, 9, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.16620498614958412, -1.0092936587501423e-17], 'true': [0.16620498614958412, nan], 'false': [-1.0092936587501423e-17, nan], 'true,true': [0.16620498614958412, nan], 'false,true': [nan, -1.0092936587501423e-17]}, {'': [0.16620498614958432, 2.523234146875356e-18], 'false,true': [nan, 2.523234146875356e-18], 'false': [2.523234146875356e-18, nan]}, {'': [0.16620498614958465, 5.046468293750712e-18], 'true': [0.16620498614958465, nan], 'false': [5.046468293750712e-18, nan], 'true,true': [nan, 0.16620498614958465], 'false,true': [nan, 5.046468293750712e-18]}, {'': [0.16620498614958448, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.16620498614958454, 0.0], 'false': [0.0, nan]}, {'': [0.16620498614958443, 2.523234146875356e-18], 'true': [0.16620498614958443, nan], 'true,true,true': [nan, 0.0], 'false': [2.523234146875356e-18, nan], 'true,true': [0.0, 0.15999999999999998]}, {'': [0.11435762366499008, 0.0], 'false,true': [0.0, nan], 'false': [0.0, nan]}, {'': [0.11584983204715696, 6.30808536718839e-19], 'true': [0.11584983204715696, nan], 'false': [6.30808536718839e-19, nan], 'false,true': [nan, 6.30808536718839e-19]}, {'': [0.117283357815192, 6.30808536718839e-19], 'true': [0.117283357815192, nan], 'false': [6.30808536718839e-19, nan], 'true,true': [1.586032892321652e-17, 0.16], 'false,true': [6.30808536718839e-19, nan]}, {'': [0.06059351461589917, nan], 'true': [nan, 0.06059351461589917], 'true,false': [0.008194532855566032, 0.06747209654623497], 'true,false,true': [1.586032892321652e-17, 0.0], 'true,false,false': [0.16000000000000006, 7.709882115452476e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(B, E).;true;true
9;true;movie(C, B).;true;true
9;false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.01711335259681961;  // std dev = 0,304, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2130030946225463;  // std dev = 0,047, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08386056927697362;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1794993251599894;  // std dev = 0,042, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.0776385130182998;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.1520143385875415;  // std dev = 1,67e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.019701345010456284;  // std dev = 0,235, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.13343724746842833;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.09391142995833743;  // std dev = 0,079, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(D, B) )
%   | then if ( actor(A), actor(B) )
%   | | then return -0.06603450159420765;  // std dev = 0,010, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.019480583850420202;  // std dev = 0,213, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06664
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.182 seconds
Total inference time: 1.317 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100409
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.534 seconds
Refined model CLL: -0.100409


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06664
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.1719999999999997 seconds
Total inference time: 1.317 seconds
AUC ROC: 1.0
Total revision time: 3.1719999999999997
Best scored revision CLL: -0.100409


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:46:25
{'CLL': -0.06664, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'parameter_15': {'CLL': -0.192194, 'AUC ROC': 0.971565, 'F1': 0.853659, 'Recall': 0.777778, 'Precision': [0.945946, 0.5], 'Inference time': 1.397, 'Learning time': 0.94, 'AUC PR': 0.823063}, 'Inference time': 1.317, 'Learning time': 3.1719999999999997, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6302322013528495;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4930252128087158;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.11231637819360638;  // std dev = 9,13e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3713223124091624;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.10159632948783628;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2802444957903803;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.09269127618926097;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.29347135559568716;  // std dev = 0,139, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B), actor(A) )
%   | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.28112880776106125;  // std dev = 0,480, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.23679053026367336;  // std dev = 0,121, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.24659774863970596;  // std dev = 0,443, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.19687262757018786;  // std dev = 0,105, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B), actor(A) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.21750949161531474;  // std dev = 0,405, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1677075799679291;  // std dev = 0,093, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.19293544825598163;  // std dev = 0,369, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.14566473702644825;  // std dev = 0,083, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B), actor(A) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.17215043062980254;  // std dev = 0,336, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083568
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.619 seconds
Total inference time: 1.189 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:46:28
{'CLL': -0.083568, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.189, 'Learning time': 1.619, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.980428
   AUC PR    = 0.360179
   CLL	      = -0.166191
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.635 seconds
Total inference time: 0.775 seconds
AUC ROC: 0.980428


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:46:30
{'CLL': -0.166191, 'AUC ROC': 0.980428, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.775, 'Learning time': 0.635, 'AUC PR': 0.360179}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.572434649385226;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.48767788391726324;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 1,86e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.39125696209925315;  // std dev = 0,452, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3005711547884899;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22629823971521892;  // std dev = 2,390, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4555578724793871;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.2111087941872797;  // std dev = 0,471, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13017867705994907;  // std dev = 2,101, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.09974443820208759;  // std dev = 0,398, 28,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.2965627429613872;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.21577117826316003;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23861593531244554;  // std dev = 1,49e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.1619873114676015;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.213207
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total learning time: 0.903 seconds
Total inference time: 1.204 seconds
AUC ROC: 0.971565


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.966503
   CLL	      = -0.30709
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.54 seconds
Parameter learned model CLL: -0.30709


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [2.39, 8, 20], 'false,true,false': [0.0, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.39, 8, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [1.86e-09, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)', 'false,true': 'genre(A, G)'}, {'true,true,false': [0.452, 8, 20], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'true,true,true': [0.0, 0, 0], 'false,true,false': [9.13e-09, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.39, 8, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [2.39, 8, 20], 'false,true': [0.0, 12, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.471, 8, 4], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [5.27e-09, 12, 0], 'true,true,true,false': [0.0, 0, 16]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [2.101, 8, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [3.73e-09, 12, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.398, 8, 20], 'false,true,true': [0.0, 0, 0], 'false,true,false': [3.73e-09, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [1.633, 8, 4], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [2.63e-09, 12, 0], 'true,true,true': [0.0, 0, 16], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(A, D)', 'true,false': 'genre(B, E)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.633, 8, 4], 'true,false,true,true': [1.49e-08, 0, 16], 'true,false,true,false': [0.0, 2, 0], 'true,false,false,false': [3.73e-09, 10, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.20408163265306145, -1.1564823173178714e-17], 'true': [0.20408163265306145, nan], 'false': [-1.1564823173178714e-17, nan], 'true,true': [0.20408163265306145, nan], 'false,true': [nan, -1.1564823173178714e-17]}, {'': [0.20408163265306103, 2.3129646346357427e-18], 'false,true': [nan, 2.3129646346357427e-18], 'false': [2.3129646346357427e-18, nan]}, {'': [0.20408163265306167, 6.938893903907228e-18], 'true': [0.20408163265306167, nan], 'false': [6.938893903907228e-18, nan], 'true,true': [nan, 0.20408163265306167], 'false,true': [nan, 6.938893903907228e-18]}, {'': [0.20408163265306126, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.2040816326530612, 2.3129646346357427e-18], 'false': [2.3129646346357427e-18, nan]}, {'': [0.20408163265306128, 2.3129646346357427e-18], 'true': [0.20408163265306128, nan], 'true,true,true': [nan, -8.326672684688674e-17], 'false': [2.3129646346357427e-18, nan], 'true,true': [-8.326672684688674e-17, 0.2222222222222223]}, {'': [0.15771795001437125, 1.1564823173178713e-18], 'false,true': [1.1564823173178713e-18, nan], 'false': [1.1564823173178713e-18, nan]}, {'': [0.15862630030816055, 1.1564823173178713e-18], 'true': [0.15862630030816055, nan], 'false': [1.1564823173178713e-18, nan], 'false,true': [nan, 1.1564823173178713e-18]}, {'': [0.1595203924227451, 5.782411586589357e-19], 'true': [0.1595203924227451, nan], 'false': [5.782411586589357e-19, nan], 'true,true': [-5.551115123125783e-17, 0.2222222222222222], 'false,true': [5.782411586589357e-19, nan]}, {'': [0.09778848376719175, nan], 'true': [nan, 0.09778848376719175], 'true,false': [0.009056054206355461, 0.12358334953200387], 'true,false,true': [1.3877787807814457e-17, 0.0], 'true,false,false': [0.22222222222222218, 1.3877787807814458e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(B, E).;true;true
9;true;movie(C, B).;true;true
9;false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.15274385809367075;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.10097388499300493;  // std dev = 0,074, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202619;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.0943672559900037;  // std dev = 0,177, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064319
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.29 seconds
Total inference time: 1.245 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096915
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.535 seconds
Refined model CLL: -0.096915


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064319
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2680000000000002 seconds
Total inference time: 1.245 seconds
AUC ROC: 1.0
Total revision time: 3.2680000000000002
Best scored revision CLL: -0.096915


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:46:36
{'CLL': -0.064319, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.245, 'Learning time': 3.2680000000000002, 'AUC PR': 1.0, 'parameter_20': {'CLL': -0.213207, 'AUC ROC': 0.971565, 'F1': 0.853659, 'Recall': 0.777778, 'Precision': [0.945946, 0.5], 'Inference time': 1.204, 'Learning time': 0.903, 'AUC PR': 0.823063}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6526478931012827;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.508738411682717;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.11231637819360635;  // std dev = 1,58e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.38266873164552506;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.10159632948783631;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2897830208139342;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.09269127618926094;  // std dev = 9,13e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.22484413364919764;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.08518475138839685;  // std dev = 1,05e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17907321293961084;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.07877675473109173;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.20577897550107874;  // std dev = 0,116, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.3057486647417981;  // std dev = 0,570, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17428718226268647;  // std dev = 0,102, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.27412487403281055;  // std dev = 0,537, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1506853964341055;  // std dev = 0,091, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A), actor(B) )
%   | then return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.2459546931993711;  // std dev = 0,499, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100117
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.766 seconds
Total inference time: 1.12 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:46:39
{'CLL': -0.100117, 'AUC ROC': 1.0, 'F1': 0.517241, 'Recall': 1.0, 'Precision': [0.348837, 0.5], 'Inference time': 1.12, 'Learning time': 1.766, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.980428
   AUC PR    = 0.360179
   CLL	      = -0.166128
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.622 seconds
Total inference time: 0.783 seconds
AUC ROC: 0.980428


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:46:41
{'CLL': -0.166128, 'AUC ROC': 0.980428, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.783, 'Learning time': 0.622, 'AUC PR': 0.360179}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true,true,false;author(F, E), venue(F, A).;false;false
0;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
0;false,true,false;haswordauthor(J, G).;false;false
0;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
0;false,true;title(I, H), venue(I, A).;false;true
0;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
0;true,true;haswordvenue(A, D).;false;true
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
1;false,false,true;title(K, J), venue(K, B).;false;false
1;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
1;false,true,true;samebib(F, G), venue(G, B).;false;false
1;false,true;title(F, E), venue(F, A).;true;true
1;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
1;false,true,false;haswordauthor(H, D).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,false;haswordauthor(H, C).;false;false
2;true,true,true;samebib(F, G), venue(G, B).;false;false
2;false,true,true;samebib(K, L), venue(L, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(K, J), venue(K, A).;true;false
2;false;haswordvenue(B, I), haswordtitle(J, I).;true;false
2;true,true;author(F, E), venue(F, A).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,false,true;title(K, J), venue(K, A).;false;false
3;false,false;haswordvenue(B, I), haswordtitle(J, I).;true;true
3;false,true,true;samebib(F, G), venue(G, B).;false;false
3;false,true;author(F, E), venue(F, A).;true;true
3;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
3;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
3;false,true,false;haswordtitle(H, D).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
4;false,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
4;false,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
4;false,true,true;author(G, E), title(G, F).;false;false
4;false,true;haswordtitle(F, D).;true;false
4;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
4;false,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true,true,false;haswordtitle(H, C).;false;false
5;false,false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;true,true,true;samebib(F, G), venue(G, A).;false;false
5;false,false,true;title(M, L), venue(M, B).;false;false
5;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
5;false;haswordvenue(B, I), haswordtitle(J, I).;false;true
5;true,true;author(F, E), venue(F, B).;true;true
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,false,true;title(K, J), venue(K, B).;false;false
6;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;false
6;false,true,true;haswordauthor(G, D).;false;false
6;false,true;haswordtitle(E, F), haswordauthor(G, F).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;true
6;false,true,false;haswordtitle(E, H), haswordvenue(A, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true,true,true;haswordtitle(F, C).;false;false
7;false,false;haswordvenue(A, J), haswordtitle(K, J).;true;false
7;false,false,true;title(L, K), venue(L, B).;false;false
7;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
7;false,true;title(I, H), venue(I, A).;false;false
7;false;haswordvenue(B, G), haswordtitle(H, G).;true;true
7;true,true;haswordtitle(F, D).;true;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true,true,false;author(F, E), venue(F, B).;false;false
8;false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
8;false,true,false;author(J, H), venue(J, A).;false;false
8;true;haswordvenue(A, D), haswordauthor(E, D).;true;false
8;false,true;haswordauthor(H, I), haswordvenue(A, I).;false;true
8;false;haswordvenue(B, G), haswordauthor(H, G).;true;true
8;true,true;haswordauthor(E, C).;false;true
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(B, H), haswordtitle(I, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, A) )
%   | | then return 0.5525933795439559;  // std dev = 2,764, 36,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.47129505638258123;  // std dev = 2,764, 36,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 1,86e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.37928590695965536;  // std dev = 0,461, 36,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( genre(A, G) )
%   | | then if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.29236919621330726;  // std dev = 2,764, 36,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22053484095854584;  // std dev = 2,764, 36,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   else if ( movie(D, B) )
%   | then return -0.09269127618926096;  // std dev = 1,32e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then if ( genre(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.471012945768966;  // std dev = 7,30e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.2623203875643671;  // std dev = 0,442, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(G, B) )
%   | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12641069688357082;  // std dev = 2,371, 36,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.09665833696462801;  // std dev = 0,396, 36,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then if ( genre(B, E) )
%   | | then return 0.3078563250762221;  // std dev = 3,94e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.25253064834105565;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(F, B) )
%   | then if ( movie(G, A) )
%   | | then return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2463793534555846;  // std dev = 1,49e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.1895200858955738;  // std dev = 1,713, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.191767
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total learning time: 0.964 seconds
Total inference time: 1.252 seconds
AUC ROC: 0.971565


Results scoring model
   AUC ROC   = 0.9648
   AUC PR    = 0.971493
   CLL	      = -0.300386
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.84
   F1        = 0.913043


Total scoring time: 0.555 seconds
Parameter learned model CLL: -0.300386


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'true,true': 'movie(D, A)', 'false,true': 'genre(A, F)'}, {'true,true,false': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'true,true,true': [2.764, 11, 25], 'false,true,false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.764, 11, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.86e-09, 13, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, H)', 'true': 'movie(D, B)', 'false,true': 'genre(A, G)', 'false': 'movie(F, B)', 'true,true': 'genre(A, E)'}, {'true,true,false': [0.461, 11, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false': [1.05e-08, 13, 0], 'true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.764, 11, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 13, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false': 'movie(D, B)'}, {'true': [2.764, 11, 25], 'false,true': [1.32e-09, 14, 0], 'false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'true,true,true': 'genre(A, F)', 'false': 'movie(G, B)', 'true,true': 'genre(B, E)'}, {'true,true,false': [0.442, 11, 4], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 0], 'false,true': [8.33e-09, 14, 0], 'true,true,true,false': [7.3e-08, 0, 21]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'movie(E, A)', 'false': 'movie(D, B)'}, {'true': [2.371, 11, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 14, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.396, 11, 25], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(F, B)', 'true,true': 'genre(B, E)', 'false,true': 'movie(G, A)'}, {'true,true,false': [1.713, 11, 4], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [3.73e-09, 14, 0], 'true,true,true': [3.94e-08, 0, 21], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.713, 11, 4], 'true,true,false,false': [0.0, 1, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 0, 21], 'true,false,false,false': [5.27e-09, 11, 0]}]]
[{'': [0.21219135802469255, -1.1895246692412391e-17], 'true': [0.21219135802469255, nan], 'false': [-1.1895246692412391e-17, nan], 'true,true': [0.21219135802469255, nan], 'false,true': [0.0, -1.2810265668751807e-17]}, {'': [0.21219135802469105, 3.96508223080413e-18], 'false,true': [0.0, 4.270088556250602e-18], 'false': [3.96508223080413e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.21219135802469116, 9.912705577010326e-18], 'false,true,true': [nan, 0.0], 'true': [0.21219135802469116, nan], 'false,true': [0.0, 8.540177112501205e-18], 'false': [9.912705577010326e-18, nan], 'true,true': [nan, 0.21219135802469116]}, {'': [0.21219135802469108, -3.96508223080413e-18], 'false,true': [0.0, -2.135044278125301e-18], 'false': [-3.96508223080413e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.21219135802469113, 3.96508223080413e-18], 'false': [3.96508223080413e-18, nan]}, {'': [0.21219135802469144, 4.956352788505163e-18], 'true': [0.21219135802469144, nan], 'false': [4.956352788505163e-18, nan], 'true,true,true': [nan, 2.5376526277146434e-16], 'true,true': [2.5376526277146434e-16, 0.19555555555555543]}, {'': [0.15611692722772058, -9.912705577010326e-19], 'false,true': [-9.912705577010326e-19, nan], 'false': [-9.912705577010326e-19, nan]}, {'': [0.15694369897066693, 9.912705577010326e-19], 'true': [0.15694369897066693, nan], 'false': [9.912705577010326e-19, nan], 'false,true': [0.0, 0.0]}, {'': [0.15780908286448278, 9.912705577010326e-19], 'true': [0.15780908286448278, nan], 'false': [9.912705577010326e-19, nan], 'true,true': [7.401486830834377e-17, 0.19555555555555568], 'false,true': [9.912705577010326e-19, nan]}, {'': [0.09527016258554818, nan], 'true,true,false': [nan, 0.0], 'true,false': [0.0076580105533569035, 0.11665436329061], 'true': [0.0, 0.09703495285347509], 'true,false,true': [1.057355261547768e-17, 0.0], 'true,true': [nan, 0.0], 'true,false,false': [0.1955555555555556, 2.523234146875356e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, F).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;false;genre(A, E).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, G).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;true;genre(B, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, F).;true;true
8;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;true;genre(B, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(A), actor(B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.1871008437779122;  // std dev = 0,304, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( female(A) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(A), actor(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.21263430716580686;  // std dev = 0,005, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.210642820719696;  // std dev = 0,003, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08194325218565678;  // std dev = 0,008, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(A), actor(B) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.1792078433178663;  // std dev = 0,004, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.17774704664264085;  // std dev = 0,003, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07599063530739976;  // std dev = 0,007, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.15209947080546038;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.15254523020097266;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( director(B), actor(A) )
%   | | then return 0.16120447393720327;  // std dev = 0,000405, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07082746368606026;  // std dev = 0,018, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(A), actor(B) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D) )
%   | then if ( movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return 0.13350376559647292;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.10555997586082246;  // std dev = 0,259, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.1405779717255568;  // std dev = 0,000361, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06486534726107082;  // std dev = 0,018, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064227
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.025 seconds
Total inference time: 1.691 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096545
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.586 seconds
Refined model CLL: -0.096545


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064227
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.13 seconds
Total inference time: 1.691 seconds
AUC ROC: 1.0
Total revision time: 4.13
Best scored revision CLL: -0.096545


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:46:48
{'CLL': -0.064227, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'parameter_25': {'CLL': -0.191767, 'AUC ROC': 0.971565, 'F1': 0.853659, 'Recall': 0.777778, 'Precision': [0.945946, 0.5], 'Inference time': 1.252, 'Learning time': 0.964, 'AUC PR': 0.823063}, 'Precision': [1.0, 0.5], 'Inference time': 1.691, 'Learning time': 4.13, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.14185106490048774;  // std dev = 1,29e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6622329172201352;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.5154428111118985;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.3875647182006322;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.29398103437200096;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.09269127618926103;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.2288562690978686;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.18306311556471894;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.07877675473109175;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.17709649774527736;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.14991371797684416;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15274385809367094;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.12515667139271322;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.15665725751774912;  // std dev = 0,109, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06419184008202618;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202618;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.25375259010291207;  // std dev = 0,657, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.126829
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.62 seconds
Total inference time: 1.144 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:46:51
{'CLL': -0.126829, 'AUC ROC': 1.0, 'F1': 0.517241, 'Recall': 1.0, 'Precision': [0.348837, 0.5], 'Inference time': 1.144, 'Learning time': 1.62, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.14185106490048774;  // std dev = 1,29e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.980428
   AUC PR    = 0.360179
   CLL	      = -0.166103
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.669 seconds
Total inference time: 0.804 seconds
AUC ROC: 0.980428


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:46:53
{'CLL': -0.166103, 'AUC ROC': 0.980428, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.804, 'Learning time': 0.669, 'AUC PR': 0.360179}


