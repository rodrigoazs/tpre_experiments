Starting experiment #5 for 53_cora_imdb

Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 249953

WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.22027053265738045;  // std dev = 0,481, 7.862,000 (wgt'ed) examples reached here.  /* #neg=5.015 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.2727830814409758;  // std dev = 0,493, 41,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | else if ( author(G, E), venue(G, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.075996704128384;  // std dev = 8,057, 381,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=83 */
%   | | | else return -0.055431311814068;  // std dev = 4,380, 243,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=21 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.029946302995725982;  // std dev = 6,461, 420,000 (wgt'ed) examples reached here.  /* #neg=373 #pos=47 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordauthor(F, C) )
%   | | then return 0.7422096788048395;  // std dev = 0,282, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.24413218693853017;  // std dev = 5,974, 147,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=61 */
%   | | | else return -0.11707035859581515;  // std dev = 2,175, 93,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=5 */
%   | else return 0.19042274504663623;  // std dev = 0,480, 7.640,000 (wgt'ed) examples reached here.  /* #neg=4.880 #pos=2.760 */
%   else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | then if ( haswordtitle(J, H) )
%   | | then if ( author(K, I), title(K, J) )
%   | | | then return 0.026894337049710754;  // std dev = 1,263, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.09463945736186023;  // std dev = 3,355, 61,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | else return 0.3519216583134132;  // std dev = 0,993, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | then return 0.09496235002222277;  // std dev = 0,432, 65,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | | else return -0.005281750872698329;  // std dev = 0,343, 981,000 (wgt'ed) examples reached here.  /* #neg=847 #pos=134 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( haswordauthor(G, C) )
%   | | | then return 0.5646092644854614;  // std dev = 1,317, 15,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.21537609453011927;  // std dev = 5,930, 144,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=61 */
%   | | else return -0.034244808012476265;  // std dev = 0,310, 98,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=13 */
%   | else return 0.16206938451416597;  // std dev = 0,480, 7.633,000 (wgt'ed) examples reached here.  /* #neg=4.873 #pos=2.760 */
%   else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | then if ( title(J, I), venue(J, A) )
%   | | then if ( samebib(J, K), venue(K, B) )
%   | | | then return 0.8105550281311826;  // std dev = 1,697, 87,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=84 */
%   | | | else return -0.15013839502482942;  // std dev = 1,014, 340,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=1 */
%   | | else if ( title(L, I), venue(L, B) )
%   | | | then return -0.1346199603389286;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.019366869621584983;  // std dev = 5,529, 290,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=36 */
%   | else return -0.028841037193151054;  // std dev = 0,311, 449,000 (wgt'ed) examples reached here.  /* #neg=400 #pos=49 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.131251410125477;  // std dev = 0,479, 7.953,000 (wgt'ed) examples reached here.  /* #neg=5.106 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( haswordauthor(F, D) )
%   | | then if ( author(G, F), title(G, E) )
%   | | | then return 0.24009241734518008;  // std dev = 0,821, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16109909417507684;  // std dev = 3,119, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else if ( title(H, E), venue(H, A) )
%   | | | then return 0.05184000386633293;  // std dev = 6,817, 375,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=83 */
%   | | | else return -0.05598988884332641;  // std dev = 4,405, 275,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=21 */
%   | else return -0.038225312321513334;  // std dev = 0,295, 506,000 (wgt'ed) examples reached here.  /* #neg=457 #pos=49 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, C) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.08961679749441523;  // std dev = 6,452, 194,000 (wgt'ed) examples reached here.  /* #neg=125 #pos=69 */
%   | | | else return 0.09372166828699068;  // std dev = 2,446, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else return 0.7223575459496372;  // std dev = 0,099, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.28773523534694934;  // std dev = 4,154, 72,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=39 */
%   | | | else return -0.043519187413772156;  // std dev = 4,533, 144,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=27 */
%   | | else return 0.10765666239174947;  // std dev = 0,479, 7.522,000 (wgt'ed) examples reached here.  /* #neg=4.828 #pos=2.694 */
%   else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | then if ( title(L, K), venue(L, A) )
%   | | then return 0.034083224328529275;  // std dev = 0,346, 400,000 (wgt'ed) examples reached here.  /* #neg=315 #pos=85 */
%   | | else return -0.006259032122264546;  // std dev = 0,331, 271,000 (wgt'ed) examples reached here.  /* #neg=235 #pos=36 */
%   | else return -0.027671557065070254;  // std dev = 0,304, 475,000 (wgt'ed) examples reached here.  /* #neg=426 #pos=49 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.08396892886460473;  // std dev = 0,477, 8.026,000 (wgt'ed) examples reached here.  /* #neg=5.179 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.016044907562717526;  // std dev = 0,954, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.18306616419210392;  // std dev = 3,002, 38,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else if ( author(H, E), venue(H, A) )
%   | | | then return 0.47378427660070105;  // std dev = 0,820, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.12589271686104875;  // std dev = 0,003, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.04809103203055681;  // std dev = 2,847, 64,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | | else return -0.06700653539666296;  // std dev = 1,046, 14,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.009842402842862861;  // std dev = 8,446, 707,000 (wgt'ed) examples reached here.  /* #neg=619 #pos=88 */
%   | | | else return 0.007895330498000255;  // std dev = 5,238, 257,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=46 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0796389313991489;  // std dev = 0,481, 7.741,000 (wgt'ed) examples reached here.  /* #neg=4.894 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6639273724437317;  // std dev = 1,401, 86,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=84 */
%   | | | else return -0.14325344044184252;  // std dev = 1,039, 323,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=1 */
%   | | else if ( haswordtitle(E, H), haswordauthor(I, H) )
%   | | | then return -0.06924554700856413;  // std dev = 3,683, 190,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=17 */
%   | | | else return 0.030710356392731626;  // std dev = 4,009, 122,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=19 */
%   | else return -0.006737367546075306;  // std dev = 0,323, 408,000 (wgt'ed) examples reached here.  /* #neg=359 #pos=49 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordvenue(B, C) )
%   then return 0.0552283960930355;  // std dev = 0,479, 7.908,000 (wgt'ed) examples reached here.  /* #neg=5.061 #pos=2.847 */
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.5718578356612918;  // std dev = 0,308, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.23339252978760425;  // std dev = 0,050, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06481164276080305;  // std dev = 3,235, 51,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.1082597353328374;  // std dev = 0,016, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -0.010560735775083346;  // std dev = 8,012, 666,000 (wgt'ed) examples reached here.  /* #neg=584 #pos=82 */
%   | | | else return 0.026568451696160015;  // std dev = 2,698, 93,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=21 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0033582829804757576;  // std dev = 4,400, 246,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=48 */
%   | | | else return -0.1185492032689698;  // std dev = 0,030, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, B), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.0370666548619208;  // std dev = 0,477, 7.389,000 (wgt'ed) examples reached here.  /* #neg=4.780 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, A) )
%   | | | then return 0.7296827032896898;  // std dev = 2,735, 139,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=131 */
%   | | | else return -0.1293724101617829;  // std dev = 1,667, 525,000 (wgt'ed) examples reached here.  /* #neg=522 #pos=3 */
%   | else if ( title(G, D), venue(G, A) )
%   | | then return -0.17494423931990588;  // std dev = 0,310, 273,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=30 */
%   | | else if ( haswordtitle(D, H), haswordauthor(I, H) )
%   | | | then return 0.16558083087243894;  // std dev = 5,950, 205,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=87 */
%   | | | else return 0.06443954239417195;  // std dev = 4,178, 143,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=40 */
%   else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | then if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | then return 0.4830968321738869;  // std dev = 0,396, 46,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   | | else return 0.6448670341014546;  // std dev = 0,177, 32,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else return -0.0016328332429701728;  // std dev = 0,273, 255,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=49 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C), haswordtitle(D, C) )
%   then if ( venue(E, A), title(E, D) )
%   | then if ( haswordvenue(B, C) )
%   | | then return 0.021986847635290997;  // std dev = 0,473, 7.570,000 (wgt'ed) examples reached here.  /* #neg=4.961 #pos=2.609 */
%   | | else if ( samebib(E, F), venue(F, B) )
%   | | | then return 0.572618920719285;  // std dev = 3,410, 145,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=133 */
%   | | | else return -0.11748647200957144;  // std dev = 1,585, 567,000 (wgt'ed) examples reached here.  /* #neg=565 #pos=2 */
%   | else if ( title(G, D), venue(G, B) )
%   | | then if ( haswordvenue(B, C) )
%   | | | then return -0.14775241132938638;  // std dev = 4,713, 153,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=27 */
%   | | | else return -0.05258654389144914;  // std dev = 0,798, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( haswordvenue(B, C) )
%   | | | then return 0.37935686438516353;  // std dev = 4,528, 106,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=78 */
%   | | | else return 0.013791608077718885;  // std dev = 4,286, 205,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=49 */
%   else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | then return 0.46672446404908313;  // std dev = 0,271, 74,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=68 */
%   | else return -0.0066254075895039646;  // std dev = 0,264, 271,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=49 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.005235310433381663;  // std dev = 0,100, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return 0.1534226086367001;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.06809400749220866;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.610965
   Precision = 0.056112 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.106262


Total learning time: 0.812 seconds
Total inference time: 1.544 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099992
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.505 seconds
Parameter learned model CLL: -0.099992


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [0.0, 0, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [0.0, 5, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 5]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, G)', 'false,true': 'genre(A, F)'}, {'false,true,false,false': [0.0, 5, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 5]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.49e-08, 0, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 5], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [0.0, 0, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [0.0, 0, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [0.0, 0, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.1, 5, 2]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(A, D)', 'true,false': 'genre(B, E)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.0, 0, 2], 'true,false,true,true': [0.0, 0, 3], 'true,false,true,false': [0.0, 0, 0], 'true,false,false,false': [0.0, 5, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'false,true': [nan, -2.7755575615628915e-18], 'false': [-2.7755575615628915e-18, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'false': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan], 'true': [-4.4408920985006264e-17, nan], 'false,true,false': [nan, 0.0]}, {'': [4.4408920985006264e-17, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [-2.2204460492503132e-17, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan], 'true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'false,true': [nan, -1.3877787807814458e-18], 'false': [-1.3877787807814458e-18, nan]}, {'': [0.0, -6.938893903907229e-19], 'false,true': [nan, -6.938893903907229e-19], 'false': [-6.938893903907229e-19, nan]}, {'': [0.01222913466736446, nan], 'true': [-4.625929269271485e-18, 0.00998296707539956], 'true,false': [nan, 0.00998296707539956], 'true,true': [-4.625929269271485e-18, nan]}, {'': [0.011056303407529226, nan], 'true': [nan, 0.011056303407529226], 'true,false': [-2.3129646346357427e-18, 0.010014206371673943], 'true,false,true': [-2.3129646346357427e-18, nan], 'true,false,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
9;;workedunder(A, B) :- genre(B, E).;true;true
9;false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( female(A) )
%   | then return 0.07902024611437974;  // std dev = 0,181, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06655366515410453;  // std dev = 0,008, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.07379988799355051;  // std dev = 0,169, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999547
   AUC PR    = 0.949153
   CLL	      = -0.560988
   Precision = 0.056112 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.106262


Total learning time: 0.742 seconds
Total inference time: 1.332 seconds
AUC ROC: 0.999547


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099812
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.473 seconds
Refined model CLL: -0.099812


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999547
   AUC PR    = 0.949153
   CLL	      = -0.560988
   Precision = 0.056112 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.106262


Total learning time: 2.532 seconds
Total inference time: 1.332 seconds
AUC ROC: 0.999547
Total revision time: 2.532
Best scored revision CLL: -0.099812


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:57:25
{'CLL': -0.560988, 'AUC ROC': 0.999547, 'F1': 0.106262, 'Recall': 1.0, 'Precision': [0.056112, 0.5], 'parameter_5': {'CLL': -0.610965, 'AUC ROC': 1.0, 'F1': 0.106262, 'Recall': 1.0, 'Precision': [0.056112, 0.5], 'Inference time': 1.544, 'Learning time': 0.812, 'AUC PR': 1.0}, 'Inference time': 1.332, 'Learning time': 2.532, 'AUC PR': 0.949153}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.857618
   AUC PR    = 0.056112
   CLL	      = -0.641551
   Precision = 0.056112 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.106262


Total learning time: 0.988 seconds
Total inference time: 1.196 seconds
AUC ROC: 0.857618


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:57:27
{'CLL': -0.641551, 'AUC ROC': 0.857618, 'F1': 0.106262, 'Recall': 1.0, 'Precision': [0.056112, 0.5], 'Inference time': 1.196, 'Learning time': 0.988, 'AUC PR': 0.056112}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.857618
   AUC PR    = 0.056112
   CLL	      = -0.207627
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.475 seconds
Total inference time: 0.9 seconds
AUC ROC: 0.857618


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:57:29
{'CLL': -0.207627, 'AUC ROC': 0.857618, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.9, 'Learning time': 0.475, 'AUC PR': 0.056112}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.7672398441904213;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.6465415686654066;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.5044629797645588;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.37956420580342304;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2871467034260754;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.22234379807937285;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17659966289556142;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14344282165366493;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2095994383051143;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.02070137092306685;  // std dev = 0,250, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.17698040013702;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return 0.046382934386730336;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.06711910604923978;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.491111
   Precision = 0.056112 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.106262


Total learning time: 0.855 seconds
Total inference time: 1.377 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.975
   AUC PR    = 0.971683
   CLL	      = -0.207191
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.505 seconds
Parameter learned model CLL: -0.207191


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [0.953, 1, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [0.0, 9, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.287, 1, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 8, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.287, 1, 10], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [0.953, 1, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [3.73e-09, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.287, 1, 10], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [0.953, 1, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [3.73e-09, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [0.953, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 8, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [0.953, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [9.31e-10, 8, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.25, 9, 5]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.913, 1, 5], 'true,true,false,false': [0.0, 1, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 5], 'true,false,false,false': [2.63e-09, 8, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'false,true': [0.0, -6.938893903907228e-18], 'false': [-9.25185853854297e-18, nan]}, {'': [0.08264462809917372, 0.0], 'true': [0.08264462809917372, nan], 'false': [0.0, nan]}, {'': [0.08264462809917372, -1.5419764230904951e-18], 'false,true,true': [nan, 0.0], 'true': [0.08264462809917372, nan], 'false,true': [0.0, -1.734723475976807e-18], 'false': [-1.5419764230904951e-18, nan], 'false,true,false': [nan, -1.734723475976807e-18]}, {'': [0.08264462809917356, 3.0839528461809902e-18], 'false,true': [0.0, 1.734723475976807e-18], 'false': [3.0839528461809902e-18, nan]}, {'': [0.08264462809917347, 0.0], 'true': [0.08264462809917347, nan], 'false': [0.0, nan], 'false,true': [0.0, 0.0]}, {'': [0.08264462809917356, 1.5419764230904951e-18], 'false,true': [0.0, 1.734723475976807e-18], 'false': [1.5419764230904951e-18, nan]}, {'': [0.08264462809917356, 0.0], 'false,true': [0.0, 0.0], 'false': [0.0, nan], 'false,true,true': [nan, 0.0]}, {'': [0.08264462809917358, 7.709882115452476e-19], 'false,true': [0.0, 8.673617379884035e-19], 'false': [7.709882115452476e-19, nan], 'false,true,true': [nan, 0.0]}, {'': [0.05412023657229696, nan], 'true': [0.0, 0.05853179406871684], 'true,false': [0.0, 0.0625607875984639], 'true,true': [0.0, nan]}, {'': [0.05136085020231605, nan], 'true,true,false': [nan, 0.0], 'true,false': [0.0, 0.06267875969110633], 'true': [0.0, 0.05359212538712046], 'true,false,true': [0.0, nan], 'true,true': [nan, 0.0], 'true,false,false': [0.1388888888888889, 8.673617379884035e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( female(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3584548159137827;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(B) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2697478132793615;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2062525881598365;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16095555079641394;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.12802275604229368;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.24634797688785373;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.20547198689779145;  // std dev = 0,613, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.13148273856972248;  // std dev = 0,234, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D) )
%   | then return 0.2035044526702905;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(E, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.14148373524824998;  // std dev = 0,612, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.11523884284320224;  // std dev = 0,225, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.440893
   Precision = 0.056112 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.106262


Total learning time: 1.289 seconds
Total inference time: 1.669 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.169041
   Precision = 0.909091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.952381


Total scoring time: 0.491 seconds
Refined model CLL: -0.169041


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.440893
   Precision = 0.056112 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.106262


Total learning time: 3.14 seconds
Total inference time: 1.669 seconds
AUC ROC: 1.0
Total revision time: 3.14
Best scored revision CLL: -0.169041


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:57:36
{'CLL': -0.440893, 'AUC ROC': 1.0, 'F1': 0.106262, 'Recall': 1.0, 'Precision': [0.056112, 0.5], 'Inference time': 1.669, 'Learning time': 3.14, 'AUC PR': 1.0, 'parameter_10': {'CLL': -0.491111, 'AUC ROC': 1.0, 'F1': 0.106262, 'Recall': 1.0, 'Precision': [0.056112, 0.5], 'Inference time': 1.377, 'Learning time': 0.855, 'AUC PR': 1.0}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6226941374741534;  // std dev = 0,305, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.13957479719472818;  // std dev = 0,120, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12203120369217424;  // std dev = 0,094, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4933953663637006;  // std dev = 0,294, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.39451007020039147;  // std dev = 0,239, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( female(B) )
%   | then return -0.09944047274942998;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14455237249378175;  // std dev = 0,202, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3015405216167356;  // std dev = 0,229, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( female(B) )
%   | then return -0.090883272263721;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12860402059728931;  // std dev = 0,185, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return -0.0836481718158083;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12638755573814925;  // std dev = 0,219, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.24091487837006;  // std dev = 0,208, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1937605479521046;  // std dev = 0,200, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( female(B) )
%   | then return -0.07745571813578672;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1187498795683283;  // std dev = 0,223, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return -0.0720990114226025;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11671369950353568;  // std dev = 0,246, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16241699542257182;  // std dev = 0,186, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1355987705248625;  // std dev = 0,182, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( female(B) )
%   | then return -0.06742185587539123;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1097268267591058;  // std dev = 0,243, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return -0.06330427890441767;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10805592109568603;  // std dev = 0,260, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.11812491414084654;  // std dev = 0,172, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */


Results
   AUC ROC   = 0.999765
   AUC PR    = 0.983476
   CLL	      = -0.175634
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.738 seconds
Total inference time: 1.39 seconds
AUC ROC: 0.999765


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:57:39
{'CLL': -0.175634, 'AUC ROC': 0.999765, 'F1': 0.973913, 'Recall': 1.0, 'Precision': [0.949153, 0.5], 'Inference time': 1.39, 'Learning time': 1.738, 'AUC PR': 0.983476}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */


Results
   AUC ROC   = 0.983055
   AUC PR    = 0.338212
   CLL	      = -0.15996
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.627 seconds
Total inference time: 0.822 seconds
AUC ROC: 0.983055


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:57:41
{'CLL': -0.15996, 'AUC ROC': 0.983055, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.822, 'Learning time': 0.627, 'AUC PR': 0.338212}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6914822684328457;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.5851860008555358;  // std dev = 0,373, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 1,86e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.46125983910675533;  // std dev = 0,373, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3488463256948421;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.26212705508354195;  // std dev = 0,373, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1994526427642342;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15451336627983223;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109172;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12179491558002797;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.26412021434748345;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.08630184428980857;  // std dev = 0,315, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.21605893491455014;  // std dev = 1,49e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.09376838117672771;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.06312640269014169;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.385363
   Precision = 0.056112 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.106262


Total learning time: 0.911 seconds
Total inference time: 1.459 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.966667
   AUC PR    = 0.967071
   CLL	      = -0.271202
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.52 seconds
Parameter learned model CLL: -0.271202


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.581, 3, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [1.86e-09, 12, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.373, 3, 15]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [7.45e-09, 11, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.373, 3, 15], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.581, 3, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.373, 3, 15], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.581, 3, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [5.27e-09, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.581, 3, 15], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.32e-09, 11, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.581, 3, 15], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.32e-09, 11, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.315, 14, 5]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.369, 3, 5], 'true,true,false,false': [0.0, 1, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 0, 10], 'true,false,false,false': [0.0, 11, 0]}]]
[{'': [0.1388888888888886, -1.1564823173178714e-17], 'false,true': [0.0, -1.0092936587501423e-17], 'false': [-1.1564823173178714e-17, nan]}, {'': [0.13888888888888898, 2.3129646346357427e-18], 'true': [0.13888888888888898, nan], 'false': [2.3129646346357427e-18, nan]}, {'': [0.1388888888888892, 6.938893903907228e-18], 'false,true,false': [nan, 5.046468293750712e-18], 'true': [0.1388888888888892, nan], 'false,true': [0.0, 5.046468293750712e-18], 'false': [6.938893903907228e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.1388888888888891, 0.0], 'false,true': [0.0, 0.0], 'false': [0.0, nan]}, {'': [0.13888888888888884, 2.3129646346357427e-18], 'true': [0.13888888888888884, nan], 'false': [2.3129646346357427e-18, nan], 'false,true': [0.0, 0.0]}, {'': [0.13888888888888895, 2.3129646346357427e-18], 'false,true': [0.0, 2.523234146875356e-18], 'false': [2.3129646346357427e-18, nan]}, {'': [0.13888888888888884, 1.1564823173178713e-18], 'false,true': [0.0, 0.0], 'false': [1.1564823173178713e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.1388888888888889, 1.1564823173178713e-18], 'false,true': [0.0, 6.30808536718839e-19], 'false': [1.1564823173178713e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.08993725703296292, nan], 'true': [0.0, 0.09418253781379432], 'true,false': [0.0, 0.09912353794568216], 'true,true': [0.0, nan]}, {'': [0.08153152067627491, nan], 'true,true,false': [nan, 0.0], 'true,false': [2.2204460492503132e-17, 0.09891309117565199], 'true': [0.0, 0.08407961115195645], 'true,false,true': [2.2204460492503132e-17, nan], 'true,true': [nan, 0.0], 'true,false,false': [0.234375, -6.30808536718839e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7194734122109543;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( female(A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.41751358415830986;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.15274385809367078;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.11588205210402518;  // std dev = 0,202, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(E, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.10258674943414024;  // std dev = 0,196, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066139
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.534 seconds
Total inference time: 1.878 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096872
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.527 seconds
Refined model CLL: -0.096872


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066139
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 3.492 seconds
Total inference time: 1.878 seconds
AUC ROC: 1.0
Total revision time: 3.492
Best scored revision CLL: -0.096872


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:57:48
{'CLL': -0.066139, 'AUC ROC': 1.0, 'F1': 0.973913, 'Recall': 1.0, 'Precision': [0.949153, 0.5], 'parameter_15': {'CLL': -0.385363, 'AUC ROC': 1.0, 'F1': 0.106262, 'Recall': 1.0, 'Precision': [0.056112, 0.5], 'Inference time': 1.459, 'Learning time': 0.911, 'AUC PR': 1.0}, 'Inference time': 1.878, 'Learning time': 3.492, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6392070123615109;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.49932275605826126;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3758491322444214;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.35869560700051617;  // std dev = 0,120, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.15810260247050825;  // std dev = 0,173, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2812400414817696;  // std dev = 0,105, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(B) )
%   | then return -0.08270424385643732;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14368165320496196;  // std dev = 0,164, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.228182278231459;  // std dev = 0,091, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then return -0.07664306173979668;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.13038216372197298;  // std dev = 0,156, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.19060042444259773;  // std dev = 0,080, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A) )
%   | then return -0.06983734976751149;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11993528759990865;  // std dev = 0,147, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16297979024662193;  // std dev = 0,070, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then return -0.0654126227277425;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11021645267293512;  // std dev = 0,140, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14199362537109053;  // std dev = 0,063, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return -0.06034344395051298;  // std dev = 0,009, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10241253792954232;  // std dev = 0,132, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.999765
   AUC PR    = 0.983476
   CLL	      = -0.079477
   Precision = 0.509091 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.674699


Total learning time: 1.809 seconds
Total inference time: 1.272 seconds
AUC ROC: 0.999765


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:57:52
{'CLL': -0.079477, 'AUC ROC': 0.999765, 'F1': 0.674699, 'Recall': 1.0, 'Precision': [0.509091, 0.5], 'Inference time': 1.272, 'Learning time': 1.809, 'AUC PR': 0.983476}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */


Results
   AUC ROC   = 0.983055
   AUC PR    = 0.338212
   CLL	      = -0.159905
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.643 seconds
Total inference time: 0.83 seconds
AUC ROC: 0.983055


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:57:53
{'CLL': -0.159905, 'AUC ROC': 0.983055, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.83, 'Learning time': 0.643, 'AUC PR': 0.338212}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6914822684328453;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.5851860008555358;  // std dev = 0,373, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 1,86e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.4612598391067553;  // std dev = 0,373, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3488463256948424;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.26212705508354195;  // std dev = 0,373, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19945264276423416;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15451336627983223;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12179491558002786;  // std dev = 1,826, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2641202143474835;  // std dev = 2,98e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09653231443100013;  // std dev = 0,318, 24,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.21605893491455033;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.11669576925454836;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.06252405514889646;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.378943
   Precision = 0.056112 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.106262


Total learning time: 0.925 seconds
Total inference time: 1.353 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.97
   AUC PR    = 0.970682
   CLL	      = -0.267608
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.571 seconds
Parameter learned model CLL: -0.267608


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.826, 4, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [1.86e-09, 16, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.373, 4, 20]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [1.18e-08, 14, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.373, 4, 20], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.826, 4, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.373, 4, 20], 'false,true,true': [0.0, 2, 0], 'false,true,false': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.826, 4, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [8.33e-09, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.826, 4, 20], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 14, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.826, 4, 20], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [9.31e-10, 14, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)', 'true,true': 'movie(C, B)'}, {'true,true,true': [2.98e-08, 0, 14], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.318, 18, 6]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.549, 4, 6], 'true,true,false,false': [0.0, 2, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 14], 'true,false,false,false': [0.0, 14, 0]}]]
[{'': [0.13888888888888906, -6.938893903907228e-18], 'false,true': [0.0, -1.1895246692412391e-17], 'false': [-6.938893903907228e-18, nan]}, {'': [0.13888888888888937, 3.469446951953614e-18], 'true': [0.13888888888888937, nan], 'false': [3.469446951953614e-18, nan]}, {'': [0.13888888888888917, 1.214306433183765e-17], 'false,true,false': [nan, 9.912705577010326e-18], 'true': [0.13888888888888917, nan], 'false,true': [0.0, 9.912705577010326e-18], 'false': [1.214306433183765e-17, nan], 'false,true,true': [nan, 0.0]}, {'': [0.1388888888888889, -6.938893903907228e-18], 'false,true': [0.0, -3.96508223080413e-18], 'false': [-6.938893903907228e-18, nan]}, {'': [0.13888888888888887, 5.204170427930421e-18], 'true': [0.13888888888888887, nan], 'false': [5.204170427930421e-18, nan], 'false,true': [0.0, 3.96508223080413e-18]}, {'': [0.13888888888888895, 6.938893903907228e-18], 'false,true': [0.0, 4.956352788505163e-18], 'false': [6.938893903907228e-18, nan]}, {'': [0.13888888888888884, -1.734723475976807e-18], 'false,true': [0.0, -9.912705577010326e-19], 'false': [-1.734723475976807e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.1388888888888889, 0.0], 'false,true': [0.0, 9.912705577010326e-19], 'false': [0.0, nan], 'false,true,true': [nan, 0.0]}, {'': [0.08993725703296297, nan], 'true': [6.344131569286608e-17, 0.09338458728549717], 'true,false': [0.0, 0.10110587392252006], 'true,true': [6.344131569286608e-17, nan]}, {'': [0.08086127817094318, nan], 'true,true,false': [nan, 0.0], 'true,false': [-1.586032892321652e-17, 0.10071326466194484], 'true': [0.0, 0.08471170361976496], 'true,false,true': [-1.586032892321652e-17, nan], 'true,true': [nan, 0.0], 'true,false,false': [0.23999999999999994, -2.4781763942525816e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.7194734122109544;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( female(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839138;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 1,05e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.4175135841583098;  // std dev = 1,29e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839687;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.12114802438826025;  // std dev = 0,077, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( movie(E, B) )
%   | | then if ( female(A), director(B) )
%   | | | then return 0.13771628422168403;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.05421631923049147;  // std dev = 0,198, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066684
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.677 seconds
Total inference time: 1.317 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096369
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.574 seconds
Refined model CLL: -0.096369


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066684
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 3.747 seconds
Total inference time: 1.317 seconds
AUC ROC: 1.0
Total revision time: 3.747
Best scored revision CLL: -0.096369


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:58:00
{'CLL': -0.066684, 'AUC ROC': 1.0, 'F1': 0.973913, 'Recall': 1.0, 'Precision': [0.949153, 0.5], 'Inference time': 1.317, 'Learning time': 3.747, 'AUC PR': 1.0, 'parameter_20': {'CLL': -0.378943, 'AUC ROC': 1.0, 'F1': 0.106262, 'Recall': 1.0, 'Precision': [0.056112, 0.5], 'Inference time': 1.353, 'Learning time': 0.925, 'AUC PR': 1.0}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.28441781852639025;  // std dev = 0,107, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.28881821120415657;  // std dev = 0,499, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2303517856415236;  // std dev = 0,093, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.25406983497651925;  // std dev = 0,463, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.19214151902021767;  // std dev = 0,081, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.22454542652364573;  // std dev = 0,424, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.164116296000062;  // std dev = 0,072, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.19939539891446842;  // std dev = 0,387, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1428593320956415;  // std dev = 0,064, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.17797626954435797;  // std dev = 0,352, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.999765
   AUC PR    = 0.983476
   CLL	      = -0.082407
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.873 seconds
Total inference time: 1.247 seconds
AUC ROC: 0.999765


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:58:04
{'CLL': -0.082407, 'AUC ROC': 0.999765, 'F1': 0.973913, 'Recall': 1.0, 'Precision': [0.949153, 0.5], 'Inference time': 1.247, 'Learning time': 1.873, 'AUC PR': 0.983476}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */


Results
   AUC ROC   = 0.983055
   AUC PR    = 0.338212
   CLL	      = -0.159879
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.663 seconds
Total inference time: 0.876 seconds
AUC ROC: 0.983055


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:58:05
{'CLL': -0.159879, 'AUC ROC': 0.983055, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.876, 'Learning time': 0.663, 'AUC PR': 0.338212}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.691482268432845;  // std dev = 2,041, 30,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.5851860008555363;  // std dev = 0,373, 30,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.4612598391067552;  // std dev = 0,373, 30,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.34884632569484253;  // std dev = 2,041, 30,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.26212705508354195;  // std dev = 0,373, 30,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19945264276423427;  // std dev = 2,041, 30,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15451336627983223;  // std dev = 2,041, 30,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07877675473109179;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1217949155800278;  // std dev = 2,041, 30,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.26412021434748356;  // std dev = 2,58e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1020747676341949;  // std dev = 0,315, 30,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2160589349145504;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.1322357295886165;  // std dev = 1,708, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.062199972006517584;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.374929
   Precision = 0.056112 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.106262


Total learning time: 0.939 seconds
Total inference time: 1.367 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.972
   AUC PR    = 0.972812
   CLL	      = -0.265271
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.564 seconds
Parameter learned model CLL: -0.265271


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.041, 5, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [0.0, 20, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.373, 5, 25]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [1.67e-08, 18, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.373, 5, 25], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.041, 5, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.373, 5, 25], 'false,true,true': [0.0, 2, 0], 'false,true,false': [1.05e-08, 18, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.041, 5, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [1.18e-08, 18, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.041, 5, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 18, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.041, 5, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 18, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)', 'true,true': 'movie(C, B)'}, {'true,true,true': [2.58e-08, 0, 18], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.315, 23, 7]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.708, 5, 7], 'true,true,false,false': [0.0, 2, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 18], 'true,false,false,false': [0.0, 18, 0]}]]
[{'': [0.13888888888888987, 2.7755575615628915e-18], 'false,true': [0.0, -3.0839528461809902e-18], 'false': [2.7755575615628915e-18, nan]}, {'': [0.13888888888888887, 0.0], 'true': [0.13888888888888887, nan], 'false': [0.0, nan]}, {'': [0.13888888888888912, 1.1102230246251566e-17], 'false,true,false': [nan, 1.5419764230904953e-17], 'true': [0.13888888888888912, nan], 'false,true': [0.0, 1.5419764230904953e-17], 'false': [1.1102230246251566e-17, nan], 'false,true,true': [nan, 0.0]}, {'': [0.1388888888888888, -2.7755575615628915e-18], 'false,true': [0.0, -4.625929269271485e-18], 'false': [-2.7755575615628915e-18, nan]}, {'': [0.13888888888888884, 6.938893903907228e-18], 'true': [0.13888888888888884, nan], 'false': [6.938893903907228e-18, nan], 'false,true': [0.0, 6.1679056923619804e-18]}, {'': [0.13888888888888892, 9.714451465470119e-18], 'false,true': [0.0, 7.709882115452476e-18], 'false': [9.714451465470119e-18, nan]}, {'': [0.13888888888888884, -6.938893903907229e-19], 'false,true': [0.0, 0.0], 'false': [-6.938893903907229e-19, nan], 'false,true,true': [nan, 0.0]}, {'': [0.1388888888888889, -1.3877787807814458e-18], 'false,true': [0.0, -7.709882115452476e-19], 'false': [-1.3877787807814458e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.08993725703296296, nan], 'true': [3.700743415417188e-17, 0.09280429098628969], 'true,false': [0.0, 0.09892048285884952], 'true,true': [3.700743415417188e-17, nan]}, {'': [0.08044839784963669, nan], 'true,true,false': [nan, 0.0], 'true,false': [-3.0839528461809905e-17, 0.09839942398384584], 'true': [0.0, 0.08348478353727949], 'true,false,true': [-3.0839528461809905e-17, nan], 'true,true': [nan, 0.0], 'true,false,false': [0.24305555555555555, -4.625929269271485e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.1527438580936708;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.12509750360143654;  // std dev = 0,073, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( movie(E, B) )
%   | | then if ( director(B), female(A) )
%   | | | then return 0.1372479522668395;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.05632572102574653;  // std dev = 0,198, 24,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066568
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.642 seconds
Total inference time: 1.768 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.09604
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.606 seconds
Refined model CLL: -0.09604


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066568
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 3.7509999999999994 seconds
Total inference time: 1.768 seconds
AUC ROC: 1.0
Total revision time: 3.7509999999999994
Best scored revision CLL: -0.09604


Dataset: 53_cora_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:58:13
{'CLL': -0.066568, 'AUC ROC': 1.0, 'F1': 0.973913, 'Recall': 1.0, 'parameter_25': {'CLL': -0.374929, 'AUC ROC': 1.0, 'F1': 0.106262, 'Recall': 1.0, 'Precision': [0.056112, 0.5], 'Inference time': 1.367, 'Learning time': 0.939, 'AUC PR': 1.0}, 'Precision': [0.949153, 0.5], 'Inference time': 1.768, 'Learning time': 3.7509999999999994, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.7956489350995123;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.6694131893798132;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5204603507259603;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3912519545392304;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 1,05e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2971751345678791;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.27872878398224055;  // std dev = 0,096, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.29197878595090637;  // std dev = 0,507, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.226352003476193;  // std dev = 0,084, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.25718496331692414;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.18922720085183226;  // std dev = 0,073, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.22751348920454165;  // std dev = 0,432, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.1619189883322894;  // std dev = 0,065, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.2021453428139289;  // std dev = 0,395, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14115262859075497;  // std dev = 0,058, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202619;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.18047267172214068;  // std dev = 0,359, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.999765
   AUC PR    = 0.983476
   CLL	      = -0.082541
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.723 seconds
Total inference time: 1.384 seconds
AUC ROC: 0.999765


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:58:16
{'CLL': -0.082541, 'AUC ROC': 0.999765, 'F1': 0.973913, 'Recall': 1.0, 'Precision': [0.949153, 0.5], 'Inference time': 1.384, 'Learning time': 1.723, 'AUC PR': 0.983476}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.7956489350995123;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */


Results
   AUC ROC   = 0.983055
   AUC PR    = 0.338212
   CLL	      = -0.159864
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.688 seconds
Total inference time: 0.822 seconds
AUC ROC: 0.983055


Dataset: 53_cora_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:58:18
{'CLL': -0.159864, 'AUC ROC': 0.983055, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.822, 'Learning time': 0.688, 'AUC PR': 0.338212}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.5851860008555361;  // std dev = 0,373, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.46125983910675533;  // std dev = 0,373, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3488463256948422;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.26212705508354184;  // std dev = 0,373, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19945264276423433;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15451336627983223;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12179491558002796;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.06412021434748356;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.0019175394058654593;  // std dev = 0,133, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.7481524132407494;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.25184758675925056;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return 0.26449307723483184;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.06830484592783316;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.440809
   Precision = 0.060354 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.113837


Total learning time: 0.801 seconds
Total inference time: 1.683 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.231635
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.488 seconds
Parameter learned model CLL: -0.231635


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [0.913, 1, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.373, 1, 5]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, G)', 'false,true': 'genre(A, F)'}, {'false,true,false,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.373, 1, 5]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [0.913, 1, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.373, 1, 5], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [0.913, 1, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [0.913, 1, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [0.913, 1, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.894, 1, 4], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.133, 4, 1]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, E)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 4]}]]
[{'': [0.1388888888888887, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.13888888888888884, 0.0], 'true': [0.13888888888888884, nan], 'false': [0.0, nan]}, {'': [0.13888888888888887, 0.0], 'true': [0.13888888888888887, nan], 'false': [0.0, nan], 'false,true,false': [nan, 0.0], 'false,true': [nan, 0.0]}, {'': [0.13888888888888898, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.13888888888888884, 0.0], 'true': [0.13888888888888884, nan], 'false': [0.0, nan], 'false,true': [nan, 0.0]}, {'': [0.13888888888888887, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.1388888888888889, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.13888888888888887, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.08993725703296296, nan], 'true': [0.16, 0.017694021605531893], 'true,false': [nan, 0.017694021605531893], 'true,true': [0.16, nan]}, {'': [0.0895784049535602, nan], 'true,false': [0.0, 0.01772071322582129], 'true': [0.0, 0.025723688232720098], 'true,false,true': [0.0, nan], 'true,true': [0.0, nan], 'true,false,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.46125983910675533;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3488463256948422;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.26212705508354184;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19945264276423433;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15451336627983223;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12179491558002796;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.26412021434748356;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.2019175394058655;  // std dev = 0,597, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.6948186899071964;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D) )
%   | then return 0.2160589349145503;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( movie(E, B) )
%   | | then return -0.002087714227190743;  // std dev = 0,244, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.346446
   Precision = 0.060354 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.113837


Total learning time: 0.718 seconds
Total inference time: 1.229 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.203785
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.469 seconds
Refined model CLL: -0.203785


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.346446
   Precision = 0.060354 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.113837


Total learning time: 2.476 seconds
Total inference time: 1.229 seconds
AUC ROC: 1.0
Total revision time: 2.476
Best scored revision CLL: -0.203785


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:58:24
{'CLL': -0.346446, 'AUC ROC': 1.0, 'F1': 0.113837, 'Recall': 1.0, 'Precision': [0.060354, 0.5], 'parameter_5': {'CLL': -0.440809, 'AUC ROC': 1.0, 'F1': 0.113837, 'Recall': 1.0, 'Precision': [0.060354, 0.5], 'Inference time': 1.683, 'Learning time': 0.801, 'AUC PR': 1.0}, 'Inference time': 1.229, 'Learning time': 2.476, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 1.005 seconds
Total inference time: 1.142 seconds
AUC ROC: 0.976337


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:58:26
{'CLL': -0.159504, 'AUC ROC': 0.976337, 'F1': 0.417266, 'Recall': 1.0, 'Precision': [0.263636, 0.5], 'Inference time': 1.142, 'Learning time': 1.005, 'AUC PR': 0.263636}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.162069
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.53 seconds
Total inference time: 0.825 seconds
AUC ROC: 0.976337


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:58:28
{'CLL': -0.162069, 'AUC ROC': 0.976337, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.825, 'Learning time': 0.53, 'AUC PR': 0.263636}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6273797043302815;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.5328490890947368;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.4239325089396988;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3229819329672577;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.24247055537624246;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18270684819255756;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13920656791416966;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1073857272638388;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2034431098219474;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(A, F) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1204353339431977;  // std dev = 0,338, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.7275754567239238;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2724245432760762;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.15891831956828772;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0611375491984573;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.295227
   Precision = 0.06423 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.120708


Total learning time: 0.866 seconds
Total inference time: 1.83 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.98
   AUC PR    = 0.981667
   CLL	      = -0.307681
   Precision = 0.769231 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.869565


Total scoring time: 0.501 seconds
Parameter learned model CLL: -0.307681


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.519, 3, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [0.0, 7, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.421, 3, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 5, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'true,true': [0.421, 3, 10], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.519, 3, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.421, 3, 10], 'false,true,true': [0.0, 1, 0], 'false,true,false': [2.63e-09, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.519, 3, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [2.63e-09, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.519, 3, 10], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 6, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.519, 3, 10], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 6, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false': 'genre(A, F)', 'true,true': 'movie(C, B)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [0.943, 1, 8], 'true,true,false,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.338, 7, 2]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.0, 2, 2], 'true,true,false,false': [0.0, 1, 0], 'true,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 0, 8], 'true,false,false,false': [1.86e-09, 5, 0]}]]
[{'': [0.1775147928994082, -7.93016446160826e-18], 'false,true': [0.0, -6.938893903907228e-18], 'false': [-7.93016446160826e-18, nan]}, {'': [0.1775147928994084, -1.982541115402065e-18], 'true': [0.1775147928994084, nan], 'false': [-1.982541115402065e-18, nan]}, {'': [0.177514792899408, -1.982541115402065e-18], 'false,true,true': [nan, 0.0], 'true': [0.177514792899408, nan], 'false,true': [0.0, 0.0], 'false': [-1.982541115402065e-18, nan], 'false,true,false': [0.0, 0.0]}, {'': [0.17751479289940836, 0.0], 'false,true': [0.0, 0.0], 'false': [0.0, nan]}, {'': [0.1775147928994082, 0.0], 'true': [0.1775147928994082, nan], 'false': [0.0, nan], 'false,true': [0.0, 1.1564823173178713e-18]}, {'': [0.17751479289940816, 9.912705577010326e-19], 'false,true': [0.0, 1.1564823173178713e-18], 'false': [9.912705577010326e-19, nan]}, {'': [0.17751479289940827, -9.912705577010326e-19], 'false,true': [0.0, -1.1564823173178713e-18], 'false': [-9.912705577010326e-19, nan], 'false,true,true': [nan, 0.0]}, {'': [0.17751479289940827, 9.912705577010326e-19], 'false,true': [0.0, 0.0], 'false': [9.912705577010326e-19, nan], 'false,true,true': [nan, 0.0]}, {'': [0.12065544531372505, nan], 'true': [0.09554108989997291, 0.10328641596150567], 'true,true,false': [nan, 0.0], 'true,false': [0.0, 0.11449219749126097], 'true,true': [0.09876543209876545, 0.0]}, {'': [0.11218691511774877, nan], 'true,true,false': [nan, 0.0], 'true,false': [0.011191169337786596, 0.11347187137138705], 'true': [0.11001945570722105, 0.09116668344588512], 'true,false,true': [2.7755575615628914e-17, 0.0], 'true,true': [0.0, 0.0], 'true,false,false': [0.24999999999999997, 6.938893903907229e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,false;genre(B, H).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;false;genre(A, F).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109545;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.10850969090609623;  // std dev = 0,198, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.10850969090609623;  // std dev = 0,198, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then return 0.04215844012473413;  // std dev = 0,221, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06993405511403453;  // std dev = 0,008, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.09624392669249879;  // std dev = 0,192, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1392239759021342;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A), actor(B) )
%   | | | then return -0.06767779239256194;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.02043189815598736;  // std dev = 0,232, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069726
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.196 seconds
Total inference time: 1.518 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103762
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.525 seconds
Refined model CLL: -0.103762


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069726
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.0879999999999996 seconds
Total inference time: 1.518 seconds
AUC ROC: 1.0
Total revision time: 3.0879999999999996
Best scored revision CLL: -0.103762


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:58:35
{'CLL': -0.069726, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.518, 'Learning time': 3.0879999999999996, 'AUC PR': 1.0, 'parameter_10': {'CLL': -0.295227, 'AUC ROC': 1.0, 'F1': 0.120708, 'Recall': 1.0, 'Precision': [0.06423, 0.5], 'Inference time': 1.83, 'Learning time': 0.866, 'AUC PR': 1.0}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3584548159137827;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.3758477125459625;  // std dev = 0,142, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return -0.2575925320806725;  // std dev = 0,404, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.29317544697447745;  // std dev = 0,125, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return -0.2234167783233243;  // std dev = 0,368, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.23665032642175374;  // std dev = 0,108, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return -0.19563116837870667;  // std dev = 0,334, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1968104100190319;  // std dev = 0,094, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return -0.17285764086581842;  // std dev = 0,302, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.16768543128476252;  // std dev = 0,083, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return -0.15404306015675734;  // std dev = 0,275, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(A), director(B) )
%   | then return 0.1456636799303595;  // std dev = 0,074, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return -0.13837013563252845;  // std dev = 0,251, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.087799
   Precision = 0.337209 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.504348


Total learning time: 1.786 seconds
Total inference time: 1.462 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:58:39
{'CLL': -0.087799, 'AUC ROC': 1.0, 'F1': 0.504348, 'Recall': 1.0, 'Precision': [0.337209, 0.5], 'Inference time': 1.462, 'Learning time': 1.786, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.975188
   AUC PR    = 0.252639
   CLL	      = -0.162146
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.606 seconds
Total inference time: 0.852 seconds
AUC ROC: 0.975188


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:58:40
{'CLL': -0.162146, 'AUC ROC': 0.975188, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.852, 'Learning time': 0.606, 'AUC PR': 0.252639}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5724346493852266;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.48767788391726324;  // std dev = 0,452, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.39125696209925326;  // std dev = 0,452, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.30057115478848934;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.22629823971521895;  // std dev = 0,452, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16984358676510142;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1281332068824675;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09743184803714998;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.2694865117747257;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(A, F) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11029604812183848;  // std dev = 0,385, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.6991248709142082;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.30087512908579184;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.11380893940328116;  // std dev = 1,581, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.06172213792899882;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.272627
   Precision = 0.06423 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.120708


Total learning time: 0.89 seconds
Total inference time: 1.772 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.944444
   AUC PR    = 0.949272
   CLL	      = -0.372039
   Precision = 0.714286 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.833333


Total scoring time: 0.508 seconds
Parameter learned model CLL: -0.372039


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.07, 6, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [0.0, 9, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.452, 6, 15]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 7, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'true,true': [0.452, 6, 15], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.07, 6, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [3.73e-09, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.452, 6, 15], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.07, 6, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [3.73e-09, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.07, 6, 15], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 8, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.07, 6, 15], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [9.31e-10, 8, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false': 'genre(A, F)', 'true,true': 'movie(C, B)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [0.953, 1, 10], 'true,true,false,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.385, 12, 5]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.581, 5, 5], 'true,true,false,false': [0.0, 1, 0], 'true,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 10], 'true,false,false,false': [0.0, 7, 0]}]]
[{'': [0.20408163265306084, -9.25185853854297e-18], 'false,true': [0.0, -6.938893903907228e-18], 'false': [-9.25185853854297e-18, nan]}, {'': [0.2040816326530611, 0.0], 'true': [0.2040816326530611, nan], 'false': [0.0, nan]}, {'': [0.20408163265306142, -1.5419764230904951e-18], 'false,true,true': [nan, 0.0], 'true': [0.20408163265306142, nan], 'false,true': [0.0, -1.734723475976807e-18], 'false': [-1.5419764230904951e-18, nan], 'false,true,false': [0.0, -1.982541115402065e-18]}, {'': [0.20408163265306126, 3.0839528461809902e-18], 'false,true': [0.0, 1.734723475976807e-18], 'false': [3.0839528461809902e-18, nan]}, {'': [0.20408163265306126, 0.0], 'true': [0.20408163265306126, nan], 'false': [0.0, nan], 'false,true': [0.0, 0.0]}, {'': [0.20408163265306123, 1.5419764230904951e-18], 'false,true': [0.0, 1.734723475976807e-18], 'false': [1.5419764230904951e-18, nan]}, {'': [0.20408163265306117, 0.0], 'false,true': [0.0, 0.0], 'false': [0.0, nan], 'false,true,true': [nan, 0.0]}, {'': [0.2040816326530613, 7.709882115452476e-19], 'false,true': [0.0, 8.673617379884035e-19], 'false': [7.709882115452476e-19, nan], 'false,true,true': [nan, 0.0]}, {'': [0.1471579395064867, nan], 'true': [0.08448008125153998, 0.1401398086525161], 'true,true,false': [nan, 0.0], 'true,false': [0.0, 0.14828593686155128], 'true,true': [0.08264462809917351, 0.0]}, {'': [0.13486730882881393, nan], 'true,true,false': [nan, 0.0], 'true,false': [0.011014371237799712, 0.14771596000743076], 'true': [0.10078498841043512, 0.12493236575573921], 'true,false,true': [-1.1102230246251566e-17, 0.0], 'true,true': [0.0, 0.0], 'true,false,false': [0.25, -4.956352788505163e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,false;genre(B, H).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;false;genre(A, F).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109543;  // std dev = 1,05e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.7194734122109543;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 1,05e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.41751358415830986;  // std dev = 1,05e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.10850969090609605;  // std dev = 0,198, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.12114802438826025;  // std dev = 0,077, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.15274385809367075;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.07037845414430133;  // std dev = 0,009, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.09624392669249862;  // std dev = 0,192, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.13771628422168403;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064814
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.476 seconds
Total inference time: 2.169 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097851
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.551 seconds
Refined model CLL: -0.097851


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064814
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.4250000000000003 seconds
Total inference time: 2.169 seconds
AUC ROC: 1.0
Total revision time: 3.4250000000000003
Best scored revision CLL: -0.097851


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:58:48
{'CLL': -0.064814, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'parameter_15': {'CLL': -0.272627, 'AUC ROC': 1.0, 'F1': 0.120708, 'Recall': 1.0, 'Precision': [0.06423, 0.5], 'Inference time': 1.772, 'Learning time': 0.89, 'AUC PR': 1.0}, 'Inference time': 2.169, 'Learning time': 3.4250000000000003, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6302322013528495;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.4930252128087158;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3713223124091624;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2802444957903803;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.215871968382499;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.24794468767484565;  // std dev = 0,138, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A) )
%   | then return -0.2067497461425;  // std dev = 0,572, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2048973532959467;  // std dev = 0,121, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A), actor(B) )
%   | then return -0.06501975920046406;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1936012258858307;  // std dev = 0,538, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1736876963340687;  // std dev = 0,106, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A) )
%   | then return -0.1751823663079785;  // std dev = 0,510, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06114216050219545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.15026236620167785;  // std dev = 0,094, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A), actor(B) )
%   | then return -0.05185597210836236;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.16409470722801078;  // std dev = 0,476, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.1027
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 1.548 seconds
Total inference time: 1.477 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:58:51
{'CLL': -0.1027, 'AUC ROC': 1.0, 'F1': 0.417266, 'Recall': 1.0, 'Precision': [0.263636, 0.5], 'Inference time': 1.477, 'Learning time': 1.548, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.975188
   AUC PR    = 0.252639
   CLL	      = -0.162123
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.603 seconds
Total inference time: 0.85 seconds
AUC ROC: 0.975188


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:58:53
{'CLL': -0.162123, 'AUC ROC': 0.975188, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.85, 'Learning time': 0.603, 'AUC PR': 0.252639}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5478041075133049;  // std dev = 2,491, 29,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.4673349216153254;  // std dev = 0,463, 29,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.37638199006737755;  // std dev = 0,463, 29,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.29037828337699284;  // std dev = 2,491, 29,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.21914607702834096;  // std dev = 0,463, 29,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16441529914033096;  // std dev = 2,491, 29,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12367700178457382;  // std dev = 2,491, 29,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109172;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09358007619873498;  // std dev = 2,491, 29,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3191105722544595;  // std dev = 0,968, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(A, F) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.16613206187681137;  // std dev = 0,383, 22,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.6903654425209279;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.3096345574790721;  // std dev = 1,49e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.19387655059013864;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.0585665756369156;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.239639
   Precision = 0.06423 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.120708


Total learning time: 0.889 seconds
Total inference time: 1.798 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.95
   AUC PR    = 0.957266
   CLL	      = -0.371874
   Precision = 0.689655 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.816327


Total scoring time: 0.55 seconds
Parameter learned model CLL: -0.371874


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.491, 9, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [1.86e-09, 11, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.463, 9, 20]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 9, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'true,true': [0.463, 9, 20], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.491, 9, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.463, 9, 20], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.491, 9, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.491, 9, 20], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [9.31e-10, 10, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.491, 9, 20], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [9.31e-10, 10, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false': 'genre(A, F)', 'true,true': 'movie(C, B)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [0.968, 1, 15], 'true,true,false,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.383, 17, 5]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.754, 8, 5], 'true,true,false,false': [0.0, 1, 0], 'true,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 0, 15], 'true,false,false,false': [0.0, 9, 0]}]]
[{'': [0.21403091557669457, -1.0092936587501423e-17], 'false,true': [0.0, -1.1102230246251566e-17], 'false': [-1.0092936587501423e-17, nan]}, {'': [0.21403091557669504, 2.523234146875356e-18], 'true': [0.21403091557669504, nan], 'false': [2.523234146875356e-18, nan]}, {'': [0.21403091557669462, 5.046468293750712e-18], 'false,true,true': [nan, 0.0], 'true': [0.21403091557669462, nan], 'false,true': [0.0, 0.0], 'false': [5.046468293750712e-18, nan], 'false,true,false': [0.0, -1.5419764230904951e-18]}, {'': [0.21403091557669413, 0.0], 'false,true': [0.0, 1.3877787807814458e-18], 'false': [0.0, nan]}, {'': [0.2140309155766944, 0.0], 'true': [0.2140309155766944, nan], 'false': [0.0, nan], 'false,true': [0.0, 0.0]}, {'': [0.2140309155766944, 2.523234146875356e-18], 'false,true': [0.0, 1.3877787807814458e-18], 'false': [2.523234146875356e-18, nan]}, {'': [0.2140309155766945, 0.0], 'false,true': [0.0, 0.0], 'false': [0.0, nan], 'false,true,true': [nan, 0.0]}, {'': [0.21403091557669446, 6.30808536718839e-19], 'false,true': [0.0, 6.938893903907229e-19], 'false': [6.30808536718839e-19, nan], 'false,true,true': [nan, 0.0]}, {'': [0.15906302885223997, nan], 'true': [0.06346181883662147, 0.1404978932496386], 'true,true,false': [nan, 0.0], 'true,false': [0.0, 0.14646910532263002], 'true,true': [0.05859375000000011, 0.0]}, {'': [0.13760613028458513, nan], 'true,true,false': [nan, 0.0], 'true,false': [0.008188252471494656, 0.14428602488215536], 'true': [0.09802334509782792, 0.13096926479950677], 'true,false,true': [1.4802973661668754e-17, 0.0], 'true,true': [0.0, 0.0], 'true,false,false': [0.23668639053254442, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,false;genre(B, H).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;false;genre(A, F).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.7194734122109544;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4175135841583098;  // std dev = 1,29e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(B) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( female(A), actor(B) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.11588205210402518;  // std dev = 0,202, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.132637418462955;  // std dev = 0,064, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.15274385809367075;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.07078660179919458;  // std dev = 0,009, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.10258674943414024;  // std dev = 0,196, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.13635758325494196;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202619;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064838
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.796 seconds
Total inference time: 1.793 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097159
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.562 seconds
Refined model CLL: -0.097159


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064838
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.7970000000000006 seconds
Total inference time: 1.793 seconds
AUC ROC: 1.0
Total revision time: 3.7970000000000006
Best scored revision CLL: -0.097159


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:59:01
{'CLL': -0.064838, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.793, 'Learning time': 3.7970000000000006, 'AUC PR': 1.0, 'parameter_20': {'CLL': -0.239639, 'AUC ROC': 1.0, 'F1': 0.120708, 'Recall': 1.0, 'Precision': [0.06423, 0.5], 'Inference time': 1.798, 'Learning time': 0.889, 'AUC PR': 1.0}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6392070123615109;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.49932275605826126;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3758491322444214;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.28401811356076057;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.219396647293074;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.08518475138839685;  // std dev = 1,05e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.17369760260917727;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07877675473109179;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1405548082677505;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.18112803447595016;  // std dev = 0,140, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return -0.1877191806018611;  // std dev = 0,653, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1559446555266526;  // std dev = 0,125, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A), actor(B) )
%   | then return -0.05738761718078221;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.17861381898388387;  // std dev = 0,627, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.128503
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 1.607 seconds
Total inference time: 1.467 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:59:04
{'CLL': -0.128503, 'AUC ROC': 1.0, 'F1': 0.417266, 'Recall': 1.0, 'Precision': [0.263636, 0.5], 'Inference time': 1.467, 'Learning time': 1.607, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.975188
   AUC PR    = 0.252639
   CLL	      = -0.162115
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.634 seconds
Total inference time: 0.922 seconds
AUC ROC: 0.975188


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:59:06
{'CLL': -0.162115, 'AUC ROC': 0.975188, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.922, 'Learning time': 0.634, 'AUC PR': 0.252639}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5724346493852258;  // std dev = 2,673, 35,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.4876778839172633;  // std dev = 0,452, 35,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 1,86e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3912569620992533;  // std dev = 0,452, 35,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.30057115478848995;  // std dev = 2,673, 35,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.22629823971521895;  // std dev = 0,452, 35,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16984358676510142;  // std dev = 2,673, 35,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1281332068824675;  // std dev = 2,673, 35,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.0974318480371498;  // std dev = 2,673, 35,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.31277655506476887;  // std dev = 0,976, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else if ( genre(A, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(A, F) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1794078620148593;  // std dev = 0,361, 27,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.7081516787331249;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.29184832126687515;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.24016003831302188;  // std dev = 1,793, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.057838869384230225;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.243566
   Precision = 0.06423 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.120708


Total learning time: 0.954 seconds
Total inference time: 1.594 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.956
   AUC PR    = 0.962816
   CLL	      = -0.341279
   Precision = 0.714286 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.833333


Total scoring time: 0.606 seconds
Parameter learned model CLL: -0.341279


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.673, 10, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [1.86e-09, 15, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.452, 10, 25]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [1.05e-08, 13, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'true,true': [0.452, 10, 25], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.673, 10, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.452, 10, 25], 'false,true,true': [0.0, 1, 0], 'false,true,false': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.673, 10, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [8.33e-09, 14, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.673, 10, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 14, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.673, 10, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [9.31e-10, 14, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false': 'genre(A, F)', 'true,true': 'movie(C, B)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [0.976, 1, 20], 'true,true,false,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.361, 22, 5]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.793, 9, 5], 'true,true,false,false': [0.0, 1, 0], 'true,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 20], 'true,false,false,false': [5.27e-09, 13, 0]}]]
[{'': [0.20408163265306242, -1.4802973661668754e-17], 'false,true': [0.0, -1.1895246692412391e-17], 'false': [-1.4802973661668754e-17, nan]}, {'': [0.20408163265306106, 3.7007434154171884e-18], 'true': [0.20408163265306106, nan], 'false': [3.7007434154171884e-18, nan]}, {'': [0.20408163265306165, 1.295260195396016e-17], 'false,true,false': [0.0, 8.540177112501205e-18], 'true': [0.20408163265306165, nan], 'false,true': [0.0, 9.912705577010326e-18], 'false': [1.295260195396016e-17, nan], 'false,true,true': [nan, 0.0]}, {'': [0.20408163265306103, -5.551115123125783e-18], 'false,true': [0.0, -3.96508223080413e-18], 'false': [-5.551115123125783e-18, nan]}, {'': [0.20408163265306115, 3.7007434154171884e-18], 'true': [0.20408163265306115, nan], 'false': [3.7007434154171884e-18, nan], 'false,true': [0.0, 3.96508223080413e-18]}, {'': [0.2040816326530612, 5.551115123125783e-18], 'false,true': [0.0, 4.956352788505163e-18], 'false': [5.551115123125783e-18, nan]}, {'': [0.2040816326530612, -1.8503717077085942e-18], 'false,true': [0.0, -9.912705577010326e-19], 'false': [-1.8503717077085942e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.2040816326530614, 9.251858538542971e-19], 'false,true': [0.0, 9.912705577010326e-19], 'false': [9.251858538542971e-19, nan], 'false,true,true': [nan, 0.0]}, {'': [0.1471579395064867, nan], 'true': [0.04959508214034903, 0.12624861683520178], 'true,true,false': [nan, 0.0], 'true,false': [0.0, 0.130484607366684], 'true,true': [0.04535147392290263, 0.0]}, {'': [0.12525539380094533, nan], 'true,true,false': [nan, 0.0], 'true,false': [0.005748961292215492, 0.12734647168465624], 'true': [0.10367106844888732, 0.11907430833816401], 'true,false,true': [-2.2204460492503132e-17, 0.0], 'true,true': [0.0, 0.0], 'true,false,false': [0.22959183673469383, 2.135044278125301e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,false;genre(B, H).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;false;genre(A, F).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true
9;false,true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.20975771563253562;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.12816932076724036;  // std dev = 0,070, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.1357307168676805;  // std dev = 0,059, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.15274385809367075;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.07089716693265319;  // std dev = 0,009, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return 0.11311266586504971;  // std dev = 0,202, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.13599371305656724;  // std dev = 1,29e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202622;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064853
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.017 seconds
Total inference time: 1.693 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.09675
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.618 seconds
Refined model CLL: -0.09675


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064853
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.195 seconds
Total inference time: 1.693 seconds
AUC ROC: 1.0
Total revision time: 4.195
Best scored revision CLL: -0.09675


Dataset: 53_cora_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:59:14
{'CLL': -0.064853, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'parameter_25': {'CLL': -0.243566, 'AUC ROC': 1.0, 'F1': 0.120708, 'Recall': 1.0, 'Precision': [0.06423, 0.5], 'Inference time': 1.594, 'Learning time': 0.954, 'AUC PR': 1.0}, 'Precision': [1.0, 0.5], 'Inference time': 1.693, 'Learning time': 4.195, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.7194734122109542;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.4175135841583098;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.09269127618926094;  // std dev = 1,05e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.2551722425694894;  // std dev = 2,11e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.14804913120500338;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.1770964977452774;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12328872166165511;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.1527438580936708;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.15665813111368573;  // std dev = 0,118, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06419184008202618;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( female(A) )
%   | then return -0.15851825707450215;  // std dev = 0,250, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.06419184008202618;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.988516
   AUC PR    = 0.757033
   CLL	      = -0.145545
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 1.637 seconds
Total inference time: 1.403 seconds
AUC ROC: 0.988516


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:59:17
{'CLL': -0.145545, 'AUC ROC': 0.988516, 'F1': 0.417266, 'Recall': 1.0, 'Precision': [0.263636, 0.5], 'Inference time': 1.403, 'Learning time': 1.637, 'AUC PR': 0.757033}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.975188
   AUC PR    = 0.252639
   CLL	      = -0.162101
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.668 seconds
Total inference time: 0.859 seconds
AUC ROC: 0.975188


Dataset: 53_cora_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:59:19
{'CLL': -0.162101, 'AUC ROC': 0.975188, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.859, 'Learning time': 0.668, 'AUC PR': 0.252639}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.5851860008555361;  // std dev = 0,373, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.46125983910675533;  // std dev = 0,373, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3488463256948422;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.26212705508354184;  // std dev = 0,373, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19945264276423433;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15451336627983223;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12179491558002796;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.26412021434748356;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.12424458044697395;  // std dev = 0,299, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2160589349145503;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.21103535993811662;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.06091926458224609;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.961967
   AUC PR    = 0.795112
   CLL	      = -0.316778
   Precision = 0.183316 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.309835


Total learning time: 0.797 seconds
Total inference time: 1.459 seconds
AUC ROC: 0.961967


Results scoring model
   AUC ROC   = 0.98
   AUC PR    = 0.983333
   CLL	      = -0.254194
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.483 seconds
Parameter learned model CLL: -0.254194


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [0.913, 1, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.373, 1, 5]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, G)', 'false,true': 'genre(A, F)'}, {'false,true,false,false': [0.0, 4, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.373, 1, 5]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [0.913, 1, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.373, 1, 5], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [0.913, 1, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [0.913, 1, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [0.913, 1, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.299, 5, 1]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(A, D)', 'true,false': 'genre(B, E)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.707, 1, 1], 'true,false,true,true': [0.0, 0, 4], 'true,false,true,false': [0.0, 0, 0], 'true,false,false,false': [0.0, 4, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.1388888888888887, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.13888888888888884, 0.0], 'true': [0.13888888888888884, nan], 'false': [0.0, nan]}, {'': [0.13888888888888887, 0.0], 'true': [0.13888888888888887, nan], 'false': [0.0, nan], 'false,true,false': [nan, 0.0], 'false,true': [nan, 0.0]}, {'': [0.13888888888888898, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.13888888888888884, 0.0], 'true': [0.13888888888888884, nan], 'false': [0.0, nan], 'false,true': [nan, 0.0]}, {'': [0.13888888888888887, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.1388888888888889, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.13888888888888887, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.08993725703296294, nan], 'true': [0.0, 0.08956454285397514], 'true,false': [nan, 0.08956454285397514], 'true,true': [0.0, nan]}, {'': [0.07867025798188511, nan], 'true': [nan, 0.07867025798188511], 'true,false': [0.0, 0.08834107601886505], 'true,false,true': [0.0, nan], 'true,false,false': [0.24999999999999997, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
9;;workedunder(A, B) :- genre(B, E).;true;true
9;false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.46125983910675533;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3488463256948422;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.26212705508354184;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.19945264276423433;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15451336627983223;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12179491558002796;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.26412021434748356;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.12424458044697395;  // std dev = 0,733, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.2160589349145503;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( movie(D, B) )
%   | then return -0.11095796303420292;  // std dev = 0,728, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.961149
   AUC PR    = 0.587865
   CLL	      = -0.317185
   Precision = 0.183316 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.309835


Total learning time: 0.664 seconds
Total inference time: 1.387 seconds
AUC ROC: 0.961149


Results scoring model
   AUC ROC   = 0.98
   AUC PR    = 0.983333
   CLL	      = -0.256609
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 0.496 seconds
Refined model CLL: -0.256609


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.961967
   AUC PR    = 0.795112
   CLL	      = -0.316778
   Precision = 0.183316 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.309835


Total learning time: 2.44 seconds
Total inference time: 1.459 seconds
AUC ROC: 0.961967
Total revision time: 2.44
Best scored revision CLL: -0.254194


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:59:25
{'CLL': -0.316778, 'AUC ROC': 0.961967, 'F1': 0.309835, 'Recall': 1.0, 'Precision': [0.183316, 0.5], 'parameter_5': {'CLL': -0.316778, 'AUC ROC': 0.961967, 'F1': 0.309835, 'Recall': 1.0, 'Precision': [0.183316, 0.5], 'Inference time': 1.459, 'Learning time': 0.797, 'AUC PR': 0.795112}, 'Inference time': 1.459, 'Learning time': 2.44, 'AUC PR': 0.795112}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.575892
   Precision = 0.162113 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.278997


Total learning time: 0.998 seconds
Total inference time: 1.189 seconds
AUC ROC: 0.870167


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:59:28
{'CLL': -0.575892, 'AUC ROC': 0.870167, 'F1': 0.278997, 'Recall': 1.0, 'Precision': [0.162113, 0.5], 'Inference time': 1.189, 'Learning time': 0.998, 'AUC PR': 0.162113}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.236693
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.492 seconds
Total inference time: 0.897 seconds
AUC ROC: 0.870167


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:59:29
{'CLL': -0.236693, 'AUC ROC': 0.870167, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.897, 'Learning time': 0.492, 'AUC PR': 0.162113}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6273797043302815;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.5328490890947368;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.4239325089396988;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3229819329672577;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.24247055537624246;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18270684819255756;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13920656791416966;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1073857272638388;  // std dev = 1,519, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3145542209330585;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.2152344983332982;  // std dev = 0,328, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.25096595291884505;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.3873032313866763;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.055917196384199674;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.961967
   AUC PR    = 0.795112
   CLL	      = -0.248373
   Precision = 0.183316 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.309835


Total learning time: 0.864 seconds
Total inference time: 2.02 seconds
AUC ROC: 0.961967


Results scoring model
   AUC ROC   = 0.985
   AUC PR    = 0.988462
   CLL	      = -0.271937
   Precision = 0.769231 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.869565


Total scoring time: 0.554 seconds
Parameter learned model CLL: -0.271937


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.519, 3, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [0.0, 7, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.421, 3, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 6, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.421, 3, 10], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.519, 3, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.421, 3, 10], 'false,true,true': [0.0, 1, 0], 'false,true,false': [2.63e-09, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.519, 3, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [2.63e-09, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.519, 3, 10], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 6, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.519, 3, 10], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 6, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.328, 9, 1]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.866, 3, 1], 'true,true,false,false': [0.0, 1, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [1.05e-08, 0, 9], 'true,false,false,false': [0.0, 6, 0]}]]
[{'': [0.1775147928994082, -7.93016446160826e-18], 'false,true': [0.0, -6.938893903907228e-18], 'false': [-7.93016446160826e-18, nan]}, {'': [0.1775147928994084, -1.982541115402065e-18], 'true': [0.1775147928994084, nan], 'false': [-1.982541115402065e-18, nan]}, {'': [0.177514792899408, -1.982541115402065e-18], 'false,true,true': [nan, 0.0], 'true': [0.177514792899408, nan], 'false,true': [0.0, 0.0], 'false': [-1.982541115402065e-18, nan], 'false,true,false': [nan, 0.0]}, {'': [0.17751479289940836, 0.0], 'false,true': [0.0, 0.0], 'false': [0.0, nan]}, {'': [0.1775147928994082, 0.0], 'true': [0.1775147928994082, nan], 'false': [0.0, nan], 'false,true': [0.0, 1.1564823173178713e-18]}, {'': [0.17751479289940816, 9.912705577010326e-19], 'false,true': [0.0, 1.1564823173178713e-18], 'false': [9.912705577010326e-19, nan]}, {'': [0.17751479289940827, -9.912705577010326e-19], 'false,true': [0.0, -1.1564823173178713e-18], 'false': [-9.912705577010326e-19, nan], 'false,true,true': [nan, 0.0]}, {'': [0.17751479289940827, 9.912705577010326e-19], 'false,true': [0.0, 0.0], 'false': [9.912705577010326e-19, nan], 'false,true,true': [nan, 0.0]}, {'': [0.12065544531372507, nan], 'true': [-1.2335811384723961e-17, 0.0993527141539449], 'true,false': [0.0, 0.10732867210823431], 'true,true': [-1.2335811384723961e-17, nan]}, {'': [0.09674764952161359, nan], 'true,true,false': [nan, 0.0], 'true,false': [1.2335811384723961e-17, 0.10135600900671908], 'true': [0.0, 0.10148788142689628], 'true,false,true': [1.2335811384723961e-17, nan], 'true,true': [nan, 0.0], 'true,false,false': [0.1875, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return -0.013134268859734299;  // std dev = 0,192, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06487236575129791;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.02182424963989955;  // std dev = 0,197, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.992036
   AUC PR    = 0.889837
   CLL	      = -0.123835
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.184 seconds
Total inference time: 1.516 seconds
AUC ROC: 0.992036


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.09789
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.517 seconds
Refined model CLL: -0.09789


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.992036
   AUC PR    = 0.889837
   CLL	      = -0.123835
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 3.119 seconds
Total inference time: 1.516 seconds
AUC ROC: 0.992036
Total revision time: 3.119
Best scored revision CLL: -0.09789


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:59:36
{'CLL': -0.123835, 'AUC ROC': 0.992036, 'F1': 0.770563, 'Recall': 1.0, 'Precision': [0.626761, 0.5], 'Inference time': 1.516, 'Learning time': 3.119, 'AUC PR': 0.889837, 'parameter_10': {'CLL': -0.248373, 'AUC ROC': 0.961967, 'F1': 0.309835, 'Recall': 1.0, 'Precision': [0.183316, 0.5], 'Inference time': 2.02, 'Learning time': 0.864, 'AUC PR': 0.795112}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.575892
   Precision = 0.162113 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.278997


Total learning time: 1.097 seconds
Total inference time: 1.146 seconds
AUC ROC: 0.870167


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:59:39
{'CLL': -0.575892, 'AUC ROC': 0.870167, 'F1': 0.278997, 'Recall': 1.0, 'Precision': [0.162113, 0.5], 'Inference time': 1.146, 'Learning time': 1.097, 'AUC PR': 0.162113}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.236693
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.517 seconds
Total inference time: 0.856 seconds
AUC ROC: 0.870167


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:59:40
{'CLL': -0.236693, 'AUC ROC': 0.870167, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.856, 'Learning time': 0.517, 'AUC PR': 0.162113}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6476226193100386;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.5494185715067316;  // std dev = 0,408, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 1,86e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.43580662724469027;  // std dev = 0,408, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.331164704788703;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.24856222263410194;  // std dev = 0,408, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18776859068219615;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14373883200944887;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11158581592814869;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07324622576333704;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.29824522180639323;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.22318690654041845;  // std dev = 0,317, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.23977504603967328;  // std dev = 1,83e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.4530518259453894;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.05549886462359193;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.961967
   AUC PR    = 0.795112
   CLL	      = -0.250588
   Precision = 0.183316 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.309835


Total learning time: 0.872 seconds
Total inference time: 1.824 seconds
AUC ROC: 0.961967


Results scoring model
   AUC ROC   = 0.991111
   AUC PR    = 0.992982
   CLL	      = -0.248997
   Precision = 0.789474 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.882353


Total scoring time: 0.535 seconds
Parameter learned model CLL: -0.248997


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.777, 4, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [1.86e-09, 11, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.408, 4, 15]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 9, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.408, 4, 15], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.777, 4, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.408, 4, 15], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.777, 4, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [3.73e-09, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.777, 4, 15], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 9, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.777, 4, 15], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.32e-09, 9, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 14], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.317, 13, 1]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.894, 4, 1], 'true,true,false,false': [0.0, 2, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [1.83e-08, 0, 14], 'true,false,false,false': [0.0, 9, 0]}]]
[{'': [0.16620498614958412, -1.0092936587501423e-17], 'false,true': [0.0, -9.25185853854297e-18], 'false': [-1.0092936587501423e-17, nan]}, {'': [0.16620498614958432, 2.523234146875356e-18], 'true': [0.16620498614958432, nan], 'false': [2.523234146875356e-18, nan]}, {'': [0.16620498614958465, 5.046468293750712e-18], 'false,true,true': [nan, 0.0], 'true': [0.16620498614958465, nan], 'false,true': [0.0, -1.5419764230904951e-18], 'false': [5.046468293750712e-18, nan], 'false,true,false': [nan, -1.5419764230904951e-18]}, {'': [0.16620498614958448, 0.0], 'false,true': [0.0, 3.0839528461809902e-18], 'false': [0.0, nan]}, {'': [0.16620498614958454, 0.0], 'true': [0.16620498614958454, nan], 'false': [0.0, nan], 'false,true': [0.0, 0.0]}, {'': [0.16620498614958443, 2.523234146875356e-18], 'false,true': [0.0, 1.5419764230904951e-18], 'false': [2.523234146875356e-18, nan]}, {'': [0.16620498614958445, 0.0], 'false,true': [0.0, 0.0], 'false': [0.0, nan], 'false,true,true': [nan, 0.0]}, {'': [0.16620498614958445, 6.30808536718839e-19], 'false,true': [0.0, 7.709882115452476e-19], 'false': [6.30808536718839e-19, nan], 'false,true,true': [nan, 0.0]}, {'': [0.11092509260893145, nan], 'true': [-4.7580986769649563e-17, 0.09034185172094109], 'true,false': [0.0, 0.10025400109696118], 'true,true': [-4.7580986769649563e-17, nan]}, {'': [0.08866544296071432, nan], 'true,true,false': [nan, 0.0], 'true,false': [2.3790493384824782e-17, 0.09342946973218304], 'true': [0.0, 0.09451318017569635], 'true,false,true': [2.3790493384824782e-17, nan], 'true,true': [nan, 0.0], 'true,false,false': [0.16, -3.854941057726238e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109543;  // std dev = 1,05e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.7194734122109543;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 1,05e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.41751358415830986;  // std dev = 1,05e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.1527438580936708;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return -0.02419281065662803;  // std dev = 0,198, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( female(B) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06464333718708583;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.037696091464196946;  // std dev = 0,207, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.992036
   AUC PR    = 0.889837
   CLL	      = -0.123101
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.575 seconds
Total inference time: 1.554 seconds
AUC ROC: 0.992036


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096999
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.566 seconds
Refined model CLL: -0.096999


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.992036
   AUC PR    = 0.889837
   CLL	      = -0.123101
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 3.548 seconds
Total inference time: 1.554 seconds
AUC ROC: 0.992036
Total revision time: 3.548
Best scored revision CLL: -0.096999


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:59:48
{'CLL': -0.123101, 'AUC ROC': 0.992036, 'F1': 0.770563, 'Recall': 1.0, 'Precision': [0.626761, 0.5], 'parameter_15': {'CLL': -0.250588, 'AUC ROC': 0.961967, 'F1': 0.309835, 'Recall': 1.0, 'Precision': [0.183316, 0.5], 'Inference time': 1.824, 'Learning time': 0.872, 'AUC PR': 0.795112}, 'Inference time': 1.554, 'Learning time': 3.548, 'AUC PR': 0.889837}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.6302322013528495;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.4930252128087158;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.3713223124091624;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.2802444957903803;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2934713555956871;  // std dev = 0,139, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.28112880776106125;  // std dev = 0,480, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.23679053026367336;  // std dev = 0,121, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.24659774863970596;  // std dev = 0,443, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.19687262757018786;  // std dev = 0,105, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.21750949161531472;  // std dev = 0,405, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16770757996792904;  // std dev = 0,093, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.19293544825598163;  // std dev = 0,369, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14566473702644825;  // std dev = 0,083, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.17215043062980254;  // std dev = 0,336, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.977561
   AUC PR    = 0.504309
   CLL	      = -0.24325
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.683 seconds
Total inference time: 1.263 seconds
AUC ROC: 0.977561


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:59:51
{'CLL': -0.24325, 'AUC ROC': 0.977561, 'F1': 0.770563, 'Recall': 1.0, 'Precision': [0.626761, 0.5], 'Inference time': 1.263, 'Learning time': 1.683, 'AUC PR': 0.504309}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */


Results
   AUC ROC   = 0.848575
   AUC PR    = 0.136922
   CLL	      = -0.236164
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.663 seconds
Total inference time: 0.948 seconds
AUC ROC: 0.848575


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:59:53
{'CLL': -0.236164, 'AUC ROC': 0.848575, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.948, 'Learning time': 0.663, 'AUC PR': 0.136922}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6273797043302811;  // std dev = 2,148, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.5328490890947367;  // std dev = 0,421, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 1,86e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.42393250893969897;  // std dev = 0,421, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.32298193296725763;  // std dev = 2,148, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.24247055537624268;  // std dev = 0,421, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18270684819255756;  // std dev = 2,148, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13920656791416966;  // std dev = 2,148, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07877675473109172;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1073857272638386;  // std dev = 2,148, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07324622576333704;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3145542209330586;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.24311811513679063;  // std dev = 0,312, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.25096595291884505;  // std dev = 2,11e-08, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.48797650150246985;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.05446330453821385;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.961967
   AUC PR    = 0.795112
   CLL	      = -0.237414
   Precision = 0.183316 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.309835


Total learning time: 0.897 seconds
Total inference time: 1.624 seconds
AUC ROC: 0.961967


Results scoring model
   AUC ROC   = 0.9925
   AUC PR    = 0.994231
   CLL	      = -0.253427
   Precision = 0.769231 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.869565


Total scoring time: 0.624 seconds
Parameter learned model CLL: -0.253427


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.148, 6, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [1.86e-09, 14, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.421, 6, 20]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [9.13e-09, 12, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.421, 6, 20], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.148, 6, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.421, 6, 20], 'false,true,true': [0.0, 2, 0], 'false,true,false': [5.27e-09, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.148, 6, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [5.27e-09, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.148, 6, 20], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.32e-09, 12, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.148, 6, 20], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.32e-09, 12, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 19], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.312, 18, 1]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.926, 6, 1], 'true,true,false,false': [0.0, 2, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [2.11e-08, 0, 19], 'true,false,false,false': [0.0, 12, 0]}]]
[{'': [0.17751479289940847, -1.1895246692412391e-17], 'false,true': [0.0, -1.1564823173178714e-17], 'false': [-1.1895246692412391e-17, nan]}, {'': [0.17751479289940864, 3.96508223080413e-18], 'true': [0.17751479289940864, nan], 'false': [3.96508223080413e-18, nan]}, {'': [0.17751479289940802, 9.912705577010326e-18], 'false,true,false': [nan, 6.938893903907228e-18], 'true': [0.17751479289940802, nan], 'false,true': [0.0, 6.938893903907228e-18], 'false': [9.912705577010326e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.17751479289940847, -3.96508223080413e-18], 'false,true': [0.0, 0.0], 'false': [-3.96508223080413e-18, nan]}, {'': [0.17751479289940825, 3.96508223080413e-18], 'true': [0.17751479289940825, nan], 'false': [3.96508223080413e-18, nan], 'false,true': [0.0, 2.3129646346357427e-18]}, {'': [0.17751479289940825, 4.956352788505163e-18], 'false,true': [0.0, 2.3129646346357427e-18], 'false': [4.956352788505163e-18, nan]}, {'': [0.17751479289940833, -9.912705577010326e-19], 'false,true': [0.0, 1.1564823173178713e-18], 'false': [-9.912705577010326e-19, nan], 'false,true,true': [nan, 0.0]}, {'': [0.1775147928994083, 9.912705577010326e-19], 'false,true': [0.0, 1.1564823173178713e-18], 'false': [9.912705577010326e-19, nan], 'false,true,true': [nan, 0.0]}, {'': [0.12065544531372507, nan], 'true': [-3.5059674461847047e-17, 0.0907783883670594], 'true,false': [0.0, 0.09742762786673494], 'true,true': [-3.5059674461847047e-17, nan]}, {'': [0.09390954821838157, nan], 'true,true,false': [nan, 0.0], 'true,false': [2.337311630789803e-17, 0.0888425052876913], 'true': [0.0, 0.09851113802581075], 'true,false,true': [2.337311630789803e-17, nan], 'true,true': [nan, 0.0], 'true,false,false': [0.12244897959183672, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 1,18e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.41751358415830986;  // std dev = 1,18e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.1527438580936708;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return -0.036831144138792224;  // std dev = 0,077, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06443238241671485;  // std dev = 0,002, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.04490623654344153;  // std dev = 0,212, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.992036
   AUC PR    = 0.889837
   CLL	      = -0.122632
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.928 seconds
Total inference time: 1.809 seconds
AUC ROC: 0.992036


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096517
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.583 seconds
Refined model CLL: -0.096517


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.992036
   AUC PR    = 0.889837
   CLL	      = -0.122632
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 4.032 seconds
Total inference time: 1.809 seconds
AUC ROC: 0.992036
Total revision time: 4.032
Best scored revision CLL: -0.096517


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:00:01
{'CLL': -0.122632, 'AUC ROC': 0.992036, 'F1': 0.770563, 'Recall': 1.0, 'Precision': [0.626761, 0.5], 'Inference time': 1.809, 'Learning time': 4.032, 'AUC PR': 0.889837, 'parameter_20': {'CLL': -0.237414, 'AUC ROC': 0.961967, 'F1': 0.309835, 'Recall': 1.0, 'Precision': [0.183316, 0.5], 'Inference time': 1.624, 'Learning time': 0.897, 'AUC PR': 0.795112}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.6465415686654066;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.5044629797645588;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.37956420580342304;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.2871467034260754;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.22234379807937285;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.238633234718594;  // std dev = 0,129, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.2966815852191771;  // std dev = 0,534, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.19816629934554397;  // std dev = 0,113, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.26335375228588254;  // std dev = 0,499, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16865160978242374;  // std dev = 0,100, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.23437585183423867;  // std dev = 0,460, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14637722666024833;  // std dev = 0,089, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.20914161229050365;  // std dev = 0,421, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.977561
   AUC PR    = 0.504309
   CLL	      = -0.283636
   Precision = 0.162113 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.278997


Total learning time: 1.809 seconds
Total inference time: 1.354 seconds
AUC ROC: 0.977561


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 01:00:04
{'CLL': -0.283636, 'AUC ROC': 0.977561, 'F1': 0.278997, 'Recall': 1.0, 'Precision': [0.162113, 0.5], 'Inference time': 1.354, 'Learning time': 1.809, 'AUC PR': 0.504309}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.848575
   AUC PR    = 0.136922
   CLL	      = -0.236241
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.647 seconds
Total inference time: 0.84 seconds
AUC ROC: 0.848575


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 01:00:06
{'CLL': -0.236241, 'AUC ROC': 0.848575, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.84, 'Learning time': 0.647, 'AUC PR': 0.136922}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6393989350995116;  // std dev = 2,339, 32,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.5426919143120583;  // std dev = 0,413, 32,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.43099286828776007;  // std dev = 0,413, 32,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.32784349372229826;  // std dev = 2,339, 32,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.24607639161015318;  // std dev = 0,413, 32,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18568882989429153;  // std dev = 2,339, 32,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1418657924041094;  // std dev = 2,339, 32,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10984242247455098;  // std dev = 2,339, 32,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.304830323796535;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.2356745439639568;  // std dev = 0,304, 24,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.24430305029324165;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.5180728014101311;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.05484790020859064;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.961967
   AUC PR    = 0.795112
   CLL	      = -0.240638
   Precision = 0.183316 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.309835


Total learning time: 0.913 seconds
Total inference time: 1.647 seconds
AUC ROC: 0.961967


Results scoring model
   AUC ROC   = 0.9944
   AUC PR    = 0.995625
   CLL	      = -0.243189
   Precision = 0.78125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.877193


Total scoring time: 0.59 seconds
Parameter learned model CLL: -0.243189


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.339, 7, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 16, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [0.0, 18, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.413, 7, 25]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [1.39e-08, 16, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.413, 7, 25], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.339, 7, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 16, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.413, 7, 25], 'false,true,true': [0.0, 2, 0], 'false,true,false': [9.13e-09, 16, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.339, 7, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [1.05e-08, 16, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.339, 7, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 16, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.339, 7, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 16, 0], 'false,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 24], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.304, 23, 1]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.935, 7, 1], 'true,true,false,false': [0.0, 2, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 24], 'true,false,false,false': [0.0, 16, 0]}]]
[{'': [0.1708984375000011, -3.0839528461809902e-18], 'false,true': [0.0, -6.938893903907228e-18], 'false': [-3.0839528461809902e-18, nan]}, {'': [0.17089843749999933, 0.0], 'true': [0.17089843749999933, nan], 'false': [0.0, nan]}, {'': [0.17089843750000042, 1.5419764230904953e-17], 'false,true,false': [nan, 1.214306433183765e-17], 'true': [0.17089843750000042, nan], 'false,true': [0.0, 1.214306433183765e-17], 'false': [1.5419764230904953e-17, nan], 'false,true,true': [nan, 0.0]}, {'': [0.17089843749999994, -9.25185853854297e-18], 'false,true': [0.0, -6.938893903907228e-18], 'false': [-9.25185853854297e-18, nan]}, {'': [0.1708984375, 6.1679056923619804e-18], 'true': [0.1708984375, nan], 'false': [6.1679056923619804e-18, nan], 'false,true': [0.0, 5.204170427930421e-18]}, {'': [0.1708984375, 7.709882115452476e-18], 'false,true': [0.0, 6.938893903907228e-18], 'false': [7.709882115452476e-18, nan]}, {'': [0.17089843749999994, -3.854941057726238e-18], 'false,true': [0.0, -1.734723475976807e-18], 'false': [-3.854941057726238e-18, nan], 'false,true,true': [nan, 0.0]}, {'': [0.17089843750000006, -7.709882115452476e-19], 'false,true': [0.0, 0.0], 'false': [-7.709882115452476e-19, nan], 'false,true,true': [nan, 0.0]}, {'': [0.11487522544237352, nan], 'true': [-1.295260195396016e-16, 0.08728015664405933], 'true,false': [0.0, 0.09240183007929648], 'true,true': [-1.295260195396016e-16, nan]}, {'': [0.09001649644788551, nan], 'true,true,false': [nan, 0.0], 'true,false': [-5.551115123125783e-17, 0.08414217979848382], 'true': [0.0, 0.09350008841901614], 'true,false,true': [-5.551115123125783e-17, nan], 'true,true': [nan, 0.0], 'true,false,false': [0.109375, -2.168404344971009e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( female(B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.15274385809367083;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return -0.04078062335196853;  // std dev = 0,073, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return -0.06452801932988851;  // std dev = 0,002, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.04891442400938504;  // std dev = 0,215, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.992036
   AUC PR    = 0.889837
   CLL	      = -0.122426
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.666 seconds
Total inference time: 1.677 seconds
AUC ROC: 0.992036


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096176
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.598 seconds
Refined model CLL: -0.096176


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.992036
   AUC PR    = 0.889837
   CLL	      = -0.122426
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 3.767 seconds
Total inference time: 1.677 seconds
AUC ROC: 0.992036
Total revision time: 3.767
Best scored revision CLL: -0.096176


Dataset: 53_cora_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 01:00:14
{'CLL': -0.122426, 'AUC ROC': 0.992036, 'F1': 0.770563, 'Recall': 1.0, 'parameter_25': {'CLL': -0.240638, 'AUC ROC': 0.961967, 'F1': 0.309835, 'Recall': 1.0, 'Precision': [0.183316, 0.5], 'Inference time': 1.647, 'Learning time': 0.913, 'AUC PR': 0.795112}, 'Precision': [0.626761, 0.5], 'Inference time': 1.677, 'Learning time': 3.767, 'AUC PR': 0.889837}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.6526478931012827;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.508738411682717;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.38266873164552506;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 1,05e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.2897830208139342;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.22484413364919764;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.17907321293961084;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.20004247994991842;  // std dev = 0,129, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.3057486647417981;  // std dev = 0,570, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17004860516790551;  // std dev = 0,114, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.27412487403281055;  // std dev = 0,537, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14745072967664868;  // std dev = 0,102, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06419184008202618;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202618;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.2459546931993711;  // std dev = 0,499, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.977561
   AUC PR    = 0.504309
   CLL	      = -0.334072
   Precision = 0.162113 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.278997


Total learning time: 1.995 seconds
Total inference time: 1.273 seconds
AUC ROC: 0.977561


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 01:00:17
{'CLL': -0.334072, 'AUC ROC': 0.977561, 'F1': 0.278997, 'Recall': 1.0, 'Precision': [0.162113, 0.5], 'Inference time': 1.273, 'Learning time': 1.995, 'AUC PR': 0.504309}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */


Results
   AUC ROC   = 0.848575
   AUC PR    = 0.136922
   CLL	      = -0.236272
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.665 seconds
Total inference time: 0.851 seconds
AUC ROC: 0.848575


Dataset: 53_cora_imdb, Fold: 3, Type: Scratch (RDN), Time: 01:00:19
{'CLL': -0.236272, 'AUC ROC': 0.848575, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.851, 'Learning time': 0.665, 'AUC PR': 0.136922}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5724346493852266;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.48767788391726297;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3912569620992536;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3005711547884894;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.22629823971521876;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16984358676510128;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12813320688246752;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09743184803714998;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.36039560268381665;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.18734902091352637;  // std dev = 0,354, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2821051706172746;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.2620579911056495;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.05740764398298803;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.27404
   Precision = 0.075503 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.140406


Total learning time: 0.811 seconds
Total inference time: 1.137 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.971429
   CLL	      = -0.335336
   Precision = 0.714286 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.833333


Total scoring time: 0.463 seconds
Parameter learned model CLL: -0.335336


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.195, 2, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [0.0, 3, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.452, 2, 5]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, G)', 'false,true': 'genre(A, F)'}, {'false,true,false,false': [2.63e-09, 3, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.452, 2, 5]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.195, 2, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.452, 2, 5], 'false,true,true': [0.0, 0, 0], 'false,true,false': [2.63e-09, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.195, 2, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.195, 2, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.195, 2, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [9.31e-10, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.354, 5, 1]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(A, D)', 'true,false': 'genre(B, E)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.816, 2, 1], 'true,false,true,true': [0.0, 0, 4], 'true,false,true,false': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.20408163265306106, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.20408163265306115, 0.0], 'true': [0.20408163265306115, nan], 'false': [0.0, nan]}, {'': [0.20408163265306115, 2.3129646346357427e-18], 'true': [0.20408163265306115, nan], 'false': [2.3129646346357427e-18, nan], 'false,true,false': [nan, 2.3129646346357427e-18], 'false,true': [nan, 2.3129646346357427e-18]}, {'': [0.2040816326530612, -1.1564823173178713e-18], 'false,true': [nan, -1.1564823173178713e-18], 'false': [-1.1564823173178713e-18, nan]}, {'': [0.20408163265306128, 2.3129646346357427e-18], 'true': [0.20408163265306128, nan], 'false': [2.3129646346357427e-18, nan], 'false,true': [nan, 2.3129646346357427e-18]}, {'': [0.2040816326530612, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.20408163265306126, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.2040816326530612, 1.1564823173178713e-18], 'false,true': [nan, 1.1564823173178713e-18], 'false': [1.1564823173178713e-18, nan]}, {'': [0.1471579395064867, nan], 'true': [0.0, 0.12525356343889318], 'true,false': [nan, 0.12525356343889318], 'true,true': [0.0, nan]}, {'': [0.11980192522112476, nan], 'true': [nan, 0.11980192522112476], 'true,false': [0.0, 0.12158155225546757], 'true,false,true': [0.0, nan], 'true,false,false': [0.22222222222222224, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
9;;workedunder(A, B) :- genre(B, E).;true;true
9;false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16653882456488175;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1420942428155648;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.11914890490746428;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.09841340278401862;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.08026654944252243;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.06479591611329232;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.05187916934404054;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.2915418927329815;  // std dev = 0,481, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.1061108470228519;  // std dev = 0,375, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.2500876393708411;  // std dev = 0,455, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( movie(D, B) )
%   | then return -0.09335708759602866;  // std dev = 0,365, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.950455
   AUC PR    = 0.380798
   CLL	      = -0.233372
   Precision = 0.082707 at threshold = 0.5
   Recall    = 0.244444
   F1        = 0.123596


Total learning time: 1.034 seconds
Total inference time: 1.128 seconds
AUC ROC: 0.950455


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.213544
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.473 seconds
Refined model CLL: -0.213544


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.950455
   AUC PR    = 0.380798
   CLL	      = -0.233372
   Precision = 0.082707 at threshold = 0.5
   Recall    = 0.244444
   F1        = 0.123596


Total learning time: 2.7809999999999997 seconds
Total inference time: 1.128 seconds
AUC ROC: 0.950455
Total revision time: 2.7809999999999997
Best scored revision CLL: -0.213544


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:00:25
{'CLL': -0.233372, 'AUC ROC': 0.950455, 'F1': 0.123596, 'Recall': 0.244444, 'Precision': [0.082707, 0.5], 'parameter_5': {'CLL': -0.27404, 'AUC ROC': 1.0, 'F1': 0.140406, 'Recall': 1.0, 'Precision': [0.075503, 0.5], 'Inference time': 1.137, 'Learning time': 0.811, 'AUC PR': 1.0}, 'Inference time': 1.128, 'Learning time': 2.7809999999999997, 'AUC PR': 0.380798}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.965362
   AUC PR    = 0.255682
   CLL	      = -0.203547
   Precision = 0.255682 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.40724


Total learning time: 1.011 seconds
Total inference time: 0.918 seconds
AUC ROC: 0.965362


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 01:00:27
{'CLL': -0.203547, 'AUC ROC': 0.965362, 'F1': 0.40724, 'Recall': 1.0, 'Precision': [0.255682, 0.5], 'Inference time': 0.918, 'Learning time': 1.011, 'AUC PR': 0.255682}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.965362
   AUC PR    = 0.255682
   CLL	      = -0.173677
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.501 seconds
Total inference time: 0.715 seconds
AUC ROC: 0.965362


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 01:00:28
{'CLL': -0.173677, 'AUC ROC': 0.965362, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.715, 'Learning time': 0.501, 'AUC PR': 0.255682}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5724346493852266;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.4876778839172629;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3912569620992537;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3005711547884892;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.22629823971521892;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1698435867651014;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12813320688246746;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09743184803714998;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3603956026838166;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10909978897104888;  // std dev = 0,380, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2821051706172746;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.11409247103938513;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.0617914526387664;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.309189
   Precision = 0.075503 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.140406


Total learning time: 0.837 seconds
Total inference time: 1.237 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.92
   AUC PR    = 0.928214
   CLL	      = -0.379261
   Precision = 0.714286 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.833333


Total scoring time: 0.528 seconds
Parameter learned model CLL: -0.379261


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.69, 4, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [0.0, 6, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.452, 4, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, G)', 'false,true': 'genre(A, F)'}, {'false,true,false,false': [0.0, 6, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.452, 4, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.69, 4, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.452, 4, 10], 'false,true,true': [0.0, 0, 0], 'false,true,false': [2.63e-09, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.69, 4, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [2.63e-09, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.69, 4, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.69, 4, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 6], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.38, 10, 4]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(A, D)', 'true,false': 'genre(B, E)', 'true,false,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.414, 4, 4], 'true,false,true,true': [0.0, 0, 6], 'true,false,true,false': [0.0, 0, 0], 'true,false,false,false': [0.0, 6, 0], 'false': [0.0, 0, 0], 'true,true': [0.0, 0, 0]}]]
[{'': [0.20408163265306115, -6.938893903907228e-18], 'false,true': [nan, -6.938893903907228e-18], 'false': [-6.938893903907228e-18, nan]}, {'': [0.20408163265306115, -2.3129646346357427e-18], 'true': [0.20408163265306115, nan], 'false': [-2.3129646346357427e-18, nan]}, {'': [0.20408163265306123, 0.0], 'true': [0.20408163265306123, nan], 'false': [0.0, nan], 'false,true,false': [nan, 0.0], 'false,true': [nan, 0.0]}, {'': [0.20408163265306126, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.20408163265306126, 1.1564823173178713e-18], 'true': [0.20408163265306126, nan], 'false': [1.1564823173178713e-18, nan], 'false,true': [nan, 1.1564823173178713e-18]}, {'': [0.20408163265306123, 1.1564823173178713e-18], 'false,true': [nan, 1.1564823173178713e-18], 'false': [1.1564823173178713e-18, nan]}, {'': [0.20408163265306123, -1.1564823173178713e-18], 'false,true': [nan, -1.1564823173178713e-18], 'false': [-1.1564823173178713e-18, nan]}, {'': [0.20408163265306123, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.14715793950648667, nan], 'true': [0.0, 0.14409785103086295], 'true,false': [nan, 0.14409785103086295], 'true,true': [0.0, nan]}, {'': [0.12980879600742654, nan], 'true': [nan, 0.12980879600742654], 'true,false': [-9.25185853854297e-18, 0.14352703588385515], 'true,false,true': [-9.25185853854297e-18, nan], 'true,false,false': [0.25, -5.782411586589357e-19]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
9;;workedunder(A, B) :- genre(B, E).;true;true
9;false;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.998942
   AUC PR    = 0.918367
   CLL	      = -0.070146
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 1.304 seconds
Total inference time: 1.205 seconds
AUC ROC: 0.998942


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.488 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.998942
   AUC PR    = 0.918367
   CLL	      = -0.070146
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 3.157 seconds
Total inference time: 1.205 seconds
AUC ROC: 0.998942
Total revision time: 3.157
Best scored revision CLL: -0.094637


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:00:35
{'CLL': -0.070146, 'AUC ROC': 0.998942, 'F1': 0.957447, 'Recall': 1.0, 'Precision': [0.918367, 0.5], 'Inference time': 1.205, 'Learning time': 3.157, 'AUC PR': 0.918367, 'parameter_10': {'CLL': -0.309189, 'AUC ROC': 1.0, 'F1': 0.140406, 'Recall': 1.0, 'Precision': [0.075503, 0.5], 'Inference time': 1.237, 'Learning time': 0.837, 'AUC PR': 1.0}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.965362
   AUC PR    = 0.255682
   CLL	      = -0.203547
   Precision = 0.255682 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.40724


Total learning time: 1.095 seconds
Total inference time: 0.907 seconds
AUC ROC: 0.965362


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 01:00:37
{'CLL': -0.203547, 'AUC ROC': 0.965362, 'F1': 0.40724, 'Recall': 1.0, 'Precision': [0.255682, 0.5], 'Inference time': 0.907, 'Learning time': 1.095, 'AUC PR': 0.255682}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.965362
   AUC PR    = 0.255682
   CLL	      = -0.173677
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.553 seconds
Total inference time: 0.717 seconds
AUC ROC: 0.965362


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 01:00:38
{'CLL': -0.173677, 'AUC ROC': 0.965362, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.717, 'Learning time': 0.553, 'AUC PR': 0.255682}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6081489350995123;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.5170719622367218;  // std dev = 0,433, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.4125724528826601;  // std dev = 0,433, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3151786576185066;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.2367600938643422;  // std dev = 0,433, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17806945427207488;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1351367176422346;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10367175113685514;  // std dev = 1,936, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3303483330303591;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10250873230974832;  // std dev = 0,390, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2617373070613485;  // std dev = 2,11e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.10113951034128839;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.06217466316304842;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.329362
   Precision = 0.075503 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.140406


Total learning time: 0.89 seconds
Total inference time: 1.274 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.933333
   AUC PR    = 0.937376
   CLL	      = -0.349968
   Precision = 0.75 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.857143


Total scoring time: 0.516 seconds
Parameter learned model CLL: -0.349968


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.936, 5, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'false,true,false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [1.86e-09, 10, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.433, 5, 15]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 7, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.433, 5, 15], 'false,true,true,false': [2.63e-09, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.936, 5, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'false,true,false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.433, 5, 15], 'false,true,true': [2.63e-09, 3, 0], 'false,true,false': [0.0, 7, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.936, 5, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 3, 0], 'false,true,false': [2.63e-09, 7, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.936, 5, 15], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 7, 0], 'false,true,true,false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [1.936, 5, 15], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [9.31e-10, 7, 0], 'false,true,true,false': [1.86e-09, 3, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 3, 0], 'true,false,false': [0.39, 12, 6]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.651, 5, 6], 'true,true,false,false': [1.32e-09, 3, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [2.11e-08, 0, 9], 'true,false,false,false': [0.0, 7, 0]}]]
[{'': [0.18749999999999964, -1.1102230246251566e-17], 'false,true': [0.0, -7.93016446160826e-18], 'false': [-1.1102230246251566e-17, nan]}, {'': [0.18750000000000008, 2.7755575615628915e-18], 'true': [0.18750000000000008, nan], 'false': [2.7755575615628915e-18, nan]}, {'': [0.18749999999999994, 0.0], 'false,true,true': [nan, 2.3129646346357427e-18], 'true': [0.18749999999999994, nan], 'false,true': [2.3129646346357427e-18, -1.982541115402065e-18], 'false': [0.0, nan], 'false,true,false': [nan, -1.982541115402065e-18]}, {'': [0.1874999999999999, 1.3877787807814458e-18], 'false,true': [-1.1564823173178713e-18, 0.0], 'false': [1.3877787807814458e-18, nan]}, {'': [0.18749999999999986, 0.0], 'true': [0.18749999999999986, nan], 'false': [0.0, nan], 'false,true': [2.3129646346357427e-18, 0.0]}, {'': [0.18750000000000003, 1.3877787807814458e-18], 'false,true': [0.0, 9.912705577010326e-19], 'false': [1.3877787807814458e-18, nan]}, {'': [0.1875, 0.0], 'false,true': [0.0, -9.912705577010326e-19], 'false': [0.0, nan], 'false,true,true': [nan, 0.0]}, {'': [0.18749999999999994, 6.938893903907229e-19], 'false,true': [1.1564823173178713e-18, 9.912705577010326e-19], 'false': [6.938893903907229e-19, nan], 'false,true,true': [nan, 1.1564823173178713e-18]}, {'': [0.12991868736129392, nan], 'true': [-7.401486830834377e-17, 0.13064594388772158], 'true,false': [-5.782411586589357e-19, 0.15225432987080137], 'true,true': [-7.401486830834377e-17, nan]}, {'': [0.11610511223822131, nan], 'true,true,false': [nan, 5.782411586589357e-19], 'true,false': [4.9343245538895844e-17, 0.15187597240188924], 'true': [5.782411586589357e-19, 0.1281199495754843], 'true,false,true': [4.9343245538895844e-17, nan], 'true,true': [nan, 5.782411586589357e-19], 'true,false,false': [0.24793388429752064, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109542;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.4175135841583098;  // std dev = 1,29e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.15274385809367075;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.15274385809367075;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( movie(E, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06969
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 1.479 seconds
Total inference time: 1.35 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.528 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06969
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 3.4130000000000003 seconds
Total inference time: 1.35 seconds
AUC ROC: 1.0
Total revision time: 3.4130000000000003
Best scored revision CLL: -0.094637


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:00:45
{'CLL': -0.06969, 'AUC ROC': 1.0, 'F1': 0.957447, 'Recall': 1.0, 'Precision': [0.918367, 0.5], 'parameter_15': {'CLL': -0.329362, 'AUC ROC': 1.0, 'F1': 0.140406, 'Recall': 1.0, 'Precision': [0.075503, 0.5], 'Inference time': 1.274, 'Learning time': 0.89, 'AUC PR': 1.0}, 'Inference time': 1.35, 'Learning time': 3.4130000000000003, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */


Results
   AUC ROC   = 0.965362
   AUC PR    = 0.255682
   CLL	      = -0.203547
   Precision = 0.255682 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.40724


Total learning time: 1.196 seconds
Total inference time: 0.919 seconds
AUC ROC: 0.965362


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 01:00:47
{'CLL': -0.203547, 'AUC ROC': 0.965362, 'F1': 0.40724, 'Recall': 1.0, 'Precision': [0.255682, 0.5], 'Inference time': 0.919, 'Learning time': 1.196, 'AUC PR': 0.255682}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */


Results
   AUC ROC   = 0.965362
   AUC PR    = 0.255682
   CLL	      = -0.173677
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.546 seconds
Total inference time: 0.721 seconds
AUC ROC: 0.965362


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 01:00:49
{'CLL': -0.173677, 'AUC ROC': 0.965362, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.721, 'Learning time': 0.546, 'AUC PR': 0.255682}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6273797043302811;  // std dev = 2,148, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.5328490890947367;  // std dev = 0,421, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 1,86e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.42393250893969897;  // std dev = 0,421, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.32298193296725763;  // std dev = 2,148, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.24247055537624268;  // std dev = 0,421, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18270684819255756;  // std dev = 2,148, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13920656791416966;  // std dev = 2,148, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1073857272638386;  // std dev = 2,148, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 1,32e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.31455422093305857;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09617755250152196;  // std dev = 0,387, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.25096595291884505;  // std dev = 1,49e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.09292036110508464;  // std dev = 1,852, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return -0.06254485267517022;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.344799
   Precision = 0.075503 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.140406


Total learning time: 0.899 seconds
Total inference time: 1.369 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.94
   AUC PR    = 0.942387
   CLL	      = -0.333828
   Precision = 0.769231 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.869565


Total scoring time: 0.532 seconds
Parameter learned model CLL: -0.333828


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.148, 6, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 5, 0], 'false,true,false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [1.86e-09, 14, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.421, 6, 20]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 9, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.421, 6, 20], 'false,true,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.148, 6, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 5, 0], 'false,true,false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.421, 6, 20], 'false,true,true': [0.0, 5, 0], 'false,true,false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.148, 6, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 5, 0], 'false,true,false': [3.73e-09, 9, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.148, 6, 20], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 9, 0], 'false,true,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.148, 6, 20], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.32e-09, 9, 0], 'false,true,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 12], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [1.86e-09, 5, 0], 'true,false,false': [0.387, 15, 8]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.852, 6, 8], 'true,true,false,false': [0.0, 5, 0], 'true,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 0, 12], 'true,false,false,false': [3.73e-09, 9, 0]}]]
[{'': [0.17751479289940847, -1.1895246692412391e-17], 'false,true': [-2.7755575615628915e-18, -9.25185853854297e-18], 'false': [-1.1895246692412391e-17, nan]}, {'': [0.17751479289940864, 3.96508223080413e-18], 'true': [0.17751479289940864, nan], 'false': [3.96508223080413e-18, nan]}, {'': [0.17751479289940802, 9.912705577010326e-18], 'false,true,true': [nan, 0.0], 'true': [0.17751479289940802, nan], 'false,true': [0.0, -1.5419764230904951e-18], 'false': [9.912705577010326e-18, nan], 'false,true,false': [nan, -1.5419764230904951e-18]}, {'': [0.17751479289940847, -3.96508223080413e-18], 'false,true': [0.0, 3.0839528461809902e-18], 'false': [-3.96508223080413e-18, nan]}, {'': [0.17751479289940825, -1.982541115402065e-18], 'true': [0.17751479289940825, nan], 'false': [-1.982541115402065e-18, nan], 'false,true': [0.0, 0.0]}, {'': [0.17751479289940825, 4.956352788505163e-18], 'false,true': [0.0, 1.5419764230904951e-18], 'false': [4.956352788505163e-18, nan]}, {'': [0.17751479289940833, -9.912705577010326e-19], 'false,true': [-1.3877787807814458e-18, 0.0], 'false': [-9.912705577010326e-19, nan], 'false,true,true': [nan, -1.3877787807814458e-18]}, {'': [0.1775147928994083, 9.912705577010326e-19], 'false,true': [-6.938893903907229e-19, 7.709882115452476e-19], 'false': [9.912705577010326e-19, nan], 'false,true,true': [nan, -6.938893903907229e-19]}, {'': [0.12065544531372505, nan], 'true': [-1.850371707708594e-17, 0.12296859685500802], 'true,false': [6.938893903907229e-19, 0.1495633836631024], 'true,true': [-1.850371707708594e-17, nan]}, {'': [0.1085993746614939, nan], 'true,true,false': [nan, 0.0], 'true,false': [1.850371707708594e-17, 0.14928808973100605], 'true': [0.0, 0.12293778059284242], 'true,false,true': [1.850371707708594e-17, nan], 'true,true': [nan, 0.0], 'true,false,false': [0.24489795918367352, 1.5419764230904951e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return 0.7194734122109543;  // std dev = 1,05e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.7194734122109545;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( actor(A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return 0.4175135841583098;  // std dev = 1,29e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.15274385809367078;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.15274385809367075;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(E, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06969
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 1.791 seconds
Total inference time: 1.304 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.532 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06969
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 3.754 seconds
Total inference time: 1.304 seconds
AUC ROC: 1.0
Total revision time: 3.754
Best scored revision CLL: -0.094637


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:00:56
{'CLL': -0.06969, 'AUC ROC': 1.0, 'F1': 0.957447, 'Recall': 1.0, 'Precision': [0.918367, 0.5], 'Inference time': 1.304, 'Learning time': 3.754, 'AUC PR': 1.0, 'parameter_20': {'CLL': -0.344799, 'AUC ROC': 1.0, 'F1': 0.140406, 'Recall': 1.0, 'Precision': [0.075503, 0.5], 'Inference time': 1.369, 'Learning time': 0.899, 'AUC PR': 1.0}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0641918400820262;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.965362
   AUC PR    = 0.255682
   CLL	      = -0.203547
   Precision = 0.255682 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.40724


Total learning time: 1.21 seconds
Total inference time: 0.913 seconds
AUC ROC: 0.965362


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 01:00:58
{'CLL': -0.203547, 'AUC ROC': 0.965362, 'F1': 0.40724, 'Recall': 1.0, 'Precision': [0.255682, 0.5], 'Inference time': 0.913, 'Learning time': 1.21, 'AUC PR': 0.255682}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */


Results
   AUC ROC   = 0.965362
   AUC PR    = 0.255682
   CLL	      = -0.173677
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.561 seconds
Total inference time: 0.727 seconds
AUC ROC: 0.965362


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 01:01:00
{'CLL': -0.173677, 'AUC ROC': 0.965362, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.727, 'Learning time': 0.561, 'AUC PR': 0.255682}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5934430527465704;  // std dev = 2,572, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.5049832912932651;  // std dev = 0,441, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 1,86e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.4038306972090013;  // std dev = 0,441, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3091847894789792;  // std dev = 2,572, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.23243369117121432;  // std dev = 0,441, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17462562909620657;  // std dev = 2,572, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13216958475669283;  // std dev = 2,572, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07877675473109172;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10100292482048356;  // std dev = 2,572, 34,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 1,32e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.28378895150144584;  // std dev = 0,970, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10458159217005893;  // std dev = 0,390, 28,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.7181822157073725;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2818177842926275;  // std dev = 1,49e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.10404890116453351;  // std dev = 2,058, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return -0.06205390646651661;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.308947
   Precision = 0.08167 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.151007


Total learning time: 0.942 seconds
Total inference time: 1.269 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 0.9424
   AUC PR    = 0.946156
   CLL	      = -0.358152
   Precision = 0.735294 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.847458


Total scoring time: 0.564 seconds
Parameter learned model CLL: -0.358152


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.572, 9, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 5, 0], 'false,true,false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [1.86e-09, 16, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.441, 9, 25]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, H)'}, {'false,true,true,true': [0.0, 0, 0], 'false,true,false,false': [7.45e-09, 11, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.441, 9, 25], 'false,true,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.572, 9, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 5, 0], 'false,true,false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.441, 9, 25], 'false,true,true': [0.0, 5, 0], 'false,true,false': [0.0, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.572, 9, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 5, 0], 'false,true,false': [5.27e-09, 11, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.572, 9, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.32e-09, 11, 0], 'false,true,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.572, 9, 25], 'false,true,true,true': [0.0, 0, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.32e-09, 11, 0], 'false,true,true,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.97, 1, 16], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [1.86e-09, 5, 0], 'true,false,false': [0.39, 19, 9]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [2.058, 8, 9], 'true,true,false,false': [0.0, 5, 0], 'true,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 0, 16], 'true,false,false,false': [0.0, 11, 0]}]]
[{'': [0.1946366782006932, -6.938893903907228e-18], 'false,true': [-2.7755575615628915e-18, -1.0092936587501423e-17], 'false': [-6.938893903907228e-18, nan]}, {'': [0.19463667820069183, 3.469446951953614e-18], 'true': [0.19463667820069183, nan], 'false': [3.469446951953614e-18, nan]}, {'': [0.19463667820069178, 1.214306433183765e-17], 'false,true,false': [nan, 5.046468293750712e-18], 'true': [0.19463667820069178, nan], 'false,true': [0.0, 5.046468293750712e-18], 'false': [1.214306433183765e-17, nan], 'false,true,true': [nan, 0.0]}, {'': [0.1946366782006921, -6.938893903907228e-18], 'false,true': [0.0, 0.0], 'false': [-6.938893903907228e-18, nan]}, {'': [0.19463667820069214, 0.0], 'true': [0.19463667820069214, nan], 'false': [0.0, nan], 'false,true': [0.0, 0.0]}, {'': [0.19463667820069208, 6.938893903907228e-18], 'false,true': [0.0, 2.523234146875356e-18], 'false': [6.938893903907228e-18, nan]}, {'': [0.19463667820069191, -2.6020852139652106e-18], 'false,true': [-1.3877787807814458e-18, 0.0], 'false': [-2.6020852139652106e-18, nan], 'false,true,true': [nan, -1.3877787807814458e-18]}, {'': [0.19463667820069197, 0.0], 'false,true': [-6.938893903907229e-19, 6.30808536718839e-19], 'false': [0.0, nan], 'false,true,true': [nan, -6.938893903907229e-19]}, {'': [0.13701252216740165, nan], 'true': [0.05536332179930802, 0.12922794612343613], 'true,false': [6.938893903907229e-19, 0.15210631111389036], 'true,true': [0.05536332179930802, nan]}, {'': [0.12496155787817902, nan], 'true,true,false': [nan, 0.0], 'true,false': [1.3877787807814457e-17, 0.1516811539228559], 'true': [0.05940325158480301, 0.12809568990665213], 'true,false,true': [1.3877787807814457e-17, nan], 'true,true': [0.0, 0.0], 'true,false,false': [0.24913494809688583, -1.8924256101565167e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( female(A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then if ( female(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601496;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948945;  // std dev = 3,73e-09, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( female(A) )
%   | then return 0.15274385809367078;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.12114802438826025;  // std dev = 0,077, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.15274385809367075;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06625404476945125;  // std dev = 0,011, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.13771628422168403;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( movie(D, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.0641918400820262;  // std dev = 6,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065726
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.993 seconds
Total inference time: 1.309 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095277
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.57 seconds
Refined model CLL: -0.095277


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065726
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.069 seconds
Total inference time: 1.309 seconds
AUC ROC: 1.0
Total revision time: 4.069
Best scored revision CLL: -0.095277


Dataset: 53_cora_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 01:01:07
{'CLL': -0.065726, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'parameter_25': {'CLL': -0.308947, 'AUC ROC': 1.0, 'F1': 0.151007, 'Recall': 1.0, 'Precision': [0.08167, 0.5], 'Inference time': 1.269, 'Learning time': 0.942, 'AUC PR': 1.0}, 'Precision': [1.0, 0.5], 'Inference time': 1.309, 'Learning time': 4.069, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.14185106490048777;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783633;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839685;  // std dev = 1,29e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.186484
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 1.368 seconds
Total inference time: 0.952 seconds
AUC ROC: 0.969593


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 01:01:09
{'CLL': -0.186484, 'AUC ROC': 0.969593, 'F1': 0.439024, 'Recall': 1.0, 'Precision': [0.28125, 0.5], 'Inference time': 0.952, 'Learning time': 1.368, 'AUC PR': 0.28125}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.14185106490048777;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.172064
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.543 seconds
Total inference time: 0.724 seconds
AUC ROC: 0.969593


Dataset: 53_cora_imdb, Fold: 4, Type: Scratch (RDN), Time: 01:01:11
{'CLL': -0.172064, 'AUC ROC': 0.969593, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.724, 'Learning time': 0.543, 'AUC PR': 0.28125}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4831489350995123;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.4136573287083126;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3366053739648666;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.26297558544868993;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.20032545170291094;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.15079889954054382;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.11312434025950242;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.08492715391619823;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.43891587871034277;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.5610841212896572;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.16402126391147542;  // std dev = 0,373, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.42176768777188567;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.33526238220861215;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.18704083000351138;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0586830662161354;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.217322
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total learning time: 0.789 seconds
Total inference time: 1.221 seconds
AUC ROC: 0.971565


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.971429
   CLL	      = -0.376804
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.53 seconds
Parameter learned model CLL: -0.376804


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.369, 3, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.484, 3, 5]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, G)', 'false,true': 'genre(A, F)'}, {'false,true,false,false': [0.0, 2, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.484, 3, 5]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.369, 3, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.484, 3, 5], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.369, 3, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.369, 3, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.369, 3, 5], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.373, 4, 1]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, E)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false,true': [0.816, 2, 1], 'true,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 4]}]]
[{'': [0.23437499999999983, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.2343749999999998, 0.0], 'true': [0.2343749999999998, nan], 'false': [0.0, nan]}, {'': [0.234375, 0.0], 'true': [0.234375, nan], 'false': [0.0, nan], 'false,true,false': [nan, 0.0], 'false,true': [nan, 0.0]}, {'': [0.23437500000000006, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.234375, 0.0], 'true': [0.234375, nan], 'false': [0.0, nan], 'false,true': [nan, 0.0]}, {'': [0.23437500000000003, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.23437500000000003, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.23437499999999997, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.1903023410689627, nan], 'true': [0.0, 0.13808499761446844], 'true,false': [0.0, 0.13942551168580775], 'true,true': [0.0, nan]}, {'': [0.14002001921848192, nan], 'true,false': [0.0, 0.13728750505921233], 'true': [0.0, 0.1310371132057878], 'true,false,true': [0.0, nan], 'true,true': [0.0, nan], 'true,false,false': [0.2222222222222222, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.024192810656627983;  // std dev = 0,198, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( movie(E, B) )
%   | | then return -0.022340438819570884;  // std dev = 0,199, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999732
   AUC PR    = 0.986969
   CLL	      = -0.072286
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total learning time: 1.016 seconds
Total inference time: 1.068 seconds
AUC ROC: 0.999732


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101412
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.468 seconds
Refined model CLL: -0.101412


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999732
   AUC PR    = 0.986969
   CLL	      = -0.072286
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total learning time: 2.803 seconds
Total inference time: 1.068 seconds
AUC ROC: 0.999732
Total revision time: 2.803
Best scored revision CLL: -0.101412


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:01:17
{'CLL': -0.072286, 'AUC ROC': 0.999732, 'F1': 0.967742, 'Recall': 1.0, 'Precision': [0.9375, 0.5], 'parameter_5': {'CLL': -0.217322, 'AUC ROC': 0.971565, 'F1': 0.853659, 'Recall': 0.777778, 'Precision': [0.945946, 0.5], 'Inference time': 1.221, 'Learning time': 0.789, 'AUC PR': 0.823063}, 'Inference time': 1.068, 'Learning time': 2.803, 'AUC PR': 0.986969}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.154459
   Precision = 0.326087 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.491803


Total learning time: 1.008 seconds
Total inference time: 0.947 seconds
AUC ROC: 0.977547


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 01:01:19
{'CLL': -0.154459, 'AUC ROC': 0.977547, 'F1': 0.491803, 'Recall': 1.0, 'Precision': [0.326087, 0.5], 'Inference time': 0.947, 'Learning time': 1.008, 'AUC PR': 0.326087}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.1668
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.487 seconds
Total inference time: 0.722 seconds
AUC ROC: 0.977547


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 01:01:20
{'CLL': -0.1668, 'AUC ROC': 0.977547, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.722, 'Learning time': 0.487, 'AUC PR': 0.326087}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5724346493852266;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.4876778839172629;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.3912569620992537;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3005711547884892;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.22629823971521892;  // std dev = 0,452, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1698435867651014;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.12813320688246746;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09743184803714998;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3603956026838166;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.6396043973161835;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.19689794563299506;  // std dev = 0,316, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.4835167587334965;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2821051706172746;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.3430889040008711;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.05689311097827881;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.233075
   Precision = 0.078534 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.145631


Total learning time: 0.858 seconds
Total inference time: 1.218 seconds
AUC ROC: 0.971565


Results scoring model
   AUC ROC   = 0.985
   AUC PR    = 0.988462
   CLL	      = -0.296558
   Precision = 0.769231 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.869565


Total scoring time: 0.54 seconds
Parameter learned model CLL: -0.296558


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.69, 4, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [0.0, 6, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.452, 4, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, G)', 'false,true': 'genre(A, F)'}, {'false,true,false,false': [0.0, 6, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.452, 4, 10]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.69, 4, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.452, 4, 10], 'false,true,true': [0.0, 0, 0], 'false,true,false': [2.63e-09, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.69, 4, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [2.63e-09, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.69, 4, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [1.69, 4, 10], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 6, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,false': 'genre(A, E)', 'true,true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'false': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.316, 9, 1]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,false': 'genre(B, E)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false,true': [0.866, 3, 1], 'true,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false,false': [0.0, 6, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 9]}]]
[{'': [0.20408163265306115, -6.938893903907228e-18], 'false,true': [nan, -6.938893903907228e-18], 'false': [-6.938893903907228e-18, nan]}, {'': [0.20408163265306115, -2.3129646346357427e-18], 'true': [0.20408163265306115, nan], 'false': [-2.3129646346357427e-18, nan]}, {'': [0.20408163265306123, 0.0], 'true': [0.20408163265306123, nan], 'false': [0.0, nan], 'false,true,false': [nan, 0.0], 'false,true': [nan, 0.0]}, {'': [0.20408163265306126, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.20408163265306126, 1.1564823173178713e-18], 'true': [0.20408163265306126, nan], 'false': [1.1564823173178713e-18, nan], 'false,true': [nan, 1.1564823173178713e-18]}, {'': [0.20408163265306123, 1.1564823173178713e-18], 'false,true': [nan, 1.1564823173178713e-18], 'false': [1.1564823173178713e-18, nan]}, {'': [0.20408163265306123, -1.1564823173178713e-18], 'false,true': [nan, -1.1564823173178713e-18], 'false': [-1.1564823173178713e-18, nan]}, {'': [0.20408163265306123, 0.0], 'false,true': [nan, 0.0], 'false': [0.0, nan]}, {'': [0.1471579395064867, nan], 'true': [-4.9343245538895844e-17, 0.10688578761798642], 'true,false': [0.0, 0.09975718434688333], 'true,true': [-4.9343245538895844e-17, nan]}, {'': [0.10922304341287756, nan], 'true,false': [0.0, 0.09465792766651933], 'true': [0.0, 0.10108780766299949], 'true,false,true': [0.0, nan], 'true,true': [0.0, nan], 'true,false,false': [0.1875, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then return 0.15274385809367097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( genre(A, D) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return -0.013134268859734299;  // std dev = 0,192, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( movie(E, B) )
%   | | then if ( female(A), actor(B) )
%   | | | then return -0.06532604953081238;  // std dev = 0,004, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.010381694942778269;  // std dev = 0,190, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999732
   AUC PR    = 0.986969
   CLL	      = -0.069804
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total learning time: 1.16 seconds
Total inference time: 1.245 seconds
AUC ROC: 0.999732


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097763
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.491 seconds
Refined model CLL: -0.097763


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999732
   AUC PR    = 0.986969
   CLL	      = -0.069804
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total learning time: 3.049 seconds
Total inference time: 1.245 seconds
AUC ROC: 0.999732
Total revision time: 3.049
Best scored revision CLL: -0.097763


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:01:26
{'CLL': -0.069804, 'AUC ROC': 0.999732, 'F1': 0.967742, 'Recall': 1.0, 'Precision': [0.9375, 0.5], 'Inference time': 1.245, 'Learning time': 3.049, 'AUC PR': 0.986969, 'parameter_10': {'CLL': -0.233075, 'AUC ROC': 0.971565, 'F1': 0.145631, 'Recall': 1.0, 'Precision': [0.078534, 0.5], 'Inference time': 1.218, 'Learning time': 0.858, 'AUC PR': 0.823063}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.154459
   Precision = 0.326087 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.491803


Total learning time: 1.101 seconds
Total inference time: 0.905 seconds
AUC ROC: 0.977547


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 01:01:29
{'CLL': -0.154459, 'AUC ROC': 0.977547, 'F1': 0.491803, 'Recall': 1.0, 'Precision': [0.326087, 0.5], 'Inference time': 0.905, 'Learning time': 1.101, 'AUC PR': 0.326087}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.1668
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.554 seconds
Total inference time: 0.736 seconds
AUC ROC: 0.977547


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 01:01:30
{'CLL': -0.1668, 'AUC ROC': 0.977547, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.736, 'Learning time': 0.554, 'AUC PR': 0.326087}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5724346493852266;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.48767788391726324;  // std dev = 0,452, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.39125696209925326;  // std dev = 0,452, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.30057115478848934;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.22629823971521895;  // std dev = 0,452, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.16984358676510142;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1281332068824675;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.09743184803714998;  // std dev = 2,070, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.36039560268381654;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(A, F) )
%   | | then return -0.6396043973161835;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.2417887290464802;  // std dev = 0,316, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.4835167587334965;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.2821051706172746;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(C, B) )
%   | | | then return -0.4155449166135308;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.054531804565972855;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.216774
   Precision = 0.945946 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.853659


Total learning time: 0.865 seconds
Total inference time: 1.34 seconds
AUC ROC: 0.971565


Results scoring model
   AUC ROC   = 0.988889
   AUC PR    = 0.991667
   CLL	      = -0.285805
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.965517


Total scoring time: 0.544 seconds
Parameter learned model CLL: -0.285805


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.07, 6, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [0.0, 9, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.452, 6, 15]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, H)'}, {'false,true,true,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 8, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'true,true': [0.452, 6, 15], 'false,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.07, 6, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [3.73e-09, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.452, 6, 15], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.07, 6, 15], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false': [3.73e-09, 8, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.07, 6, 15], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 8, 0], 'false,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.07, 6, 15], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [9.31e-10, 8, 0], 'false,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false': 'genre(A, F)', 'true,true': 'movie(C, B)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 14], 'true,true,false,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.316, 13, 1]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [0.913, 5, 1], 'true,true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [0.0, 0, 14], 'true,false,false,false': [3.73e-09, 8, 0]}]]
[{'': [0.20408163265306084, -9.25185853854297e-18], 'false,true': [0.0, -6.938893903907228e-18], 'false': [-9.25185853854297e-18, nan]}, {'': [0.2040816326530611, 0.0], 'true': [0.2040816326530611, nan], 'false': [0.0, nan]}, {'': [0.20408163265306142, -1.5419764230904951e-18], 'false,true,true': [0.0, nan], 'true': [0.20408163265306142, nan], 'false,true': [0.0, -1.734723475976807e-18], 'false': [-1.5419764230904951e-18, nan], 'false,true,false': [nan, -1.734723475976807e-18]}, {'': [0.20408163265306126, 3.0839528461809902e-18], 'false,true': [0.0, 1.734723475976807e-18], 'false': [3.0839528461809902e-18, nan]}, {'': [0.20408163265306126, 0.0], 'true': [0.20408163265306126, nan], 'false': [0.0, nan], 'false,true': [0.0, 0.0]}, {'': [0.20408163265306123, 1.5419764230904951e-18], 'false,true': [0.0, 1.734723475976807e-18], 'false': [1.5419764230904951e-18, nan]}, {'': [0.20408163265306117, 0.0], 'false,true': [0.0, 0.0], 'false': [0.0, nan], 'false,true,true': [0.0, nan]}, {'': [0.2040816326530613, 7.709882115452476e-19], 'false,true': [0.0, 8.673617379884035e-19], 'false': [7.709882115452476e-19, nan], 'false,true,true': [0.0, nan]}, {'': [0.1471579395064867, nan], 'true': [0.011441970124399677, 0.10280357947231059], 'true,true,false': [0.0, nan], 'true,false': [0.0, 0.09959620523036995], 'true,true': [-1.586032892321652e-17, 0.0]}, {'': [0.1079276829685883, nan], 'true,true,false': [0.0, nan], 'true,false': [0.0, 0.09144147492877185], 'true': [0.04395834685051554, 0.10607863343034377], 'true,false,true': [0.0, nan], 'true,true': [0.0, 0.0], 'true,false,false': [0.13888888888888892, 1.734723475976807e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;false;genre(A, F).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;true;movie(C, B).;true;true
9;false,false;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109542;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( genre(A, D) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4175135841583098;  // std dev = 1,29e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( genre(A, D) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.15274385809367075;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.13431295509884797;  // std dev = 0,061, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(A, E) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( movie(F, A), movie(F, B) )
%   | | then return -0.03156517185455714;  // std dev = 0,202, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( female(A) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.07084645537071943;  // std dev = 0,009, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then return 0.13569895197108492;  // std dev = 0,000884, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( movie(D, B) )
%   | | then if ( female(A) )
%   | | | then return -0.03325396658279213;  // std dev = 0,205, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.06515622397650478;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999764
   AUC PR    = 0.988451
   CLL	      = -0.068684
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total learning time: 1.506 seconds
Total inference time: 1.426 seconds
AUC ROC: 0.999764


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098156
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.527 seconds
Refined model CLL: -0.098156


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999764
   AUC PR    = 0.988451
   CLL	      = -0.068684
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total learning time: 3.442 seconds
Total inference time: 1.426 seconds
AUC ROC: 0.999764
Total revision time: 3.442
Best scored revision CLL: -0.098156


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:01:37
{'CLL': -0.068684, 'AUC ROC': 0.999764, 'F1': 0.967742, 'Recall': 1.0, 'Precision': [0.9375, 0.5], 'parameter_15': {'CLL': -0.216774, 'AUC ROC': 0.971565, 'F1': 0.853659, 'Recall': 0.777778, 'Precision': [0.945946, 0.5], 'Inference time': 1.34, 'Learning time': 0.865, 'AUC PR': 0.823063}, 'Inference time': 1.426, 'Learning time': 3.442, 'AUC PR': 0.988451}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839686;  // std dev = 6,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.151 seconds
Total inference time: 0.958 seconds
AUC ROC: 0.97972


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 01:01:39
{'CLL': -0.145678, 'AUC ROC': 0.97972, 'F1': 0.517241, 'Recall': 1.0, 'Precision': [0.348837, 0.5], 'Inference time': 0.958, 'Learning time': 1.151, 'AUC PR': 0.348837}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.16597
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.545 seconds
Total inference time: 0.724 seconds
AUC ROC: 0.97972


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 01:01:41
{'CLL': -0.16597, 'AUC ROC': 0.97972, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.724, 'Learning time': 0.545, 'AUC PR': 0.348837}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6273797043302811;  // std dev = 2,148, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.5328490890947367;  // std dev = 0,421, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 1,86e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.42393250893969897;  // std dev = 0,421, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.32298193296725763;  // std dev = 2,148, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.24247055537624268;  // std dev = 0,421, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.18270684819255756;  // std dev = 2,148, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13920656791416966;  // std dev = 2,148, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109172;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1073857272638386;  // std dev = 2,148, 26,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 1,32e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.3145542209330586;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(A, F) )
%   | | then return -0.3769363784555721;  // std dev = 0,436, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.170329630990619;  // std dev = 0,336, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.5991624560714247;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.04796894660110694;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.25096595291884505;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.2726175666706543;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.058335564624185474;  // std dev = 4,56e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.275137
   Precision = 0.078534 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.145631


Total learning time: 0.911 seconds
Total inference time: 1.26 seconds
AUC ROC: 0.971565


Results scoring model
   AUC ROC   = 0.98125
   AUC PR    = 0.9833
   CLL	      = -0.283185
   Precision = 0.8 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.888889


Total scoring time: 0.587 seconds
Parameter learned model CLL: -0.283185


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.148, 6, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [1.86e-09, 14, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.421, 6, 20]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, H)'}, {'false,true,true,true': [0.0, 1, 0], 'false,true,false,false': [7.45e-09, 11, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'true,true': [0.421, 6, 20], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.148, 6, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.421, 6, 20], 'false,true,true': [0.0, 2, 0], 'false,true,false': [5.27e-09, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.148, 6, 20], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [5.27e-09, 12, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.148, 6, 20], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.32e-09, 12, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.148, 6, 20], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [1.32e-09, 12, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false': 'genre(A, F)', 'true,true': 'movie(C, B)'}, {'true,false,true': [0.436, 2, 0], 'true,true,true': [0.0, 0, 17], 'true,true,false,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 1, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.336, 16, 3]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.369, 5, 3], 'true,true,false,false': [0.0, 1, 0], 'true,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 1, 0], 'true,true,false,true': [0.0, 1, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [1.49e-08, 0, 17], 'true,false,false,false': [4.56e-09, 11, 0]}]]
[{'': [0.17751479289940847, -1.1895246692412391e-17], 'false,true': [0.0, -1.1564823173178714e-17], 'false': [-1.1895246692412391e-17, nan]}, {'': [0.17751479289940864, 3.96508223080413e-18], 'true': [0.17751479289940864, nan], 'false': [3.96508223080413e-18, nan]}, {'': [0.17751479289940802, 9.912705577010326e-18], 'false,true,false': [0.0, 5.046468293750712e-18], 'true': [0.17751479289940802, nan], 'false,true': [0.0, 6.938893903907228e-18], 'false': [9.912705577010326e-18, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.17751479289940847, -3.96508223080413e-18], 'false,true': [0.0, 0.0], 'false': [-3.96508223080413e-18, nan]}, {'': [0.17751479289940825, 3.96508223080413e-18], 'true': [0.17751479289940825, nan], 'false': [3.96508223080413e-18, nan], 'false,true': [0.0, 2.3129646346357427e-18]}, {'': [0.17751479289940825, 4.956352788505163e-18], 'false,true': [0.0, 2.3129646346357427e-18], 'false': [4.956352788505163e-18, nan]}, {'': [0.17751479289940833, -9.912705577010326e-19], 'false,true': [0.0, 1.1564823173178713e-18], 'false': [-9.912705577010326e-19, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.1775147928994083, 9.912705577010326e-19], 'false,true': [0.0, 1.1564823173178713e-18], 'false': [9.912705577010326e-19, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.12065544531372505, nan], 'true': [0.01381422812458033, 0.11494685720339265], 'true,true,false': [0.0, 0.0], 'true,false': [0.0951780502655864, 0.11296241776394918], 'true,true': [-3.918434204559376e-17, 0.0]}, {'': [0.09840239174050248, nan], 'true,true,false': [0.0, 0.0], 'true,false': [0.005211467241716252, 0.10987721973211019], 'true': [0.06558566968079722, 0.0954162950185247], 'true,false,true': [1.3061447348531253e-17, 0.0], 'true,true': [0.0, 6.579556822331346e-05], 'true,false,false': [0.23437499999999994, 1.8924256101565167e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false,false;genre(B, H).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(B, F).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;true,false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;true,false;genre(B, E).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( female(A) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.7194734122109544;  // std dev = 1,05e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( female(A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.41751358415830986;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10159632948783627;  // std dev = 1,86e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.25517224256948945;  // std dev = 3,73e-09, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08518475138839687;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then return 0.1294627174686315;  // std dev = 0,068, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06842697784420272;  // std dev = 9,31e-10, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.09745114910920238;  // std dev = 0,192, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.06851289819423328;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then return 0.12484927584138712;  // std dev = 0,049, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A), director(B) )
%   | | | then return 0.14055453376406357;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.06486149712046865;  // std dev = 0,010, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999893
   AUC PR    = 0.995131
   CLL	      = -0.067465
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total learning time: 1.741 seconds
Total inference time: 1.309 seconds
AUC ROC: 0.999893


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098016
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.536 seconds
Refined model CLL: -0.098016


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999893
   AUC PR    = 0.995131
   CLL	      = -0.067465
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total learning time: 3.775 seconds
Total inference time: 1.309 seconds
AUC ROC: 0.999893
Total revision time: 3.775
Best scored revision CLL: -0.098016


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:01:48
{'CLL': -0.067465, 'AUC ROC': 0.999893, 'F1': 0.967742, 'Recall': 1.0, 'Precision': [0.9375, 0.5], 'Inference time': 1.309, 'Learning time': 3.775, 'AUC PR': 0.995131, 'parameter_20': {'CLL': -0.275137, 'AUC ROC': 0.971565, 'F1': 0.145631, 'Recall': 1.0, 'Precision': [0.078534, 0.5], 'Inference time': 1.26, 'Learning time': 0.911, 'AUC PR': 0.823063}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7152917922423694;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6045267906174346;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4749335700127619;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3584548159137825;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.10159632948783631;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.3758477125459626;  // std dev = 0,201, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.422493787972084;  // std dev = 0,404, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.29317544697447756;  // std dev = 0,177, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.34270856464274435;  // std dev = 0,343, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.23665032642175382;  // std dev = 0,153, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(B) )
%   | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.2807467362072747;  // std dev = 0,288, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.19681041001903185;  // std dev = 0,133, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.23383263111170124;  // std dev = 0,244, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16768543128476263;  // std dev = 0,117, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.19828869720986728;  // std dev = 0,209, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1456636799303595;  // std dev = 0,104, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(B) )
%   | then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.17099684741540844;  // std dev = 0,182, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073136
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.92 seconds
Total inference time: 1.212 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 01:01:51
{'CLL': -0.073136, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.212, 'Learning time': 1.92, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7152917922423694;  // std dev = 0,350, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 0.980428
   AUC PR    = 0.360179
   CLL	      = -0.166268
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.63 seconds
Total inference time: 0.788 seconds
AUC ROC: 0.980428


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 01:01:53
{'CLL': -0.166268, 'AUC ROC': 0.980428, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.788, 'Learning time': 0.63, 'AUC PR': 0.360179}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
0;false,false,true;title(J, I), venue(J, A).;false;false
0;false,false;haswordvenue(B, H), haswordtitle(I, H).;true;true
0;false,true,false;author(G, E), venue(G, A).;false;false
0;false,true;haswordtitle(F, D).;false;true
0;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
0;false,false,false;haswordvenue(A, K), haswordtitle(L, K).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true,true,false;haswordtitle(G, D).;false;false
1;false,false;haswordvenue(B, L), haswordauthor(M, L).;false;false
1;false,true,true;author(K, I), title(K, J).;false;false
1;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
1;false,true;haswordtitle(J, H).;true;false
1;false;haswordvenue(A, H), haswordauthor(I, H).;true;true
1;true,true;haswordauthor(F, C).;false;true
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true,true,true;haswordauthor(G, C).;false;false
2;false,true,true;samebib(J, K), venue(K, B).;false;false
2;true;haswordvenue(B, D), haswordauthor(E, D).;true;false
2;false,true;title(J, I), venue(J, A).;true;true
2;false;haswordvenue(B, H), haswordtitle(I, H).;true;false
2;true,true;haswordtitle(F, D).;true;false
2;false,true,false;title(L, I), venue(L, B).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
3;false,true;haswordauthor(F, D).;true;true
3;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
3;false,true,true;author(G, F), title(G, E).;false;false
3;false,true,false;title(H, E), venue(H, A).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true,true,true;haswordtitle(F, D).;false;false
4;false;haswordvenue(B, J), haswordtitle(K, J).;true;false
4;true,false;haswordvenue(B, G), haswordauthor(H, G).;true;false
4;true;haswordvenue(A, D), haswordauthor(E, D).;true;true
4;false,true;title(L, K), venue(L, A).;false;false
4;true,false,true;author(I, H), venue(I, A).;false;false
4;true,true;haswordtitle(F, C).;true;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
5;false,false,true;haswordtitle(K, I).;false;false
5;false,false;haswordvenue(A, I), haswordauthor(J, I).;true;true
5;false,true,true;author(G, E), title(G, F).;false;false
5;false,true;haswordtitle(F, D).;true;true
5;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
5;false,false,false;haswordvenue(A, L), haswordtitle(M, L).;false;false
5;false,true,false;author(H, E), venue(H, A).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
6;false,true;title(F, E), venue(F, A).;true;true
6;false;haswordvenue(B, D), haswordtitle(E, D).;true;false
6;false,true,true;samebib(F, G), venue(G, B).;false;false
6;false,true,false;haswordtitle(E, H), haswordauthor(I, H).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;false;true
7;false,false,true;haswordtitle(J, K), haswordauthor(L, K).;false;false
7;false,false;haswordvenue(A, I), haswordtitle(J, I).;true;true
7;false,true,true;samebib(F, G), venue(G, B).;false;false
7;false,true;author(F, E), venue(F, A).;true;true
7;false;haswordvenue(B, D), haswordauthor(E, D).;true;true
7;false,false,false;haswordvenue(B, M), haswordtitle(N, M).;false;false
7;false,true,false;haswordtitle(H, D).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
8;true,true,false;samebib(E, F), venue(F, A).;false;false
8;true,false;title(G, D), venue(G, A).;false;true
8;true;venue(E, B), title(E, D).;true;true
8;false,true;haswordvenue(B, K), haswordtitle(L, K).;false;false
8;false;haswordvenue(A, J), haswordvenue(B, J).;true;false
8;true,true;haswordvenue(B, C).;false;true
8;true,false,false;haswordtitle(D, H), haswordauthor(I, H).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordtitle(D, C).;true;true
9;true,true,false;samebib(E, F), venue(F, B).;false;false
9;false;haswordvenue(A, H), haswordvenue(B, H).;false;false
9;true,false;title(G, D), venue(G, B).;true;true
9;true;venue(E, A), title(E, D).;true;true
9;true,false,true;haswordvenue(B, C).;false;false
9;true,true;haswordvenue(B, C).;false;true
9;true,false,false;haswordvenue(B, C).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6157246926752692;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.52329140204601;  // std dev = 0,429, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A) )
%   | then return -0.12544463852839138;  // std dev = 1,86e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, B) )
%   | then return 0.41705713205422834;  // std dev = 0,429, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then if ( genre(B, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, H) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.3182568702797341;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( movie(D, A) )
%   | then return 0.23900178423471655;  // std dev = 0,429, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, B) )
%   | then if ( genre(A, F) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1798774310528532;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13671358521445826;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10510377833335705;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   else if ( movie(D, B) )
%   | then if ( genre(A, E) )
%   | | then if ( genre(B, F) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(B, D) )
%   | then if ( movie(C, B) )
%   | | then return 0.32409262871682365;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( genre(A, E) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( genre(A, F) )
%   | | then return -0.3721671745636896;  // std dev = 0,430, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.18018882483706566;  // std dev = 0,348, 24,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A) )
%   then if ( genre(A, D) )
%   | then if ( movie(C, B) )
%   | | then return -0.5897324620254891;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( genre(B, E) )
%   | | | then return -0.0641918400820262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.048187216393628884;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, F) )
%   | | then if ( movie(C, B) )
%   | | | then return 0.25747779270013377;  // std dev = 3,65e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.0641918400820262;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( movie(C, B) )
%   | | | then return -0.27162091571292135;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.05779632665233118;  // std dev = 4,56e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.971565
   AUC PR    = 0.823063
   CLL	      = -0.267208
   Precision = 0.078534 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.145631


Total learning time: 0.913 seconds
Total inference time: 1.326 seconds
AUC ROC: 0.971565


Results scoring model
   AUC ROC   = 0.9776
   AUC PR    = 0.980215
   CLL	      = -0.293967
   Precision = 0.78125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.877193


Total scoring time: 0.55 seconds
Parameter learned model CLL: -0.293967


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.462, 8, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, B)', 'false': 'movie(E, A)'}, {'false,true': [1.86e-09, 17, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.429, 8, 25]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true,true': 'genre(B, G)', 'true': 'movie(D, B)', 'false,true': 'genre(A, F)', 'false': 'movie(E, B)', 'false,true,false': 'genre(B, H)'}, {'false,true,true,true': [0.0, 1, 0], 'false,true,false,false': [1.05e-08, 13, 0], 'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 2, 0], 'true,true': [0.429, 8, 25], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.462, 8, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'true': 'movie(D, A)', 'false': 'movie(E, B)', 'false,true': 'genre(A, F)'}, {'false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.429, 8, 25], 'false,true,true': [0.0, 2, 0], 'false,true,false': [7.45e-09, 15, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)'}, {'true': [2.462, 8, 25], 'false,false': [0.0, 0, 0], 'false,true,true': [0.0, 2, 0], 'false,true,false': [9.13e-09, 15, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.462, 8, 25], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 15, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A), movie(C, B)', 'false,true': 'genre(A, E)', 'false': 'movie(D, B)', 'false,true,true': 'genre(B, F)'}, {'true': [2.462, 8, 25], 'false,true,true,true': [0.0, 1, 0], 'false,false': [0.0, 0, 0], 'false,true,false': [9.31e-10, 15, 0], 'false,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true': 'genre(B, D)', 'true,true,false': 'genre(A, E)', 'true,false': 'genre(A, F)', 'true,true': 'movie(C, B)'}, {'true,false,true': [0.43, 2, 0], 'true,true,true': [0.0, 0, 21], 'true,true,false,false': [0.0, 2, 0], 'true,true,false,true': [0.0, 1, 0], 'false': [0.0, 0, 0], 'true,false,false': [0.348, 20, 4]}], ['workedunder(A, B)', {'': 'movie(C, A)', 'true,true,false': 'genre(B, E)', 'true,false': 'genre(B, F)', 'true': 'genre(A, D)', 'true,false,true': 'movie(C, B)', 'true,true': 'movie(C, B)', 'true,false,false': 'movie(C, B)'}, {'true,false,false,true': [1.595, 7, 4], 'true,true,false,false': [0.0, 1, 0], 'true,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 2, 0], 'true,true,false,true': [0.0, 1, 0], 'false': [0.0, 0, 0], 'true,false,true,true': [3.65e-08, 0, 21], 'true,false,false,false': [4.56e-09, 13, 0]}]]
[{'': [0.1836547291092757, -3.2653618371328133e-18], 'false,true': [0.0, -1.4802973661668754e-17], 'false': [-3.2653618371328133e-18, nan]}, {'': [0.18365472910927527, 0.0], 'true': [0.18365472910927527, nan], 'false': [0.0, nan]}, {'': [0.1836547291092741, 1.3061447348531253e-17], 'false,true,false': [0.0, 8.540177112501205e-18], 'true': [0.1836547291092741, nan], 'false,true': [0.0, 1.295260195396016e-17], 'false': [1.3061447348531253e-17, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.18365472910927455, -8.163404592832034e-18], 'false,true': [0.0, -5.551115123125783e-18], 'false': [-8.163404592832034e-18, nan]}, {'': [0.18365472910927466, 4.89804275569922e-18], 'true': [0.18365472910927466, nan], 'false': [4.89804275569922e-18, nan], 'false,true': [0.0, 3.7007434154171884e-18]}, {'': [0.1836547291092747, 8.163404592832034e-18], 'false,true': [0.0, 5.551115123125783e-18], 'false': [8.163404592832034e-18, nan]}, {'': [0.18365472910927444, -2.44902137784961e-18], 'false,true': [0.0, -1.8503717077085942e-18], 'false': [-2.44902137784961e-18, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.18365472910927452, 0.0], 'false,true': [0.0, 9.251858538542971e-19], 'false': [0.0, nan], 'false,true,true': [0.0, 0.0]}, {'': [0.12626754316657451, nan], 'true': [0.016851585792871188, 0.1212420767872491], 'true,true,false': [0.0, 0.0], 'true,false': [0.0922581071031926, 0.12082235476627239], 'true,true': [-1.0573552615477681e-16, -5.782411586589357e-19]}, {'': [0.10282146059950577, nan], 'true,true,false': [0.0, 0.0], 'true,false': [0.008215116845891945, 0.11741146812454882], 'true': [0.0633022607065112, 0.10107329073142873], 'true,false,true': [6.344131569286608e-17, 0.0], 'true,true': [0.0, 6.403699485180202e-05], 'true,false,false': [0.23140495867768604, 1.6012832085939759e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
0;false;genre(A, E).;true;true
1;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
2;false,true;genre(B, G).;true;true
2;false,false;genre(B, H).;true;true
2;false;genre(A, F).;true;true
3;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
3;false;genre(A, E).;true;true
4;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
4;false;genre(A, F).;true;true
5;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
5;false;genre(A, E).;true;true
6;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
6;false,true;genre(B, F).;true;true
6;false;genre(A, E).;true;true
7;;workedunder(A, B) :- movie(C, A), movie(C, B).;true;true
7;false,true;genre(B, F).;true;true
7;false;genre(A, E).;true;true
8;;workedunder(A, B) :- genre(B, D).;true;true
8;true;movie(C, B).;true;true
8;true,false;genre(A, E).;true;true
9;;workedunder(A, B) :- genre(A, D).;true;true
9;false,false;movie(C, B).;true;true
9;true,false;genre(B, E).;true;true
9;true;movie(C, B).;true;true
9;false,true;movie(C, B).;true;true
9;false;genre(B, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then if ( female(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( female(A) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(B) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( genre(B, F) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( female(A) )
%   | | | then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783627;  // std dev = 1,32e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( genre(A, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.32071184716014955;  // std dev = 5,27e-09, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( actor(B) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.2551722425694894;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, D) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(B) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253567;  // std dev = 6,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.20975771563253567;  // std dev = 6,45e-09, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( genre(A, D) )
%   | then if ( genre(B, E) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( actor(B) )
%   | | then if ( female(A) )
%   | | | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.152743858093671;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return 0.15274385809367091;  // std dev = 1,49e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0.10850969090609623;  // std dev = 0,198, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C) )
%   then if ( movie(D, B) )
%   | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, E) )
%   | then if ( movie(D, B) )
%   | | then return 0.11677234565235574;  // std dev = 0,056, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(D, B) )
%   | | then if ( female(A), director(B) )
%   | | | then return 0.1392239759021342;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06476606158522703;  // std dev = 0,011, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.999893
   AUC PR    = 0.995131
   CLL	      = -0.067272
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total learning time: 1.913 seconds
Total inference time: 1.298 seconds
AUC ROC: 0.999893


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096581
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.604 seconds
Refined model CLL: -0.096581


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.999893
   AUC PR    = 0.995131
   CLL	      = -0.067272
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total learning time: 3.9800000000000004 seconds
Total inference time: 1.298 seconds
AUC ROC: 0.999893
Total revision time: 3.9800000000000004
Best scored revision CLL: -0.096581


Dataset: 53_cora_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 01:02:00
{'CLL': -0.067272, 'AUC ROC': 0.999893, 'F1': 0.967742, 'Recall': 1.0, 'parameter_25': {'CLL': -0.267208, 'AUC ROC': 0.971565, 'F1': 0.145631, 'Recall': 1.0, 'Precision': [0.078534, 0.5], 'Inference time': 1.326, 'Learning time': 0.913, 'AUC PR': 0.823063}, 'Precision': [0.9375, 0.5], 'Inference time': 1.298, 'Learning time': 3.9800000000000004, 'AUC PR': 0.995131}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839685;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202622;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.471 seconds
Total inference time: 1.088 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 01:02:03
{'CLL': -0.063719, 'AUC ROC': 1.0, 'F1': 1.0, 'Recall': 1.0, 'Precision': [1.0, 0.5], 'Inference time': 1.088, 'Learning time': 1.471, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.158221
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.645 seconds
Total inference time: 0.778 seconds
AUC ROC: 1.0


Dataset: 53_cora_imdb, Fold: 5, Type: Scratch (RDN), Time: 01:02:04
{'CLL': -0.158221, 'AUC ROC': 1.0, 'F1': nan, 'Recall': 0.0, 'Precision': [nan, 0.5], 'Inference time': 0.778, 'Learning time': 0.645, 'AUC PR': 1.0}


