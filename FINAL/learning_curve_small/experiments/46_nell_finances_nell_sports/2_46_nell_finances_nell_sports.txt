Starting experiment #2 for 46_nell_finances_nell_sports

Start learning from source dataset

Source train facts examples: 5307
Source train pos examples: 778
Source train neg examples: 549655

WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), countryhascompanyoffice(D, C) )
%   then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( companyalsoknownas(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( economicsectorcompany(B, C) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21298764477693108;  // std dev = 3,767, 62,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
%   else if ( acquired(F, A), companyalsoknownas(F, G) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.12898226843284477;  // std dev = 0,444, 96,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=26 */
%   | else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | | then return 0.8581489350995121;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( acquired(A, I), cityhascompanyoffice(J, I) )
%   | | | then return 0.03056272820296064;  // std dev = 2,877, 58,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
%   | | | else return 0.18341515000754266;  // std dev = 21,294, 2.066,000 (wgt'ed) examples reached here.  /* #neg=1.394 #pos=672 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.7194734122109542;  // std dev = 7,30e-08, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0.8298274927108236;  // std dev = 0,115, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( acquired(E, A) )
%   | then if ( companyalsoknownas(A, F), economicsectorcompany(B, F) )
%   | | then return 0.8387563184994196;  // std dev = 0,008, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( cityhascompanyoffice(G, A), cityhascompanyoffice(G, E) )
%   | | | then return -0.09562080256605647;  // std dev = 1,374, 32,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | | else return 0.098659892325444;  // std dev = 6,750, 237,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=62 */
%   | else if ( acquired(A, H), countryhascompanyoffice(I, H) )
%   | | then if ( companyalsoknownas(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0958440176533125;  // std dev = 4,031, 87,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=23 */
%   | | else return 0.17126014356354638;  // std dev = 0,471, 1.898,000 (wgt'ed) examples reached here.  /* #neg=1.257 #pos=641 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.6730681632629354;  // std dev = 0,064, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( acquired(D, A), economicsectorcompany(B, D) )
%   | | then return 0.6021218135691457;  // std dev = 0,067, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( acquired(C, E), economicsectorcompany(B, E) )
%   | | | then return 0.8152547148073985;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04902098348765186;  // std dev = 8,131, 378,000 (wgt'ed) examples reached here.  /* #neg=290 #pos=88 */
%   else if ( acquired(F, A), economicsectorcompany(B, F) )
%   | then return 0.637153602721183;  // std dev = 0,064, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( acquired(G, A) )
%   | | then if ( acquired(H, G), economicsectorcompany(B, H) )
%   | | | then return 0.7893827579227818;  // std dev = 0,107, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05798760201129595;  // std dev = 5,956, 201,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=47 */
%   | | else if ( companyalsoknownas(A, I) )
%   | | | then return 0.1796482290936476;  // std dev = 5,018, 108,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=40 */
%   | | | else return 0.13120821913869035;  // std dev = 18,904, 1.637,000 (wgt'ed) examples reached here.  /* #neg=1.110 #pos=527 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   return 0;  // std dev = 0,465, 2.229,000 (wgt'ed) examples reached here.  /* #neg=1.451 #pos=778 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), cityhascompanyoffice(D, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.4564983796194118;  // std dev = 0,072, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( companyalsoknownas(C, E), economicsectorcompany(B, E) )
%   | | then return 0.8201484233069604;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( acquired(F, C), acquired(G, F) )
%   | | | then return -0.1705032747377584;  // std dev = 0,036, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.021275029717659707;  // std dev = 4,215, 117,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=24 */
%   else if ( acquired(H, A), bankboughtbank(H, A) )
%   | then return 0.41152309331007847;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( acquired(A, I), countryhascompanyoffice(J, I) )
%   | | then if ( cityhascompanyoffice(K, I) )
%   | | | then return 0.28446014289508925;  // std dev = 1,171, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.16079159182854236;  // std dev = 3,645, 68,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=26 */
%   | | else if ( companyceo(A, L) )
%   | | | then return 0.09296283910454975;  // std dev = 7,441, 285,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=89 */
%   | | | else return 0.10904521085380171;  // std dev = 20,119, 1.895,000 (wgt'ed) examples reached here.  /* #neg=1.283 #pos=612 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then if ( companyalsoknownas(C, D) )
%   | then return 0.3293675799362288;  // std dev = 0,038, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0.4772261372976111;  // std dev = 0,048, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | then if ( acquired(A, F), companyceo(F, G) )
%   | | then return 0.45902067976180766;  // std dev = 0,068, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( acquired(H, A) )
%   | | | then return 0.6286539131091017;  // std dev = 0,166, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.765506948767367;  // std dev = 0,035, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( acquired(I, A), companyceo(I, J) )
%   | | then if ( countryhascompanyoffice(K, A), countryhascompanyoffice(K, I) )
%   | | | then return 0.1448929274074161;  // std dev = 1,545, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.014206978541083885;  // std dev = 4,439, 144,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=26 */
%   | | else if ( acquired(A, L) )
%   | | | then return 0.0676255104973902;  // std dev = 7,914, 338,000 (wgt'ed) examples reached here.  /* #neg=238 #pos=100 */
%   | | | else return 0.09302379826386455;  // std dev = 19,812, 1.800,000 (wgt'ed) examples reached here.  /* #neg=1.220 #pos=580 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A), countryhascompanyoffice(D, A) )
%   then if ( companyalsoknownas(A, E), economicsectorcompany(B, E) )
%   | then return 0.3803489529166546;  // std dev = 0,241, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( countryhascompanyoffice(D, F), economicsectorcompany(B, F) )
%   | | then if ( companyceo(F, G), cityhascompanyoffice(C, F) )
%   | | | then return 0.7497224865097681;  // std dev = 0,125, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.3531072229452423;  // std dev = 1,094, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.23308161714657274;  // std dev = 0,225, 75,000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( companyalsoknownas(A, H), economicsectorcompany(B, H) )
%   | then return 0.552837959929606;  // std dev = 0,090, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( bankchiefexecutiveceo(A, I) )
%   | | then if ( companyceo(J, I), economicsectorcompany(B, J) )
%   | | | then return 0.6657153865816754;  // std dev = 0,530, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.03366320385649972;  // std dev = 2,368, 37,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( companyalsoknownas(A, K), acquired(K, L) )
%   | | | then return -0.009385887211796043;  // std dev = 3,932, 96,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=22 */
%   | | | else return 0.08494848733857009;  // std dev = 20,828, 2.052,000 (wgt'ed) examples reached here.  /* #neg=1.362 #pos=690 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( cityhascompanyoffice(C, A) )
%   then if ( cityhascompanyoffice(C, D), economicsectorcompany(B, D) )
%   | then return 0.6012772330800864;  // std dev = 0,249, 174,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=166 */
%   | else return -0.23566231039094673;  // std dev = 0,033, 336,000 (wgt'ed) examples reached here.  /* #neg=336 */
%   else if ( companyceo(A, E), acquired(A, F) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.40746117532725024;  // std dev = 0,107, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( countryhascompanyoffice(G, F), acquired(F, H) )
%   | | | then return -0.2307880247727415;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.010660412402507553;  // std dev = 3,498, 70,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | else if ( companyalsoknownas(A, I) )
%   | | then if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.4719064950905838;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.021680399947889402;  // std dev = 4,811, 131,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=41 */
%   | | else if ( acquired(K, A), economicsectorcompany(B, K) )
%   | | | then return 0.31241681967578727;  // std dev = 0,337, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.07212587850984087;  // std dev = 18,502, 1.566,000 (wgt'ed) examples reached here.  /* #neg=1.048 #pos=518 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.30466221698606627;  // std dev = 0,224, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else if ( acquired(C, D), companyceo(A, E) )
%   | | then return 0.07398701756653027;  // std dev = 0,357, 72,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | else if ( acquired(F, C), cityhascompanyoffice(G, C) )
%   | | | then return -0.2186656564280081;  // std dev = 0,165, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.032252651520140806;  // std dev = 5,081, 175,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=43 */
%   else if ( acquired(H, A), companyalsoknownas(H, I) )
%   | then if ( economicsectorcompany(B, I) )
%   | | then return 0.34991249654677237;  // std dev = 0,248, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.015606722382908065;  // std dev = 0,358, 118,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=30 */
%   | else if ( acquired(J, A), cityhascompanyoffice(K, A) )
%   | | then return 0.001124644857563674;  // std dev = 0,285, 59,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else if ( companyceo(A, L) )
%   | | | then return 0.08785520080825256;  // std dev = 5,343, 160,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=60 */
%   | | | else return 0.049383445568569426;  // std dev = 18,892, 1.731,000 (wgt'ed) examples reached here.  /* #neg=1.162 #pos=569 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.2536127503251158;  // std dev = 0,176, 28,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else if ( acquired(D, C) )
%   | | then return -0.13983109280004682;  // std dev = 0,242, 38,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | | else if ( acquired(C, E), companyceo(E, F) )
%   | | | then return -0.10556665292612374;  // std dev = 1,253, 26,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return 0.016806178429850573;  // std dev = 5,575, 210,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=61 */
%   else if ( acquired(A, G), economicsectorcompany(B, G) )
%   | then return 0.32665143080938597;  // std dev = 0,113, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( acquired(A, H) )
%   | | then if ( acquired(H, I), cityhascompanyoffice(J, I) )
%   | | | then return -0.11695430641087498;  // std dev = 0,928, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.033283138847129454;  // std dev = 6,048, 212,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=64 */
%   | | else if ( acquired(K, A) )
%   | | | then return 0.024382366215876517;  // std dev = 5,802, 229,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=76 */
%   | | | else return 0.05002483665802601;  // std dev = 18,115, 1.556,000 (wgt'ed) examples reached here.  /* #neg=1.029 #pos=527 */


Starting fold 1

Target train facts examples: 9690
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9690
Target test pos	 examples: 133
Target test neg examples: 53331

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
0;false,false,false;acquired(A, I), cityhascompanyoffice(J, I).;false;false
0;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
0;true,false;companyalsoknownas(A, A).;false;true
0;false;acquired(F, A), companyalsoknownas(F, G).;true;true
0;true,false,false;economicsectorcompany(B, C).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,true;economicsectorcompany(B, F).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyalsoknownas(C, D).;false;false
1;false,false;acquired(A, H), countryhascompanyoffice(I, H).;true;false
1;false;acquired(E, A).;true;true
1;false,true,false;cityhascompanyoffice(G, A), cityhascompanyoffice(G, E).;false;false
1;false,true;companyalsoknownas(A, F), economicsectorcompany(B, F).;false;true
1;false,false,true;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;false,false,false;companyalsoknownas(A, I).;false;false
2;true;economicsectorcompany(B, C).;false;true
2;true,false;acquired(D, A), economicsectorcompany(B, D).;false;true
2;false;acquired(F, A), economicsectorcompany(B, F).;false;true
2;true,false,false;acquired(C, E), economicsectorcompany(B, E).;false;false
2;false,false;acquired(G, A).;true;true
2;false,false,true;acquired(H, G), economicsectorcompany(B, H).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
4;false,false,false;companyceo(A, L).;false;false
4;true;economicsectorcompany(B, C).;false;true
4;true,false;companyalsoknownas(C, E), economicsectorcompany(B, E).;false;true
4;false;acquired(H, A), bankboughtbank(H, A).;false;true
4;true,false,false;acquired(F, C), acquired(G, F).;false;false
4;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
4;false,false,true;cityhascompanyoffice(K, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
5;false,false,false;acquired(A, L).;false;false
5;true;companyalsoknownas(C, D).;false;false
5;false,false;acquired(I, A), companyceo(I, J).;true;true
5;false;companyalsoknownas(A, E), economicsectorcompany(B, E).;true;true
5;false,true,false;acquired(H, A).;false;false
5;false,true;acquired(A, F), companyceo(F, G).;false;true
5;false,false,true;countryhascompanyoffice(K, A), countryhascompanyoffice(K, I).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), countryhascompanyoffice(D, A).;true;true
6;true,false,true;companyceo(F, G), cityhascompanyoffice(C, F).;false;false
6;false,false,false;companyalsoknownas(A, K), acquired(K, L).;false;false
6;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;true;false
6;false;companyalsoknownas(A, H), economicsectorcompany(B, H).;false;true
6;false,false;bankchiefexecutiveceo(A, I).;true;true
6;false,false,true;companyceo(J, I), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;false,false,false;acquired(K, A), economicsectorcompany(B, K).;false;false
7;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;false;false
7;false,false;companyalsoknownas(A, I).;true;true
7;false;companyceo(A, E), acquired(A, F).;true;true
7;false,true,false;countryhascompanyoffice(G, F), acquired(F, H).;false;false
7;false,true;economicsectorcompany(B, F).;false;true
7;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false,false,false;companyceo(A, L).;false;false
8;true;economicsectorcompany(B, C).;false;true
8;true,false;acquired(C, D), companyceo(A, E).;false;true
8;false;acquired(H, A), companyalsoknownas(H, I).;true;true
8;true,false,false;acquired(F, C), cityhascompanyoffice(G, C).;false;false
8;false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;true
8;false,true;economicsectorcompany(B, I).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
9;false,false,false;acquired(K, A).;false;false
9;true;economicsectorcompany(B, C).;false;true
9;true,false;acquired(D, C).;false;true
9;false;acquired(A, G), economicsectorcompany(B, G).;false;true
9;true,false,false;acquired(C, E), companyceo(E, F).;false;false
9;false,false;acquired(A, H).;true;true
9;false,false,true;acquired(H, I), cityhascompanyoffice(J, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamalsoknownas(F, A), teamplaysagainstteam(F, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, I), athleteplaysforteam(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5724346493852266;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamalsoknownas(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, F), teamplaysinleague(F, G) )
%   | | then if ( teamplaysagainstteam(A, H) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.48767788391726297;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, A) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamalsoknownas(C, E) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0.6769712478135391;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17697124781353923;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(A, D), athleteplayssport(E, B) )
%   | then return 0.5561915882068292;  // std dev = 0,099, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.106776238194288;  // std dev = 0,943, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), athleteplaysforteam(D, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(E, A) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamalsoknownas(A, F), teamplaysinleague(F, G) )
%   | | then if ( athleteplaysforteam(H, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( athleteledsportsteam(I, A) )
%   | | | then return 0.3791222784560523;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20102240061738588;  // std dev = 1,033, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then if ( teamalsoknownas(A, F), athleteledsportsteam(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.24543302475979759;  // std dev = 0,396, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( teamalsoknownas(I, A), athleteledsportsteam(J, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, K) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.03547123037884725;  // std dev = 0,947, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamplaysagainstteam(A, E) )
%   | then return 0.07002662435669696;  // std dev = 0,249, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0.330386991886325;  // std dev = 0,070, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteledsportsteam(G, H) )
%   | | then return -0.008444787377430624;  // std dev = 0,955, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then return 0.06022001957324859;  // std dev = 0,245, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(E, A), teamalsoknownas(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then if ( teamalsoknownas(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2624258310424364;  // std dev = 0,061, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( teamalsoknownas(I, A) )
%   | | | then return -0.07816608412553043;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.007411631083066239;  // std dev = 0,952, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(C, D), athleteledsportsteam(E, A) )
%   | then return 0.22303314198979796;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamalsoknownas(F, C), athleteplaysforteam(G, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.10371545708723252;  // std dev = 0,278, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(H, A), teamplaysagainstteam(H, I) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(J, A), athleteplaysforteam(K, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(L, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.007252126404899084;  // std dev = 0,955, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(D, C) )
%   | then return 0.02802108680454217;  // std dev = 0,225, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamalsoknownas(C, E), athleteledsportsteam(F, E) )
%   | | then return 0.16297473386913375;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2338239082838912;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamalsoknownas(A, G) )
%   | then return -0.0752031507562335;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.028766690262709962;  // std dev = 0,947, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.584367
   AUC PR    = 0.024105
   CLL	      = -0.765936
   Precision = 0.003409 at threshold = 0.5
   Recall    = 0.571429
   F1        = 0.006778


Total learning time: 1.457 seconds
Total inference time: 8.794 seconds
AUC ROC: 0.584367


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.971429
   CLL	      = -0.343082
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.751 seconds
Parameter learned model CLL: -0.343082


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysinleague(C, D)', 'false,false,false': 'teamalsoknownas(A, I), athleteplaysforteam(J, I)', 'true': 'teamplaysagainstteam(A, E)', 'false,false': 'teamalsoknownas(A, H)', 'false': 'teamalsoknownas(F, A), teamplaysagainstteam(F, G)', 'true,false': 'teamplaysagainstteam(A, A)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [1.195, 2, 5], 'true,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamplaysagainstteam(C, D)', 'false,false': 'teamalsoknownas(A, F), teamplaysinleague(F, G)', 'false': 'teamalsoknownas(E, A)', 'false,false,true': 'teamplaysagainstteam(A, H)'}, {'false,false,false': [1.195, 2, 5], 'false,false,true,true': [0.0, 1, 0], 'true,true': [0.0, 0, 0], 'true,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false,false,false': 'teamplaysagainstteam(A, H)', 'true': 'teamalsoknownas(D, A)', 'false,false': 'teamalsoknownas(G, A)', 'false': 'teamalsoknownas(F, A)', 'true,false': 'teamalsoknownas(C, E)'}, {'true,false,true': [0.0, 2, 0], 'false,false,false,false': [1.0, 2, 2], 'true,true': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [1.49e-08, 0, 3]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysinleague(A, D), athleteplayssport(E, B)'}, {'false,true': [0.099, 0, 3], 'true': [0.0, 3, 0], 'false,false': [0.943, 2, 2]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), athleteplaysforteam(D, C)', 'false,false,false': 'athleteledsportsteam(I, A)', 'false,false': 'teamalsoknownas(A, F), teamplaysinleague(F, G)', 'false': 'teamalsoknownas(E, A)', 'false,false,true': 'athleteplaysforteam(H, F)'}, {'false,false,true,true': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 2, 0], 'false,false,false,false': [1.033, 2, 4], 'false,false,false,true': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamalsoknownas(A, K)', 'true': 'teamplaysagainstteam(C, D)', 'false,false': 'teamalsoknownas(I, A), athleteledsportsteam(J, I)', 'false': 'teamplaysagainstteam(A, E)', 'false,true,false': 'teamalsoknownas(H, A)', 'false,true': 'teamalsoknownas(A, F), athleteledsportsteam(G, F)'}, {'false,false,false,false': [0.947, 2, 2], 'true,true': [0.0, 0, 0], 'true,false': [0.0, 1, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.396, 1, 3], 'false,false,false,true': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamplaysinleague(A, D)', 'true': 'teamplaysagainstteam(A, E)', 'false,false': 'athleteledsportsteam(G, H)', 'false': 'teamplaysagainstteam(A, F)'}, {'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.249, 1, 1], 'false,true': [0.07, 0, 2], 'false,false,true': [0.955, 4, 2]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false,false,false': 'teamalsoknownas(I, A)', 'true': 'athleteplaysforteam(C, D)', 'false,false': 'teamplaysagainstteam(A, G)', 'false': 'athleteledsportsteam(E, A), teamalsoknownas(A, F)', 'false,false,true': 'teamalsoknownas(A, H)'}, {'false,false,true,true': [0.0, 0, 0], 'true,true': [0.245, 1, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.061, 0, 2], 'false,false,false,false': [0.952, 3, 2], 'false,false,false,true': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'athleteledsportsteam(L, A)', 'true': 'teamalsoknownas(C, D), athleteledsportsteam(E, A)', 'false,false': 'teamalsoknownas(J, A), athleteplaysforteam(K, A)', 'false': 'teamalsoknownas(H, A), teamplaysagainstteam(H, I)', 'true,false': 'teamalsoknownas(F, C), athleteplaysforteam(G, C)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.955, 4, 2], 'true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.278, 1, 2], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'teamalsoknownas(I, A)', 'true': 'teamalsoknownas(D, C)', 'false,false': 'teamalsoknownas(A, H)', 'false': 'teamalsoknownas(A, G)', 'true,false': 'teamalsoknownas(C, E), athleteledsportsteam(F, E)'}, {'true,false,true': [0.0, 0, 1], 'false,false,false,false': [0.947, 2, 2], 'true,true': [0.225, 1, 1], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [0.004, 2, 0], 'false,false,false,true': [0.0, 0, 0]}]]
[{'': [0.0, 0.20408163265306106], 'false,false,false': [nan, 0.20408163265306106], 'true': [0.0, 0.0], 'false,false': [nan, 0.20408163265306106], 'false': [nan, 0.20408163265306106], 'true,false': [nan, 0.0]}, {'': [0.0, 0.2237038523773403], 'true': [nan, 0.0], 'false,false': [0.0, 0.20408163265306115], 'false': [nan, 0.2237038523773403], 'false,false,true': [0.0, 0.0]}, {'': [2.3129646346357427e-18, 0.20408163265306115], 'false,false,false': [7.401486830834377e-17, 0.24999999999999997], 'true': [0.0, 0.0], 'false,false': [nan, 0.20408163265306115], 'false': [nan, 0.20408163265306115], 'true,false': [0.0, nan]}, {'': [-1.1564823173178713e-18, 0.17795973076263907], 'false': [0.003275272722372713, 0.22241272136702678]}, {'': [nan, 0.1308810504490019], 'false,false,false': [0.0, 0.17795240873271898], 'false,false': [0.0, 0.1564146646059405], 'false': [0.0, 0.13926143479626119], 'false,false,true': [nan, 0.0]}, {'': [0.0, 0.13198579864574045], 'false,false,false': [0.0, 0.224381558119044], 'true': [nan, 0.0], 'false,false': [nan, 0.18183450504503001], 'false': [0.03923073325164206, 0.18183450504503001], 'false,true,false': [nan, 0.03923073325164206], 'false,true': [nan, 0.03923073325164206]}, {'': [0.031112468607935727, 0.13618036064603378], 'true': [0.031112468607935727, nan], 'false,false': [0.1520575541657194, nan], 'false': [0.0024435491076950228, 0.1520575541657194]}, {'': [0.030075313543726126, 0.1281573050744105], 'false,false,false': [0.0, 0.18133193481859902], 'true': [0.030075313543726126, nan], 'false,false': [0.001865267384496952, 0.1521271047572108], 'false': [nan, 0.1281573050744105], 'false,false,true': [nan, 0.001865267384496952]}, {'': [0.022044012033305718, 0.1519303834899123], 'false,false,false': [nan, 0.1519303834899123], 'true': [0.0, 0.025832838561780647], 'false,false': [nan, 0.1519303834899123], 'false': [nan, 0.1519303834899123], 'true,false': [nan, 0.025832838561780647]}, {'': [0.02048586237917014, 0.151989313847605], 'false,false,false': [nan, 0.22437630454828894], 'true': [0.025202452022709904, 0.001254901378813178], 'false,false': [nan, 0.22437630454828894], 'false': [8.84721856756008e-06, 0.22437630454828894], 'true,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamalsoknownas(A, C), teamplaysinleague(C, D).;true;true
0;true;teamplaysagainstteam(A, E).;true;true
1;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
1;false,true;teamplaysagainstteam(A, H).;true;true
1;false;teamalsoknownas(A, F), teamplaysinleague(F, G).;true;true
2;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
2;true;teamalsoknownas(D, A).;true;true
2;false;teamplaysagainstteam(A, H).;true;true
3;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(E, A).;true;true
4;false,false;athleteledsportsteam(I, A).;true;true
4;false;teamalsoknownas(A, F), teamplaysinleague(F, G).;true;true
5;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
5;false,false;teamalsoknownas(A, K).;true;true
5;false;teamplaysagainstteam(A, E).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamplaysinleague(A, D).;true;true
6;false;teamplaysagainstteam(A, F).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
7;false,false;teamalsoknownas(I, A).;true;true
7;false;teamplaysagainstteam(A, G).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
8;true;teamalsoknownas(C, D), athleteledsportsteam(E, A).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
9;true;teamalsoknownas(D, C).;true;true
9;true,false;teamalsoknownas(C, E), athleteledsportsteam(F, E).;true;true
9;false;teamalsoknownas(A, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamalsoknownas(A, D), teamplaysinleague(D, E) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysinleague(A, G), athleteplayssport(H, B) )
%   | | then return 0.7492293200691814;  // std dev = 0,073, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.28642420489196496;  // std dev = 0,957, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, A) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0.5847488453044822;  // std dev = 0,090, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.23701304221728325;  // std dev = 0,955, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(A, D), athleteplayssport(E, B) )
%   | then return 0.4727942073287097;  // std dev = 0,170, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.16545463791305481;  // std dev = 0,912, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamalsoknownas(A, D), teamplaysinleague(D, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteledsportsteam(F, A) )
%   | | then return 0.29631216994722565;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.21796815108679124;  // std dev = 0,971, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0.2071657480015393;  // std dev = 0,367, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( teamalsoknownas(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.08335507684754333;  // std dev = 0,915, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysinleague(A, D) )
%   then return 0.05005038873885043;  // std dev = 0,216, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0.2943583117172519;  // std dev = 0,111, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.016095015286047176;  // std dev = 0,930, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then return 0.04370946897953895;  // std dev = 0,214, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0.23857645392667953;  // std dev = 0,097, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return -0.0799527329951951;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.0317512384556913;  // std dev = 0,923, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(C, D), athleteledsportsteam(E, A) )
%   | then return 0.1881373211241658;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.09533436916178696;  // std dev = 0,267, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return 0.00860507160586707;  // std dev = 0,927, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(D, C) )
%   | then return 0.019749111395834865;  // std dev = 0,200, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamalsoknownas(C, E), athleteledsportsteam(F, E) )
%   | | then return 0.12804854052942183;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.24082173316694278;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamalsoknownas(A, G) )
%   | then return -0.07891565885744956;  // std dev = 0,006, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.0499833859611139;  // std dev = 0,915, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.618985
   AUC PR    = 0.055992
   CLL	      = -0.759188
   Precision = 0.003759 at threshold = 0.5
   Recall    = 0.646617
   F1        = 0.007474


Total learning time: 1.377 seconds
Total inference time: 4.949 seconds
AUC ROC: 0.618985


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.971429
   CLL	      = -0.325543
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.771 seconds
Refined model CLL: -0.325543


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.618985
   AUC PR    = 0.055992
   CLL	      = -0.759188
   Precision = 0.003759 at threshold = 0.5
   Recall    = 0.646617
   F1        = 0.007474


Total learning time: 4.356 seconds
Total inference time: 4.949 seconds
AUC ROC: 0.618985
Total revision time: 4.356
Best scored revision CLL: -0.325543


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 04:37:35
{'AUC ROC': 0.618985, 'parameter_5': {'AUC ROC': 0.584367, 'Recall': 0.571429, 'CLL': -0.765936, 'Precision': [0.003409, 0.5], 'Learning time': 1.457, 'F1': 0.006778, 'Inference time': 8.794, 'AUC PR': 0.024105}, 'Recall': 0.646617, 'CLL': -0.759188, 'Precision': [0.003759, 0.5], 'Learning time': 4.356, 'F1': 0.007474, 'Inference time': 4.949, 'AUC PR': 0.055992}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.099512
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 1.779 seconds
Total inference time: 4.061 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN-B), Time: 04:37:41
{'AUC ROC': 0.987268, 'Recall': 0.992481, 'CLL': -0.099512, 'Precision': [0.121212, 0.5], 'Learning time': 1.779, 'F1': 0.216039, 'Inference time': 4.061, 'AUC PR': 0.120766}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.140377
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.918 seconds
Total inference time: 3.094 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN), Time: 04:37:45
{'AUC ROC': 0.987268, 'Recall': 0.0, 'CLL': -0.140377, 'Precision': [nan, 0.5], 'Learning time': 0.918, 'F1': nan, 'Inference time': 3.094, 'AUC PR': 0.120766}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
0;false,false,false;acquired(A, I), cityhascompanyoffice(J, I).;false;false
0;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
0;true,false;companyalsoknownas(A, A).;false;true
0;false;acquired(F, A), companyalsoknownas(F, G).;true;true
0;true,false,false;economicsectorcompany(B, C).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,true;economicsectorcompany(B, F).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyalsoknownas(C, D).;false;false
1;false,false;acquired(A, H), countryhascompanyoffice(I, H).;true;false
1;false;acquired(E, A).;true;true
1;false,true,false;cityhascompanyoffice(G, A), cityhascompanyoffice(G, E).;false;false
1;false,true;companyalsoknownas(A, F), economicsectorcompany(B, F).;false;true
1;false,false,true;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;false,false,false;companyalsoknownas(A, I).;false;false
2;true;economicsectorcompany(B, C).;false;true
2;true,false;acquired(D, A), economicsectorcompany(B, D).;false;true
2;false;acquired(F, A), economicsectorcompany(B, F).;false;true
2;true,false,false;acquired(C, E), economicsectorcompany(B, E).;false;false
2;false,false;acquired(G, A).;true;true
2;false,false,true;acquired(H, G), economicsectorcompany(B, H).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
4;false,false,false;companyceo(A, L).;false;false
4;true;economicsectorcompany(B, C).;false;true
4;true,false;companyalsoknownas(C, E), economicsectorcompany(B, E).;false;true
4;false;acquired(H, A), bankboughtbank(H, A).;false;true
4;true,false,false;acquired(F, C), acquired(G, F).;false;false
4;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
4;false,false,true;cityhascompanyoffice(K, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
5;false,false,false;acquired(A, L).;false;false
5;true;companyalsoknownas(C, D).;false;false
5;false,false;acquired(I, A), companyceo(I, J).;true;true
5;false;companyalsoknownas(A, E), economicsectorcompany(B, E).;true;true
5;false,true,false;acquired(H, A).;false;false
5;false,true;acquired(A, F), companyceo(F, G).;false;true
5;false,false,true;countryhascompanyoffice(K, A), countryhascompanyoffice(K, I).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), countryhascompanyoffice(D, A).;true;true
6;true,false,true;companyceo(F, G), cityhascompanyoffice(C, F).;false;false
6;false,false,false;companyalsoknownas(A, K), acquired(K, L).;false;false
6;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;true;false
6;false;companyalsoknownas(A, H), economicsectorcompany(B, H).;false;true
6;false,false;bankchiefexecutiveceo(A, I).;true;true
6;false,false,true;companyceo(J, I), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;false,false,false;acquired(K, A), economicsectorcompany(B, K).;false;false
7;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;false;false
7;false,false;companyalsoknownas(A, I).;true;true
7;false;companyceo(A, E), acquired(A, F).;true;true
7;false,true,false;countryhascompanyoffice(G, F), acquired(F, H).;false;false
7;false,true;economicsectorcompany(B, F).;false;true
7;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false,false,false;companyceo(A, L).;false;false
8;true;economicsectorcompany(B, C).;false;true
8;true,false;acquired(C, D), companyceo(A, E).;false;true
8;false;acquired(H, A), companyalsoknownas(H, I).;true;true
8;true,false,false;acquired(F, C), cityhascompanyoffice(G, C).;false;false
8;false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;true
8;false,true;economicsectorcompany(B, I).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
9;false,false,false;acquired(K, A).;false;false
9;true;economicsectorcompany(B, C).;false;true
9;true,false;acquired(D, C).;false;true
9;false;acquired(A, G), economicsectorcompany(B, G).;false;true
9;true,false,false;acquired(C, E), companyceo(E, F).;false;false
9;false,false;acquired(A, H).;true;true
9;false,false,true;acquired(H, I), cityhascompanyoffice(J, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then return 0.19148226843284558;  // std dev = 0,471, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0.8581489350995121;  // std dev = 1,83e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysagainstteam(G, A), athleteplaysforteam(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.3476421969532045;  // std dev = 0,471, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | | then return -0.16679450876845162;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.3070375742678557;  // std dev = 1,382, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.28785501180900347;  // std dev = 1,549, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( teamplaysagainstteam(E, C) )
%   | | then return 0.25434858038905883;  // std dev = 0,565, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.19820477848806808;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then if ( athleteledsportsteam(E, A), athleteplayssport(E, F) )
%   | then return 0.3257211424923804;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.25053905798385484;  // std dev = 0,082, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(G, B) )
%   | then if ( teamplaysagainstteam(H, A) )
%   | | then return 0.5804925798330443;  // std dev = 0,016, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7326358668449101;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.2673641331550899;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( teamplaysagainstteam(C, E), teamplaysagainstteam(E, F) )
%   | then return 0.21230608413754534;  // std dev = 1,319, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, G) )
%   | then return -0.22731063719194558;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(H, A), teamalsoknownas(I, H) )
%   | | then if ( athleteplaysforteam(J, H) )
%   | | | then return -0.14535555081915078;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return 0.17504222022048427;  // std dev = 0,787, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.14547739339987648;  // std dev = 0,732, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.1321985780671446;  // std dev = 0,408, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else if ( teamplaysagainstteam(D, A), teamplaysinleague(D, E) )
%   | then return 0.14313026718081906;  // std dev = 0,384, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, G), teamplaysinleague(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08498249643537362;  // std dev = 1,014, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(D, A) )
%   then if ( teamalsoknownas(D, E) )
%   | then if ( teamplaysinleague(E, F), athleteplaysforteam(C, E) )
%   | | then return -0.4248744336682328;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(G, H) )
%   | then return 0.11867315831986609;  // std dev = 1,644, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then return 0.03476507735017597;  // std dev = 1,248, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, E), teamplaysagainstteam(F, A) )
%   | then if ( teamalsoknownas(G, F), teamplaysagainstteam(H, F) )
%   | | then return -0.16042694283295272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.3235912201426181;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return 0.3381323162119586;  // std dev = 0,021, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( teamplaysagainstteam(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.04045021615223306;  // std dev = 1,000, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D), teamplaysinleague(A, E) )
%   then return 0.04605683658702919;  // std dev = 1,491, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   else if ( teamplaysagainstteam(D, F), athleteplaysforteam(G, D) )
%   | then return 0.08434185134088179;  // std dev = 0,707, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.043611747095379225;  // std dev = 1,649, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.737713
   AUC PR    = 0.020388
   CLL	      = -0.494886
   Precision = 0.008405 at threshold = 0.5
   Recall    = 0.518797
   F1        = 0.016543


Total learning time: 7.017 seconds
Total inference time: 118.282 seconds
AUC ROC: 0.737713


Results scoring model
   AUC ROC   = 0.985
   AUC PR    = 0.984558
   CLL	      = -0.451955
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.7
   F1        = 0.823529


Total scoring time: 1.049 seconds
Parameter learned model CLL: -0.451955


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(D, C)', 'false,false,false': 'teamplaysagainstteam(G, A), athleteplaysforteam(H, G)', 'false,false': 'teamplaysagainstteam(F, A)', 'false': 'teamplaysagainstteam(A, E)'}, {'false,false,false,false': [1.309, 4, 3], 'true': [0.471, 6, 3], 'false,true': [1.83e-08, 0, 3], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false': 'teamplaysagainstteam(E, A), teamalsoknownas(F, E)', 'false': 'teamplaysagainstteam(A, D)'}, {'false,false,false': [1.382, 4, 4], 'true': [0.471, 5, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true,false': 'teamplaysagainstteam(E, C)', 'true': 'teamplaysagainstteam(A, D)', 'false,false': 'teamplaysagainstteam(A, G)', 'false': 'teamplaysagainstteam(A, F)'}, {'true,false,true': [0.565, 1, 1], 'false,false,false': [0.495, 4, 3], 'true,true': [1.549, 5, 6], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(D, C)', 'true': 'athleteledsportsteam(E, A), athleteplayssport(E, F)', 'false,true': 'teamplaysagainstteam(H, A)', 'false': 'athleteplayssport(G, B)'}, {'false,true,true': [0.016, 0, 4], 'true,true': [1.095, 2, 3], 'false,false': [0.0, 4, 0], 'false,true,false': [0.0, 0, 3], 'true,false': [0.082, 4, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), athleteplaysforteam(D, C)', 'false,false,false': 'teamplaysinleague(A, K)', 'true': 'teamplaysagainstteam(C, E), teamplaysagainstteam(E, F)', 'false,false': 'teamplaysagainstteam(H, A), teamalsoknownas(I, H)', 'false': 'teamplaysagainstteam(A, G)', 'false,false,true': 'athleteplaysforteam(J, H)'}, {'false,false,true,true': [0.0, 1, 0], 'true,true': [1.319, 4, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,false': [0.732, 2, 2], 'false,false,false,true': [0.787, 2, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'teamplaysagainstteam(A, G), teamplaysinleague(G, H)', 'false,false': 'teamplaysagainstteam(A, F)', 'false': 'teamplaysagainstteam(D, A), teamplaysinleague(D, E)'}, {'false,false,false,false': [1.014, 4, 3], 'true': [0.408, 5, 6], 'false,true': [0.384, 1, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamalsoknownas(D, A)', 'true,true': 'teamplaysinleague(E, F), athleteplaysforteam(C, E)', 'true': 'teamalsoknownas(D, E)', 'false': 'teamplaysinleague(G, H)'}, {'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0], 'false,true': [1.644, 9, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false,false,false': 'teamplaysagainstteam(A, J)', 'true': 'athleteplaysforteam(C, D)', 'false,false': 'teamplaysagainstteam(I, A)', 'false': 'teamplaysinleague(A, E), teamplaysagainstteam(F, A)', 'false,true': 'teamalsoknownas(G, F), teamplaysagainstteam(H, F)'}, {'false,false,false,false': [1.0, 4, 3], 'true,true': [1.248, 5, 4], 'true,false': [0.0, 0, 0], 'false,false,true': [0.021, 0, 2], 'false,true,false': [0.0, 0, 1], 'false,true,true': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D), teamplaysinleague(A, E)', 'false': 'teamplaysagainstteam(D, F), athleteplaysforteam(G, D)'}, {'false,true': [0.707, 2, 3], 'true': [1.491, 8, 7], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [1.649, 10, 10], 'false': [0.0, 0, 0]}]]
[{'': [0.2222222222222221, 0.23140495867768587], 'false,false,false': [nan, 0.24489795918367335], 'false,false': [0.0, 0.24489795918367335], 'false': [1.4802973661668753e-16, 0.24999999999999986]}, {'': [0.22230146519456637, 0.23425111512070723], 'false,false': [0.0, 0.23858618863140377], 'false': [nan, 0.23425111512070723]}, {'': [0.20921956232876288, 0.24489795918367344], 'true,false': [0.15938580939321123, nan], 'true': [0.21810752453506607, 0.15938580939321123], 'false,false': [nan, 0.24489795918367344], 'false': [nan, 0.24489795918367344]}, {'': [0.21607880007225314, 0.19654724908509322], 'true': [0.24000000000000007, 0.0016907342442856188], 'false,true': [6.0683858142784874e-05, 0.0], 'false': [0.0057034715392099145, 0.0]}, {'': [0.17409008454308453, 0.13527161789220646], 'false,false,false': [0.15474486704383755, 0.13410690311307125], 'true': [0.17409008454308453, nan], 'false,false': [0.0, 0.14464440482468754], 'false': [0.0, 0.13779756940652757], 'false,false,true': [0.0, nan]}, {'': [0.1668502720717927, 0.13119518471371083], 'false,false,false': [nan, 0.1468919251392062], 'false,false': [nan, 0.1468919251392062], 'false': [0.07362679959129322, 0.1468919251392062]}, {'': [0.0, 0.1421651295553531], 'true,true': [0.0, nan], 'true': [0.0, nan], 'false': [0.14216512955535307, nan]}, {'': [0.172965970374697, 0.11413235385549823], 'false,false,false': [nan, 0.14271812773670922], 'true': [0.172965970374697, nan], 'false,false': [0.00021144347489780724, 0.14271812773670922], 'false': [0.05856839552256155, 0.12636608503338767], 'false,true': [0.0, 0.0]}, {'': [0.14819045039447065, 0.10004413888575144], 'false': [0.10004413888575144, nan]}, {'': [0.1359160825429679, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamalsoknownas(D, C).;true;true
0;false,false;teamplaysagainstteam(F, A).;true;true
0;false;teamplaysagainstteam(A, E).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
1;false;teamplaysagainstteam(E, A), teamalsoknownas(F, E).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamalsoknownas(D, C).;true;true
3;true;athleteledsportsteam(E, A), athleteplayssport(E, F).;true;true
3;false,true;teamplaysagainstteam(H, A).;true;true
3;false;athleteplayssport(G, B).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), athleteplaysforteam(D, C).;true;true
4;false,false;teamplaysagainstteam(H, A), teamalsoknownas(I, H).;true;true
4;false;teamplaysagainstteam(A, G).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamalsoknownas(D, A).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
7;false,false;teamplaysagainstteam(I, A).;true;true
7;false,true;teamalsoknownas(G, F), teamplaysagainstteam(H, F).;true;true
7;false;teamplaysinleague(A, E), teamplaysagainstteam(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(H, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109545;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then if ( athleteledsportsteam(E, A), athleteplayssport(E, F) )
%   | then return 0.20986961869985143;  // std dev = 0,569, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(G, B) )
%   | then if ( teamplaysagainstteam(H, A) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.34411737149027516;  // std dev = 0,057, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.10755391386032395;  // std dev = 0,030, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(G, A), teamalsoknownas(H, G) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return 0.2917343154988483;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(A, E) )
%   | | then return 0.25074934988913655;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( athleteledsportsteam(F, A) )
%   | then return -0.10222665376836916;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return -0.08480105065250869;  // std dev = 0,000940, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(D, A) )
%   then return -0.1016044578695708;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( athleteledsportsteam(F, A) )
%   | | then return 0.23528420479158385;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(A, G) )
%   | | | then return 0.20662850026110036;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysagainstteam(A, H), teamalsoknownas(H, I) )
%   | | then return -0.08563378934862421;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0786073359149309;  // std dev = 0,000959, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.19040309702180444;  // std dev = 0,018, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08049902661253666;  // std dev = 0,024, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysinleague(A, E), teamplaysagainstteam(F, A) )
%   | then if ( teamalsoknownas(G, F), teamplaysagainstteam(H, F) )
%   | | then return -0.0732837810550337;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.17479794136280769;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return 0.17594721955404252;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( athleteplayssport(J, B) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.07325772695013061;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return 0.16736791574591192;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(A, E) )
%   | | then return 0.1502856116123168;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1527810558690154;  // std dev = 0,000129, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamplaysagainstteam(F, A), teamalsoknownas(F, G) )
%   | then return -0.0766665852940891;  // std dev = 0,020, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06821220801123824;  // std dev = 0,001, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then if ( teamalsoknownas(E, D), athleteledsportsteam(F, C) )
%   | then return -0.0685144606547779;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.038112718228344805;  // std dev = 0,263, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( athleteplayssport(G, B) )
%   | then if ( teamplaysagainstteam(H, A) )
%   | | then return 0.13259784597152943;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1340027132967212;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.06421423151947224;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.989201
   AUC PR    = 0.115668
   CLL	      = -0.12084
   Precision = 0.123134 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.219087


Total learning time: 31.202 seconds
Total inference time: 9.745 seconds
AUC ROC: 0.989201


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100499
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.869 seconds
Refined model CLL: -0.100499


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.989201
   AUC PR    = 0.115668
   CLL	      = -0.12084
   Precision = 0.123134 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.219087


Total learning time: 40.137 seconds
Total inference time: 9.745 seconds
AUC ROC: 0.989201
Total revision time: 40.137
Best scored revision CLL: -0.100499


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 04:40:34
{'AUC ROC': 0.989201, 'Recall': 0.992481, 'CLL': -0.12084, 'Precision': [0.123134, 0.5], 'Learning time': 40.137, 'parameter_10': {'AUC ROC': 0.737713, 'Recall': 0.518797, 'CLL': -0.494886, 'Precision': [0.008405, 0.5], 'Learning time': 7.017, 'F1': 0.016543, 'Inference time': 118.282, 'AUC PR': 0.020388}, 'F1': 0.219087, 'Inference time': 9.745, 'AUC PR': 0.115668}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.099512
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 2.757 seconds
Total inference time: 4.227 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN-B), Time: 04:40:41
{'AUC ROC': 0.987268, 'Recall': 0.992481, 'CLL': -0.099512, 'Precision': [0.121212, 0.5], 'Learning time': 2.757, 'F1': 0.216039, 'Inference time': 4.227, 'AUC PR': 0.120766}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.140377
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.293 seconds
Total inference time: 3.075 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN), Time: 04:40:46
{'AUC ROC': 0.987268, 'Recall': 0.0, 'CLL': -0.140377, 'Precision': [nan, 0.5], 'Learning time': 1.293, 'F1': nan, 'Inference time': 3.075, 'AUC PR': 0.120766}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
0;false,false,false;acquired(A, I), cityhascompanyoffice(J, I).;false;false
0;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
0;true,false;companyalsoknownas(A, A).;false;true
0;false;acquired(F, A), companyalsoknownas(F, G).;true;true
0;true,false,false;economicsectorcompany(B, C).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,true;economicsectorcompany(B, F).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyalsoknownas(C, D).;false;false
1;false,false;acquired(A, H), countryhascompanyoffice(I, H).;true;false
1;false;acquired(E, A).;true;true
1;false,true,false;cityhascompanyoffice(G, A), cityhascompanyoffice(G, E).;false;false
1;false,true;companyalsoknownas(A, F), economicsectorcompany(B, F).;false;true
1;false,false,true;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;false,false,false;companyalsoknownas(A, I).;false;false
2;true;economicsectorcompany(B, C).;false;true
2;true,false;acquired(D, A), economicsectorcompany(B, D).;false;true
2;false;acquired(F, A), economicsectorcompany(B, F).;false;true
2;true,false,false;acquired(C, E), economicsectorcompany(B, E).;false;false
2;false,false;acquired(G, A).;true;true
2;false,false,true;acquired(H, G), economicsectorcompany(B, H).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
4;false,false,false;companyceo(A, L).;false;false
4;true;economicsectorcompany(B, C).;false;true
4;true,false;companyalsoknownas(C, E), economicsectorcompany(B, E).;false;true
4;false;acquired(H, A), bankboughtbank(H, A).;false;true
4;true,false,false;acquired(F, C), acquired(G, F).;false;false
4;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
4;false,false,true;cityhascompanyoffice(K, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
5;false,false,false;acquired(A, L).;false;false
5;true;companyalsoknownas(C, D).;false;false
5;false,false;acquired(I, A), companyceo(I, J).;true;true
5;false;companyalsoknownas(A, E), economicsectorcompany(B, E).;true;true
5;false,true,false;acquired(H, A).;false;false
5;false,true;acquired(A, F), companyceo(F, G).;false;true
5;false,false,true;countryhascompanyoffice(K, A), countryhascompanyoffice(K, I).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), countryhascompanyoffice(D, A).;true;true
6;true,false,true;companyceo(F, G), cityhascompanyoffice(C, F).;false;false
6;false,false,false;companyalsoknownas(A, K), acquired(K, L).;false;false
6;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;true;false
6;false;companyalsoknownas(A, H), economicsectorcompany(B, H).;false;true
6;false,false;bankchiefexecutiveceo(A, I).;true;true
6;false,false,true;companyceo(J, I), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;false,false,false;acquired(K, A), economicsectorcompany(B, K).;false;false
7;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;false;false
7;false,false;companyalsoknownas(A, I).;true;true
7;false;companyceo(A, E), acquired(A, F).;true;true
7;false,true,false;countryhascompanyoffice(G, F), acquired(F, H).;false;false
7;false,true;economicsectorcompany(B, F).;false;true
7;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false,false,false;companyceo(A, L).;false;false
8;true;economicsectorcompany(B, C).;false;true
8;true,false;acquired(C, D), companyceo(A, E).;false;true
8;false;acquired(H, A), companyalsoknownas(H, I).;true;true
8;true,false,false;acquired(F, C), cityhascompanyoffice(G, C).;false;false
8;false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;true
8;false,true;economicsectorcompany(B, I).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
9;false,false,false;acquired(K, A).;false;false
9;true;economicsectorcompany(B, C).;false;true
9;true,false;acquired(D, C).;false;true
9;false;acquired(A, G), economicsectorcompany(B, G).;false;true
9;true,false,false;acquired(C, E), companyceo(E, F).;false;false
9;false,false;acquired(A, H).;true;true
9;false,false,true;acquired(H, I), cityhascompanyoffice(J, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then return 0.13087620782678497;  // std dev = 0,445, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0.6914822684328455;  // std dev = 0,373, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysagainstteam(G, A), athleteplaysforteam(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.35814893509951234;  // std dev = 1,732, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.30785660340844706;  // std dev = 0,479, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | | then return -0.15854103505980627;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.3403359262798903;  // std dev = 1,776, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.2562719393487814;  // std dev = 1,902, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( teamplaysagainstteam(E, C) )
%   | | then return 0.25374308787342315;  // std dev = 0,555, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2505438892769258;  // std dev = 0,500, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then if ( teamalsoknownas(E, D), athleteledsportsteam(F, C) )
%   | then return -0.22951833805694763;  // std dev = 0,067, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.7511948943424241;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.24880510565757588;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(H, A) )
%   | then if ( athleteledsportsteam(I, H), athleteplayssport(J, B) )
%   | | then return 0.6328328629021166;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.28391430959117236;  // std dev = 0,798, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then if ( athleteplayssport(L, B) )
%   | | | then return 0.700770844491729;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.299229155508271;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.300770844491729;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( teamplaysagainstteam(C, E), teamplaysagainstteam(E, F) )
%   | then return 0.17084973564486594;  // std dev = 1,509, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, G) )
%   | then return -0.20524975472673412;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(H, A), teamalsoknownas(I, H) )
%   | | then if ( athleteplaysforteam(J, H) )
%   | | | then return -0.1414328222585526;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return 0.09294701078444804;  // std dev = 1,019, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.28114490643256024;  // std dev = 1,125, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.1145254989511238;  // std dev = 0,380, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else if ( teamplaysagainstteam(D, A), teamplaysinleague(D, E) )
%   | then return 0.16038871944484717;  // std dev = 0,404, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, G), teamplaysinleague(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11215788872311089;  // std dev = 1,499, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(D, A) )
%   then if ( teamalsoknownas(D, E) )
%   | then if ( teamplaysinleague(E, F), athleteplaysforteam(C, E) )
%   | | then return -0.2593905950395857;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(G, H) )
%   | then return 0.10312377913754464;  // std dev = 2,129, 29,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then return 0.026368673485614367;  // std dev = 1,408, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, E), teamplaysagainstteam(F, A) )
%   | then if ( teamalsoknownas(G, F), teamplaysagainstteam(H, F) )
%   | | then return -0.15691541337935905;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.38297432440347756;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return 0.3825188192234669;  // std dev = 0,000644, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( teamplaysagainstteam(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06203726789652342;  // std dev = 1,489, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D), teamplaysinleague(A, E) )
%   then return 0.02290600653471459;  // std dev = 1,752, 23,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   else if ( teamplaysagainstteam(D, F), athleteplaysforteam(G, D) )
%   | then return 0.15482415895473808;  // std dev = 1,121, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.04134390268272291;  // std dev = 2,092, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.672522
   AUC PR    = 0.004708
   CLL	      = -0.524994
   Precision = 0.005167 at threshold = 0.5
   Recall    = 0.669173
   F1        = 0.010255


Total learning time: 2.838 seconds
Total inference time: 120.628 seconds
AUC ROC: 0.672522


Results scoring model
   AUC ROC   = 0.931111
   AUC PR    = 0.928989
   CLL	      = -0.473692
   Precision = 0.833333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.909091


Total scoring time: 1.163 seconds
Parameter learned model CLL: -0.473692


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(D, C)', 'false,false,false': 'teamplaysagainstteam(G, A), athleteplaysforteam(H, G)', 'false,false': 'teamplaysagainstteam(F, A)', 'false': 'teamplaysagainstteam(A, E)'}, {'false,false,false,false': [1.732, 6, 6], 'true': [0.445, 8, 3], 'false,true': [0.373, 1, 5], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false': 'teamplaysagainstteam(E, A), teamalsoknownas(F, E)', 'false': 'teamplaysagainstteam(A, D)'}, {'false,false,false': [1.776, 6, 7], 'true': [0.479, 8, 8], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true,false': 'teamplaysagainstteam(E, C)', 'true': 'teamplaysagainstteam(A, D)', 'false,false': 'teamplaysagainstteam(A, G)', 'false': 'teamplaysagainstteam(A, F)'}, {'true,false,true': [0.555, 1, 1], 'false,false,false': [0.5, 6, 6], 'true,true': [1.902, 8, 8], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(D, C)', 'true': 'teamalsoknownas(E, D), athleteledsportsteam(F, C)', 'false,false': 'teamplaysinleague(A, K)', 'false': 'teamplaysagainstteam(H, A)', 'true,false': 'athleteplayssport(G, B)', 'false,true': 'athleteledsportsteam(I, H), athleteplayssport(J, B)', 'false,false,true': 'athleteplayssport(L, B)'}, {'true,false,true': [0.0, 0, 3], 'false,false,false': [1.095, 2, 3], 'false,false,true,true': [0.0, 0, 3], 'true,true': [0.067, 4, 0], 'false,true,false': [0.798, 1, 2], 'true,false,false': [0.0, 4, 0], 'false,true,true': [0.0, 0, 4], 'false,false,true,false': [0.0, 4, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), athleteplaysforteam(D, C)', 'false,false,false': 'teamplaysinleague(A, K)', 'true': 'teamplaysagainstteam(C, E), teamplaysagainstteam(E, F)', 'false,false': 'teamplaysagainstteam(H, A), teamalsoknownas(I, H)', 'false': 'teamplaysagainstteam(A, G)', 'false,false,true': 'athleteplaysforteam(J, H)'}, {'false,false,true,true': [0.0, 1, 0], 'true,true': [1.509, 7, 8], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,false': [1.125, 2, 4], 'false,false,false,true': [1.019, 4, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'teamplaysagainstteam(A, G), teamplaysinleague(G, H)', 'false,false': 'teamplaysagainstteam(A, F)', 'false': 'teamplaysagainstteam(D, A), teamplaysinleague(D, E)'}, {'false,false,false,false': [1.499, 6, 6], 'true': [0.38, 8, 8], 'false,true': [0.404, 1, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamalsoknownas(D, A)', 'true,true': 'teamplaysinleague(E, F), athleteplaysforteam(C, E)', 'true': 'teamalsoknownas(D, E)', 'false': 'teamplaysinleague(G, H)'}, {'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0], 'false,true': [2.129, 14, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false,false,false': 'teamplaysagainstteam(A, J)', 'true': 'athleteplaysforteam(C, D)', 'false,false': 'teamplaysagainstteam(I, A)', 'false': 'teamplaysinleague(A, E), teamplaysagainstteam(F, A)', 'false,true': 'teamalsoknownas(G, F), teamplaysagainstteam(H, F)'}, {'false,false,false,false': [1.489, 6, 6], 'true,true': [1.408, 8, 6], 'true,false': [0.0, 0, 0], 'false,false,true': [0.000644, 0, 2], 'false,true,false': [0.0, 0, 1], 'false,true,true': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D), teamplaysinleague(A, E)', 'false': 'teamplaysagainstteam(D, F), athleteplaysforteam(G, D)'}, {'false,true': [1.121, 2, 5], 'true': [1.752, 13, 10], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [2.092, 15, 15], 'false': [0.0, 0, 0]}]]
[{'': [0.1983471074380164, 0.23268698060941825], 'false,false,false': [nan, 0.25], 'false,false': [0.0, 0.25], 'false': [0.1388888888888887, 0.24852071005917156]}, {'': [0.22948029014635252, 0.24191608638095327], 'false,false': [0.0, 0.2427480002057415], 'false': [nan, 0.24191608638095327]}, {'': [0.21813131556140172, 0.25000000000000006], 'true,false': [0.15386773629359107, nan], 'true': [0.22616355240434638, 0.15386773629359107], 'false,false': [nan, 0.25000000000000006], 'false': [nan, 0.25000000000000006]}, {'': [0.19501350646530435, 0.22097627419807248], 'true': [0.0011159382134419416, 0.2448979591836735], 'false,false': [0.2448979591836735, 0.24000000000000005], 'false': [0.1208082700112014, 0.25000000000000006], 'true,false': [-7.401486830834377e-17, 0.0], 'false,true': [0.0, 0.21231787373398267], 'false,false,true': [-7.401486830834377e-17, 0.0]}, {'': [0.15176035596897447, 0.17575001330432385], 'false,false,false': [0.14820696077599957, 0.21102753288205778], 'true': [0.15176035596897447, nan], 'false,false': [0.0, 0.18600328880665287], 'false': [0.0, 0.17956193211593865], 'false,false,true': [0.0, nan]}, {'': [0.14425791188940207, 0.17248061491777072], 'false,false,false': [nan, 0.18730981567757718], 'false,false': [nan, 0.18730981567757718], 'false': [0.08151151347426747, 0.18730981567757718]}, {'': [0.0, 0.15624758456347274], 'true,true': [0.0, nan], 'true': [0.0, nan], 'false': [0.1562475845634727, nan]}, {'': [0.14162489980715348, 0.1586937484780393], 'false,false,false': [nan, 0.1847700020833811], 'true': [0.14162489980715348, nan], 'false,false': [2.0748496901146218e-07, 0.1847700020833811], 'false': [0.07287023224080502, 0.17095085894576195], 'false,true': [0.0, 0.0]}, {'': [0.1334062218694661, 0.1795197998681411], 'false': [0.1795197998681411, nan]}, {'': [0.14588498056419932, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamalsoknownas(D, C).;true;true
0;false,false;teamplaysagainstteam(F, A).;true;true
0;false;teamplaysagainstteam(A, E).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
1;false;teamplaysagainstteam(E, A), teamalsoknownas(F, E).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamalsoknownas(D, C).;true;true
3;true;teamalsoknownas(E, D), athleteledsportsteam(F, C).;true;true
3;true,false;athleteplayssport(G, B).;true;true
3;false;teamplaysagainstteam(H, A).;true;true
3;false,false;teamplaysinleague(A, K).;true;true
3;false,true;athleteledsportsteam(I, H), athleteplayssport(J, B).;true;true
3;false,false,true;athleteplayssport(L, B).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), athleteplaysforteam(D, C).;true;true
4;false,false;teamplaysagainstteam(H, A), teamalsoknownas(I, H).;true;true
4;false;teamplaysagainstteam(A, G).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamalsoknownas(D, A).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
7;false,false;teamplaysagainstteam(I, A).;true;true
7;false,true;teamalsoknownas(G, F), teamplaysagainstteam(H, F).;true;true
7;false;teamplaysinleague(A, E), teamplaysagainstteam(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.7397104467804846;  // std dev = 0,044, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.1407824752720671;  // std dev = 0,115, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5663006746194965;  // std dev = 0,068, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11897397660675396;  // std dev = 0,108, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then if ( teamalsoknownas(E, D), athleteledsportsteam(F, C) )
%   | then return -0.0999522373702765;  // std dev = 0,001, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.40995290790304995;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.09960622643476907;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(H, A) )
%   | then if ( athleteledsportsteam(I, H), athleteplayssport(J, B) )
%   | | then return 0.4507865074303151;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.22091484341914655;  // std dev = 0,520, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamplaysinleague(A, K) )
%   | | then if ( athleteplayssport(L, B) )
%   | | | then return 0.4148568439933695;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10099027017679879;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.20851799832530213;  // std dev = 0,565, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.3396471183290102;  // std dev = 0,071, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( athleteledsportsteam(F, A), athleteplaysforteam(F, A) )
%   | | then return -0.09100817720468987;  // std dev = 2,86e-05, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14099603175469932;  // std dev = 0,122, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then return -0.09102248920108359;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(H, A), teamalsoknownas(I, H) )
%   | | then return -0.0922705024178861;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(J, B) )
%   | | | then return 0.34500818241403725;  // std dev = 0,060, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.10197530271587833;  // std dev = 0,034, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.26991438971894627;  // std dev = 0,082, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( teamplaysagainstteam(D, A), teamalsoknownas(E, D) )
%   | then return -0.08295084571351989;  // std dev = 0,005, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( teamalsoknownas(A, F) )
%   | | then return -0.0930258102098982;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12380218548152466;  // std dev = 0,109, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(D, A) )
%   then return -0.07759232463348069;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.2202184712484026;  // std dev = 0,072, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( teamplaysagainstteam(F, A), teamalsoknownas(G, F) )
%   | | then return -0.07675009518166519;  // std dev = 0,005, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( teamplaysinleague(A, H), athleteplaysinleague(I, H) )
%   | | | then return -0.1167054183987458;  // std dev = 0,097, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08788915722836092;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.18279498102125644;  // std dev = 0,048, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( athleteledsportsteam(E, A) )
%   | | then return -0.07161602225347055;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10649070337330836;  // std dev = 0,088, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(A, F), teamplaysagainstteam(G, A) )
%   | then if ( teamalsoknownas(H, G), teamplaysagainstteam(I, G) )
%   | | then return -0.07322368103904991;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.18572064234026242;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(J, A) )
%   | | then return 0.19177005033447558;  // std dev = 0,009, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( athleteplayssport(K, B) )
%   | | | then return 0.18431350727155071;  // std dev = 0,038, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.077139866209213;  // std dev = 0,028, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15859471641016068;  // std dev = 0,056, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( teamplaysagainstteam(D, A), teamalsoknownas(E, D) )
%   | then return -0.06641866253377213;  // std dev = 0,005, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( teamalsoknownas(F, A) )
%   | | then return -0.07224000115258089;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09434459023056972;  // std dev = 0,081, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13858617469064288;  // std dev = 0,050, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06992667146070332;  // std dev = 0,023, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.990222
   AUC PR    = 0.120365
   CLL	      = -0.118666
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 4.048 seconds
Total inference time: 11.321 seconds
AUC ROC: 0.990222


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099631
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.942 seconds
Refined model CLL: -0.099631


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990222
   AUC PR    = 0.120365
   CLL	      = -0.118666
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 8.991 seconds
Total inference time: 11.321 seconds
AUC ROC: 0.990222
Total revision time: 8.991
Best scored revision CLL: -0.099631


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 04:43:08
{'AUC ROC': 0.990222, 'Recall': 0.992481, 'CLL': -0.118666, 'Precision': [0.121212, 0.5], 'Learning time': 8.991, 'F1': 0.216039, 'Inference time': 11.321, 'parameter_15': {'AUC ROC': 0.672522, 'Recall': 0.669173, 'CLL': -0.524994, 'Precision': [0.005167, 0.5], 'Learning time': 2.838, 'F1': 0.010255, 'Inference time': 120.628, 'AUC PR': 0.004708}, 'AUC PR': 0.120365}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.099512
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 2.759 seconds
Total inference time: 4.189 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN-B), Time: 04:43:15
{'AUC ROC': 0.987268, 'Recall': 0.992481, 'CLL': -0.099512, 'Precision': [0.121212, 0.5], 'Learning time': 2.759, 'F1': 0.216039, 'Inference time': 4.189, 'AUC PR': 0.120766}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.140377
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.089 seconds
Total inference time: 3.147 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN), Time: 04:43:19
{'AUC ROC': 0.987268, 'Recall': 0.0, 'CLL': -0.140377, 'Precision': [nan, 0.5], 'Learning time': 1.089, 'F1': nan, 'Inference time': 3.147, 'AUC PR': 0.120766}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
0;false,false,false;acquired(A, I), cityhascompanyoffice(J, I).;false;false
0;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
0;true,false;companyalsoknownas(A, A).;false;true
0;false;acquired(F, A), companyalsoknownas(F, G).;true;true
0;true,false,false;economicsectorcompany(B, C).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,true;economicsectorcompany(B, F).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyalsoknownas(C, D).;false;false
1;false,false;acquired(A, H), countryhascompanyoffice(I, H).;true;false
1;false;acquired(E, A).;true;true
1;false,true,false;cityhascompanyoffice(G, A), cityhascompanyoffice(G, E).;false;false
1;false,true;companyalsoknownas(A, F), economicsectorcompany(B, F).;false;true
1;false,false,true;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;false,false,false;companyalsoknownas(A, I).;false;false
2;true;economicsectorcompany(B, C).;false;true
2;true,false;acquired(D, A), economicsectorcompany(B, D).;false;true
2;false;acquired(F, A), economicsectorcompany(B, F).;false;true
2;true,false,false;acquired(C, E), economicsectorcompany(B, E).;false;false
2;false,false;acquired(G, A).;true;true
2;false,false,true;acquired(H, G), economicsectorcompany(B, H).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
4;false,false,false;companyceo(A, L).;false;false
4;true;economicsectorcompany(B, C).;false;true
4;true,false;companyalsoknownas(C, E), economicsectorcompany(B, E).;false;true
4;false;acquired(H, A), bankboughtbank(H, A).;false;true
4;true,false,false;acquired(F, C), acquired(G, F).;false;false
4;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
4;false,false,true;cityhascompanyoffice(K, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
5;false,false,false;acquired(A, L).;false;false
5;true;companyalsoknownas(C, D).;false;false
5;false,false;acquired(I, A), companyceo(I, J).;true;true
5;false;companyalsoknownas(A, E), economicsectorcompany(B, E).;true;true
5;false,true,false;acquired(H, A).;false;false
5;false,true;acquired(A, F), companyceo(F, G).;false;true
5;false,false,true;countryhascompanyoffice(K, A), countryhascompanyoffice(K, I).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), countryhascompanyoffice(D, A).;true;true
6;true,false,true;companyceo(F, G), cityhascompanyoffice(C, F).;false;false
6;false,false,false;companyalsoknownas(A, K), acquired(K, L).;false;false
6;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;true;false
6;false;companyalsoknownas(A, H), economicsectorcompany(B, H).;false;true
6;false,false;bankchiefexecutiveceo(A, I).;true;true
6;false,false,true;companyceo(J, I), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;false,false,false;acquired(K, A), economicsectorcompany(B, K).;false;false
7;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;false;false
7;false,false;companyalsoknownas(A, I).;true;true
7;false;companyceo(A, E), acquired(A, F).;true;true
7;false,true,false;countryhascompanyoffice(G, F), acquired(F, H).;false;false
7;false,true;economicsectorcompany(B, F).;false;true
7;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false,false,false;companyceo(A, L).;false;false
8;true;economicsectorcompany(B, C).;false;true
8;true,false;acquired(C, D), companyceo(A, E).;false;true
8;false;acquired(H, A), companyalsoknownas(H, I).;true;true
8;true,false,false;acquired(F, C), cityhascompanyoffice(G, C).;false;false
8;false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;true
8;false,true;economicsectorcompany(B, I).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
9;false,false,false;acquired(K, A).;false;false
9;true;economicsectorcompany(B, C).;false;true
9;true,false;acquired(D, C).;false;true
9;false;acquired(A, G), economicsectorcompany(B, G).;false;true
9;true,false,false;acquired(C, E), companyceo(E, F).;false;false
9;false,false;acquired(A, H).;true;true
9;false,false,true;acquired(H, I), cityhascompanyoffice(J, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then return 0.17064893509951234;  // std dev = 0,464, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysagainstteam(G, A), athleteplaysforteam(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.35814893509951234;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.3078590164100446;  // std dev = 0,481, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | | then return -0.16391927822007096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.3329018579283006;  // std dev = 2,039, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.2562023672761351;  // std dev = 2,243, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( teamplaysagainstteam(E, C) )
%   | | then return 0.2525144135192978;  // std dev = 0,559, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.25193315924128357;  // std dev = 0,500, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(C, D) )
%   then if ( teamalsoknownas(E, D) )
%   | then return -0.2562998881355753;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.7437001118644245;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.2854001653588926;  // std dev = 0,101, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamalsoknownas(A, G), teamplaysinleague(A, H) )
%   | then return -0.10409632036114165;  // std dev = 0,889, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( teamalsoknownas(I, A) )
%   | | then return 0.279264900529164;  // std dev = 1,058, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( teamplaysagainstteam(A, J) )
%   | | | then return 0.5549882614911342;  // std dev = 0,872, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.32703684442455777;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( teamplaysagainstteam(C, E), teamplaysagainstteam(E, F) )
%   | then return 0.15460337495463192;  // std dev = 1,762, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, G) )
%   | then return 0.127224749495355;  // std dev = 0,515, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysagainstteam(H, A), teamalsoknownas(I, H) )
%   | | then if ( athleteplaysforteam(J, H) )
%   | | | then return -0.16180589699998588;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return 0.06813189464728327;  // std dev = 1,516, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.33276671901774063;  // std dev = 1,172, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.11937480984226755;  // std dev = 0,387, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( teamplaysagainstteam(D, A), teamplaysinleague(D, E) )
%   | then return 0.14770195405753134;  // std dev = 0,408, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, G), teamplaysinleague(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11626593137563142;  // std dev = 1,933, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(D, A) )
%   then if ( teamalsoknownas(D, E) )
%   | then if ( teamplaysinleague(E, F), athleteplaysforteam(C, E) )
%   | | then return -0.2596840442749385;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(G, H) )
%   | then return 0.10171356438716689;  // std dev = 2,647, 39,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then return 0.04047110039174971;  // std dev = 1,714, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, E), teamplaysagainstteam(F, A) )
%   | then if ( teamalsoknownas(G, F), teamplaysagainstteam(H, F) )
%   | | then return -0.17404266799288565;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.39890416365330317;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return 0.3876338189572391;  // std dev = 0,016, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( teamplaysagainstteam(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06443102912800475;  // std dev = 1,931, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D), teamplaysinleague(A, E) )
%   then return 0.020559182372800373;  // std dev = 2,312, 32,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   else if ( teamplaysagainstteam(D, F), athleteplaysforteam(G, D) )
%   | then return 0.18864533011676993;  // std dev = 1,169, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.041517473316073916;  // std dev = 2,611, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.568208
   AUC PR    = 0.002767
   CLL	      = -0.634347
   Precision = 0.003443 at threshold = 0.5
   Recall    = 0.451128
   F1        = 0.006834


Total learning time: 2.921 seconds
Total inference time: 134.95 seconds
AUC ROC: 0.568208


Results scoring model
   AUC ROC   = 0.91125
   AUC PR    = 0.903903
   CLL	      = -0.526973
   Precision = 0.875 at threshold = 0.5
   Recall    = 0.7
   F1        = 0.777778


Total scoring time: 1.205 seconds
Parameter learned model CLL: -0.526973


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(D, C)', 'false,false,false': 'teamplaysagainstteam(G, A), athleteplaysforteam(H, G)', 'false,false': 'teamplaysagainstteam(F, A)', 'false': 'teamplaysagainstteam(A, E)'}, {'false,false,false,false': [2.0, 8, 8], 'true': [0.464, 11, 5], 'false,true': [0.35, 1, 6], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false': 'teamplaysagainstteam(E, A), teamalsoknownas(F, E)', 'false': 'teamplaysagainstteam(A, D)'}, {'false,false,false': [2.039, 8, 9], 'true': [0.481, 11, 11], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true,false': 'teamplaysagainstteam(E, C)', 'true': 'teamplaysagainstteam(A, D)', 'false,false': 'teamplaysagainstteam(A, G)', 'false': 'teamplaysagainstteam(A, F)'}, {'true,false,true': [0.559, 1, 1], 'false,false,false': [0.5, 8, 8], 'true,true': [2.243, 11, 11], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteledsportsteam(C, D)', 'false,false,false': 'teamplaysagainstteam(A, J)', 'true': 'teamalsoknownas(E, D)', 'false,false': 'teamalsoknownas(I, A)', 'false': 'teamalsoknownas(A, G), teamplaysinleague(A, H)', 'true,false': 'athleteplayssport(F, B)'}, {'true,false,true': [2.11e-08, 0, 3], 'false,false,false,false': [1.369, 3, 5], 'true,true': [0.0, 5, 0], 'false,false,true': [1.058, 2, 3], 'true,false,false': [0.101, 4, 0], 'false,true': [0.889, 5, 1], 'false,false,false,true': [0.872, 1, 8]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), athleteplaysforteam(D, C)', 'false,false,false': 'teamplaysinleague(A, K)', 'true': 'teamplaysagainstteam(C, E), teamplaysagainstteam(E, F)', 'false,false': 'teamplaysagainstteam(H, A), teamalsoknownas(I, H)', 'false': 'teamplaysagainstteam(A, G)', 'false,false,true': 'athleteplaysforteam(J, H)'}, {'false,false,true,true': [0.0, 1, 0], 'true,true': [1.762, 10, 10], 'true,false': [0.0, 0, 0], 'false,true': [0.515, 1, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,false': [1.172, 2, 5], 'false,false,false,true': [1.516, 6, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'teamplaysagainstteam(A, G), teamplaysinleague(G, H)', 'false,false': 'teamplaysagainstteam(A, F)', 'false': 'teamplaysagainstteam(D, A), teamplaysinleague(D, E)'}, {'false,false,false,false': [1.933, 8, 8], 'true': [0.387, 11, 11], 'false,true': [0.408, 1, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamalsoknownas(D, A)', 'true,true': 'teamplaysinleague(E, F), athleteplaysforteam(C, E)', 'true': 'teamalsoknownas(D, E)', 'false': 'teamplaysinleague(G, H)'}, {'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0], 'false,true': [2.647, 19, 20], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false,false,false': 'teamplaysagainstteam(A, J)', 'true': 'athleteplaysforteam(C, D)', 'false,false': 'teamplaysagainstteam(I, A)', 'false': 'teamplaysinleague(A, E), teamplaysagainstteam(F, A)', 'false,true': 'teamalsoknownas(G, F), teamplaysagainstteam(H, F)'}, {'false,false,false,false': [1.931, 8, 8], 'true,true': [1.714, 11, 9], 'true,false': [0.0, 0, 0], 'false,false,true': [0.016, 0, 2], 'false,true,false': [0.0, 0, 1], 'false,true,true': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D), teamplaysinleague(A, E)', 'false': 'teamplaysagainstteam(D, F), athleteplaysforteam(G, D)'}, {'false,true': [1.169, 2, 6], 'true': [2.312, 18, 14], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [2.611, 20, 20], 'false': [0.0, 0, 0]}]]
[{'': [0.2148437499999998, 0.23437499999999997], 'false,false,false': [nan, 0.24999999999999997], 'false,false': [0.0, 0.24999999999999997], 'false': [0.12244897959183662, 0.24913494809688577]}, {'': [0.2315483489943352, 0.24399421161529677], 'false,false': [0.0, 0.24463396555834058], 'false': [nan, 0.24399421161529677]}, {'': [0.22259469676824198, 0.2500000000000001], 'true,false': [0.15617248930216587, nan], 'true': [0.22863194584824864, 0.15617248930216587], 'false,false': [nan, 0.2500000000000001], 'false': [nan, 0.2500000000000001]}, {'': [0.19338505592379876, 0.21853542285404995], 'false,false,false': [0.08453176074085489, 0.234375], 'true': [0.0, 0.26081024412794107], 'false,false': [0.22385669059878488, 0.1679917387142642], 'false': [0.13183352537614562, 0.18567172678238925], 'true,false': [1.4802973661668753e-16, 0.0025404784034217393]}, {'': [0.15516241164320357, 0.21684388670588733], 'false,false,false': [0.22989283417134915, 0.19630050523099865], 'true': [0.15516241164320357, nan], 'false,false': [0.0, 0.23302336764875087], 'false': [0.1326348913148757, 0.22610405406388281], 'false,false,true': [0.0, nan]}, {'': [0.1497141964225206, 0.2169943298606688], 'false,false,false': [nan, 0.23358714821143264], 'false,false': [nan, 0.23358714821143264], 'false': [0.08337336214606286, 0.23358714821143264]}, {'': [0.0, 0.17972146416075185], 'true,true': [0.0, nan], 'true': [0.0, nan], 'false': [0.17972146416075183, nan]}, {'': [0.14689807803330132, 0.20390826130412992], 'false,false,false': [nan, 0.23298796103543648], 'true': [0.14689807803330132, nan], 'false,false': [0.00012702066956810087, 0.23298796103543648], 'false': [0.08206701797335154, 0.217431564535861], 'false,true': [0.0, 0.0]}, {'': [0.16701148456904338, 0.17089206216916056], 'false': [0.17089206216916056, nan]}, {'': [0.17037805879558185, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamalsoknownas(D, C).;true;true
0;false,false;teamplaysagainstteam(F, A).;true;true
0;false;teamplaysagainstteam(A, E).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
1;false;teamplaysagainstteam(E, A), teamalsoknownas(F, E).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteledsportsteam(C, D).;true;true
3;true;teamalsoknownas(E, D).;true;true
3;true,false;athleteplayssport(F, B).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), athleteplaysforteam(D, C).;true;true
4;false,false;teamplaysagainstteam(H, A), teamalsoknownas(I, H).;true;true
4;false;teamplaysagainstteam(A, G).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamalsoknownas(D, A).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
7;false,false;teamplaysagainstteam(I, A).;true;true
7;false,true;teamalsoknownas(G, F), teamplaysagainstteam(H, F).;true;true
7;false;teamplaysinleague(A, E), teamplaysagainstteam(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then if ( athleteplaysforteam(G, A), athleteplayssport(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.730774417186289;  // std dev = 0,080, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.13389249506441986;  // std dev = 0,089, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.561857015736549;  // std dev = 0,106, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11609978968220518;  // std dev = 0,082, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(C, D) )
%   then if ( teamalsoknownas(E, D) )
%   | then return -0.1004853540410375;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.4131931966700509;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.12003913828626345;  // std dev = 0,068, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(G, B) )
%   | then return 0.42434467340404775;  // std dev = 0,107, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.10111221757973722;  // std dev = 0,000980, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.3312838307357807;  // std dev = 0,095, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.0982696990756092;  // std dev = 0,067, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0.11183172016760853;  // std dev = 0,288, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysagainstteam(G, A), teamalsoknownas(H, G) )
%   | | then return -0.09241417902649735;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.3178166028942513;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.09241417902649735;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25983606368264783;  // std dev = 0,093, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08826934038028802;  // std dev = 0,065, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(D, A) )
%   then return -0.07735297207009503;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamplaysinleague(A, E), teamalsoknownas(A, F) )
%   | then if ( athleteplaysinleague(G, E), teamalsoknownas(F, H) )
%   | | then return -0.02428531140777063;  // std dev = 0,259, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.0164504038703911;  // std dev = 0,231, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( athleteplayssport(I, B) )
%   | | then return 0.2139148794668816;  // std dev = 0,081, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.08207514097885585;  // std dev = 0,058, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.17834174372459033;  // std dev = 0,040, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.0789721769639002;  // std dev = 0,056, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysinleague(A, E), teamplaysagainstteam(F, A) )
%   | then if ( teamalsoknownas(G, F), teamplaysagainstteam(H, F) )
%   | | then return -0.07659921429508824;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.22324997338827213;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return 0.19877944659090513;  // std dev = 0,035, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( teamplaysinleague(A, J) )
%   | | | then return 0.028365256081336936;  // std dev = 0,402, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.09200249727125982;  // std dev = 0,285, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1635898878543493;  // std dev = 0,075, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07498904001418828;  // std dev = 0,054, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.14245784067596676;  // std dev = 0,067, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06996012882568117;  // std dev = 0,050, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.989801
   AUC PR    = 0.115132
   CLL	      = -0.113403
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 3.71 seconds
Total inference time: 8.737 seconds
AUC ROC: 0.989801


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101304
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.88 seconds
Refined model CLL: -0.101304


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.989801
   AUC PR    = 0.115132
   CLL	      = -0.113403
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 8.716 seconds
Total inference time: 8.737 seconds
AUC ROC: 0.989801
Total revision time: 8.716
Best scored revision CLL: -0.101304


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 04:45:53
{'AUC ROC': 0.989801, 'Recall': 0.992481, 'CLL': -0.113403, 'Precision': [0.121212, 0.5], 'Learning time': 8.716, 'parameter_20': {'AUC ROC': 0.568208, 'Recall': 0.451128, 'CLL': -0.634347, 'Precision': [0.003443, 0.5], 'Learning time': 2.921, 'F1': 0.006834, 'Inference time': 134.95, 'AUC PR': 0.002767}, 'F1': 0.216039, 'Inference time': 8.737, 'AUC PR': 0.115132}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0641918400820262;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.099512
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 3.075 seconds
Total inference time: 4.15 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN-B), Time: 04:46:00
{'AUC ROC': 0.987268, 'Recall': 0.992481, 'CLL': -0.099512, 'Precision': [0.121212, 0.5], 'Learning time': 3.075, 'F1': 0.216039, 'Inference time': 4.15, 'AUC PR': 0.120766}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.140377
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.15 seconds
Total inference time: 3.101 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN), Time: 04:46:05
{'AUC ROC': 0.987268, 'Recall': 0.0, 'CLL': -0.140377, 'Precision': [nan, 0.5], 'Learning time': 1.15, 'F1': nan, 'Inference time': 3.101, 'AUC PR': 0.120766}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
0;false,false,false;acquired(A, I), cityhascompanyoffice(J, I).;false;false
0;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
0;true,false;companyalsoknownas(A, A).;false;true
0;false;acquired(F, A), companyalsoknownas(F, G).;true;true
0;true,false,false;economicsectorcompany(B, C).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,true;economicsectorcompany(B, F).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyalsoknownas(C, D).;false;false
1;false,false;acquired(A, H), countryhascompanyoffice(I, H).;true;false
1;false;acquired(E, A).;true;true
1;false,true,false;cityhascompanyoffice(G, A), cityhascompanyoffice(G, E).;false;false
1;false,true;companyalsoknownas(A, F), economicsectorcompany(B, F).;false;true
1;false,false,true;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;false,false,false;companyalsoknownas(A, I).;false;false
2;true;economicsectorcompany(B, C).;false;true
2;true,false;acquired(D, A), economicsectorcompany(B, D).;false;true
2;false;acquired(F, A), economicsectorcompany(B, F).;false;true
2;true,false,false;acquired(C, E), economicsectorcompany(B, E).;false;false
2;false,false;acquired(G, A).;true;true
2;false,false,true;acquired(H, G), economicsectorcompany(B, H).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
4;false,false,false;companyceo(A, L).;false;false
4;true;economicsectorcompany(B, C).;false;true
4;true,false;companyalsoknownas(C, E), economicsectorcompany(B, E).;false;true
4;false;acquired(H, A), bankboughtbank(H, A).;false;true
4;true,false,false;acquired(F, C), acquired(G, F).;false;false
4;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
4;false,false,true;cityhascompanyoffice(K, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
5;false,false,false;acquired(A, L).;false;false
5;true;companyalsoknownas(C, D).;false;false
5;false,false;acquired(I, A), companyceo(I, J).;true;true
5;false;companyalsoknownas(A, E), economicsectorcompany(B, E).;true;true
5;false,true,false;acquired(H, A).;false;false
5;false,true;acquired(A, F), companyceo(F, G).;false;true
5;false,false,true;countryhascompanyoffice(K, A), countryhascompanyoffice(K, I).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), countryhascompanyoffice(D, A).;true;true
6;true,false,true;companyceo(F, G), cityhascompanyoffice(C, F).;false;false
6;false,false,false;companyalsoknownas(A, K), acquired(K, L).;false;false
6;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;true;false
6;false;companyalsoknownas(A, H), economicsectorcompany(B, H).;false;true
6;false,false;bankchiefexecutiveceo(A, I).;true;true
6;false,false,true;companyceo(J, I), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;false,false,false;acquired(K, A), economicsectorcompany(B, K).;false;false
7;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;false;false
7;false,false;companyalsoknownas(A, I).;true;true
7;false;companyceo(A, E), acquired(A, F).;true;true
7;false,true,false;countryhascompanyoffice(G, F), acquired(F, H).;false;false
7;false,true;economicsectorcompany(B, F).;false;true
7;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false,false,false;companyceo(A, L).;false;false
8;true;economicsectorcompany(B, C).;false;true
8;true,false;acquired(C, D), companyceo(A, E).;false;true
8;false;acquired(H, A), companyalsoknownas(H, I).;true;true
8;true,false,false;acquired(F, C), cityhascompanyoffice(G, C).;false;false
8;false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;true
8;false,true;economicsectorcompany(B, I).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
9;false,false,false;acquired(K, A).;false;false
9;true;economicsectorcompany(B, C).;false;true
9;true,false;acquired(D, C).;false;true
9;false;acquired(A, G), economicsectorcompany(B, G).;false;true
9;true,false,false;acquired(C, E), companyceo(E, F).;false;false
9;false,false;acquired(A, H).;true;true
9;false,false,true;acquired(H, I), cityhascompanyoffice(J, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then return 0.221785298735876;  // std dev = 0,481, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0.6081489350995123;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysagainstteam(G, A), athleteplaysforteam(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3844647245731965;  // std dev = 2,176, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.32913536002796806;  // std dev = 0,492, 27,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | | then return -0.1710484724809805;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3503793280397671;  // std dev = 2,209, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.2737589035085514;  // std dev = 2,549, 27,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | else if ( teamplaysagainstteam(E, C) )
%   | | then return 0.04982057169927469;  // std dev = 0,686, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2699904094683606;  // std dev = 0,499, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(D, A), teamalsoknownas(E, D) )
%   | then return 0.6700250751746589;  // std dev = 0,046, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(F, A), teamalsoknownas(G, F) )
%   | | then if ( teamalsoknownas(F, G) )
%   | | | then return 0.7261787027398957;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7261787027398957;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0.6431257517047139;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.688939394177826;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | then if ( teamplaysagainstteam(K, A), teamalsoknownas(L, K) )
%   | | then if ( teamplaysagainstteam(A, K) )
%   | | | then return -0.27382129726010435;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.1545380784816976;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.3293860628114189;  // std dev = 0,050, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.311060605822174;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( teamplaysagainstteam(C, E), teamplaysagainstteam(E, F) )
%   | then return 0.16515794081821455;  // std dev = 1,920, 25,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, G) )
%   | then return 0.1318061644326104;  // std dev = 0,502, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysagainstteam(H, A), teamalsoknownas(I, H) )
%   | | then if ( athleteplaysforteam(J, H) )
%   | | | then return -0.13540619661116454;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.13540619661116454;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysinleague(A, K) )
%   | | | then return 0.10995270103269367;  // std dev = 1,391, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.2980503100731534;  // std dev = 0,916, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.12719088693971933;  // std dev = 0,377, 27,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   else if ( teamplaysagainstteam(D, A), teamplaysinleague(D, E) )
%   | then return 0.008503822068152134;  // std dev = 0,446, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, G), teamplaysinleague(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12205530969967092;  // std dev = 1,653, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(D, A) )
%   then if ( teamalsoknownas(D, E) )
%   | then if ( teamplaysinleague(E, F), athleteplaysforteam(C, E) )
%   | | then return 0.10583956970107428;  // std dev = 0,542, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(G, H) )
%   | then return 0.08900363866278092;  // std dev = 2,530, 48,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then return 0.05294945346822819;  // std dev = 1,878, 25,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, E), teamplaysagainstteam(F, A) )
%   | then if ( teamalsoknownas(G, F), teamplaysagainstteam(H, F) )
%   | | then return -0.13103032805770493;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3928086418614817;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return 0.38237098881046816;  // std dev = 0,015, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( teamplaysagainstteam(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07368590956117034;  // std dev = 1,635, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D), teamplaysinleague(A, E) )
%   then return 0.02980843114391198;  // std dev = 2,345, 42,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   else if ( teamplaysagainstteam(D, F), athleteplaysforteam(G, D) )
%   | then return 0.17388469585374938;  // std dev = 0,897, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.04104662980121196;  // std dev = 2,526, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.972744
   AUC PR    = 0.100703
   CLL	      = -0.457372
   Precision = 0.04935 at threshold = 0.5
   Recall    = 0.969925
   F1        = 0.093921


Total learning time: 11.718 seconds
Total inference time: 144.244 seconds
AUC ROC: 0.972744


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.437455
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.268 seconds
Parameter learned model CLL: -0.437455


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(D, C)', 'false,false,false': 'teamplaysagainstteam(G, A), athleteplaysforteam(H, G)', 'false,false': 'teamplaysagainstteam(F, A)', 'false': 'teamplaysagainstteam(A, E)'}, {'false,false,false,false': [2.176, 9, 10], 'true': [0.481, 14, 8], 'false,true': [0.433, 2, 6], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false': 'teamplaysagainstteam(E, A), teamalsoknownas(F, E)', 'false': 'teamplaysagainstteam(A, D)'}, {'false,false,false': [2.209, 9, 11], 'true': [0.492, 13, 14], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 3, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true,false': 'teamplaysagainstteam(E, C)', 'true': 'teamplaysagainstteam(A, D)', 'false,false': 'teamplaysagainstteam(A, G)', 'false': 'teamplaysagainstteam(A, F)'}, {'true,false,true': [0.686, 3, 1], 'false,false,false': [0.499, 9, 10], 'true,true': [2.549, 13, 14], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplayssport(C, B)', 'true,false,true': 'teamalsoknownas(F, G)', 'true': 'teamalsoknownas(D, A), teamalsoknownas(E, D)', 'true,false': 'teamplaysagainstteam(F, A), teamalsoknownas(G, F)', 'false': 'teamplaysinleague(A, I), athleteplaysinleague(J, I)', 'true,false,false': 'teamplaysagainstteam(A, H)', 'false,true,true': 'teamplaysagainstteam(A, K)', 'false,true': 'teamplaysagainstteam(K, A), teamalsoknownas(L, K)'}, {'true,false,true,false': [0.0, 0, 3], 'true,true': [0.046, 0, 3], 'false,false': [0.0, 6, 0], 'true,false,true,true': [0.0, 0, 5], 'false,true,false': [0.05, 5, 0], 'true,false,false,false': [2.98e-08, 0, 8], 'true,false,false,true': [0.0, 0, 6], 'false,true,true,true': [0.0, 11, 0], 'false,true,true,false': [0.0, 3, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), athleteplaysforteam(D, C)', 'false,false,false': 'teamplaysinleague(A, K)', 'true': 'teamplaysagainstteam(C, E), teamplaysagainstteam(E, F)', 'false,false': 'teamplaysagainstteam(H, A), teamalsoknownas(I, H)', 'false': 'teamplaysagainstteam(A, G)', 'false,false,true': 'athleteplaysforteam(J, H)'}, {'false,false,true,true': [0.0, 2, 0], 'true,true': [1.92, 12, 13], 'true,false': [0.0, 0, 0], 'false,true': [0.502, 1, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,false': [0.916, 2, 5], 'false,false,false,true': [1.391, 7, 6]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'teamplaysagainstteam(A, G), teamplaysinleague(G, H)', 'false,false': 'teamplaysagainstteam(A, F)', 'false': 'teamplaysagainstteam(D, A), teamplaysinleague(D, E)'}, {'false,false,false,false': [1.653, 9, 10], 'true': [0.377, 13, 14], 'false,true': [0.446, 3, 1], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamalsoknownas(D, A)', 'true,true': 'teamplaysinleague(E, F), athleteplaysforteam(C, E)', 'true': 'teamalsoknownas(D, E)', 'false': 'teamplaysinleague(G, H)'}, {'false,false': [0.0, 0, 0], 'true,true,true': [0.542, 1, 1], 'false,true': [2.53, 24, 24], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false,false,false': 'teamplaysagainstteam(A, J)', 'true': 'athleteplaysforteam(C, D)', 'false,false': 'teamplaysagainstteam(I, A)', 'false': 'teamplaysinleague(A, E), teamplaysagainstteam(F, A)', 'false,true': 'teamalsoknownas(G, F), teamplaysagainstteam(H, F)'}, {'false,false,false,false': [1.635, 9, 10], 'true,true': [1.878, 13, 12], 'true,false': [0.0, 0, 0], 'false,false,true': [0.015, 0, 2], 'false,true,false': [0.0, 0, 1], 'false,true,true': [0.0, 3, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D), teamplaysinleague(A, E)', 'false': 'teamplaysagainstteam(D, F), athleteplaysforteam(G, D)'}, {'false,true': [0.897, 2, 6], 'true': [2.345, 23, 19], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [2.526, 25, 25], 'false': [0.0, 0, 0]}]]
[{'': [0.23140495867768604, 0.23852040816326522], 'false,false,false': [nan, 0.2493074792243767], 'false,false': [0.0, 0.2493074792243767], 'false': [0.1874999999999999, 0.2474999999999996]}, {'': [0.2419671656006839, 0.2430222990830773], 'false,false': [-4.625929269271485e-18, 0.2440121285773774], 'false': [nan, 0.2430222990830773]}, {'': [0.23041022508881193, 0.24930747922437677], 'true,false': [0.11756535086674533, nan], 'true': [0.24065722598075448, 0.11756535086674533], 'false,false': [nan, 0.24930747922437677], 'false': [nan, 0.24930747922437677]}, {'': [0.0010744710207038822, 0.002725571269273459], 'true,false,true': [0.0, -7.401486830834377e-17], 'true': [0.0007155029267071159, 0.0010756070064676332], 'true,false': [0.0, 0.0005140138375479632], 'false': [0.0031739096242139387, 0.0], 'true,false,false': [-7.401486830834377e-17, 1.1102230246251565e-16], 'false,true,true': [-4.0371746350005693e-17, 0.0], 'false,true': [0.002395612486278176, 0.0005037335607970039]}, {'': [0.14748542256079328, 0.1375420984255889], 'false,false,false': [0.14874836435816213, 0.11994730317414846], 'true': [0.14748542256079328, nan], 'false,false': [0.0, 0.14671710458859014], 'false': [0.1257801040511315, 0.1385639610140931], 'false,false,true': [0.0, 0.0]}, {'': [0.14210385683035323, 0.1292573651804755], 'false,false,false': [nan, 0.1437453168861479], 'false,false': [nan, 0.1437453168861479], 'false': [0.049788078642736495, 0.1437453168861479]}, {'': [0.1469651481658156, 0.13336669024917508], 'true,true': [0.1469651481658156, nan], 'true': [0.1469651481658156, nan], 'false': [0.1333666902491749, nan]}, {'': [0.14105427999570458, 0.12351776928425927], 'false,false,false': [nan, 0.14072337290834716], 'true': [0.14105427999570458, nan], 'false,false': [0.00010894460121332883, 0.14072337290834716], 'false': [0.051451362451123965, 0.13554214882862806], 'false,true': [-2.3129646346357427e-18, 0.0]}, {'': [0.13097646269590182, 0.10067215804929842], 'false': [0.10067215804929842, nan]}, {'': [0.12763059041766145, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamalsoknownas(D, C).;true;true
0;false,false;teamplaysagainstteam(F, A).;true;true
0;false;teamplaysagainstteam(A, E).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
1;false;teamplaysagainstteam(E, A), teamalsoknownas(F, E).;true;true
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true,false,true;teamalsoknownas(F, G).;true;true
3;true;teamalsoknownas(D, A), teamalsoknownas(E, D).;true;true
3;true,false;teamplaysagainstteam(F, A), teamalsoknownas(G, F).;true;true
3;false;teamplaysinleague(A, I), athleteplaysinleague(J, I).;true;true
3;true,false,false;teamplaysagainstteam(A, H).;true;true
3;false,true,true;teamplaysagainstteam(A, K).;true;true
3;false,true;teamplaysagainstteam(K, A), teamalsoknownas(L, K).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), athleteplaysforteam(D, C).;true;true
4;false,false;teamplaysagainstteam(H, A), teamalsoknownas(I, H).;true;true
4;false;teamplaysagainstteam(A, G).;true;true
4;false,false,true;athleteplaysforteam(J, H).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
7;false,false;teamplaysagainstteam(I, A).;true;true
7;false,true;teamalsoknownas(G, F), teamplaysagainstteam(H, F).;true;true
7;false;teamplaysinleague(A, E), teamplaysagainstteam(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then if ( athleteplayssport(G, B), teamplaysinleague(A, H) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.19148226843284555;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.7275971321409967;  // std dev = 0,110, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.13180615702686221;  // std dev = 0,054, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5603886997106152;  // std dev = 0,150, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11499442835038132;  // std dev = 0,051, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(D, A), teamalsoknownas(E, D) )
%   | then return 0.4162926982793633;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(F, A), teamalsoknownas(G, F) )
%   | | then if ( teamalsoknownas(F, G) )
%   | | | then return 0.41432004277388634;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4143200427738864;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0.4418423480971092;  // std dev = 0,151, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.41629269827936344;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | then if ( teamplaysagainstteam(K, A), teamalsoknownas(L, K) )
%   | | then if ( teamplaysagainstteam(A, K) )
%   | | | then return -0.10077421360423164;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.10135215242719998;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11491116107914504;  // std dev = 0,037, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.10135215242719998;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( athleteplaysforteam(E, F), teamplaysagainstteam(A, F) )
%   | | then if ( athleteplaysforteam(G, A), athleteplayssport(G, B) )
%   | | | then return 0.31854753024274657;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.31260318699420975;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3669534142732895;  // std dev = 0,126, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteledsportsteam(H, A) )
%   | | then return -0.09200250090377261;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10718337083157523;  // std dev = 0,030, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(A, I) )
%   | then return 0.11030034304521856;  // std dev = 0,286, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysagainstteam(J, A), teamalsoknownas(K, J) )
%   | | then return -0.09248679124147763;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( athleteplayssport(L, B) )
%   | | | then return 0.31988426030449674;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.09210953220153344;  // std dev = 0,002, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( teamplaysagainstteam(A, E), athleteplaysforteam(F, E) )
%   | | then if ( athleteplaysinleague(C, D) )
%   | | | then return 0.2527918205605751;  // std dev = 0,005, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.24462018485028802;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteledsportsteam(C, G), teamplaysinleague(G, D) )
%   | | | then return 0.25460745749157276;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.26620650794501627;  // std dev = 0,028, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2755566549840305;  // std dev = 0,115, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( athleteplaysforteam(H, A) )
%   | then if ( athleteledsportsteam(I, A) )
%   | | then return -0.0845998835896706;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.0982254533295452;  // std dev = 0,028, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysagainstteam(J, A) )
%   | | then return -0.08501117952713803;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08469083251806832;  // std dev = 0,000495, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( teamplaysagainstteam(A, E), athleteplaysforteam(F, E) )
%   | | then if ( teamalsoknownas(G, E), athleteledsportsteam(F, E) )
%   | | | then return 0.2085869194249493;  // std dev = 0,002, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.20270474393791468;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( athleteledsportsteam(C, H), teamplaysinleague(H, D) )
%   | | | then return 0.20935867954163034;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.21758128567221965;  // std dev = 0,025, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2245629941383782;  // std dev = 0,102, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( athleteplaysforteam(I, A) )
%   | then if ( athleteledsportsteam(J, A) )
%   | | then return -0.07827430729785477;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08987551534862025;  // std dev = 0,026, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysagainstteam(K, A) )
%   | | then return -0.07862769126841791;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07835248868921757;  // std dev = 0,000461, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(D, E), teamplaysagainstteam(A, E) )
%   | | then return 0.17601215785152854;  // std dev = 0,000878, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.17996227514839466;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteledsportsteam(F, A) )
%   | | then return -0.07281017840733538;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08280068538396522;  // std dev = 0,024, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamplaysinleague(A, G), teamplaysagainstteam(H, A) )
%   | then if ( teamalsoknownas(I, H), teamplaysagainstteam(J, H) )
%   | | then return -0.07311689833738609;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.17421031207992954;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(K, A) )
%   | | then return 0.22141732542774112;  // std dev = 0,070, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( athleteplayssport(L, B) )
%   | | | then return 0.17415023437314522;  // std dev = 0,007, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.0728780661141541;  // std dev = 0,001, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then if ( teamplaysagainstteam(A, E), athleteplaysforteam(F, E) )
%   | | then return 0.15077702769718643;  // std dev = 0,002, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( athleteledsportsteam(D, G), teamplaysinleague(G, C) )
%   | | | then return 0.15286506631037744;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1579958600094613;  // std dev = 0,019, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(H, A), teamalsoknownas(I, H) )
%   | | then if ( teamplaysagainstteam(H, I) )
%   | | | then return -0.06750098731351796;  // std dev = 0,004, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.07202136280209508;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( athleteplaysinleague(J, C) )
%   | | | then return -0.0753991753470149;  // std dev = 0,022, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06839092086822647;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamalsoknownas(K, A), athleteplayssport(L, B) )
%   | then return 0.1462852917296854;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.0778876136836141;  // std dev = 0,275, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( teamplaysagainstteam(A, E), athleteplaysforteam(F, E) )
%   | | then return 0.13247046619744493;  // std dev = 0,002, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( athleteledsportsteam(C, G), teamplaysinleague(G, D) )
%   | | | then return 0.1341016482740115;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1381097649900083;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.14673818375167383;  // std dev = 0,077, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( teamplaysagainstteam(H, A), teamalsoknownas(I, H) )
%   | then if ( teamplaysagainstteam(H, I) )
%   | | then return -0.0633743008557633;  // std dev = 0,001, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.06735556142583997;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamalsoknownas(A, J), teamplaysinleague(A, K) )
%   | | then return -0.06334408173721634;  // std dev = 0,000999, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( teamplaysinleague(A, L), athleteplaysinleague(M, L) )
%   | | | then return -0.07523349795740626;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.06790536134456834;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.987996
   AUC PR    = 0.09559
   CLL	      = -0.108458
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 80.619 seconds
Total inference time: 43.837 seconds
AUC ROC: 0.987996


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096945
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.516 seconds
Refined model CLL: -0.096945


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987996
   AUC PR    = 0.09559
   CLL	      = -0.108458
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 95.12100000000001 seconds
Total inference time: 43.837 seconds
AUC ROC: 0.987996
Total revision time: 95.12100000000001
Best scored revision CLL: -0.096945


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 04:50:49
{'AUC ROC': 0.987996, 'Recall': 0.992481, 'CLL': -0.108458, 'Precision': [0.121212, 0.5], 'parameter_25': {'AUC ROC': 0.972744, 'Recall': 0.969925, 'CLL': -0.457372, 'Precision': [0.04935, 0.5], 'Learning time': 11.718, 'F1': 0.093921, 'Inference time': 144.244, 'AUC PR': 0.100703}, 'Learning time': 95.12100000000001, 'F1': 0.216039, 'Inference time': 43.837, 'AUC PR': 0.09559}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.099512
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 2.787 seconds
Total inference time: 4.291 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN-B), Time: 04:50:56
{'AUC ROC': 0.987268, 'Recall': 0.992481, 'CLL': -0.099512, 'Precision': [0.121212, 0.5], 'Learning time': 2.787, 'F1': 0.216039, 'Inference time': 4.291, 'AUC PR': 0.120766}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.140377
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.153 seconds
Total inference time: 3.281 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN), Time: 04:51:01
{'AUC ROC': 0.987268, 'Recall': 0.0, 'CLL': -0.140377, 'Precision': [nan, 0.5], 'Learning time': 1.153, 'F1': nan, 'Inference time': 3.281, 'AUC PR': 0.120766}


Starting fold 2

Target train facts examples: 9690
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9690
Target test pos	 examples: 133
Target test neg examples: 53331

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
0;false,false,false;acquired(A, I), cityhascompanyoffice(J, I).;false;false
0;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
0;true,false;companyalsoknownas(A, A).;false;true
0;false;acquired(F, A), companyalsoknownas(F, G).;true;true
0;true,false,false;economicsectorcompany(B, C).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,true;economicsectorcompany(B, F).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyalsoknownas(C, D).;false;false
1;false,false;acquired(A, H), countryhascompanyoffice(I, H).;true;false
1;false;acquired(E, A).;true;true
1;false,true,false;cityhascompanyoffice(G, A), cityhascompanyoffice(G, E).;false;false
1;false,true;companyalsoknownas(A, F), economicsectorcompany(B, F).;false;true
1;false,false,true;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;false,false,false;companyalsoknownas(A, I).;false;false
2;true;economicsectorcompany(B, C).;false;true
2;true,false;acquired(D, A), economicsectorcompany(B, D).;false;true
2;false;acquired(F, A), economicsectorcompany(B, F).;false;true
2;true,false,false;acquired(C, E), economicsectorcompany(B, E).;false;false
2;false,false;acquired(G, A).;true;true
2;false,false,true;acquired(H, G), economicsectorcompany(B, H).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
4;false,false,false;companyceo(A, L).;false;false
4;true;economicsectorcompany(B, C).;false;true
4;true,false;companyalsoknownas(C, E), economicsectorcompany(B, E).;false;true
4;false;acquired(H, A), bankboughtbank(H, A).;false;true
4;true,false,false;acquired(F, C), acquired(G, F).;false;false
4;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
4;false,false,true;cityhascompanyoffice(K, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
5;false,false,false;acquired(A, L).;false;false
5;true;companyalsoknownas(C, D).;false;false
5;false,false;acquired(I, A), companyceo(I, J).;true;true
5;false;companyalsoknownas(A, E), economicsectorcompany(B, E).;true;true
5;false,true,false;acquired(H, A).;false;false
5;false,true;acquired(A, F), companyceo(F, G).;false;true
5;false,false,true;countryhascompanyoffice(K, A), countryhascompanyoffice(K, I).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), countryhascompanyoffice(D, A).;true;true
6;true,false,true;companyceo(F, G), cityhascompanyoffice(C, F).;false;false
6;false,false,false;companyalsoknownas(A, K), acquired(K, L).;false;false
6;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;true;false
6;false;companyalsoknownas(A, H), economicsectorcompany(B, H).;false;true
6;false,false;bankchiefexecutiveceo(A, I).;true;true
6;false,false,true;companyceo(J, I), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;false,false,false;acquired(K, A), economicsectorcompany(B, K).;false;false
7;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;false;false
7;false,false;companyalsoknownas(A, I).;true;true
7;false;companyceo(A, E), acquired(A, F).;true;true
7;false,true,false;countryhascompanyoffice(G, F), acquired(F, H).;false;false
7;false,true;economicsectorcompany(B, F).;false;true
7;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false,false,false;companyceo(A, L).;false;false
8;true;economicsectorcompany(B, C).;false;true
8;true,false;acquired(C, D), companyceo(A, E).;false;true
8;false;acquired(H, A), companyalsoknownas(H, I).;true;true
8;true,false,false;acquired(F, C), cityhascompanyoffice(G, C).;false;false
8;false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;true
8;false,true;economicsectorcompany(B, I).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
9;false,false,false;acquired(K, A).;false;false
9;true;economicsectorcompany(B, C).;false;true
9;true,false;acquired(D, C).;false;true
9;false;acquired(A, G), economicsectorcompany(B, G).;false;true
9;true,false,false;acquired(C, E), companyceo(E, F).;false;false
9;false,false;acquired(A, H).;true;true
9;false,false,true;acquired(H, I), cityhascompanyoffice(J, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.19148226843284552;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysagainstteam(F, A), teamalsoknownas(F, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, I), athleteplaysforteam(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(C, D) )
%   | then return 0.10388042635157851;  // std dev = 0,843, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.14611957364842149;  // std dev = 0,029, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, F), teamplaysinleague(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.017368743451494806;  // std dev = 0,879, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, G) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then return -0.15435179578012695;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B), teamplaysinleague(A, F) )
%   | then return 0.5502317043233621;  // std dev = 0,325, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.14334494736253842;  // std dev = 0,549, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( teamalsoknownas(C, E) )
%   | then return 0.14479940701468885;  // std dev = 0,703, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(F, C), teamplaysagainstteam(G, F) )
%   | | then return -0.14794354662110668;  // std dev = 0,030, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(H, A) )
%   | then return -0.12185780615170279;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(A, I), teamplaysinleague(I, J) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3378145467368603;  // std dev = 0,091, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(C, D) )
%   | then return 0.06444609953581332;  // std dev = 0,722, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.130303298488849;  // std dev = 0,027, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamalsoknownas(A, E) )
%   | then if ( teamplaysagainstteam(A, F), athleteledsportsteam(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.22775435491187423;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(I, A), athleteledsportsteam(J, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2805896035920383;  // std dev = 0,065, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamalsoknownas(A, E) )
%   | then return -0.12266710239175513;  // std dev = 0,033, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysinleague(F, D) )
%   | | then if ( athleteledsportsteam(G, F), athleteplaysforteam(C, F) )
%   | | | then return -0.1927289246131647;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, H) )
%   | then return 0.03717076321723198;  // std dev = 0,216, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( athleteledsportsteam(I, J) )
%   | | then return 0.2449334559793049;  // std dev = 0,576, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then return -0.12824953556067528;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(E, A), teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, G) )
%   | | then if ( teamplaysagainstteam(A, H) )
%   | | | then return -0.11970837854532448;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.18452886072907004;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return 0.2271066409342746;  // std dev = 0,553, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.187870024425132;  // std dev = 0,048, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(C, D), athleteledsportsteam(E, A) )
%   | then return -0.09821937208667594;  // std dev = 0,027, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysagainstteam(F, C), athleteplaysforteam(G, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.025351124096219035;  // std dev = 0,188, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamplaysagainstteam(H, A), teamalsoknownas(H, I) )
%   | then return 0.2079834120600161;  // std dev = 0,356, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysagainstteam(J, A), athleteplaysforteam(K, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(L, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.071293308888833;  // std dev = 0,314, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return -0.08988889545201943;  // std dev = 0,025, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysagainstteam(C, E), athleteledsportsteam(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.02244643536738731;  // std dev = 0,187, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then return 0.04227729670563126;  // std dev = 0,576, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15163087123658334;  // std dev = 0,040, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 0.559582
   AUC PR    = 0.027049
   CLL	      = -0.817084
   Precision = 0.002632 at threshold = 0.5
   Recall    = 0.398496
   F1        = 0.00523


Total learning time: 1.553 seconds
Total inference time: 13.15 seconds
AUC ROC: 0.559582


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.202776
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.823 seconds
Parameter learned model CLL: -0.202776


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamplaysinleague(C, D)', 'false,false,false': 'teamplaysagainstteam(A, I), athleteplaysforteam(J, I)', 'true': 'teamalsoknownas(A, E)', 'false,false': 'teamplaysagainstteam(A, H)', 'false': 'teamplaysagainstteam(F, A), teamalsoknownas(F, G)', 'true,false': 'teamalsoknownas(A, A)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 4], 'true,true': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.471, 2, 1], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamalsoknownas(C, D)', 'false,false': 'teamplaysagainstteam(A, F), teamplaysinleague(F, G)', 'false': 'teamplaysagainstteam(E, A)'}, {'false,false,false': [0.0, 0, 4], 'true,false': [0.029, 2, 0], 'true,true': [0.843, 3, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'teamalsoknownas(A, G)', 'true': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(F, A)', 'false': 'teamplaysagainstteam(E, A)'}, {'false,false,false,false': [1.05e-08, 0, 3], 'true,true': [0.879, 5, 1], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(C, D)', 'false': 'athleteplayssport(E, B), teamplaysinleague(A, F)'}, {'false,true': [0.325, 0, 3], 'true': [0.037, 3, 0], 'false,false': [0.549, 2, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteplaysforteam(D, C)', 'false,false,false': 'athleteledsportsteam(K, A)', 'true': 'teamalsoknownas(C, E)', 'false,false': 'teamplaysagainstteam(A, I), teamplaysinleague(I, J)', 'false': 'teamplaysagainstteam(H, A)', 'true,false': 'teamplaysagainstteam(F, C), teamplaysagainstteam(G, F)'}, {'true,false,true': [0.03, 2, 0], 'false,false,false,false': [0.091, 0, 4], 'true,true': [0.703, 2, 1], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false,false': 'teamplaysagainstteam(A, K)', 'true': 'teamalsoknownas(C, D)', 'false,false': 'teamplaysagainstteam(I, A), athleteledsportsteam(J, I)', 'false': 'teamalsoknownas(A, E)', 'false,true,false': 'teamplaysagainstteam(H, A)', 'false,true': 'teamplaysagainstteam(A, F), athleteledsportsteam(G, F)'}, {'false,false,false,false': [0.065, 0, 3], 'true,true': [0.722, 3, 1], 'true,false': [0.027, 2, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamplaysinleague(A, D)', 'true,false,true': 'athleteledsportsteam(G, F), athleteplaysforteam(C, F)', 'true': 'teamalsoknownas(A, E)', 'true,false': 'teamplaysinleague(F, D)', 'false': 'teamalsoknownas(A, H)', 'false,false': 'athleteledsportsteam(I, J)'}, {'false,false,false': [0.0, 0, 0], 'true,true': [0.033, 2, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false,true': [0.216, 1, 1], 'false,false,true': [0.576, 1, 4]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false,false,false': 'teamplaysagainstteam(I, A)', 'true': 'athleteplaysforteam(C, D)', 'false,false': 'teamalsoknownas(A, G)', 'false': 'athleteledsportsteam(E, A), teamplaysagainstteam(A, F)', 'false,false,true': 'teamplaysagainstteam(A, H)'}, {'false,false,true,true': [0.0, 1, 0], 'true,true': [0.054, 3, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,false': [0.048, 0, 3], 'false,false,false,true': [0.553, 1, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false,false,false': 'athleteledsportsteam(L, A)', 'true': 'teamplaysagainstteam(C, D), athleteledsportsteam(E, A)', 'false,false': 'teamplaysagainstteam(J, A), athleteplaysforteam(K, A)', 'false': 'teamplaysagainstteam(H, A), teamalsoknownas(H, I)', 'true,false': 'teamplaysagainstteam(F, C), athleteplaysforteam(G, C)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.314, 1, 3], 'true,true': [0.027, 2, 0], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.188, 1, 1], 'false,true': [0.356, 1, 1], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false,false,false': 'teamplaysagainstteam(I, A)', 'true': 'teamplaysagainstteam(D, C)', 'false,false': 'teamplaysagainstteam(A, H)', 'false': 'teamplaysagainstteam(A, G)', 'true,false': 'teamplaysagainstteam(C, E), athleteledsportsteam(F, E)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.04, 0, 3], 'true,true': [0.025, 2, 0], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.187, 1, 1], 'false,true': [0.576, 2, 1], 'false,false,false,true': [0.0, 0, 0]}]]
[{'': [0.13888888888888892, 0.0], 'false,false,false': [nan, 0.0], 'true': [0.0, 0.22222222222222224], 'false,false': [nan, 0.0], 'false': [nan, 0.0], 'true,false': [nan, 0.22222222222222224]}, {'': [0.13242469679109634, 0.0], 'true': [0.17758998538220241, 0.00042745294221745167], 'false,false': [nan, 0.0], 'false': [nan, 0.0]}, {'': [0.12872973696726303, 0.0], 'false,false,false': [0.0, 3.700743415417188e-17], 'true': [0.12872973696726303, nan], 'false,false': [nan, 0.0], 'false': [nan, 0.0]}, {'': [0.00044940798183456626, 0.09869710069577071], 'false': [0.035228198840290346, 0.07534584866305391]}, {'': [0.11964523751798169, 0.03544972679205581], 'false,false,false': [nan, 0.0020524240880482186], 'true': [0.16483845307563846, 0.0004363520394507943], 'false,false': [nan, 0.0020524240880482186], 'false': [0.0, 0.0020524240880482186], 'true,false': [0.0004363520394507943, nan]}, {'': [0.09549355124502139, 0.0015702544704908061], 'false,false,false': [nan, 0.0013957817515473925], 'true': [0.13042167842537275, 0.0003524115303397725], 'false,false': [nan, 0.0013957817515473925], 'false': [0.0, 0.0013957817515473925], 'false,true,false': [nan, 0.0], 'false,true': [nan, 0.0]}, {'': [0.0014561579236023424, 0.06284638987495363], 'true,false,true': [0.0, nan], 'true': [0.000548017241075378, 0.0], 'true,false': [0.0, nan], 'false': [0.023414259447865352, 0.06628628875900389], 'false,false': [0.06628628875900389, nan]}, {'': [0.0009597760110002634, 0.056937035210863976], 'false,false,false': [0.15312809964560276, 0.0007757141823000885], 'true': [0.0009597760110002634, nan], 'false,false': [0.023140074440326296, 0.06208615126564167], 'false': [nan, 0.056937035210863976], 'false,false,true': [0.0, 0.0]}, {'': [0.012848226634421723, 0.06269677463952164], 'false,false,false': [nan, 0.024588519318249638], 'true': [0.0003705267199663742, 0.017691092785433644], 'false,false': [nan, 0.024588519318249638], 'false': [0.12645716241209984, 0.024588519318249638], 'true,false': [nan, 0.017691092785433644]}, {'': [0.01209921819414644, 0.058502000017004736], 'false,false,false': [nan, 0.0005454030855794693], 'true': [0.000315897247608634, 0.01757292586553147], 'false,false': [nan, 0.0005454030855794693], 'false': [0.11047949481708176, 0.0005454030855794693], 'true,false': [nan, 0.01757292586553147]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamplaysinleague(C, D).;true;true
0;true;teamalsoknownas(A, E).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
1;true;teamalsoknownas(C, D).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
2;false;teamalsoknownas(A, G).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(C, D).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), athleteplaysforteam(D, C).;true;true
4;true;teamalsoknownas(C, E).;true;true
4;false;teamplaysagainstteam(H, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
5;true;teamalsoknownas(C, D).;true;true
5;false;teamalsoknownas(A, E).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamplaysinleague(A, D).;true;true
6;true;teamalsoknownas(A, E).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
7;false,false;teamplaysagainstteam(I, A).;true;true
7;false,true;teamplaysagainstteam(A, H).;true;true
7;false;teamalsoknownas(A, G).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
8;true;teamplaysagainstteam(C, D), athleteledsportsteam(E, A).;true;true
9;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
9;true;teamplaysagainstteam(D, C).;true;true
9;false;teamplaysagainstteam(A, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(C, D) )
%   | then return 0.10388042635157851;  // std dev = 0,843, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.14611957364842149;  // std dev = 0,029, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.017368743451494806;  // std dev = 0,879, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( teamalsoknownas(A, D) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, D) )
%   then return -0.15435179578012695;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B), teamplaysinleague(A, F) )
%   | then return 0.5502317043233621;  // std dev = 0,325, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.14334494736253842;  // std dev = 0,549, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( teamalsoknownas(C, E) )
%   | then return 0.14479940701468885;  // std dev = 0,703, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.14794354662110668;  // std dev = 0,030, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamplaysagainstteam(F, A) )
%   | then return -0.12185780615170279;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.3378145467368603;  // std dev = 0,091, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(C, D) )
%   | then return 0.06444609953581332;  // std dev = 0,722, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.130303298488849;  // std dev = 0,027, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0.22775435491187423;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2805896035920383;  // std dev = 0,065, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamalsoknownas(A, E) )
%   | then return -0.12266710239175513;  // std dev = 0,033, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1927289246131647;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(F, B), teamplaysinleague(A, G) )
%   | then return 0.34889723414747603;  // std dev = 0,399, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.06307927597214015;  // std dev = 0,375, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then return -0.12824953556067528;  // std dev = 0,054, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamalsoknownas(A, D) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then return -0.12246558507354117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.14213290400066647;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0.2264291746876533;  // std dev = 0,519, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.2046466417386399;  // std dev = 0,084, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(C, D), athleteledsportsteam(E, A) )
%   | then return -0.09821937208667594;  // std dev = 0,027, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.007883292135974794;  // std dev = 0,167, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else return 0.12353508564963256;  // std dev = 0,587, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return -0.08988889545201943;  // std dev = 0,025, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.007064708562465667;  // std dev = 0,167, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0.05159193311182871;  // std dev = 0,558, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.15690844857344857;  // std dev = 0,068, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 0.581948
   AUC PR    = 0.036707
   CLL	      = -0.802891
   Precision = 0.002807 at threshold = 0.5
   Recall    = 0.451128
   F1        = 0.005579


Total learning time: 1.332 seconds
Total inference time: 6.624 seconds
AUC ROC: 0.581948


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.195814
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.803 seconds
Refined model CLL: -0.195814


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.581948
   AUC PR    = 0.036707
   CLL	      = -0.802891
   Precision = 0.002807 at threshold = 0.5
   Recall    = 0.451128
   F1        = 0.005579


Total learning time: 4.511 seconds
Total inference time: 6.624 seconds
AUC ROC: 0.581948
Total revision time: 4.511
Best scored revision CLL: -0.195814


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 04:51:26
{'AUC ROC': 0.581948, 'parameter_5': {'AUC ROC': 0.559582, 'Recall': 0.398496, 'CLL': -0.817084, 'Precision': [0.002632, 0.5], 'Learning time': 1.553, 'F1': 0.00523, 'Inference time': 13.15, 'AUC PR': 0.027049}, 'Recall': 0.451128, 'CLL': -0.802891, 'Precision': [0.002807, 0.5], 'Learning time': 4.511, 'F1': 0.005579, 'Inference time': 6.624, 'AUC PR': 0.036707}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.991262
   AUC PR    = 0.124883
   CLL	      = -0.098497
   Precision = 0.124883 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.222037


Total learning time: 2.034 seconds
Total inference time: 4.484 seconds
AUC ROC: 0.991262


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN-B), Time: 04:51:33
{'AUC ROC': 0.991262, 'Recall': 1.0, 'CLL': -0.098497, 'Precision': [0.124883, 0.5], 'Learning time': 2.034, 'F1': 0.222037, 'Inference time': 4.484, 'AUC PR': 0.124883}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.991262
   AUC PR    = 0.124883
   CLL	      = -0.140271
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.992 seconds
Total inference time: 2.832 seconds
AUC ROC: 0.991262


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN), Time: 04:51:37
{'AUC ROC': 0.991262, 'Recall': 0.0, 'CLL': -0.140271, 'Precision': [nan, 0.5], 'Learning time': 0.992, 'F1': nan, 'Inference time': 2.832, 'AUC PR': 0.124883}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
0;false,false,false;acquired(A, I), cityhascompanyoffice(J, I).;false;false
0;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
0;true,false;companyalsoknownas(A, A).;false;true
0;false;acquired(F, A), companyalsoknownas(F, G).;true;true
0;true,false,false;economicsectorcompany(B, C).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,true;economicsectorcompany(B, F).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyalsoknownas(C, D).;false;false
1;false,false;acquired(A, H), countryhascompanyoffice(I, H).;true;false
1;false;acquired(E, A).;true;true
1;false,true,false;cityhascompanyoffice(G, A), cityhascompanyoffice(G, E).;false;false
1;false,true;companyalsoknownas(A, F), economicsectorcompany(B, F).;false;true
1;false,false,true;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;false,false,false;companyalsoknownas(A, I).;false;false
2;true;economicsectorcompany(B, C).;false;true
2;true,false;acquired(D, A), economicsectorcompany(B, D).;false;true
2;false;acquired(F, A), economicsectorcompany(B, F).;false;true
2;true,false,false;acquired(C, E), economicsectorcompany(B, E).;false;false
2;false,false;acquired(G, A).;true;true
2;false,false,true;acquired(H, G), economicsectorcompany(B, H).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
4;false,false,false;companyceo(A, L).;false;false
4;true;economicsectorcompany(B, C).;false;true
4;true,false;companyalsoknownas(C, E), economicsectorcompany(B, E).;false;true
4;false;acquired(H, A), bankboughtbank(H, A).;false;true
4;true,false,false;acquired(F, C), acquired(G, F).;false;false
4;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
4;false,false,true;cityhascompanyoffice(K, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
5;false,false,false;acquired(A, L).;false;false
5;true;companyalsoknownas(C, D).;false;false
5;false,false;acquired(I, A), companyceo(I, J).;true;true
5;false;companyalsoknownas(A, E), economicsectorcompany(B, E).;true;true
5;false,true,false;acquired(H, A).;false;false
5;false,true;acquired(A, F), companyceo(F, G).;false;true
5;false,false,true;countryhascompanyoffice(K, A), countryhascompanyoffice(K, I).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), countryhascompanyoffice(D, A).;true;true
6;true,false,true;companyceo(F, G), cityhascompanyoffice(C, F).;false;false
6;false,false,false;companyalsoknownas(A, K), acquired(K, L).;false;false
6;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;true;false
6;false;companyalsoknownas(A, H), economicsectorcompany(B, H).;false;true
6;false,false;bankchiefexecutiveceo(A, I).;true;true
6;false,false,true;companyceo(J, I), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;false,false,false;acquired(K, A), economicsectorcompany(B, K).;false;false
7;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;false;false
7;false,false;companyalsoknownas(A, I).;true;true
7;false;companyceo(A, E), acquired(A, F).;true;true
7;false,true,false;countryhascompanyoffice(G, F), acquired(F, H).;false;false
7;false,true;economicsectorcompany(B, F).;false;true
7;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false,false,false;companyceo(A, L).;false;false
8;true;economicsectorcompany(B, C).;false;true
8;true,false;acquired(C, D), companyceo(A, E).;false;true
8;false;acquired(H, A), companyalsoknownas(H, I).;true;true
8;true,false,false;acquired(F, C), cityhascompanyoffice(G, C).;false;false
8;false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;true
8;false,true;economicsectorcompany(B, I).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
9;false,false,false;acquired(K, A).;false;false
9;true;economicsectorcompany(B, C).;false;true
9;true,false;acquired(D, C).;false;true
9;false;acquired(A, G), economicsectorcompany(B, G).;false;true
9;true,false,false;acquired(C, E), companyceo(E, F).;false;false
9;false,false;acquired(A, H).;true;true
9;false,false,true;acquired(H, I), cityhascompanyoffice(J, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E) )
%   | then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( teamalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.0581489350995122;  // std dev = 0,400, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( teamplaysagainstteam(F, A), teamalsoknownas(F, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, I), athleteplaysforteam(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.7470378239884012;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(C, D) )
%   | then return 0.13902442394908845;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return 0.03067796250850944;  // std dev = 0,795, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, F), teamplaysinleague(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.6163433124639606;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.021980009140989153;  // std dev = 1,271, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.7354172976913823;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, G) )
%   | | | then return 0.35745307937115234;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6074530793711523;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.744848076332849;  // std dev = 0,213, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.4841319138466895;  // std dev = 0,082, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( teamplaysagainstteam(E, A), athleteledsportsteam(F, E) )
%   | then return -0.16176334958873403;  // std dev = 0,021, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.2673699861690338;  // std dev = 0,261, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( teamalsoknownas(C, E) )
%   | then return 0.1357759101597533;  // std dev = 0,979, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( teamplaysagainstteam(F, C), teamplaysagainstteam(G, F) )
%   | | then return -0.003022404018782454;  // std dev = 0,451, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(H, A) )
%   | then return -0.12802521358254443;  // std dev = 0,006, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysagainstteam(A, I), teamplaysinleague(I, J) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.26920272070555384;  // std dev = 0,735, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(C, D) )
%   | then return 0.08095416913686646;  // std dev = 0,990, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else return -0.024186053042347545;  // std dev = 0,461, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( teamalsoknownas(A, E) )
%   | then if ( teamplaysagainstteam(A, F), athleteledsportsteam(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13300390443458238;  // std dev = 0,709, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( teamplaysagainstteam(I, A), athleteledsportsteam(J, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.28410922434335995;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamalsoknownas(A, E) )
%   | then return -0.15877725672979856;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(F, D) )
%   | | then if ( athleteledsportsteam(G, F), athleteplaysforteam(C, F) )
%   | | | then return -0.17859730524284098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.107672263488456;  // std dev = 0,405, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, H) )
%   | then return 0.11620662405903552;  // std dev = 0,959, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( athleteledsportsteam(I, J) )
%   | | then return 0.18988984372400372;  // std dev = 0,641, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then return -0.07493439336771905;  // std dev = 0,483, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(E, A), teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, G) )
%   | | then if ( teamplaysagainstteam(A, H) )
%   | | | then return 0.11606722893413206;  // std dev = 0,631, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.07748639284947892;  // std dev = 0,716, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return 0.2248612300543056;  // std dev = 0,539, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.19810699607527116;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(C, D), athleteledsportsteam(E, A) )
%   | then return -0.13006956231592423;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(F, C), athleteplaysforteam(G, C) )
%   | | then return 0.6035617243158145;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.01130789523253374;  // std dev = 0,762, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( teamplaysagainstteam(H, A), teamalsoknownas(H, I) )
%   | then return 0.07437515904096441;  // std dev = 0,337, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(J, A), athleteplaysforteam(K, A) )
%   | | then return 0.13314996099152132;  // std dev = 0,358, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( athleteledsportsteam(L, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09721316391320589;  // std dev = 0,319, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return 0.02651803840848941;  // std dev = 0,495, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysagainstteam(C, E), athleteledsportsteam(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.009235041057047288;  // std dev = 0,762, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then return -0.030806671391666686;  // std dev = 0,632, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return 0.3551080819345005;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15531767445409483;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */


Results
   AUC ROC   = 0.723691
   AUC PR    = 0.04878
   CLL	      = -0.608456
   Precision = 0.002926 at threshold = 0.5
   Recall    = 0.458647
   F1        = 0.005816


Total learning time: 2.751 seconds
Total inference time: 13.63 seconds
AUC ROC: 0.723691


Results scoring model
   AUC ROC   = 0.98
   AUC PR    = 0.979899
   CLL	      = -0.274971
   Precision = 0.9 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.9


Total scoring time: 0.859 seconds
Parameter learned model CLL: -0.274971


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamplaysinleague(C, D)', 'false,false,false': 'teamplaysagainstteam(A, I), athleteplaysforteam(J, I)', 'true': 'teamalsoknownas(A, E)', 'false,false': 'teamplaysagainstteam(A, H)', 'false': 'teamplaysagainstteam(F, A), teamalsoknownas(F, G)', 'true,false': 'teamalsoknownas(A, A)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.943, 1, 8], 'true,true': [0.913, 5, 1], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.4, 4, 1], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamalsoknownas(C, D)', 'false,false': 'teamplaysagainstteam(A, F), teamplaysinleague(F, G)', 'false': 'teamplaysagainstteam(E, A)'}, {'false,false,false': [0.935, 1, 7], 'true,false': [0.795, 4, 1], 'true,true': [1.195, 5, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'teamalsoknownas(A, G)', 'true': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(F, A)', 'false': 'teamplaysagainstteam(E, A)'}, {'false,false,false,false': [0.0, 0, 4], 'true,true': [1.271, 9, 2], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false,false,true': [0.866, 1, 3]}], ['teamplayssport(A, B)', {'': 'athleteplayssport(C, B)', 'true': 'teamplaysagainstteam(D, A)', 'false': 'teamplaysagainstteam(E, A), athleteledsportsteam(F, E)'}, {'false,false': [0.261, 3, 0], 'true,true': [0.213, 0, 3], 'false,true': [0.021, 7, 0], 'true,false': [0.082, 0, 7]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteplaysforteam(D, C)', 'false,false,false': 'athleteledsportsteam(K, A)', 'true': 'teamalsoknownas(C, E)', 'false,false': 'teamplaysagainstteam(A, I), teamplaysinleague(I, J)', 'false': 'teamplaysagainstteam(H, A)', 'true,false': 'teamplaysagainstteam(F, C), teamplaysagainstteam(G, F)'}, {'true,false,true': [0.451, 3, 1], 'false,false,false,false': [0.735, 1, 7], 'true,true': [0.979, 4, 2], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.006, 2, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false,false': 'teamplaysagainstteam(A, K)', 'true': 'teamalsoknownas(C, D)', 'false,false': 'teamplaysagainstteam(I, A), athleteledsportsteam(J, I)', 'false': 'teamalsoknownas(A, E)', 'false,true,false': 'teamplaysagainstteam(H, A)', 'false,true': 'teamplaysagainstteam(A, F), athleteledsportsteam(G, F)'}, {'false,false,false,false': [0.0, 0, 4], 'true,true': [0.99, 5, 2], 'true,false': [0.461, 4, 1], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.709, 1, 3], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamplaysinleague(A, D)', 'true,false,true': 'athleteledsportsteam(G, F), athleteplaysforteam(C, F)', 'true': 'teamalsoknownas(A, E)', 'true,false': 'teamplaysinleague(F, D)', 'false': 'teamalsoknownas(A, H)', 'false,false': 'athleteledsportsteam(I, J)'}, {'false,false,false': [0.0, 0, 0], 'true,true': [0.037, 3, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.405, 1, 1], 'false,true': [0.959, 3, 4], 'false,false,true': [0.641, 2, 5]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false,false,false': 'teamplaysagainstteam(I, A)', 'true': 'athleteplaysforteam(C, D)', 'false,false': 'teamalsoknownas(A, G)', 'false': 'athleteledsportsteam(E, A), teamplaysagainstteam(A, F)', 'false,false,true': 'teamplaysagainstteam(A, H)'}, {'false,false,true,true': [0.631, 2, 1], 'true,true': [0.483, 6, 1], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.716, 1, 3], 'false,false,false,false': [0.0, 0, 4], 'false,false,false,true': [0.539, 1, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false,false,false': 'athleteledsportsteam(L, A)', 'true': 'teamplaysagainstteam(C, D), athleteledsportsteam(E, A)', 'false,false': 'teamplaysagainstteam(J, A), athleteplaysforteam(K, A)', 'false': 'teamplaysagainstteam(H, A), teamalsoknownas(H, I)', 'true,false': 'teamplaysagainstteam(F, C), athleteplaysforteam(G, C)'}, {'true,false,true': [0.0, 0, 1], 'false,false,false,false': [0.319, 1, 4], 'true,true': [0.031, 3, 0], 'false,false,true': [0.358, 1, 1], 'true,false,false': [0.762, 3, 3], 'false,true': [0.337, 2, 1], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false,false,false': 'teamplaysagainstteam(I, A)', 'true': 'teamplaysagainstteam(D, C)', 'false,false': 'teamplaysagainstteam(A, H)', 'false': 'teamplaysagainstteam(A, G)', 'true,false': 'teamplaysagainstteam(C, E), athleteledsportsteam(F, E)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 4], 'true,true': [0.495, 3, 1], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.762, 3, 3], 'false,true': [0.632, 4, 1], 'false,false,false,true': [0.0, 0, 1]}]]
[{'': [0.14876033057851243, 0.09876543209876527], 'false,false,false': [nan, 0.09876543209876527], 'true': [0.13888888888888892, 0.16000000000000003], 'false,false': [nan, 0.09876543209876527], 'false': [nan, 0.09876543209876527], 'true,false': [nan, 0.16000000000000003]}, {'': [0.1744141627208672, 0.109375], 'true': [0.20391533095967393, 0.12626480302429915], 'false,false': [nan, 0.109375], 'false': [nan, 0.109375]}, {'': [0.14682957038260175, 0.10354231069139407], 'false,false,false': [0.18749999999999997, 0.0], 'true': [0.14682957038260175, nan], 'false,false': [nan, 0.10937500000000008], 'false': [0.0, 0.10937500000000008]}, {'': [0.019464147137864353, 0.009186734568899879], 'true': [0.015075433458929957, 0.0009531492143834657], 'false': [6.26124448376762e-05, 0.022669419675515955]}, {'': [0.12084170355179433, 0.07921101576517453], 'false,false,false': [nan, 0.06745138326517942], 'true': [0.15981068025893555, 0.05082925527980042], 'false,false': [nan, 0.06745138326517942], 'false': [1.7520342123201332e-05, 0.06745138326517942], 'true,false': [0.05082925527980042, nan]}, {'': [0.10206727083893323, 0.06847545032749339], 'false,false,false': [nan, 0.0], 'true': [0.13994639034818418, 0.04258806483937676], 'false,false': [nan, 0.0], 'false': [0.12553449180261975, 0.0], 'false,true,false': [nan, 0.12553449180261975], 'false,true': [nan, 0.12553449180261975]}, {'': [0.04395931163829397, 0.09644917401026974], 'true,false,true': [0.0, 0.08195026598160277], 'true': [0.00044893951776319346, 0.0728446808725358], 'true,false': [0.0728446808725358, nan], 'false': [0.1314592201057113, 0.05872451948473023], 'false,false': [0.05872451948473023, nan]}, {'': [0.03334581041391207, 0.0958219220255305], 'false,false,false': [0.14505742594484355, 0.0], 'true': [0.03334581041391207, nan], 'false,false': [0.1304798727052055, 0.048511539545126714], 'false': [nan, 0.0958219220255305], 'false,false,true': [0.1325649274489308, 0.12827816125612976]}, {'': [0.09951821192224139, 0.057526390433373355], 'false,false,false': [nan, 0.020328900779943645], 'true': [0.0003197888074027687, 0.12922673099990306], 'false,false': [0.06401071452701583, 0.020328900779943645], 'false': [0.11381715662977415, 0.033072980908545505], 'true,false': [0.0, 0.09675528392223968]}, {'': [0.0828222803706273, 0.05595698524729078], 'false,false,false': [0.0, 0.0], 'true': [0.06120114257595688, 0.09672505915723334], 'false,false': [nan, 0.006386593107389848], 'false': [0.07997074541080197, 0.006386593107389848], 'true,false': [nan, 0.09672505915723334]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
2;false,false;teamalsoknownas(A, G).;true;true
2;false;teamplaysagainstteam(E, A).;true;true
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;teamplaysagainstteam(D, A).;true;true
3;false;teamplaysagainstteam(E, A), athleteledsportsteam(F, E).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), athleteplaysforteam(D, C).;true;true
4;false;teamplaysagainstteam(H, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
5;false;teamalsoknownas(A, E).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamplaysinleague(A, D).;true;true
6;true;teamalsoknownas(A, E).;true;true
6;true,false;athleteledsportsteam(G, F), athleteplaysforteam(C, F).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
7;false,false;teamplaysagainstteam(I, A).;true;true
7;false;teamalsoknownas(A, G).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
8;true;teamplaysagainstteam(C, D), athleteledsportsteam(E, A).;true;true
8;true,false;teamplaysagainstteam(F, C), athleteplaysforteam(G, C).;true;true
9;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
9;false,false;teamplaysagainstteam(I, A).;true;true
9;false;teamplaysagainstteam(A, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.15475674778234996;  // std dev = 0,731, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamalsoknownas(A, F) )
%   | | then return 0.3884457330113118;  // std dev = 0,578, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.4837703863548597;  // std dev = 0,081, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.43511267636602163;  // std dev = 0,054, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( teamplaysagainstteam(E, A), athleteledsportsteam(F, E) )
%   | then return -0.1093390588620056;  // std dev = 0,032, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.1291800078675136;  // std dev = 0,039, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.3671096846303903;  // std dev = 0,074, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteledsportsteam(F, A) )
%   | | then return -0.09204216604812329;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10863068185653503;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(G, A) )
%   | then return -0.10264461444544049;  // std dev = 0,017, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysinleague(A, H), teamalsoknownas(A, I) )
%   | | then return 0.18909027139828952;  // std dev = 0,404, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.324326673563367;  // std dev = 0,033, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.28719768406212615;  // std dev = 0,065, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(E, A) )
%   | | then return -0.08403272425121633;  // std dev = 0,002, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10573083982636373;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamalsoknownas(A, F) )
%   | then return 0.18567671325389618;  // std dev = 0,406, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.2511613207485509;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamalsoknownas(A, E) )
%   | then return -0.07834664529991574;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteledsportsteam(F, G), athleteplaysforteam(C, G) )
%   | | then return -0.07834664529991574;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.054811698923939015;  // std dev = 0,187, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( athleteplayssport(H, B) )
%   | then if ( teamalsoknownas(A, I) )
%   | | then return 0.2625898917378332;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.21659955772481948;  // std dev = 0,043, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1114389171595275;  // std dev = 0,092, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(D, E) )
%   | then return -0.074942620585218;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.012343146230515542;  // std dev = 0,204, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamalsoknownas(A, F) )
%   | then if ( athleteplayssport(G, B) )
%   | | then return 0.2150119730919565;  // std dev = 0,020, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.11641888992116245;  // std dev = 0,073, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0.06455049136834815;  // std dev = 0,215, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.17361952663472346;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(C, D), athleteledsportsteam(E, A) )
%   | then return -0.06988306749886147;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(F, C), athleteplaysforteam(G, C) )
%   | | then return 0.17536682690637684;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.038837142634101415;  // std dev = 0,359, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( athleteplayssport(H, B) )
%   | then return 0.1638010108291271;  // std dev = 0,052, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07643095777980223;  // std dev = 0,019, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.17067855089345152;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08713690224615256;  // std dev = 0,087, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return -0.020943441465472234;  // std dev = 0,226, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0.1542013132040282;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.13037926542889433;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */


Results
   AUC ROC   = 0.99172
   AUC PR    = 0.13324
   CLL	      = -0.184233
   Precision = 0.124883 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.222037


Total learning time: 3.597 seconds
Total inference time: 19.881 seconds
AUC ROC: 0.99172


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.114021
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.787 seconds
Refined model CLL: -0.114021


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.99172
   AUC PR    = 0.13324
   CLL	      = -0.184233
   Precision = 0.124883 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.222037


Total learning time: 7.994 seconds
Total inference time: 19.881 seconds
AUC ROC: 0.99172
Total revision time: 7.994
Best scored revision CLL: -0.114021


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 04:52:19
{'AUC ROC': 0.99172, 'Recall': 1.0, 'CLL': -0.184233, 'Precision': [0.124883, 0.5], 'Learning time': 7.994, 'parameter_10': {'AUC ROC': 0.723691, 'Recall': 0.458647, 'CLL': -0.608456, 'Precision': [0.002926, 0.5], 'Learning time': 2.751, 'F1': 0.005816, 'Inference time': 13.63, 'AUC PR': 0.04878}, 'F1': 0.222037, 'Inference time': 19.881, 'AUC PR': 0.13324}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.991262
   AUC PR    = 0.124883
   CLL	      = -0.098497
   Precision = 0.124883 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.222037


Total learning time: 2.216 seconds
Total inference time: 3.984 seconds
AUC ROC: 0.991262


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN-B), Time: 04:52:26
{'AUC ROC': 0.991262, 'Recall': 1.0, 'CLL': -0.098497, 'Precision': [0.124883, 0.5], 'Learning time': 2.216, 'F1': 0.222037, 'Inference time': 3.984, 'AUC PR': 0.124883}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.991262
   AUC PR    = 0.124883
   CLL	      = -0.140271
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.0 seconds
Total inference time: 3.017 seconds
AUC ROC: 0.991262


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN), Time: 04:52:30
{'AUC ROC': 0.991262, 'Recall': 0.0, 'CLL': -0.140271, 'Precision': [nan, 0.5], 'Learning time': 1.0, 'F1': nan, 'Inference time': 3.017, 'AUC PR': 0.124883}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
0;false,false,false;acquired(A, I), cityhascompanyoffice(J, I).;false;false
0;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
0;true,false;companyalsoknownas(A, A).;false;true
0;false;acquired(F, A), companyalsoknownas(F, G).;true;true
0;true,false,false;economicsectorcompany(B, C).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,true;economicsectorcompany(B, F).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyalsoknownas(C, D).;false;false
1;false,false;acquired(A, H), countryhascompanyoffice(I, H).;true;false
1;false;acquired(E, A).;true;true
1;false,true,false;cityhascompanyoffice(G, A), cityhascompanyoffice(G, E).;false;false
1;false,true;companyalsoknownas(A, F), economicsectorcompany(B, F).;false;true
1;false,false,true;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;false,false,false;companyalsoknownas(A, I).;false;false
2;true;economicsectorcompany(B, C).;false;true
2;true,false;acquired(D, A), economicsectorcompany(B, D).;false;true
2;false;acquired(F, A), economicsectorcompany(B, F).;false;true
2;true,false,false;acquired(C, E), economicsectorcompany(B, E).;false;false
2;false,false;acquired(G, A).;true;true
2;false,false,true;acquired(H, G), economicsectorcompany(B, H).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
4;false,false,false;companyceo(A, L).;false;false
4;true;economicsectorcompany(B, C).;false;true
4;true,false;companyalsoknownas(C, E), economicsectorcompany(B, E).;false;true
4;false;acquired(H, A), bankboughtbank(H, A).;false;true
4;true,false,false;acquired(F, C), acquired(G, F).;false;false
4;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
4;false,false,true;cityhascompanyoffice(K, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
5;false,false,false;acquired(A, L).;false;false
5;true;companyalsoknownas(C, D).;false;false
5;false,false;acquired(I, A), companyceo(I, J).;true;true
5;false;companyalsoknownas(A, E), economicsectorcompany(B, E).;true;true
5;false,true,false;acquired(H, A).;false;false
5;false,true;acquired(A, F), companyceo(F, G).;false;true
5;false,false,true;countryhascompanyoffice(K, A), countryhascompanyoffice(K, I).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), countryhascompanyoffice(D, A).;true;true
6;true,false,true;companyceo(F, G), cityhascompanyoffice(C, F).;false;false
6;false,false,false;companyalsoknownas(A, K), acquired(K, L).;false;false
6;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;true;false
6;false;companyalsoknownas(A, H), economicsectorcompany(B, H).;false;true
6;false,false;bankchiefexecutiveceo(A, I).;true;true
6;false,false,true;companyceo(J, I), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;false,false,false;acquired(K, A), economicsectorcompany(B, K).;false;false
7;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;false;false
7;false,false;companyalsoknownas(A, I).;true;true
7;false;companyceo(A, E), acquired(A, F).;true;true
7;false,true,false;countryhascompanyoffice(G, F), acquired(F, H).;false;false
7;false,true;economicsectorcompany(B, F).;false;true
7;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false,false,false;companyceo(A, L).;false;false
8;true;economicsectorcompany(B, C).;false;true
8;true,false;acquired(C, D), companyceo(A, E).;false;true
8;false;acquired(H, A), companyalsoknownas(H, I).;true;true
8;true,false,false;acquired(F, C), cityhascompanyoffice(G, C).;false;false
8;false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;true
8;false,true;economicsectorcompany(B, I).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
9;false,false,false;acquired(K, A).;false;false
9;true;economicsectorcompany(B, C).;false;true
9;true,false;acquired(D, C).;false;true
9;false;acquired(A, G), economicsectorcompany(B, G).;false;true
9;true,false,false;acquired(C, E), companyceo(E, F).;false;false
9;false,false;acquired(A, H).;true;true
9;false,false,true;acquired(H, I), cityhascompanyoffice(J, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.21529179224236947;  // std dev = 0,479, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   else if ( teamplaysagainstteam(F, A), teamalsoknownas(G, F) )
%   | then return 0.3581489350995122;  // std dev = 0,500, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, I), athleteplaysforteam(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.6763307532813305;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(D, C) )
%   | then return 0.19778954250819433;  // std dev = 1,573, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return 0.0854559168184075;  // std dev = 1,216, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, F), teamplaysinleague(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5728505077589573;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.11118942763981032;  // std dev = 1,854, 17,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.2762701896991463;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(G, A) )
%   | | | then return 0.6343255238378401;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3486112381235545;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A) )
%   | then return 0.47913542709324053;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6747556435646364;  // std dev = 0,115, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then return -0.19560214725262623;  // std dev = 0,080, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.3915200984044546;  // std dev = 0,142, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( teamalsoknownas(E, C) )
%   | then return 0.11656566975217832;  // std dev = 1,284, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( teamplaysagainstteam(F, C), teamplaysagainstteam(G, F) )
%   | | then return 0.117645459012097;  // std dev = 0,959, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(H, A) )
%   | then return -0.17027705324001638;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysagainstteam(A, I), teamplaysinleague(I, J) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.24184107169345578;  // std dev = 0,935, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(D, C) )
%   | then return 0.09547341753951687;  // std dev = 1,269, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return 0.03656562393235127;  // std dev = 0,994, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( teamalsoknownas(E, A) )
%   | then if ( teamplaysagainstteam(A, F), athleteledsportsteam(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3090673187373483;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysagainstteam(I, A), athleteledsportsteam(J, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11675693104926622;  // std dev = 0,886, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamalsoknownas(E, A) )
%   | then return -0.15459378375433397;  // std dev = 0,016, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysinleague(F, D) )
%   | | then if ( athleteledsportsteam(G, F), athleteplaysforteam(C, F) )
%   | | | then return -0.016815263182367965;  // std dev = 0,708, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.02868888377501579;  // std dev = 0,603, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(H, A) )
%   | then return 0.16462821283573031;  // std dev = 0,369, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( athleteledsportsteam(I, J) )
%   | | then return 0.13666856387251058;  // std dev = 1,497, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then return -0.04270939868464596;  // std dev = 0,956, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(E, A), teamplaysagainstteam(A, F) )
%   | then if ( teamplaysinleague(F, G), teamplaysagainstteam(F, H) )
%   | | then return -0.21538173225376936;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(I, A) )
%   | | then if ( teamplaysagainstteam(A, J) )
%   | | | then return -0.18972363166624098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.21786038897617488;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return 0.24314205420404986;  // std dev = 1,042, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.0608246054926594;  // std dev = 0,897, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(C, D), athleteledsportsteam(E, A) )
%   | then return -0.12090371273855037;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(F, C), athleteplaysforteam(G, C) )
%   | | then return -0.039808939887310706;  // std dev = 0,273, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.18301700566600831;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(H, A), teamalsoknownas(I, H) )
%   | then return 0.10820088367981837;  // std dev = 0,383, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( teamplaysagainstteam(J, A), athleteplaysforteam(K, A) )
%   | | then return -0.17787100652978957;  // std dev = 0,019, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( athleteledsportsteam(L, A) )
%   | | | then return -0.18121058830017825;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.08706864463823982;  // std dev = 1,204, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return -0.052990337919081476;  // std dev = 0,282, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysagainstteam(C, E), athleteledsportsteam(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.15722048270231936;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then return 0.0438788744618795;  // std dev = 1,330, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return 0.1190361535472185;  // std dev = 0,534, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.029904332278233334;  // std dev = 0,907, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */


Results
   AUC ROC   = 0.761382
   AUC PR    = 0.077503
   CLL	      = -0.491708
   Precision = 0.003258 at threshold = 0.5
   Recall    = 0.488722
   F1        = 0.006473


Total learning time: 3.263 seconds
Total inference time: 14.422 seconds
AUC ROC: 0.761382


Results scoring model
   AUC ROC   = 0.973333
   AUC PR    = 0.974094
   CLL	      = -0.358222
   Precision = 0.857143 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.827586


Total scoring time: 0.886 seconds
Parameter learned model CLL: -0.358222


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamplaysinleague(C, D)', 'false,false,false': 'teamplaysagainstteam(A, I), athleteplaysforteam(J, I)', 'true': 'teamalsoknownas(E, A)', 'false,false': 'teamplaysagainstteam(A, H)', 'false': 'teamplaysagainstteam(F, A), teamalsoknownas(G, F)', 'true,false': 'teamalsoknownas(A, A)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [1.279, 2, 9], 'true,true': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.479, 9, 5], 'false,true': [0.5, 1, 1], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamalsoknownas(D, C)', 'false,false': 'teamplaysagainstteam(A, F), teamplaysinleague(F, G)', 'false': 'teamplaysagainstteam(E, A)'}, {'false,false,false': [1.279, 2, 9], 'true,false': [1.216, 6, 2], 'true,true': [1.573, 7, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'teamalsoknownas(G, A)', 'true': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(F, A)', 'false': 'teamplaysagainstteam(E, A)'}, {'false,false,false,false': [1.195, 2, 5], 'true,true': [1.854, 12, 5], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.707, 1, 1], 'false,false,false,true': [0.0, 0, 4]}], ['teamplayssport(A, B)', {'': 'athleteplayssport(C, B), athleteplaysinleague(C, D)', 'true': 'teamalsoknownas(E, A)', 'false': 'teamplaysagainstteam(A, F)'}, {'false,false': [0.142, 3, 0], 'true,true': [0.0, 0, 4], 'false,true': [0.08, 12, 0], 'true,false': [0.115, 0, 11]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteplaysforteam(D, C)', 'false,false,false': 'athleteledsportsteam(K, A)', 'true': 'teamalsoknownas(E, C)', 'false,false': 'teamplaysagainstteam(A, I), teamplaysinleague(I, J)', 'false': 'teamplaysagainstteam(H, A)', 'true,false': 'teamplaysagainstteam(F, C), teamplaysagainstteam(G, F)'}, {'true,false,true': [0.959, 4, 2], 'false,false,false,false': [0.935, 2, 9], 'true,true': [1.284, 7, 4], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false,false': 'teamplaysagainstteam(A, K)', 'true': 'teamalsoknownas(D, C)', 'false,false': 'teamplaysagainstteam(I, A), athleteledsportsteam(J, I)', 'false': 'teamalsoknownas(E, A)', 'false,true,false': 'teamplaysagainstteam(H, A)', 'false,true': 'teamplaysagainstteam(A, F), athleteledsportsteam(G, F)'}, {'false,false,false,false': [0.886, 2, 5], 'true,true': [1.269, 7, 4], 'true,false': [0.994, 6, 2], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 4], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamplaysinleague(A, D)', 'true,false,true': 'athleteledsportsteam(G, F), athleteplaysforteam(C, F)', 'true': 'teamalsoknownas(E, A)', 'true,false': 'teamplaysinleague(F, D)', 'false': 'teamalsoknownas(H, A)', 'false,false': 'athleteledsportsteam(I, J)'}, {'false,false,false': [0.0, 0, 0], 'true,true': [0.016, 2, 0], 'true,false,true,true': [0.708, 3, 1], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.603, 2, 1], 'false,true': [0.369, 1, 4], 'false,false,true': [1.497, 7, 9]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false,false,false': 'teamplaysagainstteam(K, A)', 'true': 'athleteplaysforteam(C, D)', 'false,false': 'teamalsoknownas(I, A)', 'false': 'athleteledsportsteam(E, A), teamplaysagainstteam(A, F)', 'false,true': 'teamplaysinleague(F, G), teamplaysagainstteam(F, H)', 'false,false,true': 'teamplaysagainstteam(A, J)'}, {'false,false,true,true': [0.0, 1, 0], 'true,true': [0.956, 8, 2], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 4], 'false,true,true': [0.0, 1, 0], 'false,false,false,false': [0.897, 2, 5], 'false,false,false,true': [1.042, 3, 4]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'athleteledsportsteam(L, A)', 'true': 'teamplaysagainstteam(C, D), athleteledsportsteam(E, A)', 'false,false': 'teamplaysagainstteam(J, A), athleteplaysforteam(K, A)', 'false': 'teamplaysagainstteam(H, A), teamalsoknownas(I, H)', 'true,false': 'teamplaysagainstteam(F, C), athleteplaysforteam(G, C)'}, {'true,false,true': [0.273, 2, 1], 'false,false,false,false': [1.204, 4, 7], 'true,true': [0.0, 1, 0], 'false,false,true': [0.019, 2, 0], 'true,false,false': [3.73e-09, 0, 3], 'false,true': [0.383, 5, 4], 'false,false,false,true': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamplaysagainstteam(I, A)', 'true': 'teamplaysagainstteam(D, C)', 'false,false': 'teamplaysagainstteam(A, H)', 'false': 'teamplaysagainstteam(A, G)', 'true,false': 'teamplaysagainstteam(C, E), athleteledsportsteam(F, E)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.907, 2, 5], 'true,true': [0.282, 3, 1], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 3], 'false,true': [1.33, 9, 5], 'false,false,false,true': [0.534, 1, 1]}]]
[{'': [0.20761245674740467, 0.1775147928994082], 'false,false,false': [nan, 0.14876033057851218], 'true': [0.0, 0.2295918367346937], 'false,false': [nan, 0.14876033057851218], 'false': [0.25, 0.14876033057851218], 'true,false': [nan, 0.2295918367346937]}, {'': [0.21112986778940232, 0.1487603305785126], 'true': [0.22487433602648838, 0.18492557774936977], 'false,false': [nan, 0.1487603305785126], 'false': [nan, 0.1487603305785126]}, {'': [0.20210454907371278, 0.1683789172639303], 'false,false,false': [0.0, 0.2040816326530612], 'true': [0.20210454907371278, nan], 'false,false': [nan, 0.14876033057851237], 'false': [0.25, 0.14876033057851237]}, {'': [0.017195239195000232, 0.007919295407828875], 'true': [0.0, 0.013243448356443562], 'false': [0.0005345704350620493, 0.006751120432071915]}, {'': [0.15118581323524471, 0.08934205731160956], 'false,false,false': [nan, 0.07945662943979742], 'true': [0.14996491477056106, 0.15342337265226436], 'false,false': [nan, 0.07945662943979742], 'false': [0.0, 0.07945662943979742], 'true,false': [0.15342337265226436, nan]}, {'': [0.1376054590686564, 0.0799741435730915], 'false,false,false': [nan, 0.11222518683619923], 'true': [0.1463222632312268, 0.12361083178594807], 'false,false': [nan, 0.11222518683619923], 'false': [0.0, 0.11222518683619923], 'false,true,false': [nan, 0.0], 'false,true': [nan, 0.0]}, {'': [0.10073509378608264, 0.11336051640800082], 'true,false,true': [0.12519154368216176, 0.12119117813945778], 'true': [0.0001232834732020592, 0.12398419372883619], 'true,false': [0.12398419372883619, nan], 'false': [0.027278701896533437, 0.14007495440232332], 'false,false': [0.14007495440232332, nan]}, {'': [0.0913708296749251, 0.1132858793628658], 'false,false,false': [0.1550154740762832, 0.11501670809970824], 'true': [0.0913708296749251, nan], 'false,false': [0.02657995742128596, 0.1433260041141533], 'false': [0.0, 0.11265078992533231], 'false,true': [0.0, nan], 'false,false,true': [0.0, 0.0]}, {'': [0.025851829177874174, 0.12920136424276565], 'false,false,false': [0.0, 0.13169011847155637], 'true': [0.0, 0.024866291356081403], 'false,false': [0.00017257764892224248, 0.1262139364814703], 'false': [0.14693185192760566, 0.11541372628689495], 'true,false': [0.024906881706297457, 4.625929269271485e-18]}, {'': [0.02214719482793721, 0.1256545698408068], 'false,false,false': [0.14263308231385421, 0.11761830699856411], 'true': [0.019819624189037512, 0.0], 'false,false': [nan, 0.1245502662276183], 'false': [0.1263511677597839, 0.1245502662276183], 'true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamplaysinleague(C, D).;true;true
0;true;teamalsoknownas(E, A).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
2;false,false;teamalsoknownas(G, A).;true;true
2;false;teamplaysagainstteam(E, A).;true;true
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true;teamalsoknownas(E, A).;true;true
3;false;teamplaysagainstteam(A, F).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), athleteplaysforteam(D, C).;true;true
4;false;teamplaysagainstteam(H, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
5;false;teamalsoknownas(E, A).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamplaysinleague(A, D).;true;true
6;true;teamalsoknownas(E, A).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
7;false,false;teamalsoknownas(I, A).;true;true
7;false;athleteledsportsteam(E, A), teamplaysagainstteam(A, F).;true;true
7;false,false,true;teamplaysagainstteam(A, J).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
8;false,false,false;athleteledsportsteam(L, A).;true;true
8;true;teamplaysagainstteam(C, D), athleteledsportsteam(E, A).;true;true
8;false,false;teamplaysagainstteam(J, A), athleteplaysforteam(K, A).;true;true
8;false;teamplaysagainstteam(H, A), teamalsoknownas(I, H).;true;true
8;true,false;teamplaysagainstteam(F, C), athleteplaysforteam(G, C).;true;true
9;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
9;true;teamplaysagainstteam(D, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( athleteplayssport(G, B), athleteplaysinleague(G, H) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.7194734122109543;  // std dev = 4,21e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.22152502927633905;  // std dev = 0,472, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamalsoknownas(F, A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.3328054984329875;  // std dev = 0,545, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3884457330113118;  // std dev = 0,578, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4462143264839906;  // std dev = 0,094, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then return -0.10159632948783631;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.14787739308499706;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.32715373731843883;  // std dev = 0,069, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.09516220099029868;  // std dev = 0,026, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(F, A) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(G, B), athleteledsportsteam(G, H) )
%   | | then if ( teamalsoknownas(I, A) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.35665313629826273;  // std dev = 0,014, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.01665536171289388;  // std dev = 0,372, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.25978145991530993;  // std dev = 0,062, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.086960200758224;  // std dev = 0,024, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( teamalsoknownas(E, A) )
%   | then return 0.2706527486323458;  // std dev = 0,054, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then return 0.1462044483437784;  // std dev = 0,343, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.17116218543902684;  // std dev = 0,360, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamalsoknownas(E, A) )
%   | then return -0.07846914188662733;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteledsportsteam(F, A) )
%   | | then return -0.008040737052310024;  // std dev = 0,244, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.027407464920302865;  // std dev = 0,289, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( athleteplayssport(G, B), athleteplaysinleague(G, H) )
%   | then if ( teamplaysagainstteam(A, I) )
%   | | then return 0.20324447745064178;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamalsoknownas(J, A), athleteledsportsteam(G, K) )
%   | | | then return 0.2072032046638922;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2505483443964394;  // std dev = 0,020, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( teamplaysagainstteam(A, L), teamplaysagainstteam(L, M) )
%   | | then return -0.07850491450035428;  // std dev = 0,000160, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.13106534604282455;  // std dev = 0,065, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(D, A), teamalsoknownas(E, D) )
%   | then if ( teamalsoknownas(A, D) )
%   | | then return -0.007279834357404667;  // std dev = 0,245, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.026634118257247697;  // std dev = 0,283, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.07553253067718642;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(F, A), teamplaysagainstteam(A, G) )
%   | then return -0.07297688675895495;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamalsoknownas(H, A) )
%   | | then if ( teamplaysagainstteam(A, I) )
%   | | | then return -0.07297688675895497;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.18544813560375248;  // std dev = 0,035, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( athleteplayssport(J, B), athleteledsportsteam(J, K) )
%   | | | then return 0.1902321209860659;  // std dev = 0,050, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.09939294397126539;  // std dev = 0,076, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(C, D), athleteledsportsteam(E, A) )
%   | then return -0.06803122718906587;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(F, C), athleteplaysforteam(G, C) )
%   | | then return 0.014457227388221755;  // std dev = 0,211, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.15001055107247885;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(H, A), teamalsoknownas(I, H) )
%   | then if ( athleteplayssport(J, B) )
%   | | then return 0.18793056500719568;  // std dev = 0,089, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.08112793808432586;  // std dev = 0,030, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysagainstteam(K, A), athleteplaysforteam(L, A) )
%   | | then return -0.07162237898808012;  // std dev = 0,005, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( athleteledsportsteam(M, A) )
%   | | | then return -0.06819116854971773;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.07111516859961639;  // std dev = 0,428, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return -0.006146054543192076;  // std dev = 0,220, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.13186954538380824;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then if ( teamplaysagainstteam(A, G) )
%   | | then return 0.14053248962297818;  // std dev = 0,043, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.17418027056998187;  // std dev = 0,050, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return -0.0682125157894407;  // std dev = 0,011, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.1246930071737103;  // std dev = 0,032, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.993798
   AUC PR    = 0.226996
   CLL	      = -0.128237
   Precision = 0.169251 at threshold = 0.5
   Recall    = 0.984962
   F1        = 0.288864


Total learning time: 9.298 seconds
Total inference time: 12.681 seconds
AUC ROC: 0.993798


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.113078
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.908 seconds
Refined model CLL: -0.113078


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.993798
   AUC PR    = 0.226996
   CLL	      = -0.128237
   Precision = 0.169251 at threshold = 0.5
   Recall    = 0.984962
   F1        = 0.288864


Total learning time: 14.354999999999999 seconds
Total inference time: 12.681 seconds
AUC ROC: 0.993798
Total revision time: 14.354999999999999
Best scored revision CLL: -0.113078


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 04:53:12
{'AUC ROC': 0.993798, 'Recall': 0.984962, 'CLL': -0.128237, 'Precision': [0.169251, 0.5], 'Learning time': 14.354999999999999, 'F1': 0.288864, 'Inference time': 12.681, 'parameter_15': {'AUC ROC': 0.761382, 'Recall': 0.488722, 'CLL': -0.491708, 'Precision': [0.003258, 0.5], 'Learning time': 3.263, 'F1': 0.006473, 'Inference time': 14.422, 'AUC PR': 0.077503}, 'AUC PR': 0.226996}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.11024456011969057;  // std dev = 0,545, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.4248796076296022;  // std dev = 0,107, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10455502368988177;  // std dev = 0,029, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.3259982567395105;  // std dev = 0,100, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09516836880368094;  // std dev = 0,027, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.25895867723964144;  // std dev = 0,090, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08728713833915326;  // std dev = 0,025, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.21254427534172982;  // std dev = 0,080, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08058230137042782;  // std dev = 0,023, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.1792129251391122;  // std dev = 0,071, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07481287740120329;  // std dev = 0,022, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.1543984793592471;  // std dev = 0,064, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06979867981612631;  // std dev = 0,020, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.13533321509564647;  // std dev = 0,058, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06540248532468014;  // std dev = 0,019, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.99219
   AUC PR    = 0.202565
   CLL	      = -0.08899
   Precision = 0.190962 at threshold = 0.5
   Recall    = 0.984962
   F1        = 0.319902


Total learning time: 3.309 seconds
Total inference time: 4.792 seconds
AUC ROC: 0.99219


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN-B), Time: 04:53:21
{'AUC ROC': 0.99219, 'Recall': 0.984962, 'CLL': -0.08899, 'Precision': [0.190962, 0.5], 'Learning time': 3.309, 'F1': 0.319902, 'Inference time': 4.792, 'AUC PR': 0.202565}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.987278
   AUC PR    = 0.188854
   CLL	      = -0.138925
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.138 seconds
Total inference time: 3.104 seconds
AUC ROC: 0.987278


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN), Time: 04:53:25
{'AUC ROC': 0.987278, 'Recall': 0.0, 'CLL': -0.138925, 'Precision': [nan, 0.5], 'Learning time': 1.138, 'F1': nan, 'Inference time': 3.104, 'AUC PR': 0.188854}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
0;false,false,false;acquired(A, I), cityhascompanyoffice(J, I).;false;false
0;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
0;true,false;companyalsoknownas(A, A).;false;true
0;false;acquired(F, A), companyalsoknownas(F, G).;true;true
0;true,false,false;economicsectorcompany(B, C).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,true;economicsectorcompany(B, F).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyalsoknownas(C, D).;false;false
1;false,false;acquired(A, H), countryhascompanyoffice(I, H).;true;false
1;false;acquired(E, A).;true;true
1;false,true,false;cityhascompanyoffice(G, A), cityhascompanyoffice(G, E).;false;false
1;false,true;companyalsoknownas(A, F), economicsectorcompany(B, F).;false;true
1;false,false,true;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;false,false,false;companyalsoknownas(A, I).;false;false
2;true;economicsectorcompany(B, C).;false;true
2;true,false;acquired(D, A), economicsectorcompany(B, D).;false;true
2;false;acquired(F, A), economicsectorcompany(B, F).;false;true
2;true,false,false;acquired(C, E), economicsectorcompany(B, E).;false;false
2;false,false;acquired(G, A).;true;true
2;false,false,true;acquired(H, G), economicsectorcompany(B, H).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
4;false,false,false;companyceo(A, L).;false;false
4;true;economicsectorcompany(B, C).;false;true
4;true,false;companyalsoknownas(C, E), economicsectorcompany(B, E).;false;true
4;false;acquired(H, A), bankboughtbank(H, A).;false;true
4;true,false,false;acquired(F, C), acquired(G, F).;false;false
4;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
4;false,false,true;cityhascompanyoffice(K, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
5;false,false,false;acquired(A, L).;false;false
5;true;companyalsoknownas(C, D).;false;false
5;false,false;acquired(I, A), companyceo(I, J).;true;true
5;false;companyalsoknownas(A, E), economicsectorcompany(B, E).;true;true
5;false,true,false;acquired(H, A).;false;false
5;false,true;acquired(A, F), companyceo(F, G).;false;true
5;false,false,true;countryhascompanyoffice(K, A), countryhascompanyoffice(K, I).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), countryhascompanyoffice(D, A).;true;true
6;true,false,true;companyceo(F, G), cityhascompanyoffice(C, F).;false;false
6;false,false,false;companyalsoknownas(A, K), acquired(K, L).;false;false
6;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;true;false
6;false;companyalsoknownas(A, H), economicsectorcompany(B, H).;false;true
6;false,false;bankchiefexecutiveceo(A, I).;true;true
6;false,false,true;companyceo(J, I), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;false,false,false;acquired(K, A), economicsectorcompany(B, K).;false;false
7;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;false;false
7;false,false;companyalsoknownas(A, I).;true;true
7;false;companyceo(A, E), acquired(A, F).;true;true
7;false,true,false;countryhascompanyoffice(G, F), acquired(F, H).;false;false
7;false,true;economicsectorcompany(B, F).;false;true
7;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false,false,false;companyceo(A, L).;false;false
8;true;economicsectorcompany(B, C).;false;true
8;true,false;acquired(C, D), companyceo(A, E).;false;true
8;false;acquired(H, A), companyalsoknownas(H, I).;true;true
8;true,false,false;acquired(F, C), cityhascompanyoffice(G, C).;false;false
8;false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;true
8;false,true;economicsectorcompany(B, I).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
9;false,false,false;acquired(K, A).;false;false
9;true;economicsectorcompany(B, C).;false;true
9;true,false;acquired(D, C).;false;true
9;false;acquired(A, G), economicsectorcompany(B, G).;false;true
9;true,false,false;acquired(C, E), companyceo(E, F).;false;false
9;false,false;acquired(A, H).;true;true
9;false,false,true;acquired(H, I), cityhascompanyoffice(J, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.25814893509951237;  // std dev = 0,490, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   else if ( teamplaysagainstteam(F, A), teamalsoknownas(G, F) )
%   | then return 0.5248156017661788;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, I), athleteplaysforteam(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5724346493852266;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(D, C) )
%   | then return 0.2928706703222572;  // std dev = 2,025, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else return 0.05160273303827282;  // std dev = 1,239, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, F), teamplaysinleague(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.4876778839172629;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.1478562755928794;  // std dev = 2,241, 23,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.3942337358825098;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(G, A) )
%   | | | then return 0.6769712478135392;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2769712478135394;  // std dev = 1,549, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E) )
%   | then return 0.7610737640309596;  // std dev = 0,052, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( teamplaysinleague(A, F), athleteledsportsteam(C, G) )
%   | | then if ( teamalsoknownas(A, H), teamplaysinleague(H, F) )
%   | | | then return 0.5483844974448849;  // std dev = 0,080, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6283151207247539;  // std dev = 0,029, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5745130008273032;  // std dev = 0,107, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysagainstteam(A, I) )
%   | then return -0.21689352907267817;  // std dev = 0,118, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.3804504981695402;  // std dev = 0,026, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( teamalsoknownas(E, C) )
%   | then return 0.15522264997869534;  // std dev = 1,584, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( teamplaysagainstteam(F, C), teamplaysagainstteam(G, F) )
%   | | then return 0.06631432204612743;  // std dev = 0,963, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(H, A) )
%   | then return -0.17374918477335313;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysagainstteam(A, I), teamplaysinleague(I, J) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2229129195481049;  // std dev = 1,248, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(D, C) )
%   | then return 0.12331760927265337;  // std dev = 1,560, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else return 0.009638576733940942;  // std dev = 0,990, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( teamalsoknownas(E, A) )
%   | then if ( teamplaysagainstteam(A, F), athleteledsportsteam(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3270812602588124;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysagainstteam(I, A), athleteledsportsteam(J, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.10844756933488095;  // std dev = 1,183, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamalsoknownas(E, A) )
%   | then return -0.16181641700156957;  // std dev = 0,042, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysinleague(F, D) )
%   | | then if ( athleteledsportsteam(G, F), athleteplaysforteam(C, F) )
%   | | | then return -0.0023763373347784147;  // std dev = 0,897, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.11191815390752942;  // std dev = 0,920, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(H, A) )
%   | then return 0.16928754232788018;  // std dev = 0,404, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( athleteledsportsteam(I, J) )
%   | | then return 0.11468392948986963;  // std dev = 1,700, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then return 0.004214987474899545;  // std dev = 1,324, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(E, A), teamplaysagainstteam(A, F) )
%   | then if ( teamplaysinleague(F, G), teamplaysagainstteam(F, H) )
%   | | then return -0.20283824778219314;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(I, A) )
%   | | then if ( teamplaysagainstteam(A, J) )
%   | | | then return -0.21922475523348114;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.2283294998718174;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return 0.1892430254545355;  // std dev = 1,099, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.055808102294255126;  // std dev = 1,182, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(C, D), athleteledsportsteam(E, A) )
%   | then return -0.11497164858277206;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(F, C), athleteplaysforteam(G, C) )
%   | | then return -0.054603802096580695;  // std dev = 0,298, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.19127570681649556;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(H, A), teamalsoknownas(I, H) )
%   | then return 0.1072666758614064;  // std dev = 0,373, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | else if ( teamplaysagainstteam(J, A), athleteplaysforteam(K, A) )
%   | | then return -0.18521333776271465;  // std dev = 0,025, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( athleteledsportsteam(L, A) )
%   | | | then return -0.17200451074860107;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.05752290092120959;  // std dev = 1,457, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return -0.06088191846398116;  // std dev = 0,303, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysagainstteam(C, E), athleteledsportsteam(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.1634179346855775;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then return 0.04231660171519626;  // std dev = 1,597, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return 0.10248656054304306;  // std dev = 0,598, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.029377288917131855;  // std dev = 1,185, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */


Results
   AUC ROC   = 0.856711
   AUC PR    = 0.037216
   CLL	      = -0.469596
   Precision = 0.018497 at threshold = 0.5
   Recall    = 0.729323
   F1        = 0.03608


Total learning time: 4.875 seconds
Total inference time: 13.664 seconds
AUC ROC: 0.856711


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.392668
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 0.908 seconds
Parameter learned model CLL: -0.392668


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamplaysinleague(C, D)', 'false,false,false': 'teamplaysagainstteam(A, I), athleteplaysforteam(J, I)', 'true': 'teamalsoknownas(E, A)', 'false,false': 'teamplaysagainstteam(A, H)', 'false': 'teamplaysagainstteam(F, A), teamalsoknownas(G, F)', 'true,false': 'teamalsoknownas(A, A)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [1.69, 4, 10], 'true,true': [0.0, 3, 0], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.49, 12, 8], 'false,true': [0.471, 1, 2], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamalsoknownas(D, C)', 'false,false': 'teamplaysagainstteam(A, F), teamplaysinleague(F, G)', 'false': 'teamplaysagainstteam(E, A)'}, {'false,false,false': [1.69, 4, 10], 'true,false': [1.239, 7, 2], 'true,true': [2.025, 9, 8], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'teamalsoknownas(G, A)', 'true': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(F, A)', 'false': 'teamplaysagainstteam(E, A)'}, {'false,false,false,false': [1.549, 4, 6], 'true,true': [2.241, 15, 8], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.816, 1, 2], 'false,false,false,true': [0.0, 0, 4]}], ['teamplayssport(A, B)', {'': 'athleteplayssport(C, B), athleteplaysinleague(C, D)', 'true,false,true': 'teamalsoknownas(A, H), teamplaysinleague(H, F)', 'true': 'teamplaysagainstteam(A, E)', 'true,false': 'teamplaysinleague(A, F), athleteledsportsteam(C, G)', 'false': 'teamplaysagainstteam(A, I)'}, {'true,true': [0.052, 0, 8], 'false,false': [0.026, 5, 0], 'true,false,true,true': [0.08, 0, 3], 'true,false,false': [0.107, 0, 5], 'true,false,true,false': [0.029, 0, 4], 'false,true': [0.118, 15, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteplaysforteam(D, C)', 'false,false,false': 'athleteledsportsteam(K, A)', 'true': 'teamalsoknownas(E, C)', 'false,false': 'teamplaysagainstteam(A, I), teamplaysinleague(I, J)', 'false': 'teamplaysagainstteam(H, A)', 'true,false': 'teamplaysagainstteam(F, C), teamplaysagainstteam(G, F)'}, {'true,false,true': [0.963, 5, 2], 'false,false,false,false': [1.248, 4, 10], 'true,true': [1.584, 9, 8], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false,false': 'teamplaysagainstteam(A, K)', 'true': 'teamalsoknownas(D, C)', 'false,false': 'teamplaysagainstteam(I, A), athleteledsportsteam(J, I)', 'false': 'teamalsoknownas(E, A)', 'false,true,false': 'teamplaysagainstteam(H, A)', 'false,true': 'teamplaysagainstteam(A, F), athleteledsportsteam(G, F)'}, {'false,false,false,false': [1.183, 4, 6], 'true,true': [1.56, 9, 8], 'true,false': [0.99, 7, 2], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.006, 0, 4], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamplaysinleague(A, D)', 'true,false,true': 'athleteledsportsteam(G, F), athleteplaysforteam(C, F)', 'true': 'teamalsoknownas(E, A)', 'true,false': 'teamplaysinleague(F, D)', 'false': 'teamalsoknownas(H, A)', 'false,false': 'athleteledsportsteam(I, J)'}, {'false,false,false': [0.0, 0, 0], 'true,true': [0.042, 2, 0], 'true,false,true,true': [0.897, 4, 2], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.92, 3, 3], 'false,true': [0.404, 1, 4], 'false,false,true': [1.7, 10, 11]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false,false,false': 'teamplaysagainstteam(K, A)', 'true': 'athleteplaysforteam(C, D)', 'false,false': 'teamalsoknownas(I, A)', 'false': 'athleteledsportsteam(E, A), teamplaysagainstteam(A, F)', 'false,true': 'teamplaysinleague(F, G), teamplaysagainstteam(F, H)', 'false,false,true': 'teamplaysagainstteam(A, J)'}, {'false,false,true,true': [0.0, 1, 0], 'true,true': [1.324, 10, 5], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true,false': [0.005, 0, 4], 'false,true,true': [0.0, 1, 0], 'false,false,false,false': [1.182, 4, 6], 'false,false,false,true': [1.099, 4, 5]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'athleteledsportsteam(L, A)', 'true': 'teamplaysagainstteam(C, D), athleteledsportsteam(E, A)', 'false,false': 'teamplaysagainstteam(J, A), athleteplaysforteam(K, A)', 'false': 'teamplaysagainstteam(H, A), teamalsoknownas(I, H)', 'true,false': 'teamplaysagainstteam(F, C), athleteplaysforteam(G, C)'}, {'true,false,true': [0.298, 2, 1], 'false,false,false,false': [1.457, 7, 8], 'true,true': [0.0, 1, 0], 'false,false,true': [0.025, 2, 0], 'true,false,false': [0.003, 0, 3], 'false,true': [0.373, 7, 8], 'false,false,false,true': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamplaysagainstteam(I, A)', 'true': 'teamplaysagainstteam(D, C)', 'false,false': 'teamplaysagainstteam(A, H)', 'false': 'teamplaysagainstteam(A, G)', 'true,false': 'teamplaysagainstteam(C, E), athleteledsportsteam(F, E)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [1.185, 4, 6], 'true,true': [0.303, 3, 1], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.003, 0, 3], 'false,true': [1.597, 12, 8], 'false,false,false,true': [0.598, 1, 2]}]]
[{'': [0.226843100189036, 0.20761245674740453], 'false,false,false': [nan, 0.20408163265306115], 'true': [0.0, 0.24000000000000005], 'false,false': [nan, 0.20408163265306115], 'false': [0.22222222222222224, 0.20408163265306115], 'true,false': [nan, 0.24000000000000005]}, {'': [0.2299366082527528, 0.20408163265306115], 'true': [0.24120841644221905, 0.17058488813899975], 'false,false': [nan, 0.20408163265306115], 'false': [nan, 0.20408163265306115]}, {'': [0.21838881855970646, 0.2072842009495241], 'false,false,false': [0.0, 0.2399999999999999], 'true': [0.21838881855970646, nan], 'false,false': [nan, 0.20408163265306123], 'false': [0.22222222222222218, 0.20408163265306123]}, {'': [0.00904032501665144, 0.005748518324801921], 'true,false,true': [0.002133433403140761, 0.0002134335405555854], 'true': [0.00033727665801130957, 0.0025701082908501003], 'true,false': [0.0026009203072736575, 0.0023041080753920086], 'false': [0.0009314380760460317, 0.00013659746595553467]}, {'': [0.14478727246025128, 0.11447664117726679], 'false,false,false': [nan, 0.11116284393414255], 'true': [0.1475148540870681, 0.1325639896861005], 'false,false': [nan, 0.11116284393414255], 'false': [0.0, 0.11116284393414255], 'true,false': [0.1325639896861005, nan]}, {'': [0.13417415067403202, 0.1097226169032133], 'false,false,false': [nan, 0.13995101632230228], 'true': [0.14310049020218152, 0.10886368398770924], 'false,false': [nan, 0.13995101632230228], 'false': [8.267779047110846e-06, 0.13995101632230228], 'false,true,false': [nan, 8.267779047110846e-06], 'false,true': [nan, 8.267779047110846e-06]}, {'': [0.12663487383389924, 0.11793610900514112], 'true,false,true': [0.13403202111114612, 0.1412186492826513], 'true': [0.0008886285844929807, 0.14089114287898322], 'true,false': [0.14089114287898322, nan], 'false': [0.03256974070300992, 0.13768805891925442], 'false,false': [0.13768805891925442, nan]}, {'': [0.1169386499169053, 0.11815284361048327], 'false,false,false': [0.1342647851623592, 0.13972701630026224], 'true': [0.1169386499169053, nan], 'false,false': [0.032053008413601015, 0.14157853308726967], 'false': [0.0, 0.11882540441397708], 'false,true': [0.0, nan], 'false,false,true': [0.0, 5.298264429541566e-06]}, {'': [0.029761869326795885, 0.13375264617580976], 'false,false,false': [0.0, 0.1414984641459171], 'true': [0.0, 0.02992194137220773], 'false,false': [0.00031895606446195185, 0.13574169486577245], 'false': [0.13887404152562205, 0.12584656056071183], 'true,false': [0.029611905722502982, 3.6105702446997956e-06]}, {'': [0.02541199335089066, 0.13104058354268616], 'false,false,false': [0.11932890584743805, 0.14039048567938195], 'true': [0.02290726395022047, 2.8187672621998727e-06], 'false,false': [nan, 0.1364789315639046], 'false': [0.12749956660167389, 0.1364789315639046], 'true,false': [nan, 2.8187672621998727e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamplaysinleague(C, D).;true;true
0;true;teamalsoknownas(E, A).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
2;false,false;teamalsoknownas(G, A).;true;true
2;false;teamplaysagainstteam(E, A).;true;true
3;;teamplayssport(A, B) :- athleteplayssport(C, B), athleteplaysinleague(C, D).;true;true
3;true,false,true;teamalsoknownas(A, H), teamplaysinleague(H, F).;true;true
3;true;teamplaysagainstteam(A, E).;true;true
3;true,false;teamplaysinleague(A, F), athleteledsportsteam(C, G).;true;true
3;false;teamplaysagainstteam(A, I).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), athleteplaysforteam(D, C).;true;true
4;false;teamplaysagainstteam(H, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
5;false;teamalsoknownas(E, A).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamplaysinleague(A, D).;true;true
6;true;teamalsoknownas(E, A).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
7;false,false;teamalsoknownas(I, A).;true;true
7;false;athleteledsportsteam(E, A), teamplaysagainstteam(A, F).;true;true
7;false,false,true;teamplaysagainstteam(A, J).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
8;false,false,false;athleteledsportsteam(L, A).;true;true
8;true;teamplaysagainstteam(C, D), athleteledsportsteam(E, A).;true;true
8;false,false;teamplaysagainstteam(J, A), athleteplaysforteam(K, A).;true;true
8;false;teamplaysagainstteam(H, A), teamalsoknownas(I, H).;true;true
8;true,false;teamplaysagainstteam(F, C), athleteplaysforteam(G, C).;true;true
9;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
9;true;teamplaysagainstteam(D, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(G, B), athleteplaysinleague(G, H) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.7194734122109542;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.3328054984329875;  // std dev = 0,545, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamalsoknownas(F, A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( athleteplayssport(G, B), athleteledsportsteam(G, H) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E) )
%   | then return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( teamplaysinleague(A, F), athleteledsportsteam(C, G) )
%   | | then if ( teamalsoknownas(A, H), teamplaysinleague(H, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.44496732126991756;  // std dev = 0,055, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysagainstteam(A, I) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.11127989038494054;  // std dev = 0,043, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( athleteplaysforteam(E, F), teamplaysagainstteam(A, F) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.33827254718889366;  // std dev = 0,048, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamplaysagainstteam(A, G), teamplaysagainstteam(G, A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.10725095133560064;  // std dev = 0,036, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(H, A) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(I, B), athleteplaysinleague(I, J) )
%   | | then return 0.31952158957734766;  // std dev = 0,008, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.09188009834274645;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(D, E), teamplaysagainstteam(A, E) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2672508321065232;  // std dev = 0,042, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamplaysagainstteam(A, F), athleteplaysforteam(G, F) )
%   | | then return -0.08509799910849324;  // std dev = 0,001, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.09782201346669868;  // std dev = 0,032, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamalsoknownas(H, A) )
%   | then return 0.2553985280895692;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( athleteplayssport(I, B), athleteledsportsteam(I, J) )
%   | | then return 0.2536699509488404;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.08449588141170218;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamalsoknownas(E, A) )
%   | then return -0.07878305065891963;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.21453210983694868;  // std dev = 0,027, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( athleteledsportsteam(G, A) )
%   | | | then return -0.07878305065891963;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09051110792367285;  // std dev = 0,029, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(H, B), athleteplaysinleague(H, I) )
%   | then if ( teamplaysagainstteam(J, A), teamalsoknownas(K, J) )
%   | | then return 0.21771503930655747;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20887483549171137;  // std dev = 0,007, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.07820861094196352;  // std dev = 0,002, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.18061657254343605;  // std dev = 0,024, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( athleteplaysforteam(E, A), athleteplaysinleague(E, F) )
%   | | then return -0.07313851664031415;  // std dev = 0,000733, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08334419026391045;  // std dev = 0,027, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(G, A), teamplaysagainstteam(A, H) )
%   | then return -0.0732906933311495;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamalsoknownas(I, A) )
%   | | then if ( teamplaysagainstteam(A, J) )
%   | | | then return -0.0732906933311495;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1773658061905542;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( athleteplayssport(K, B), athleteledsportsteam(K, L) )
%   | | | then return 0.1778892166164197;  // std dev = 0,025, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.07265902711822358;  // std dev = 0,002, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(C, D), athleteledsportsteam(E, A) )
%   | then return -0.06843897337504593;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(F, C), athleteplaysforteam(G, C) )
%   | | then return 0.005347750607657177;  // std dev = 0,181, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.15294812489264487;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(H, A), teamalsoknownas(I, H) )
%   | then if ( athleteplayssport(J, B) )
%   | | then if ( athleteplaysforteam(K, A), athleteplayssport(K, L) )
%   | | | then return 0.15072993249139333;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16195362922423578;  // std dev = 0,025, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07216422027247156;  // std dev = 0,010, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( teamplaysagainstteam(M, A), athleteplaysforteam(N, A) )
%   | | then return -0.0673612070279832;  // std dev = 0,000472, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( athleteledsportsteam(P, A) )
%   | | | then return -0.06846589969462741;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.04911812695591519;  // std dev = 0,425, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return -0.012383576826638935;  // std dev = 0,190, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.1341664777411652;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then if ( teamplaysagainstteam(A, G), teamplaysinleague(A, H) )
%   | | then if ( athleteledsportsteam(I, G), teamplaysinleague(F, H) )
%   | | | then return 0.13658649832682498;  // std dev = 0,011, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13013611644837572;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.14680900292955565;  // std dev = 0,010, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( teamplaysagainstteam(A, J), teamplaysagainstteam(J, K) )
%   | | then return -0.06492725852056501;  // std dev = 0,010, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07462129922736248;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.991837
   AUC PR    = 0.205679
   CLL	      = -0.108048
   Precision = 0.165404 at threshold = 0.5
   Recall    = 0.984962
   F1        = 0.283243


Total learning time: 63.485 seconds
Total inference time: 17.024 seconds
AUC ROC: 0.991837


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100391
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.158 seconds
Refined model CLL: -0.100391


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991837
   AUC PR    = 0.205679
   CLL	      = -0.108048
   Precision = 0.165404 at threshold = 0.5
   Recall    = 0.984962
   F1        = 0.283243


Total learning time: 70.426 seconds
Total inference time: 17.024 seconds
AUC ROC: 0.991837
Total revision time: 70.426
Best scored revision CLL: -0.100391


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 04:55:07
{'AUC ROC': 0.991837, 'Recall': 0.984962, 'CLL': -0.108048, 'Precision': [0.165404, 0.5], 'Learning time': 70.426, 'parameter_20': {'AUC ROC': 0.856711, 'Recall': 0.729323, 'CLL': -0.469596, 'Precision': [0.018497, 0.5], 'Learning time': 4.875, 'F1': 0.03608, 'Inference time': 13.664, 'AUC PR': 0.037216}, 'F1': 0.283243, 'Inference time': 17.024, 'AUC PR': 0.205679}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0641918400820262;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.987278
   AUC PR    = 0.188854
   CLL	      = -0.084039
   Precision = 0.190962 at threshold = 0.5
   Recall    = 0.984962
   F1        = 0.319902


Total learning time: 3.081 seconds
Total inference time: 5.21 seconds
AUC ROC: 0.987278


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN-B), Time: 04:55:16
{'AUC ROC': 0.987278, 'Recall': 0.984962, 'CLL': -0.084039, 'Precision': [0.190962, 0.5], 'Learning time': 3.081, 'F1': 0.319902, 'Inference time': 5.21, 'AUC PR': 0.188854}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.987278
   AUC PR    = 0.188854
   CLL	      = -0.138925
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.235 seconds
Total inference time: 3.041 seconds
AUC ROC: 0.987278


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN), Time: 04:55:20
{'AUC ROC': 0.987278, 'Recall': 0.0, 'CLL': -0.138925, 'Precision': [nan, 0.5], 'Learning time': 1.235, 'F1': nan, 'Inference time': 3.041, 'AUC PR': 0.188854}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
0;false,false,false;acquired(A, I), cityhascompanyoffice(J, I).;false;false
0;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
0;true,false;companyalsoknownas(A, A).;false;true
0;false;acquired(F, A), companyalsoknownas(F, G).;true;true
0;true,false,false;economicsectorcompany(B, C).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,true;economicsectorcompany(B, F).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyalsoknownas(C, D).;false;false
1;false,false;acquired(A, H), countryhascompanyoffice(I, H).;true;false
1;false;acquired(E, A).;true;true
1;false,true,false;cityhascompanyoffice(G, A), cityhascompanyoffice(G, E).;false;false
1;false,true;companyalsoknownas(A, F), economicsectorcompany(B, F).;false;true
1;false,false,true;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;false,false,false;companyalsoknownas(A, I).;false;false
2;true;economicsectorcompany(B, C).;false;true
2;true,false;acquired(D, A), economicsectorcompany(B, D).;false;true
2;false;acquired(F, A), economicsectorcompany(B, F).;false;true
2;true,false,false;acquired(C, E), economicsectorcompany(B, E).;false;false
2;false,false;acquired(G, A).;true;true
2;false,false,true;acquired(H, G), economicsectorcompany(B, H).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
4;false,false,false;companyceo(A, L).;false;false
4;true;economicsectorcompany(B, C).;false;true
4;true,false;companyalsoknownas(C, E), economicsectorcompany(B, E).;false;true
4;false;acquired(H, A), bankboughtbank(H, A).;false;true
4;true,false,false;acquired(F, C), acquired(G, F).;false;false
4;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
4;false,false,true;cityhascompanyoffice(K, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
5;false,false,false;acquired(A, L).;false;false
5;true;companyalsoknownas(C, D).;false;false
5;false,false;acquired(I, A), companyceo(I, J).;true;true
5;false;companyalsoknownas(A, E), economicsectorcompany(B, E).;true;true
5;false,true,false;acquired(H, A).;false;false
5;false,true;acquired(A, F), companyceo(F, G).;false;true
5;false,false,true;countryhascompanyoffice(K, A), countryhascompanyoffice(K, I).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), countryhascompanyoffice(D, A).;true;true
6;true,false,true;companyceo(F, G), cityhascompanyoffice(C, F).;false;false
6;false,false,false;companyalsoknownas(A, K), acquired(K, L).;false;false
6;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;true;false
6;false;companyalsoknownas(A, H), economicsectorcompany(B, H).;false;true
6;false,false;bankchiefexecutiveceo(A, I).;true;true
6;false,false,true;companyceo(J, I), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;false,false,false;acquired(K, A), economicsectorcompany(B, K).;false;false
7;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;false;false
7;false,false;companyalsoknownas(A, I).;true;true
7;false;companyceo(A, E), acquired(A, F).;true;true
7;false,true,false;countryhascompanyoffice(G, F), acquired(F, H).;false;false
7;false,true;economicsectorcompany(B, F).;false;true
7;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false,false,false;companyceo(A, L).;false;false
8;true;economicsectorcompany(B, C).;false;true
8;true,false;acquired(C, D), companyceo(A, E).;false;true
8;false;acquired(H, A), companyalsoknownas(H, I).;true;true
8;true,false,false;acquired(F, C), cityhascompanyoffice(G, C).;false;false
8;false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;true
8;false,true;economicsectorcompany(B, I).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
9;false,false,false;acquired(K, A).;false;false
9;true;economicsectorcompany(B, C).;false;true
9;true,false;acquired(D, C).;false;true
9;false;acquired(A, G), economicsectorcompany(B, G).;false;true
9;true,false,false;acquired(C, E), companyceo(E, F).;false;false
9;false,false;acquired(A, H).;true;true
9;false,false,true;acquired(H, I), cityhascompanyoffice(J, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.274815601766179;  // std dev = 0,493, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   else if ( teamplaysagainstteam(F, A), teamalsoknownas(G, F) )
%   | then return 0.5248156017661788;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, I), athleteplaysforteam(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5423594614153018;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(D, C) )
%   | then return 0.27769832564599956;  // std dev = 2,296, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else return 0.04944005466747188;  // std dev = 1,239, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, F), teamplaysinleague(F, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.4628301985635589;  // std dev = 2,026, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.15473842100477705;  // std dev = 2,486, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.39723069015907314;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(G, A) )
%   | | | then return 0.688863269483621;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2888632694836208;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A) )
%   then if ( teamalsoknownas(A, D), athleteledsportsteam(E, D) )
%   | then return -0.001101230877003312;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( athleteplaysforteam(C, F), teamplaysagainstteam(F, A) )
%   | | then return -0.21425927370482745;  // std dev = 0,050, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.03438443877197514;  // std dev = 0,828, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( athleteplayssport(G, B), athleteplaysinleague(G, H) )
%   | then if ( teamplaysagainstteam(I, A) )
%   | | then return 0.7363520112070181;  // std dev = 0,152, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5938885478344487;  // std dev = 0,162, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( teamplaysagainstteam(A, J) )
%   | | then return -0.21755098209200915;  // std dev = 0,079, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.3730214152175894;  // std dev = 0,020, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( teamalsoknownas(E, C) )
%   | then return 0.1529256048999332;  // std dev = 1,920, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else if ( teamplaysagainstteam(F, C), teamplaysagainstteam(G, F) )
%   | | then return 0.06039696181687001;  // std dev = 0,974, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(H, A) )
%   | then return -0.19658518250332627;  // std dev = 0,028, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysagainstteam(A, I), teamplaysinleague(I, J) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2138644269597172;  // std dev = 1,511, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(D, C) )
%   | then return 0.12198445657706451;  // std dev = 1,901, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else return 0.0017798144687474358;  // std dev = 1,005, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( teamalsoknownas(E, A) )
%   | then if ( teamplaysagainstteam(A, F), athleteledsportsteam(G, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3314119572935599;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysagainstteam(I, A), athleteledsportsteam(J, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11923204889658663;  // std dev = 1,451, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamalsoknownas(E, A) )
%   | then return -0.18073043050662785;  // std dev = 0,023, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysinleague(F, D) )
%   | | then if ( athleteledsportsteam(G, F), athleteplaysforteam(C, F) )
%   | | | then return -0.0162551295782262;  // std dev = 1,183, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.15976450365504735;  // std dev = 1,138, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(H, A) )
%   | then return 0.17203149143558885;  // std dev = 0,404, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( athleteledsportsteam(I, J) )
%   | | then return 0.11171116554097252;  // std dev = 1,901, 26,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then return 0.01778087134559936;  // std dev = 1,707, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(E, A), teamplaysagainstteam(A, F) )
%   | then if ( teamplaysinleague(F, G), teamplaysagainstteam(F, H) )
%   | | then return -0.20401655352826484;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(I, A) )
%   | | then if ( teamplaysagainstteam(A, J) )
%   | | | then return -0.21754618126617942;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.23054270238368668;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return 0.18927742484968407;  // std dev = 1,102, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.06467227726862936;  // std dev = 1,448, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(C, D), athleteledsportsteam(E, A) )
%   | then return -0.15385417910244648;  // std dev = 0,018, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysagainstteam(F, C), athleteplaysforteam(G, C) )
%   | | then return -0.05216178114264724;  // std dev = 0,300, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.19219781880821496;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(H, A), teamalsoknownas(I, H) )
%   | then return 0.1090695227711711;  // std dev = 0,406, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else if ( teamplaysagainstteam(J, A), athleteplaysforteam(K, A) )
%   | | then return -0.20995771231045635;  // std dev = 0,006, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( athleteledsportsteam(L, A) )
%   | | | then return -0.17287403259120665;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.05941090428875064;  // std dev = 1,682, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return -0.0806576091636291;  // std dev = 0,317, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( teamplaysagainstteam(C, E), athleteledsportsteam(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.1641059144178557;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then return 0.05179034888636439;  // std dev = 1,913, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return 0.07979510131718515;  // std dev = 0,586, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.035632617007020514;  // std dev = 1,451, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */


Results
   AUC ROC   = 0.725429
   AUC PR    = 0.024525
   CLL	      = -0.482557
   Precision = 0.014258 at threshold = 0.5
   Recall    = 0.548872
   F1        = 0.027794


Total learning time: 4.38 seconds
Total inference time: 13.864 seconds
AUC ROC: 0.725429


Results scoring model
   AUC ROC   = 0.9696
   AUC PR    = 0.977443
   CLL	      = -0.425395
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.84
   F1        = 0.913043


Total scoring time: 0.971 seconds
Parameter learned model CLL: -0.425395


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamplaysinleague(C, D)', 'false,false,false': 'teamplaysagainstteam(A, I), athleteplaysforteam(J, I)', 'true': 'teamalsoknownas(E, A)', 'false,false': 'teamplaysagainstteam(A, H)', 'false': 'teamplaysagainstteam(F, A), teamalsoknownas(G, F)', 'true,false': 'teamalsoknownas(A, A)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [2.026, 6, 13], 'true,true': [0.0, 4, 0], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.493, 14, 10], 'false,true': [0.471, 1, 2], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamalsoknownas(D, C)', 'false,false': 'teamplaysagainstteam(A, F), teamplaysinleague(F, G)', 'false': 'teamplaysagainstteam(E, A)'}, {'false,false,false': [2.026, 6, 13], 'true,false': [1.239, 7, 2], 'true,true': [2.296, 12, 10], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'teamalsoknownas(G, A)', 'true': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(F, A)', 'false': 'teamplaysagainstteam(E, A)'}, {'false,false,false,false': [1.897, 6, 9], 'true,true': [2.486, 18, 10], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.816, 1, 2], 'false,false,false,true': [0.0, 0, 4]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A)', 'true': 'teamalsoknownas(A, D), athleteledsportsteam(E, D)', 'false,false': 'teamplaysagainstteam(A, J)', 'false': 'athleteplayssport(G, B), athleteplaysinleague(G, H)', 'true,false': 'athleteplaysforteam(C, F), teamplaysagainstteam(F, A)', 'false,true': 'teamplaysagainstteam(I, A)'}, {'true,false,true': [0.05, 3, 0], 'false,false,false': [0.02, 7, 0], 'true,true': [0.866, 3, 1], 'true,false,false': [0.828, 3, 1], 'false,true,false': [0.162, 0, 13], 'false,true,true': [0.152, 0, 10], 'false,false,true': [0.079, 9, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteplaysforteam(D, C)', 'false,false,false': 'athleteledsportsteam(K, A)', 'true': 'teamalsoknownas(E, C)', 'false,false': 'teamplaysagainstteam(A, I), teamplaysinleague(I, J)', 'false': 'teamplaysagainstteam(H, A)', 'true,false': 'teamplaysagainstteam(F, C), teamplaysagainstteam(G, F)'}, {'true,false,true': [0.974, 5, 2], 'false,false,false,false': [1.511, 6, 13], 'true,true': [1.92, 12, 10], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.028, 2, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false,false': 'teamplaysagainstteam(A, K)', 'true': 'teamalsoknownas(D, C)', 'false,false': 'teamplaysagainstteam(I, A), athleteledsportsteam(J, I)', 'false': 'teamalsoknownas(E, A)', 'false,true,false': 'teamplaysagainstteam(H, A)', 'false,true': 'teamplaysagainstteam(A, F), athleteledsportsteam(G, F)'}, {'false,false,false,false': [1.451, 6, 9], 'true,true': [1.901, 12, 10], 'true,false': [1.005, 7, 2], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 4], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamplaysinleague(A, D)', 'true,false,true': 'athleteledsportsteam(G, F), athleteplaysforteam(C, F)', 'true': 'teamalsoknownas(E, A)', 'true,false': 'teamplaysinleague(F, D)', 'false': 'teamalsoknownas(H, A)', 'false,false': 'athleteledsportsteam(I, J)'}, {'false,false,false': [0.0, 0, 0], 'true,true': [0.023, 3, 0], 'true,false,true,true': [1.183, 5, 2], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [1.138, 4, 5], 'false,true': [0.404, 1, 4], 'false,false,true': [1.901, 12, 14]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false,false,false': 'teamplaysagainstteam(K, A)', 'true': 'athleteplaysforteam(C, D)', 'false,false': 'teamalsoknownas(I, A)', 'false': 'athleteledsportsteam(E, A), teamplaysagainstteam(A, F)', 'false,true': 'teamplaysinleague(F, G), teamplaysagainstteam(F, H)', 'false,false,true': 'teamplaysagainstteam(A, J)'}, {'false,false,true,true': [0.0, 1, 0], 'true,true': [1.707, 13, 7], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 4], 'false,true,true': [0.0, 1, 0], 'false,false,false,false': [1.448, 6, 9], 'false,false,false,true': [1.102, 4, 5]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'athleteledsportsteam(L, A)', 'true': 'teamplaysagainstteam(C, D), athleteledsportsteam(E, A)', 'false,false': 'teamplaysagainstteam(J, A), athleteplaysforteam(K, A)', 'false': 'teamplaysagainstteam(H, A), teamalsoknownas(I, H)', 'true,false': 'teamplaysagainstteam(F, C), athleteplaysforteam(G, C)'}, {'true,false,true': [0.3, 2, 1], 'false,false,false,false': [1.682, 9, 11], 'true,true': [0.018, 2, 0], 'false,false,true': [0.006, 2, 0], 'true,false,false': [0.0, 0, 3], 'false,true': [0.406, 9, 10], 'false,false,false,true': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamplaysagainstteam(I, A)', 'true': 'teamplaysagainstteam(D, C)', 'false,false': 'teamplaysagainstteam(A, H)', 'false': 'teamplaysagainstteam(A, G)', 'true,false': 'teamplaysagainstteam(C, E), athleteledsportsteam(F, E)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [1.451, 6, 9], 'true,true': [0.317, 4, 1], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 3], 'false,true': [1.913, 14, 10], 'false,false,false,true': [0.586, 1, 2]}]]
[{'': [0.22959183673469394, 0.21694214876033016], 'false,false,false': [nan, 0.21606648199445946], 'true': [0.0, 0.24305555555555558], 'false,false': [nan, 0.21606648199445946], 'false': [0.22222222222222224, 0.21606648199445946], 'true,false': [nan, 0.24305555555555558]}, {'': [0.23029533947596076, 0.21606648199445985], 'true': [0.23963492285030616, 0.17048974865594302], 'false,false': [nan, 0.21606648199445985], 'false': [nan, 0.21606648199445985]}, {'': [0.2207827913123563, 0.21697462563310294], 'false,false,false': [0.0, 0.23999999999999996], 'true': [0.2207827913123563, nan], 'false,false': [nan, 0.21606648199445985], 'false': [0.22222222222222224, 0.21606648199445985]}, {'': [0.1415678239536262, 0.22123537949200142], 'true': [0.18749999999999994, 0.11348385290206395], 'true,false': [0.0008249420495724987, 0.17148216643246958], 'false': [0.007129367671827804, 0.0063636615787417555], 'false,false': [0.000692833726042409, 5.850719914010253e-05], 'false,true': [0.0022992125016239482, 0.00202059408538244]}, {'': [0.16141164047162632, 0.12325908777856773], 'false,false,false': [nan, 0.12014763879442486], 'true': [0.16761244232104772, 0.13542843728092205], 'false,false': [nan, 0.12014763879442486], 'false': [0.0003936266394043708, 0.12014763879442486], 'true,false': [0.13542843728092205, nan]}, {'': [0.15213605240302275, 0.11828330232504614], 'false,false,false': [nan, 0.14034755553579217], 'true': [0.16426133509294896, 0.11224223276345764], 'false,false': [nan, 0.14034755553579217], 'false': [0.0, 0.14034755553579217], 'false,true,false': [nan, 0.0], 'false,true': [nan, 0.0]}, {'': [0.15745591884285723, 0.12235438542760797], 'true,false,true': [0.19988525562570855, 0.14384132937698832], 'true': [0.00016962715215888824, 0.17598524793449596], 'true,false': [0.17598524793449596, nan], 'false': [0.03270978901029336, 0.13900686932537407], 'false,false': [0.13900686932537407, nan]}, {'': [0.14576803879809344, 0.12205670873564166], 'false,false,false': [0.134996892761855, 0.13972390290937636], 'true': [0.14576803879809344, nan], 'false,false': [0.032125383624093326, 0.14159028413617222], 'false': [0.0, 0.12284141563302997], 'false,true': [0.0, nan], 'false,false,true': [0.0, 0.0]}, {'': [0.03184600155120197, 0.14786890289350293], 'false,false,false': [0.0, 0.14150254685362448], 'true': [0.00015616826904965922, 0.02987958905983167], 'false,false': [1.9390627870714827e-05, 0.1372113277019247], 'false': [0.16500967535092376, 0.13057905070419978], 'true,false': [0.029903371075590632, 0.0]}, {'': [0.026562843248018456, 0.1455822208566262], 'false,false,false': [0.11449906676993361, 0.1402878295982121], 'true': [0.020034605768320512, -4.625929269271485e-18], 'false,false': [nan, 0.13626058093522753], 'false': [0.1525402824544063, 0.13626058093522753], 'true,false': [nan, -4.625929269271485e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamplaysinleague(C, D).;true;true
0;true;teamalsoknownas(E, A).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
2;false,false;teamalsoknownas(G, A).;true;true
2;false;teamplaysagainstteam(E, A).;true;true
3;;teamplayssport(A, B) :- athleteledsportsteam(C, A).;true;true
3;true;teamalsoknownas(A, D), athleteledsportsteam(E, D).;true;true
3;true,false;athleteplaysforteam(C, F), teamplaysagainstteam(F, A).;true;true
3;false;athleteplayssport(G, B), athleteplaysinleague(G, H).;true;true
3;false,false;teamplaysagainstteam(A, J).;true;true
3;false,true;teamplaysagainstteam(I, A).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), athleteplaysforteam(D, C).;true;true
4;false;teamplaysagainstteam(H, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
5;false;teamalsoknownas(E, A).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamplaysinleague(A, D).;true;true
6;true;teamalsoknownas(E, A).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
7;false,false;teamalsoknownas(I, A).;true;true
7;false;athleteledsportsteam(E, A), teamplaysagainstteam(A, F).;true;true
7;false,false,true;teamplaysagainstteam(A, J).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
8;false,false,false;athleteledsportsteam(L, A).;true;true
8;true;teamplaysagainstteam(C, D), athleteledsportsteam(E, A).;true;true
8;false,false;teamplaysagainstteam(J, A), athleteplaysforteam(K, A).;true;true
8;false;teamplaysagainstteam(H, A), teamalsoknownas(I, H).;true;true
8;true,false;teamplaysagainstteam(F, C), athleteplaysforteam(G, C).;true;true
9;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
9;true;teamplaysagainstteam(D, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( athleteplayssport(G, B), athleteplaysinleague(G, H) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.3328054984329875;  // std dev = 0,545, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamalsoknownas(F, A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( athleteplayssport(G, B), athleteledsportsteam(G, H) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A) )
%   then if ( teamalsoknownas(A, D), athleteledsportsteam(E, D) )
%   | then return 0.028181148923700286;  // std dev = 0,450, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( athleteplaysforteam(C, F), teamplaysagainstteam(F, A) )
%   | | then return -0.1015963294878363;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.028181148923700272;  // std dev = 0,450, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( athleteplayssport(G, B), athleteplaysinleague(G, H) )
%   | then if ( teamplaysagainstteam(I, A) )
%   | | then return 0.4284950790029529;  // std dev = 0,069, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.4175135841583098;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( teamplaysagainstteam(A, J) )
%   | | then return -0.10159632948783628;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.10851315870005361;  // std dev = 0,045, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return 0.37989232186315586;  // std dev = 0,075, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(F, A), teamalsoknownas(F, G) )
%   | | | then return 0.3183241902115764;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.35173351205146347;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(A, H), teamplaysagainstteam(H, A) )
%   | | then return -0.09680067167698549;  // std dev = 0,021, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.1073596764892037;  // std dev = 0,036, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(I, A) )
%   | then return -0.0984444298720753;  // std dev = 0,008, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(J, B), athleteplaysinleague(J, K) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.09211121011900229;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(D, A) )
%   | | then return 0.29587052817289505;  // std dev = 0,066, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(A, E), teamplaysinleague(A, F) )
%   | | | then return 0.2524972116107827;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2784970345059594;  // std dev = 0,031, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(A, G), athleteplaysforteam(H, G) )
%   | | then return -0.08813013600125749;  // std dev = 0,020, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.10130753179437048;  // std dev = 0,030, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamalsoknownas(I, A) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( athleteplayssport(J, B), athleteledsportsteam(J, K) )
%   | | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.08469223442018253;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamalsoknownas(E, A) )
%   | then return -0.08156284646256158;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(F, B) )
%   | | then if ( athleteplaysforteam(F, A) )
%   | | | then return 0.23848552359811695;  // std dev = 0,057, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21583573537162812;  // std dev = 0,024, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysagainstteam(G, A), teamalsoknownas(G, H) )
%   | | | then return -0.08321111897319648;  // std dev = 0,012, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.093435308676034;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(I, B), athleteplaysinleague(I, J) )
%   | then if ( teamplaysagainstteam(K, A), teamalsoknownas(L, K) )
%   | | then return 0.2163664790887345;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20934296761819962;  // std dev = 0,005, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877842258624557;  // std dev = 0,009, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(D, A) )
%   | | then return 0.19810789840076473;  // std dev = 0,050, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.18156842237769188;  // std dev = 0,022, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(F, E) )
%   | | then return -0.0764326268984483;  // std dev = 0,005, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08499799064498859;  // std dev = 0,024, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteledsportsteam(G, A), teamplaysagainstteam(A, H) )
%   | then return -0.07276866558423006;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamalsoknownas(I, A) )
%   | | then if ( teamplaysagainstteam(A, J) )
%   | | | then return -0.07276866558423006;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.17715694844869245;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( athleteplayssport(K, B), athleteledsportsteam(K, L) )
%   | | | then return 0.17779738241085383;  // std dev = 0,024, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.07257714812842468;  // std dev = 0,002, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(C, D), athleteledsportsteam(E, A) )
%   | then return -0.07162738124255155;  // std dev = 0,006, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysagainstteam(F, C), athleteplaysforteam(G, C) )
%   | | then return 0.005726568330177359;  // std dev = 0,180, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1527897144737944;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(H, A), teamalsoknownas(I, H) )
%   | then if ( athleteplayssport(J, B) )
%   | | then if ( athleteplaysforteam(J, A) )
%   | | | then return 0.16863749711323453;  // std dev = 0,044, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15651406036899745;  // std dev = 0,028, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.07436680278148416;  // std dev = 0,009, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( teamplaysagainstteam(K, A), athleteplaysforteam(L, A) )
%   | | then return -0.07088818898169012;  // std dev = 0,006, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( athleteledsportsteam(M, A) )
%   | | | then return -0.06800879727793137;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.05315239991088205;  // std dev = 0,490, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return -0.023660823294923732;  // std dev = 0,197, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.13404282835548764;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then if ( teamalsoknownas(A, G), teamalsoknownas(G, H) )
%   | | then return 0.1513608128433168;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysinleague(A, I), teamplaysagainstteam(A, J) )
%   | | | then return 0.13469288296703766;  // std dev = 0,037, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14670811680709536;  // std dev = 0,009, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( teamplaysagainstteam(A, K), teamplaysinleague(A, L) )
%   | | then if ( teamalsoknownas(A, M) )
%   | | | then return -0.07099333754424862;  // std dev = 0,000712, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.06280667360354529;  // std dev = 0,001, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( teamplaysinleague(A, N), athleteplaysinleague(P, N) )
%   | | | then return -0.07795060194405935;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07121311658128306;  // std dev = 0,001, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.991475
   AUC PR    = 0.229163
   CLL	      = -0.108639
   Precision = 0.166667 at threshold = 0.5
   Recall    = 0.962406
   F1        = 0.284129


Total learning time: 116.438 seconds
Total inference time: 27.163 seconds
AUC ROC: 0.991475


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101512
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 2.013 seconds
Refined model CLL: -0.101512


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991475
   AUC PR    = 0.229163
   CLL	      = -0.108639
   Precision = 0.166667 at threshold = 0.5
   Recall    = 0.962406
   F1        = 0.284129


Total learning time: 123.802 seconds
Total inference time: 27.163 seconds
AUC ROC: 0.991475
Total revision time: 123.802
Best scored revision CLL: -0.101512


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 04:58:06
{'AUC ROC': 0.991475, 'Recall': 0.962406, 'CLL': -0.108639, 'Precision': [0.166667, 0.5], 'parameter_25': {'AUC ROC': 0.725429, 'Recall': 0.548872, 'CLL': -0.482557, 'Precision': [0.014258, 0.5], 'Learning time': 4.38, 'F1': 0.027794, 'Inference time': 13.864, 'AUC PR': 0.024525}, 'Learning time': 123.802, 'F1': 0.284129, 'Inference time': 27.163, 'AUC PR': 0.229163}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.987278
   AUC PR    = 0.188854
   CLL	      = -0.084039
   Precision = 0.190962 at threshold = 0.5
   Recall    = 0.984962
   F1        = 0.319902


Total learning time: 3.427 seconds
Total inference time: 4.058 seconds
AUC ROC: 0.987278


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN-B), Time: 04:58:14
{'AUC ROC': 0.987278, 'Recall': 0.984962, 'CLL': -0.084039, 'Precision': [0.190962, 0.5], 'Learning time': 3.427, 'F1': 0.319902, 'Inference time': 4.058, 'AUC PR': 0.188854}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.987278
   AUC PR    = 0.188854
   CLL	      = -0.138925
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.324 seconds
Total inference time: 2.701 seconds
AUC ROC: 0.987278


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN), Time: 04:58:18
{'AUC ROC': 0.987278, 'Recall': 0.0, 'CLL': -0.138925, 'Precision': [nan, 0.5], 'Learning time': 1.324, 'F1': nan, 'Inference time': 2.701, 'AUC PR': 0.188854}


Starting fold 3

Target train facts examples: 9690
Target train pos examples: 266
Target train neg examples: 106662

Target test facts examples: 9690
Target test pos	 examples: 131
Target test neg examples: 53329

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
0;false,false,false;acquired(A, I), cityhascompanyoffice(J, I).;false;false
0;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
0;true,false;companyalsoknownas(A, A).;false;true
0;false;acquired(F, A), companyalsoknownas(F, G).;true;true
0;true,false,false;economicsectorcompany(B, C).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,true;economicsectorcompany(B, F).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyalsoknownas(C, D).;false;false
1;false,false;acquired(A, H), countryhascompanyoffice(I, H).;true;false
1;false;acquired(E, A).;true;true
1;false,true,false;cityhascompanyoffice(G, A), cityhascompanyoffice(G, E).;false;false
1;false,true;companyalsoknownas(A, F), economicsectorcompany(B, F).;false;true
1;false,false,true;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;false,false,false;companyalsoknownas(A, I).;false;false
2;true;economicsectorcompany(B, C).;false;true
2;true,false;acquired(D, A), economicsectorcompany(B, D).;false;true
2;false;acquired(F, A), economicsectorcompany(B, F).;false;true
2;true,false,false;acquired(C, E), economicsectorcompany(B, E).;false;false
2;false,false;acquired(G, A).;true;true
2;false,false,true;acquired(H, G), economicsectorcompany(B, H).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
4;false,false,false;companyceo(A, L).;false;false
4;true;economicsectorcompany(B, C).;false;true
4;true,false;companyalsoknownas(C, E), economicsectorcompany(B, E).;false;true
4;false;acquired(H, A), bankboughtbank(H, A).;false;true
4;true,false,false;acquired(F, C), acquired(G, F).;false;false
4;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
4;false,false,true;cityhascompanyoffice(K, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
5;false,false,false;acquired(A, L).;false;false
5;true;companyalsoknownas(C, D).;false;false
5;false,false;acquired(I, A), companyceo(I, J).;true;true
5;false;companyalsoknownas(A, E), economicsectorcompany(B, E).;true;true
5;false,true,false;acquired(H, A).;false;false
5;false,true;acquired(A, F), companyceo(F, G).;false;true
5;false,false,true;countryhascompanyoffice(K, A), countryhascompanyoffice(K, I).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), countryhascompanyoffice(D, A).;true;true
6;true,false,true;companyceo(F, G), cityhascompanyoffice(C, F).;false;false
6;false,false,false;companyalsoknownas(A, K), acquired(K, L).;false;false
6;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;true;false
6;false;companyalsoknownas(A, H), economicsectorcompany(B, H).;false;true
6;false,false;bankchiefexecutiveceo(A, I).;true;true
6;false,false,true;companyceo(J, I), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;false,false,false;acquired(K, A), economicsectorcompany(B, K).;false;false
7;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;false;false
7;false,false;companyalsoknownas(A, I).;true;true
7;false;companyceo(A, E), acquired(A, F).;true;true
7;false,true,false;countryhascompanyoffice(G, F), acquired(F, H).;false;false
7;false,true;economicsectorcompany(B, F).;false;true
7;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false,false,false;companyceo(A, L).;false;false
8;true;economicsectorcompany(B, C).;false;true
8;true,false;acquired(C, D), companyceo(A, E).;false;true
8;false;acquired(H, A), companyalsoknownas(H, I).;true;true
8;true,false,false;acquired(F, C), cityhascompanyoffice(G, C).;false;false
8;false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;true
8;false,true;economicsectorcompany(B, I).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
9;false,false,false;acquired(K, A).;false;false
9;true;economicsectorcompany(B, C).;false;true
9;true,false;acquired(D, C).;false;true
9;false;acquired(A, G), economicsectorcompany(B, G).;false;true
9;true,false,false;acquired(C, E), companyceo(E, F).;false;false
9;false,false;acquired(A, H).;true;true
9;false,false,true;acquired(H, I), cityhascompanyoffice(J, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, C) )
%   then return 0.024815601766178873;  // std dev = 0,373, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, G), athleteplaysforteam(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.19619426619704294;  // std dev = 0,442, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.16635398682347136;  // std dev = 1,238, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5842045006994561;  // std dev = 0,332, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.19581859998897483;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( teamplaysagainstteam(E, C), teamplaysagainstteam(F, E) )
%   | then return 0.10744450694818765;  // std dev = 1,014, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, H), teamalsoknownas(I, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2855301268781525;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.08816697147488137;  // std dev = 0,354, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( teamplaysagainstteam(A, D), athleteledsportsteam(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, A), athleteledsportsteam(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.23099109105350923;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(D, A) )
%   then if ( teamalsoknownas(D, E) )
%   | then if ( athleteledsportsteam(F, E), athleteplaysforteam(C, E) )
%   | | then return -0.19578598584952595;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(G, H) )
%   | then return 0.1283448719381084;  // std dev = 0,954, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then return -0.07972338314444583;  // std dev = 0,559, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(E, A), teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0.2750811665457244;  // std dev = 0,620, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.17335133874504816;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D), athleteledsportsteam(E, A) )
%   then return -0.03126653127408406;  // std dev = 0,543, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( teamplaysagainstteam(F, C), athleteplaysforteam(G, C) )
%   | then return 0.12328100352852323;  // std dev = 0,708, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.05026007113705018;  // std dev = 0,911, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.704906
   AUC PR    = 0.049983
   CLL	      = -0.755878
   Precision = 0.003771 at threshold = 0.5
   Recall    = 0.59542
   F1        = 0.007494


Total learning time: 1.853 seconds
Total inference time: 147.282 seconds
AUC ROC: 0.704906


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.320523
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.992 seconds
Parameter learned model CLL: -0.320523


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(D, C)', 'false,false,false': 'teamplaysagainstteam(A, G), athleteplaysforteam(H, G)', 'false,false': 'teamplaysagainstteam(A, F)', 'false': 'teamplaysagainstteam(E, A)'}, {'false,false,false,false': [0.0, 0, 2], 'true': [0.373, 5, 1], 'false,true': [0.0, 0, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false': 'teamplaysagainstteam(A, E), teamalsoknownas(F, E)', 'false': 'teamplaysagainstteam(D, A)'}, {'false,false,false': [0.0, 0, 2], 'true': [0.442, 5, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(F, A)', 'false': 'teamplaysagainstteam(E, A)'}, {'false,false,false': [0.0, 0, 2], 'true,false': [0.0, 0, 0], 'true,true': [1.238, 5, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplayssport(C, B)'}, {'true': [0.332, 0, 5], 'false': [5.27e-09, 5, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteplaysforteam(D, C)', 'false,false,false': 'athleteledsportsteam(J, A)', 'true': 'teamplaysagainstteam(E, C), teamplaysagainstteam(F, E)', 'false,false': 'teamplaysagainstteam(A, H), teamalsoknownas(I, H)', 'false': 'teamplaysagainstteam(G, A)'}, {'false,false,false,false': [0.0, 0, 2], 'true,true': [1.014, 5, 3], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false,false': 'teamplaysagainstteam(G, A), athleteledsportsteam(H, G)', 'false,false': 'teamplaysagainstteam(F, A)', 'false': 'teamplaysagainstteam(A, D), athleteledsportsteam(E, D)'}, {'false,false,false,false': [0.0, 0, 2], 'true': [0.354, 5, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamalsoknownas(D, A)', 'true,true': 'athleteledsportsteam(F, E), athleteplaysforteam(C, E)', 'true': 'teamalsoknownas(D, E)', 'false': 'athleteledsportsteam(G, H)'}, {'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 1, 0], 'false,true': [0.954, 4, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false,false,false': 'teamplaysagainstteam(H, A)', 'true': 'athleteplaysforteam(C, D)', 'false,false': 'teamplaysagainstteam(A, G)', 'false': 'athleteledsportsteam(E, A), teamplaysagainstteam(A, F)'}, {'false,false,false,false': [0.0, 0, 2], 'true,true': [0.559, 4, 1], 'true,false': [0.0, 0, 0], 'false,false,true': [0.62, 1, 2], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D), athleteledsportsteam(E, A)', 'false': 'teamplaysagainstteam(F, C), athleteplaysforteam(G, C)'}, {'false,true': [0.708, 2, 4], 'true': [0.543, 3, 1], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [0.911, 5, 5], 'false': [0.0, 0, 0]}]]
[{'': [0.13888888888888892, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0], 'false': [0.0, 0.0]}, {'': [0.19544035488434952, 0.0], 'false,false': [nan, 0.0], 'false': [nan, 0.0]}, {'': [0.19150623090636376, 0.0], 'true': [0.19150623090636376, nan], 'false,false': [nan, 0.0], 'false': [nan, 0.0]}, {'': [0.022078379809431503, 5.551115123125783e-18]}, {'': [0.1285953167475151, 0.0], 'false,false,false': [nan, 0.0], 'true': [0.1285953167475151, nan], 'false,false': [nan, 0.0], 'false': [nan, 0.0]}, {'': [0.12526078660554546, 0.0], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0], 'false': [nan, 0.0]}, {'': [0.0, 0.101205835479386], 'true,true': [0.0, nan], 'true': [0.0, nan], 'false': [0.101205835479386, nan]}, {'': [0.06243634185501647, 0.07926575669575431], 'false,false,false': [nan, 0.0], 'true': [0.06243634185501647, nan], 'false,false': [0.1279700113471817, 0.0], 'false': [nan, 0.07926575669575431]}, {'': [0.07379214244547184, 0.08363386662323792], 'false': [0.08363386662323792, nan]}, {'': [0.08305755392739646, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
0;false;teamplaysagainstteam(E, A).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), athleteplaysforteam(D, C).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamalsoknownas(D, A).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
7;false;teamplaysagainstteam(A, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, C) )
%   then return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(D, A), teamalsoknownas(E, D) )
%   | then return -0.14489878247426094;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.5372873148683468;  // std dev = 0,795, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.6582550227458114;  // std dev = 0,143, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1472422808845301;  // std dev = 0,087, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.46996850596741896;  // std dev = 0,192, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12988770174431044;  // std dev = 0,079, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( athleteplaysforteam(E, A), athleteledsportsteam(E, F) )
%   | then return -0.12004951466003894;  // std dev = 0,069, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2701412700416137;  // std dev = 0,458, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return 0.30939328151860623;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.33343094694368247;  // std dev = 0,155, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1118642250696642;  // std dev = 0,066, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.24743292912317483;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(D, A) )
%   then return -0.08097842012173467;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.24135234890807777;  // std dev = 0,154, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10639135382582239;  // std dev = 0,056, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then return -0.037005496142638185;  // std dev = 0,240, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0.13056437522596412;  // std dev = 0,308, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1678229240855389;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.18396175678683727;  // std dev = 0,128, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0926688028943954;  // std dev = 0,059, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1584433728176024;  // std dev = 0,115, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08522291566030964;  // std dev = 0,055, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.854429
   AUC PR    = 0.083046
   CLL	      = -0.541103
   Precision = 0.004799 at threshold = 0.5
   Recall    = 0.793893
   F1        = 0.00954


Total learning time: 2.177 seconds
Total inference time: 9.312 seconds
AUC ROC: 0.854429


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.116706
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.78 seconds
Refined model CLL: -0.116706


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.854429
   AUC PR    = 0.083046
   CLL	      = -0.541103
   Precision = 0.004799 at threshold = 0.5
   Recall    = 0.793893
   F1        = 0.00954


Total learning time: 5.8020000000000005 seconds
Total inference time: 9.312 seconds
AUC ROC: 0.854429
Total revision time: 5.8020000000000005
Best scored revision CLL: -0.116706


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 05:01:02
{'AUC ROC': 0.854429, 'parameter_5': {'AUC ROC': 0.704906, 'Recall': 0.59542, 'CLL': -0.755878, 'Precision': [0.003771, 0.5], 'Learning time': 1.853, 'F1': 0.007494, 'Inference time': 147.282, 'AUC PR': 0.049983}, 'Recall': 0.793893, 'CLL': -0.541103, 'Precision': [0.004799, 0.5], 'Learning time': 5.8020000000000005, 'F1': 0.00954, 'Inference time': 9.312, 'AUC PR': 0.083046}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.097091
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 2.932 seconds
Total inference time: 4.002 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN-B), Time: 05:01:09
{'AUC ROC': 0.983994, 'Recall': 0.984733, 'CLL': -0.097091, 'Precision': [0.126223, 0.5], 'Learning time': 2.932, 'F1': 0.223764, 'Inference time': 4.002, 'AUC PR': 0.124824}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.140117
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.175 seconds
Total inference time: 3.096 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN), Time: 05:01:14
{'AUC ROC': 0.983994, 'Recall': 0.0, 'CLL': -0.140117, 'Precision': [nan, 0.5], 'Learning time': 1.175, 'F1': nan, 'Inference time': 3.096, 'AUC PR': 0.124824}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
0;false,false,false;acquired(A, I), cityhascompanyoffice(J, I).;false;false
0;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
0;true,false;companyalsoknownas(A, A).;false;true
0;false;acquired(F, A), companyalsoknownas(F, G).;true;true
0;true,false,false;economicsectorcompany(B, C).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,true;economicsectorcompany(B, F).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyalsoknownas(C, D).;false;false
1;false,false;acquired(A, H), countryhascompanyoffice(I, H).;true;false
1;false;acquired(E, A).;true;true
1;false,true,false;cityhascompanyoffice(G, A), cityhascompanyoffice(G, E).;false;false
1;false,true;companyalsoknownas(A, F), economicsectorcompany(B, F).;false;true
1;false,false,true;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;false,false,false;companyalsoknownas(A, I).;false;false
2;true;economicsectorcompany(B, C).;false;true
2;true,false;acquired(D, A), economicsectorcompany(B, D).;false;true
2;false;acquired(F, A), economicsectorcompany(B, F).;false;true
2;true,false,false;acquired(C, E), economicsectorcompany(B, E).;false;false
2;false,false;acquired(G, A).;true;true
2;false,false,true;acquired(H, G), economicsectorcompany(B, H).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
4;false,false,false;companyceo(A, L).;false;false
4;true;economicsectorcompany(B, C).;false;true
4;true,false;companyalsoknownas(C, E), economicsectorcompany(B, E).;false;true
4;false;acquired(H, A), bankboughtbank(H, A).;false;true
4;true,false,false;acquired(F, C), acquired(G, F).;false;false
4;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
4;false,false,true;cityhascompanyoffice(K, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
5;false,false,false;acquired(A, L).;false;false
5;true;companyalsoknownas(C, D).;false;false
5;false,false;acquired(I, A), companyceo(I, J).;true;true
5;false;companyalsoknownas(A, E), economicsectorcompany(B, E).;true;true
5;false,true,false;acquired(H, A).;false;false
5;false,true;acquired(A, F), companyceo(F, G).;false;true
5;false,false,true;countryhascompanyoffice(K, A), countryhascompanyoffice(K, I).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), countryhascompanyoffice(D, A).;true;true
6;true,false,true;companyceo(F, G), cityhascompanyoffice(C, F).;false;false
6;false,false,false;companyalsoknownas(A, K), acquired(K, L).;false;false
6;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;true;false
6;false;companyalsoknownas(A, H), economicsectorcompany(B, H).;false;true
6;false,false;bankchiefexecutiveceo(A, I).;true;true
6;false,false,true;companyceo(J, I), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;false,false,false;acquired(K, A), economicsectorcompany(B, K).;false;false
7;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;false;false
7;false,false;companyalsoknownas(A, I).;true;true
7;false;companyceo(A, E), acquired(A, F).;true;true
7;false,true,false;countryhascompanyoffice(G, F), acquired(F, H).;false;false
7;false,true;economicsectorcompany(B, F).;false;true
7;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false,false,false;companyceo(A, L).;false;false
8;true;economicsectorcompany(B, C).;false;true
8;true,false;acquired(C, D), companyceo(A, E).;false;true
8;false;acquired(H, A), companyalsoknownas(H, I).;true;true
8;true,false,false;acquired(F, C), cityhascompanyoffice(G, C).;false;false
8;false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;true
8;false,true;economicsectorcompany(B, I).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
9;false,false,false;acquired(K, A).;false;false
9;true;economicsectorcompany(B, C).;false;true
9;true,false;acquired(D, C).;false;true
9;false;acquired(A, G), economicsectorcompany(B, G).;false;true
9;true,false,false;acquired(C, E), companyceo(E, F).;false;false
9;false,false;acquired(A, H).;true;true
9;false,false,true;acquired(H, I), cityhascompanyoffice(J, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, C) )
%   then return 0.10814893509951223;  // std dev = 0,433, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, G), athleteplaysforteam(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.18375400560364108;  // std dev = 0,457, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, E), teamalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.15623065165907393;  // std dev = 1,701, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.46125983910675533;  // std dev = 0,373, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(E, D) )
%   | then return 0.7944345955012443;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(C, F) )
%   | | then return 0.6025597939233737;  // std dev = 0,107, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5155129923615089;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( athleteledsportsteam(G, A) )
%   | then return -0.20556540449875577;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.29853927221200083;  // std dev = 0,228, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( teamplaysagainstteam(E, C), teamplaysagainstteam(F, E) )
%   | then return 0.09764364574977846;  // std dev = 1,358, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, H), teamalsoknownas(I, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.25190569422319403;  // std dev = 0,726, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.08006352442806906;  // std dev = 0,358, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   else if ( teamplaysagainstteam(A, D), athleteledsportsteam(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, A), athleteledsportsteam(H, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19355265936258204;  // std dev = 0,730, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(D, A) )
%   then if ( teamalsoknownas(D, E) )
%   | then if ( athleteledsportsteam(F, E), athleteplaysforteam(C, E) )
%   | | then return -0.2010532270994602;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.5938066882064645;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(G, H) )
%   | then return 0.09576108650746941;  // std dev = 1,384, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then return -0.05908983452520974;  // std dev = 0,801, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(E, A), teamplaysagainstteam(A, F) )
%   | then if ( teamalsoknownas(G, F), teamplaysagainstteam(F, H) )
%   | | then return 0.17682068960564126;  // std dev = 0,557, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, I) )
%   | | then return 0.2669673547663546;  // std dev = 0,582, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1313538983126227;  // std dev = 0,741, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D), athleteledsportsteam(E, A) )
%   then return -0.047578344484080604;  // std dev = 0,862, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( teamplaysagainstteam(F, C), athleteplaysforteam(G, C) )
%   | then return 0.13862279040629055;  // std dev = 1,056, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.0433561968765669;  // std dev = 1,405, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.755196
   AUC PR    = 0.06301
   CLL	      = -0.58085
   Precision = 0.004314 at threshold = 0.5
   Recall    = 0.679389
   F1        = 0.008573


Total learning time: 14.631 seconds
Total inference time: 142.84199999999998 seconds
AUC ROC: 0.755196


Results scoring model
   AUC ROC   = 0.96
   AUC PR    = 0.954701
   CLL	      = -0.35936
   Precision = 0.9 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.9


Total scoring time: 1.295 seconds
Parameter learned model CLL: -0.35936


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(D, C)', 'false,false,false': 'teamplaysagainstteam(A, G), athleteplaysforteam(H, G)', 'false,false': 'teamplaysagainstteam(A, F)', 'false': 'teamplaysagainstteam(E, A)'}, {'false,false,false,false': [0.913, 1, 5], 'true': [0.433, 9, 3], 'false,true': [0.0, 0, 2], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false': 'teamplaysagainstteam(A, E), teamalsoknownas(F, E)', 'false': 'teamplaysagainstteam(D, A)'}, {'false,false,false': [0.913, 1, 5], 'true': [0.457, 9, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(F, A)', 'false': 'teamplaysagainstteam(E, A)'}, {'false,false,false': [0.373, 1, 5], 'true,false': [0.0, 0, 0], 'true,true': [1.701, 9, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplayssport(C, B)', 'true': 'teamplaysagainstteam(A, D), teamalsoknownas(E, D)', 'true,false': 'teamplaysinleague(A, F), athleteplaysinleague(C, F)', 'false': 'athleteledsportsteam(G, A)'}, {'true,false,true': [0.107, 0, 3], 'false,true': [0.0, 7, 0], 'true,true': [0.0, 0, 3], 'false,false': [0.228, 3, 0], 'true,false,false': [0.0, 0, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteplaysforteam(D, C)', 'false,false,false': 'athleteledsportsteam(J, A)', 'true': 'teamplaysagainstteam(E, C), teamplaysagainstteam(F, E)', 'false,false': 'teamplaysagainstteam(A, H), teamalsoknownas(I, H)', 'false': 'teamplaysagainstteam(G, A)'}, {'false,false,false,false': [0.726, 1, 5], 'true,true': [1.358, 9, 5], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false,false': 'teamplaysagainstteam(G, A), athleteledsportsteam(H, G)', 'false,false': 'teamplaysagainstteam(F, A)', 'false': 'teamplaysagainstteam(A, D), athleteledsportsteam(E, D)'}, {'false,false,false,false': [0.73, 1, 5], 'true': [0.358, 9, 5], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamalsoknownas(D, A)', 'true,true': 'athleteledsportsteam(F, E), athleteplaysforteam(C, E)', 'true': 'teamalsoknownas(D, E)', 'false': 'athleteledsportsteam(G, H)'}, {'false,false': [0.0, 0, 0], 'true,true,true': [0.0, 2, 0], 'false,true': [1.384, 8, 9], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false,false,false': 'teamplaysagainstteam(J, A)', 'true': 'athleteplaysforteam(C, D)', 'false,false': 'teamplaysagainstteam(A, I)', 'false': 'athleteledsportsteam(E, A), teamplaysagainstteam(A, F)', 'false,true': 'teamalsoknownas(G, F), teamplaysagainstteam(F, H)'}, {'false,false,false,false': [0.741, 1, 5], 'true,true': [0.801, 7, 2], 'true,false': [0.0, 0, 0], 'false,false,true': [0.582, 1, 2], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.557, 1, 1], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D), athleteledsportsteam(E, A)', 'false': 'teamplaysagainstteam(F, C), athleteplaysforteam(G, C)'}, {'false,true': [1.056, 3, 8], 'true': [0.862, 7, 2], 'false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'true': [1.405, 10, 10], 'false': [0.0, 0, 0]}]]
[{'': [0.1874999999999999, 0.109375], 'false,false,false': [nan, 0.1388888888888887], 'false,false': [nan, 0.1388888888888887], 'false': [0.0, 0.1388888888888887]}, {'': [0.2085468328169012, 0.13888888888888884], 'false,false': [nan, 0.13888888888888884], 'false': [nan, 0.13888888888888884]}, {'': [0.2066010131067073, 0.13888888888888887], 'true': [0.2066010131067073, nan], 'false,false': [nan, 0.13888888888888887], 'false': [nan, 0.13888888888888887]}, {'': [0.014694935165794787, 0.00700175346282359], 'true': [0.0, 0.003479301579558986], 'true,false': [0.0037885728310753652, 0.0], 'false': [-1.586032892321652e-17, 0.017288280155120017]}, {'': [0.13164046918670985, 0.08789471305186398], 'false,false,false': [nan, 0.08789471305186398], 'true': [0.13164046918670985, nan], 'false,false': [nan, 0.08789471305186398], 'false': [nan, 0.08789471305186398]}, {'': [0.12851903342849094, 0.08886659364597436], 'false,false,false': [nan, 0.08886659364597436], 'false,false': [nan, 0.08886659364597436], 'false': [nan, 0.08886659364597436]}, {'': [0.1404005077689204, 0.11271848518045076], 'true,true': [0.0, 0.0], 'true': [0.1404005077689204, nan], 'false': [0.11271848518045077, nan]}, {'': [0.07129305742349919, 0.11225457616996212], 'false,false,false': [nan, 0.091536637526672], 'true': [0.07129305742349919, nan], 'false,false': [0.11293458367331828, 0.091536637526672], 'false': [0.15499731497901237, 0.10275617725807153], 'false,true': [0.15499731497901237, nan]}, {'': [0.0824806685453488, 0.10138297005746826], 'false': [0.10138297005746826, nan]}, {'': [0.09871566644870824, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, C).;true;true
0;false;teamplaysagainstteam(E, A).;true;true
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;teamplaysagainstteam(A, D), teamalsoknownas(E, D).;true;true
3;true,false;teamplaysinleague(A, F), athleteplaysinleague(C, F).;true;true
3;false;athleteledsportsteam(G, A).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamalsoknownas(D, A).;true;true
6;true;athleteledsportsteam(F, E), athleteplaysforteam(C, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysagainstteam(F, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7356630398665785;  // std dev = 0,051, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.13771490792333196;  // std dev = 0,116, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5717568755386447;  // std dev = 0,064, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12232423680858143;  // std dev = 0,106, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(E, D) )
%   | then return 0.40961217585893045;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(C, F) )
%   | | then return 0.4232206989795349;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.45043774522074376;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( athleteledsportsteam(G, A) )
%   | then return -0.09958087604494291;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.13400495230982645;  // std dev = 0,084, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.31418710228968755;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3443703963677804;  // std dev = 0,006, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | then return -0.09019898524669794;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.1213487153877915;  // std dev = 0,074, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.2507153995764078;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.27125987722358946;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysagainstteam(A, E), teamalsoknownas(E, F) )
%   | then return -0.08276327310339571;  // std dev = 0,003, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.10989359218090772;  // std dev = 0,067, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamalsoknownas(D, A) )
%   then if ( athleteledsportsteam(E, F), athleteplaysforteam(C, F) )
%   | then return -0.07767004660949894;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.20749632270840046;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(G, B) )
%   | then if ( teamplaysagainstteam(A, H) )
%   | | then return 0.20638187237538086;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2210610536423217;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamplaysagainstteam(I, A), teamalsoknownas(I, J) )
%   | | then return -0.07592980317695316;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10036327987435562;  // std dev = 0,061, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.1747805776578372;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.18534428036133138;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | then return -0.07075885745012951;  // std dev = 0,005, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.09280601379890992;  // std dev = 0,055, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.15098484782385135;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.15897269821539844;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | then return -0.0658636363742878;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.08625692289382997;  // std dev = 0,050, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.1326323844060367;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.13885150190344667;  // std dev = 0,003, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | then return -0.06192553220417275;  // std dev = 0,004, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.07976147623216785;  // std dev = 0,047, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.987609
   AUC PR    = 0.128049
   CLL	      = -0.13299
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 10.098 seconds
Total inference time: 13.002 seconds
AUC ROC: 0.987609


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096935
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.979 seconds
Refined model CLL: -0.096935


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987609
   AUC PR    = 0.128049
   CLL	      = -0.13299
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 27.003 seconds
Total inference time: 13.002 seconds
AUC ROC: 0.987609
Total revision time: 27.003
Best scored revision CLL: -0.096935


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 05:04:17
{'AUC ROC': 0.987609, 'Recall': 0.984733, 'CLL': -0.13299, 'Precision': [0.126223, 0.5], 'Learning time': 27.003, 'parameter_10': {'AUC ROC': 0.755196, 'Recall': 0.679389, 'CLL': -0.58085, 'Precision': [0.004314, 0.5], 'Learning time': 14.631, 'F1': 0.008573, 'Inference time': 142.84199999999998, 'AUC PR': 0.06301}, 'F1': 0.223764, 'Inference time': 13.002, 'AUC PR': 0.128049}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.097091
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 2.8 seconds
Total inference time: 3.976 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN-B), Time: 05:04:25
{'AUC ROC': 0.983994, 'Recall': 0.984733, 'CLL': -0.097091, 'Precision': [0.126223, 0.5], 'Learning time': 2.8, 'F1': 0.223764, 'Inference time': 3.976, 'AUC PR': 0.124824}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.140117
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.069 seconds
Total inference time: 3.416 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN), Time: 05:04:29
{'AUC ROC': 0.983994, 'Recall': 0.0, 'CLL': -0.140117, 'Precision': [nan, 0.5], 'Learning time': 1.069, 'F1': nan, 'Inference time': 3.416, 'AUC PR': 0.124824}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
0;false,false,false;acquired(A, I), cityhascompanyoffice(J, I).;false;false
0;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
0;true,false;companyalsoknownas(A, A).;false;true
0;false;acquired(F, A), companyalsoknownas(F, G).;true;true
0;true,false,false;economicsectorcompany(B, C).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,true;economicsectorcompany(B, F).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyalsoknownas(C, D).;false;false
1;false,false;acquired(A, H), countryhascompanyoffice(I, H).;true;false
1;false;acquired(E, A).;true;true
1;false,true,false;cityhascompanyoffice(G, A), cityhascompanyoffice(G, E).;false;false
1;false,true;companyalsoknownas(A, F), economicsectorcompany(B, F).;false;true
1;false,false,true;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;false,false,false;companyalsoknownas(A, I).;false;false
2;true;economicsectorcompany(B, C).;false;true
2;true,false;acquired(D, A), economicsectorcompany(B, D).;false;true
2;false;acquired(F, A), economicsectorcompany(B, F).;false;true
2;true,false,false;acquired(C, E), economicsectorcompany(B, E).;false;false
2;false,false;acquired(G, A).;true;true
2;false,false,true;acquired(H, G), economicsectorcompany(B, H).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
4;false,false,false;companyceo(A, L).;false;false
4;true;economicsectorcompany(B, C).;false;true
4;true,false;companyalsoknownas(C, E), economicsectorcompany(B, E).;false;true
4;false;acquired(H, A), bankboughtbank(H, A).;false;true
4;true,false,false;acquired(F, C), acquired(G, F).;false;false
4;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
4;false,false,true;cityhascompanyoffice(K, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
5;false,false,false;acquired(A, L).;false;false
5;true;companyalsoknownas(C, D).;false;false
5;false,false;acquired(I, A), companyceo(I, J).;true;true
5;false;companyalsoknownas(A, E), economicsectorcompany(B, E).;true;true
5;false,true,false;acquired(H, A).;false;false
5;false,true;acquired(A, F), companyceo(F, G).;false;true
5;false,false,true;countryhascompanyoffice(K, A), countryhascompanyoffice(K, I).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), countryhascompanyoffice(D, A).;true;true
6;true,false,true;companyceo(F, G), cityhascompanyoffice(C, F).;false;false
6;false,false,false;companyalsoknownas(A, K), acquired(K, L).;false;false
6;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;true;false
6;false;companyalsoknownas(A, H), economicsectorcompany(B, H).;false;true
6;false,false;bankchiefexecutiveceo(A, I).;true;true
6;false,false,true;companyceo(J, I), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;false,false,false;acquired(K, A), economicsectorcompany(B, K).;false;false
7;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;false;false
7;false,false;companyalsoknownas(A, I).;true;true
7;false;companyceo(A, E), acquired(A, F).;true;true
7;false,true,false;countryhascompanyoffice(G, F), acquired(F, H).;false;false
7;false,true;economicsectorcompany(B, F).;false;true
7;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false,false,false;companyceo(A, L).;false;false
8;true;economicsectorcompany(B, C).;false;true
8;true,false;acquired(C, D), companyceo(A, E).;false;true
8;false;acquired(H, A), companyalsoknownas(H, I).;true;true
8;true,false,false;acquired(F, C), cityhascompanyoffice(G, C).;false;false
8;false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;true
8;false,true;economicsectorcompany(B, I).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
9;false,false,false;acquired(K, A).;false;false
9;true;economicsectorcompany(B, C).;false;true
9;true,false;acquired(D, C).;false;true
9;false;acquired(A, G), economicsectorcompany(B, G).;false;true
9;true,false,false;acquired(C, E), companyceo(E, F).;false;false
9;false,false;acquired(A, H).;true;true
9;false,false,true;acquired(H, I), cityhascompanyoffice(J, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteledsportsteam(D, C) )
%   then if ( teamalsoknownas(E, A) )
%   | then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( teamalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.1914822684328457;  // std dev = 0,471, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   else if ( teamplaysagainstteam(A, F), teamalsoknownas(G, F) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(I, A), athleteplaysforteam(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.6359267128772901;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(D, C) )
%   | then return 0.13682126690261576;  // std dev = 1,814, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else return 0.5808375320446877;  // std dev = 0,863, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A), athleteledsportsteam(G, F) )
%   | | then if ( teamalsoknownas(H, A) )
%   | | | then return -0.17626634551589415;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5398498420741675;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.1896247753450465;  // std dev = 2,111, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else if ( teamplaysagainstteam(E, C) )
%   | | then return -0.15211381203652685;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(H, A) )
%   | | | then return 0.6511784947573074;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4011784947573074;  // std dev = 1,225, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(C, A) )
%   then if ( athleteplayssport(C, D) )
%   | then return -0.22008485992401045;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.22104721903956812;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then if ( teamalsoknownas(G, F), athleteledsportsteam(E, G) )
%   | | | then return 0.7799151400759896;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6822762554311508;  // std dev = 0,040, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.5555312094906129;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5347746881807504;  // std dev = 0,051, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(I, A), teamalsoknownas(J, I) )
%   | | then return -0.19627707954201312;  // std dev = 0,072, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.35201996393177837;  // std dev = 0,194, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( teamalsoknownas(E, C) )
%   | then return 0.05903092144654238;  // std dev = 1,442, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( teamplaysagainstteam(C, F), teamplaysagainstteam(F, G) )
%   | | then return 0.34168759853821673;  // std dev = 0,664, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, A), athleteledsportsteam(J, I) )
%   | | then if ( athleteplaysforteam(K, I) )
%   | | | then return -0.11239490719423485;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, L) )
%   | | | then return 0.2620948518747723;  // std dev = 0,696, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2121158880223159;  // std dev = 0,662, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(D, C) )
%   | then return 0.04842376652536976;  // std dev = 1,433, 16,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else return 0.2611828008431052;  // std dev = 0,648, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamalsoknownas(E, A) )
%   | then if ( teamplaysagainstteam(F, A), teamplaysinleague(F, G) )
%   | | then return -0.1016610497510308;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.31564780786836444;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(A, I), teamplaysinleague(I, J) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1667010947737451;  // std dev = 0,952, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(D, A) )
%   then if ( teamalsoknownas(E, A) )
%   | then return -0.2094048913555958;  // std dev = 0,000113, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteledsportsteam(D, F) )
%   | | then if ( teamplaysinleague(F, G), athleteplaysforteam(C, F) )
%   | | | then return -0.10048867900879299;  // std dev = 0,537, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(H, A) )
%   | then return 0.2786406125570383;  // std dev = 0,489, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( teamplaysinleague(I, J) )
%   | | then return 0.14012979830879788;  // std dev = 1,551, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then return 0.035880933591900095;  // std dev = 1,158, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, E), teamplaysagainstteam(F, A) )
%   | then if ( athleteledsportsteam(G, F), teamplaysagainstteam(H, F) )
%   | | then return 0.23298174393452636;  // std dev = 0,738, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(I, A) )
%   | | then if ( teamplaysagainstteam(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.202921486609135;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysagainstteam(A, K) )
%   | | | then return -0.30805203837012096;  // std dev = 0,116, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.09720079897689851;  // std dev = 0,963, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(D, C), teamplaysinleague(A, E) )
%   | then return 0.04637850446188981;  // std dev = 0,560, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(C, F), athleteplaysforteam(G, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.11013366728131217;  // std dev = 0,327, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamplaysagainstteam(A, H), teamalsoknownas(I, H) )
%   | then return 0.011896509610623048;  // std dev = 0,324, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( teamplaysagainstteam(A, J), athleteplaysforteam(K, A) )
%   | | then return 0.4055280505474189;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysinleague(A, L) )
%   | | | then return 0.14330465371868678;  // std dev = 0,730, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.06581580881995014;  // std dev = 0,711, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then return 0.037840344931760944;  // std dev = 0,556, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(E, C), teamplaysinleague(E, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09274567318425807;  // std dev = 0,322, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamplaysagainstteam(G, A) )
%   | then return 0.025549318556185342;  // std dev = 1,271, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06369371383428694;  // std dev = 0,966, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */


Results
   AUC ROC   = 0.690627
   AUC PR    = 0.046413
   CLL	      = -0.553496
   Precision = 0.003533 at threshold = 0.5
   Recall    = 0.618321
   F1        = 0.007026


Total learning time: 5.61 seconds
Total inference time: 21.562 seconds
AUC ROC: 0.690627


Results scoring model
   AUC ROC   = 0.968889
   AUC PR    = 0.968752
   CLL	      = -0.362285
   Precision = 0.875 at threshold = 0.5
   Recall    = 0.933333
   F1        = 0.903226


Total scoring time: 0.946 seconds
Parameter learned model CLL: -0.362285


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteledsportsteam(D, C)', 'false,false,false': 'teamplaysagainstteam(I, A), athleteplaysforteam(J, I)', 'true': 'teamalsoknownas(E, A)', 'false,false': 'teamplaysagainstteam(H, A)', 'false': 'teamplaysagainstteam(A, F), teamalsoknownas(G, F)', 'true,false': 'teamalsoknownas(A, A)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [1.247, 2, 7], 'true,true': [1.095, 3, 2], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.471, 10, 5], 'false,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamalsoknownas(D, C)', 'false,false': 'teamplaysagainstteam(F, A), athleteledsportsteam(G, F)', 'false': 'teamplaysagainstteam(A, E)', 'false,false,true': 'teamalsoknownas(H, A)'}, {'false,false,false': [1.247, 2, 7], 'false,false,true,true': [0.0, 1, 0], 'true,true': [1.814, 11, 5], 'true,false': [0.863, 1, 3], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false,false': 'teamalsoknownas(H, A)', 'true': 'teamplaysagainstteam(A, D)', 'false,false': 'teamplaysagainstteam(A, G)', 'false': 'teamplaysagainstteam(A, F)', 'true,false': 'teamplaysagainstteam(E, C)'}, {'true,false,true': [0.0, 1, 0], 'false,false,false,false': [1.225, 2, 6], 'true,true': [2.111, 12, 8], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteledsportsteam(C, A)', 'true': 'athleteplayssport(C, D)', 'false,false': 'teamplaysagainstteam(I, A), teamalsoknownas(J, I)', 'false': 'athleteplayssport(E, B)', 'false,true,false': 'teamplaysinleague(A, H)', 'false,true,true': 'teamalsoknownas(G, F), athleteledsportsteam(E, G)', 'false,true': 'teamplaysagainstteam(A, F)'}, {'false,false,false': [0.194, 4, 0], 'true,true': [0.01, 4, 0], 'true,false': [0.009, 3, 0], 'false,false,true': [0.072, 4, 0], 'false,true,false,true': [0.0, 0, 4], 'false,true,true,true': [0.01, 0, 4], 'false,true,true,false': [0.04, 0, 4], 'false,true,false,false': [0.051, 0, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), athleteplaysforteam(D, C)', 'false,false,false': 'teamplaysinleague(A, L)', 'true': 'teamalsoknownas(E, C)', 'false,false': 'teamplaysagainstteam(I, A), athleteledsportsteam(J, I)', 'false': 'teamplaysagainstteam(A, H)', 'true,false': 'teamplaysagainstteam(C, F), teamplaysagainstteam(F, G)', 'false,false,true': 'athleteplaysforteam(K, I)'}, {'true,false,true': [0.664, 1, 3], 'false,false,true,true': [0.0, 1, 0], 'true,true': [1.442, 11, 5], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,false': [0.662, 1, 3], 'false,false,false,true': [0.696, 1, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'teamplaysagainstteam(K, A)', 'true': 'teamalsoknownas(D, C)', 'false,false': 'teamplaysagainstteam(A, I), teamplaysinleague(I, J)', 'false': 'teamalsoknownas(E, A)', 'false,true,false': 'teamplaysagainstteam(A, H)', 'false,true': 'teamplaysagainstteam(F, A), teamplaysinleague(F, G)'}, {'false,false,false,false': [0.952, 2, 6], 'true,true': [1.433, 11, 5], 'true,false': [0.648, 1, 3], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteledsportsteam(D, A)', 'true,false,true': 'teamplaysinleague(F, G), athleteplaysforteam(C, F)', 'true': 'teamalsoknownas(E, A)', 'true,false': 'athleteledsportsteam(D, F)', 'false': 'teamalsoknownas(H, A)', 'false,false': 'teamplaysinleague(I, J)'}, {'false,false,false': [0.0, 0, 0], 'true,true': [0.000113, 2, 0], 'true,false,true,true': [0.537, 5, 1], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false,true': [0.489, 1, 3], 'false,false,true': [1.551, 7, 11]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false,false,false': 'teamplaysagainstteam(A, K)', 'true': 'athleteplaysforteam(C, D)', 'false,false': 'teamalsoknownas(I, A)', 'false': 'teamplaysinleague(A, E), teamplaysagainstteam(F, A)', 'false,true': 'athleteledsportsteam(G, F), teamplaysagainstteam(H, F)', 'false,false,true': 'teamplaysagainstteam(J, A)'}, {'false,false,true,true': [0.0, 0, 0], 'true,true': [1.158, 9, 5], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,true,true': [0.738, 2, 3], 'false,false,false,false': [0.963, 2, 6], 'false,false,false,true': [0.116, 2, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamplaysinleague(A, L)', 'true': 'teamplaysagainstteam(D, C), teamplaysinleague(A, E)', 'false,false': 'teamplaysagainstteam(A, J), athleteplaysforteam(K, A)', 'false': 'teamplaysagainstteam(A, H), teamalsoknownas(I, H)', 'true,false': 'teamplaysagainstteam(C, F), athleteplaysforteam(G, C)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.711, 2, 2], 'true,true': [0.56, 2, 1], 'false,false,true': [0.0, 0, 1], 'true,false,false': [0.327, 1, 2], 'false,true': [0.324, 9, 4], 'false,false,false,true': [0.73, 1, 5]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamplaysagainstteam(A, I)', 'true': 'teamplaysagainstteam(C, D)', 'false,false': 'teamplaysagainstteam(H, A)', 'false': 'teamplaysagainstteam(G, A)', 'true,false': 'teamplaysagainstteam(E, C), teamplaysinleague(E, F)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [0.966, 2, 6], 'true,true': [0.556, 2, 1], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.322, 1, 2], 'false,true': [1.271, 10, 6], 'false,false,false,true': [0.0, 0, 0]}]]
[{'': [0.2275000000000001, 0.15999999999999986], 'false,false,false': [nan, 0.17283950617283939], 'true': [0.24000000000000005, 0.22222222222222202], 'false,false': [nan, 0.17283950617283939], 'false': [0.0, 0.17283950617283939], 'true,false': [nan, 0.22222222222222202]}, {'': [0.2334044230911987, 0.2017095710271229], 'true': [0.20574222959718022, 0.18633284209870182], 'false,false': [0.0, 0.1728395061728397], 'false': [nan, 0.2017095710271229], 'false,false,true': [0.0, nan]}, {'': [0.21750247705287434, 0.17283950617283944], 'false,false,false': [0.0, 0.1875], 'true': [0.22281639794811076, 0.0], 'false,false': [nan, 0.17283950617283944], 'false': [nan, 0.17283950617283944], 'true,false': [0.0, nan]}, {'': [2.7217030549118804e-05, 0.20220103785047253], 'true': [2.500564681701123e-05, 2.9636322153507127e-05], 'false,false': [0.0013130274464766695, 0.00944453613309841], 'false': [0.010074345912151669, 0.01144274329929848], 'false,true,false': [0.0, 0.0008616663537735677], 'false,true,true': [2.5005646816844695e-05, 0.0003990492850052818], 'false,true': [0.0025953654145831617, 0.000474795745956959]}, {'': [0.13884860720051323, 0.10399907950706075], 'false,false,false': [0.09677194773343517, 0.10972276760982212], 'true': [0.13002464618886073, 0.11022861356351771], 'false,false': [0.0, 0.10314463232732694], 'false': [nan, 0.10399907950706075], 'true,false': [0.11022861356351771, nan], 'false,false,true': [0.0, nan]}, {'': [0.13088929461185891, 0.09996381243015244], 'false,false,false': [nan, 0.11335759560903277], 'true': [0.12832459321638046, 0.10493497484672056], 'false,false': [nan, 0.11335759560903277], 'false': [0.04353667066190117, 0.11335759560903277], 'false,true,false': [nan, 0.0], 'false,true': [0.0, 0.0]}, {'': [0.038318877263362056, 0.12314712141489803], 'true,false,true': [0.048126148907841504, nan], 'true': [6.345943388830211e-09, 0.048126148907841504], 'true,false': [0.048126148907841504, nan], 'false': [0.0598493069794926, 0.13372507591623264], 'false,false': [0.13372507591623264, nan]}, {'': [0.09578048390759578, 0.11981527737012743], 'false,false,false': [0.006724713742310207, 0.11585147125962984], 'true': [0.09578048390759578, nan], 'false,false': [0.0, 0.12030289770461548], 'false': [0.10900123777837085, 0.11224920466801755], 'false,true': [0.10900123777837085, nan], 'false,false,true': [nan, 0.0]}, {'': [0.07103853184598859, 0.11050179227776465], 'false,false,false': [0.08890337287305118, 0.1264599782250369], 'true': [0.10442443772621468, 0.03562026557269698], 'false,false': [0.0, 0.1144215432984151], 'false': [0.10474603653463664, 0.11390612623222861], 'true,false': [nan, 0.03562026557269698]}, {'': [0.06951741124600806, 0.10655571714964396], 'false,false,false': [nan, 0.1167039331284669], 'true': [0.10303266314154491, 0.03449486181521395], 'false,false': [nan, 0.1167039331284669], 'false': [0.10099661086318845, 0.1167039331284669], 'true,false': [nan, 0.03449486181521395]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), athleteledsportsteam(D, C).;true;true
0;false;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
1;false;teamplaysagainstteam(F, A), athleteledsportsteam(G, F).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
2;true;teamplaysagainstteam(A, D).;true;true
2;false;teamalsoknownas(H, A).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteledsportsteam(C, A).;true;true
3;true;athleteplayssport(C, D).;true;true
3;false,false;teamplaysagainstteam(I, A), teamalsoknownas(J, I).;true;true
3;false;athleteplayssport(E, B).;true;true
3;false,true,false;teamplaysinleague(A, H).;true;true
3;false,true,true;teamalsoknownas(G, F), athleteledsportsteam(E, G).;true;true
3;false,true;teamplaysagainstteam(A, F).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), athleteplaysforteam(D, C).;true;true
4;false;teamplaysagainstteam(I, A), athleteledsportsteam(J, I).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
5;false,true;teamplaysagainstteam(F, A), teamplaysinleague(F, G).;true;true
5;false;teamalsoknownas(E, A).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteledsportsteam(D, A).;true;true
6;true;teamalsoknownas(E, A).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
7;false,false;teamalsoknownas(I, A).;true;true
7;false;teamplaysinleague(A, E), teamplaysagainstteam(F, A).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
8;false,false;teamplaysagainstteam(A, J), athleteplaysforteam(K, A).;true;true
8;false;teamplaysagainstteam(A, H), teamalsoknownas(I, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteledsportsteam(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( teamplaysagainstteam(A, F), teamalsoknownas(G, F) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysinleague(A, H), athleteplayssport(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109543;  // std dev = 4,21e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(E, A), athleteledsportsteam(F, E) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysinleague(A, G), athleteplayssport(H, B) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3927941835770488;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamalsoknownas(F, A) )
%   | then return 0.7209254696911421;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysinleague(A, G), athleteplayssport(H, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2209254696911421;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(C, A) )
%   then if ( athleteplayssport(C, D) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysagainstteam(A, F) )
%   | | then if ( teamalsoknownas(G, F), athleteledsportsteam(E, G) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6351923206681037;  // std dev = 0,096, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(I, A), teamalsoknownas(J, I) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.21360061981154088;  // std dev = 0,224, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08669157763403179;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(G, A), athleteledsportsteam(H, G) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | then return 0.12029102707062884;  // std dev = 0,491, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3011543792433218;  // std dev = 0,669, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(F, A), teamalsoknownas(G, F) )
%   | | then if ( teamplaysagainstteam(A, G) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08534098854620716;  // std dev = 0,000383, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07991426875013126;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamalsoknownas(H, A) )
%   | then if ( teamplaysagainstteam(I, A), teamplaysinleague(I, J) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.3299933161029387;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysinleague(A, K), athleteplayssport(L, B) )
%   | | then return 0.276998163264725;  // std dev = 0,036, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.06142325505318155;  // std dev = 0,774, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(D, A) )
%   then if ( teamalsoknownas(E, A) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.030747786193344187;  // std dev = 0,263, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( teamplaysinleague(A, G) )
%   | | then if ( teamplaysagainstteam(A, H) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.22513732042254614;  // std dev = 0,032, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3343112942371289;  // std dev = 0,201, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14210512392492233;  // std dev = 0,114, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteledsportsteam(D, A), athleteplaysforteam(D, A) )
%   | then if ( athleteplaysinleague(D, E), teamplaysinleague(A, E) )
%   | | then return -0.07666467600060295;  // std dev = 0,000327, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07435182154041163;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(F, B), athleteplaysforteam(F, G) )
%   | | then return 0.1865473573990384;  // std dev = 0,033, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.007181517187024135;  // std dev = 0,187, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamplaysinleague(A, H), teamplaysagainstteam(I, A) )
%   | then return 0.07987353038398376;  // std dev = 0,266, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( teamalsoknownas(J, A) )
%   | | then return 0.20221302397411922;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.07122250614379752;  // std dev = 0,233, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.04391699402325355;  // std dev = 0,280, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( teamplaysagainstteam(A, D), teamalsoknownas(E, D) )
%   | then if ( athleteledsportsteam(F, A), athleteplaysforteam(F, A) )
%   | | then return -0.0714225031558992;  // std dev = 0,000311, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( athleteplayssport(G, B) )
%   | | | then return 0.1604353885761158;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0702417640912297;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysagainstteam(A, H), athleteplaysforteam(I, A) )
%   | | then return 0.18509745953915713;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.08376451533657887;  // std dev = 0,229, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( teamplaysagainstteam(A, E) )
%   | | then if ( teamalsoknownas(F, E) )
%   | | | then return 0.14186950928863742;  // std dev = 0,011, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15308166876077312;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.16581046921829978;  // std dev = 0,025, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.23539614384350774;  // std dev = 0,168, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then if ( teamalsoknownas(H, G), teamalsoknownas(I, H) )
%   | | then return -0.0706385905863534;  // std dev = 0,001, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( teamalsoknownas(G, J), teamplaysagainstteam(A, J) )
%   | | | then return -0.06570059124356743;  // std dev = 0,003, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.06874409416585892;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.2536669775032831;  // std dev = 0,218, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.984982
   AUC PR    = 0.131111
   CLL	      = -0.245341
   Precision = 0.023618 at threshold = 0.5
   Recall    = 0.961832
   F1        = 0.046103


Total learning time: 21.352 seconds
Total inference time: 16.238 seconds
AUC ROC: 0.984982


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.13385
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.151 seconds
Refined model CLL: -0.13385


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.984982
   AUC PR    = 0.131111
   CLL	      = -0.245341
   Precision = 0.023618 at threshold = 0.5
   Recall    = 0.961832
   F1        = 0.046103


Total learning time: 29.059 seconds
Total inference time: 16.238 seconds
AUC ROC: 0.984982
Total revision time: 29.059
Best scored revision CLL: -0.13385


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 05:05:37
{'AUC ROC': 0.984982, 'Recall': 0.961832, 'CLL': -0.245341, 'Precision': [0.023618, 0.5], 'Learning time': 29.059, 'F1': 0.046103, 'Inference time': 16.238, 'parameter_15': {'AUC ROC': 0.690627, 'Recall': 0.618321, 'CLL': -0.553496, 'Precision': [0.003533, 0.5], 'Learning time': 5.61, 'F1': 0.007026, 'Inference time': 21.562, 'AUC PR': 0.046413}, 'AUC PR': 0.131111}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.097091
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 3.055 seconds
Total inference time: 4.08 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN-B), Time: 05:05:44
{'AUC ROC': 0.983994, 'Recall': 0.984733, 'CLL': -0.097091, 'Precision': [0.126223, 0.5], 'Learning time': 3.055, 'F1': 0.223764, 'Inference time': 4.08, 'AUC PR': 0.124824}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.140117
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.252 seconds
Total inference time: 3.138 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN), Time: 05:05:49
{'AUC ROC': 0.983994, 'Recall': 0.0, 'CLL': -0.140117, 'Precision': [nan, 0.5], 'Learning time': 1.252, 'F1': nan, 'Inference time': 3.138, 'AUC PR': 0.124824}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
0;false,false,false;acquired(A, I), cityhascompanyoffice(J, I).;false;false
0;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
0;true,false;companyalsoknownas(A, A).;false;true
0;false;acquired(F, A), companyalsoknownas(F, G).;true;true
0;true,false,false;economicsectorcompany(B, C).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,true;economicsectorcompany(B, F).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyalsoknownas(C, D).;false;false
1;false,false;acquired(A, H), countryhascompanyoffice(I, H).;true;false
1;false;acquired(E, A).;true;true
1;false,true,false;cityhascompanyoffice(G, A), cityhascompanyoffice(G, E).;false;false
1;false,true;companyalsoknownas(A, F), economicsectorcompany(B, F).;false;true
1;false,false,true;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;false,false,false;companyalsoknownas(A, I).;false;false
2;true;economicsectorcompany(B, C).;false;true
2;true,false;acquired(D, A), economicsectorcompany(B, D).;false;true
2;false;acquired(F, A), economicsectorcompany(B, F).;false;true
2;true,false,false;acquired(C, E), economicsectorcompany(B, E).;false;false
2;false,false;acquired(G, A).;true;true
2;false,false,true;acquired(H, G), economicsectorcompany(B, H).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
4;false,false,false;companyceo(A, L).;false;false
4;true;economicsectorcompany(B, C).;false;true
4;true,false;companyalsoknownas(C, E), economicsectorcompany(B, E).;false;true
4;false;acquired(H, A), bankboughtbank(H, A).;false;true
4;true,false,false;acquired(F, C), acquired(G, F).;false;false
4;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
4;false,false,true;cityhascompanyoffice(K, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
5;false,false,false;acquired(A, L).;false;false
5;true;companyalsoknownas(C, D).;false;false
5;false,false;acquired(I, A), companyceo(I, J).;true;true
5;false;companyalsoknownas(A, E), economicsectorcompany(B, E).;true;true
5;false,true,false;acquired(H, A).;false;false
5;false,true;acquired(A, F), companyceo(F, G).;false;true
5;false,false,true;countryhascompanyoffice(K, A), countryhascompanyoffice(K, I).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), countryhascompanyoffice(D, A).;true;true
6;true,false,true;companyceo(F, G), cityhascompanyoffice(C, F).;false;false
6;false,false,false;companyalsoknownas(A, K), acquired(K, L).;false;false
6;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;true;false
6;false;companyalsoknownas(A, H), economicsectorcompany(B, H).;false;true
6;false,false;bankchiefexecutiveceo(A, I).;true;true
6;false,false,true;companyceo(J, I), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;false,false,false;acquired(K, A), economicsectorcompany(B, K).;false;false
7;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;false;false
7;false,false;companyalsoknownas(A, I).;true;true
7;false;companyceo(A, E), acquired(A, F).;true;true
7;false,true,false;countryhascompanyoffice(G, F), acquired(F, H).;false;false
7;false,true;economicsectorcompany(B, F).;false;true
7;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false,false,false;companyceo(A, L).;false;false
8;true;economicsectorcompany(B, C).;false;true
8;true,false;acquired(C, D), companyceo(A, E).;false;true
8;false;acquired(H, A), companyalsoknownas(H, I).;true;true
8;true,false,false;acquired(F, C), cityhascompanyoffice(G, C).;false;false
8;false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;true
8;false,true;economicsectorcompany(B, I).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
9;false,false,false;acquired(K, A).;false;false
9;true;economicsectorcompany(B, C).;false;true
9;true,false;acquired(D, C).;false;true
9;false;acquired(A, G), economicsectorcompany(B, G).;false;true
9;true,false,false;acquired(C, E), companyceo(E, F).;false;false
9;false,false;acquired(A, H).;true;true
9;false,false,true;acquired(H, I), cityhascompanyoffice(J, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(A, E) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.23314893509951237;  // std dev = 0,484, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   else if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysagainstteam(I, A), athleteplaysforteam(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5854216623722396;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(C, D) )
%   | then return 0.2722347604684223;  // std dev = 2,202, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else return 0.24049697821708607;  // std dev = 1,265, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A), teamplaysinleague(F, G) )
%   | | then if ( teamalsoknownas(A, H) )
%   | | | then return -0.1667945087684516;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.498380757744019;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.22192222494224267;  // std dev = 2,535, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( teamplaysagainstteam(E, C) )
%   | | then return -0.1448829431573806;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, H) )
%   | | | then return 0.6717691493310408;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.33843581599770745;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0.5981913663403712;  // std dev = 0,199, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(C, E) )
%   | | then return 0.7464379540182117;  // std dev = 0,002, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.5933331543759164;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5989190499243382;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(G, A) )
%   | then if ( teamplaysagainstteam(G, H), teamplaysagainstteam(A, H) )
%   | | then if ( athleteplaysforteam(I, A) )
%   | | | then return -0.25434738571201265;  // std dev = 0,006, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.2509039730487218;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.16819667438685582;  // std dev = 0,099, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.40666684562408356;  // std dev = 7,45e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( teamalsoknownas(C, E) )
%   | then return 0.09773473198862852;  // std dev = 1,635, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else if ( teamplaysagainstteam(C, F), teamplaysagainstteam(F, G) )
%   | | then return 0.21141405327300125;  // std dev = 1,136, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, A), teamplaysinleague(I, J) )
%   | | then if ( athleteplaysforteam(K, I) )
%   | | | then return -0.11023020130869031;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(L, A) )
%   | | | then return 0.3649918205885536;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.21000226406583988;  // std dev = 1,086, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(C, D) )
%   | then return 0.11970862317991633;  // std dev = 1,717, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else return 0.07287245507014603;  // std dev = 0,977, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( teamalsoknownas(A, E) )
%   | then if ( teamplaysagainstteam(F, A), athleteledsportsteam(G, F) )
%   | | then return -0.09987429692085828;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16772225054174825;  // std dev = 0,329, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamplaysagainstteam(A, I), athleteledsportsteam(J, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14308731585635537;  // std dev = 1,068, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamalsoknownas(A, E) )
%   | then return 0.3992061894091947;  // std dev = 0,208, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( teamplaysinleague(F, D) )
%   | | then if ( athleteledsportsteam(G, F), athleteplaysforteam(C, F) )
%   | | | then return -0.0935817608107378;  // std dev = 0,982, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.13961528123671563;  // std dev = 0,949, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, H) )
%   | then return 0.118989893073731;  // std dev = 0,453, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( athleteledsportsteam(I, J) )
%   | | then return 0.13488504739801724;  // std dev = 1,557, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then return 0.04637755372063204;  // std dev = 1,518, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(E, A), teamplaysagainstteam(F, A) )
%   | then if ( teamplaysinleague(F, G), teamplaysagainstteam(H, F) )
%   | | then return 0.10504142501549985;  // std dev = 0,537, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, I) )
%   | | then if ( teamplaysagainstteam(J, A) )
%   | | | then return 0.047334629624352524;  // std dev = 0,399, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2591334483052895;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysagainstteam(A, K) )
%   | | | then return 0.10160253232233966;  // std dev = 0,953, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.078268185746166;  // std dev = 1,071, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(D, C), athleteledsportsteam(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(C, F), athleteplaysforteam(G, C) )
%   | | then return 0.36138208315009546;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.11705928114012587;  // std dev = 0,476, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( teamplaysagainstteam(A, H), teamalsoknownas(H, I) )
%   | then return 0.05119576790412181;  // std dev = 0,363, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else if ( teamplaysagainstteam(A, J), athleteplaysforteam(K, A) )
%   | | then return -0.24569665313815445;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteledsportsteam(L, A) )
%   | | | then return 0.45854064376845827;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.005982935103457167;  // std dev = 1,297, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then return 0.282772049419736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(E, C), athleteledsportsteam(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09911333012169102;  // std dev = 0,464, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( teamplaysagainstteam(G, A) )
%   | then return 0.017503713175946244;  // std dev = 1,782, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.059112278766928116;  // std dev = 1,074, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */


Results
   AUC ROC   = 0.856755
   AUC PR    = 0.054326
   CLL	      = -0.497503
   Precision = 0.014476 at threshold = 0.5
   Recall    = 0.679389
   F1        = 0.028348


Total learning time: 7.165 seconds
Total inference time: 13.968 seconds
AUC ROC: 0.856755


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.404999
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.947368


Total scoring time: 1.002 seconds
Parameter learned model CLL: -0.404999


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamplaysinleague(C, D)', 'false,false,false': 'teamplaysagainstteam(I, A), athleteplaysforteam(J, I)', 'true': 'teamalsoknownas(A, E)', 'false,false': 'teamplaysagainstteam(H, A)', 'false': 'teamplaysagainstteam(A, F), teamalsoknownas(F, G)', 'true,false': 'teamalsoknownas(A, A)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [1.477, 3, 8], 'true,true': [0.816, 2, 1], 'false,false,true': [0.0, 0, 1], 'true,false,false': [0.484, 15, 9], 'false,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamalsoknownas(C, D)', 'false,false': 'teamplaysagainstteam(F, A), teamplaysinleague(F, G)', 'false': 'teamplaysagainstteam(A, E)', 'false,false,true': 'teamalsoknownas(A, H)'}, {'false,false,false': [1.477, 3, 8], 'false,false,true,true': [0.0, 2, 0], 'true,true': [2.202, 11, 9], 'true,false': [1.265, 4, 3], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false,false': 'teamalsoknownas(A, H)', 'true': 'teamplaysagainstteam(A, D)', 'false,false': 'teamplaysagainstteam(A, G)', 'false': 'teamplaysagainstteam(A, F)', 'true,false': 'teamplaysagainstteam(E, C)'}, {'true,false,true': [0.0, 2, 0], 'false,false,false,false': [1.414, 3, 6], 'true,true': [2.535, 15, 12], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 2]}], ['teamplayssport(A, B)', {'': 'athleteplayssport(C, B)', 'true': 'teamalsoknownas(A, D)', 'true,false': 'teamplaysagainstteam(E, A), athleteplaysforteam(C, E)', 'false': 'teamplaysagainstteam(G, A)', 'true,false,false': 'teamplaysinleague(A, F)', 'false,true,true': 'athleteplaysforteam(I, A)', 'false,true': 'teamplaysagainstteam(G, H), teamplaysagainstteam(A, H)'}, {'true,false,true': [0.002, 0, 9], 'true,true': [0.199, 0, 4], 'false,false': [7.45e-09, 3, 0], 'false,true,false': [0.099, 3, 0], 'true,false,false,true': [0.0, 0, 4], 'true,false,false,false': [0.014, 0, 3], 'false,true,true,true': [0.006, 11, 0], 'false,true,true,false': [0.005, 3, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), athleteplaysforteam(D, C)', 'false,false,false': 'athleteledsportsteam(L, A)', 'true': 'teamalsoknownas(C, E)', 'false,false': 'teamplaysagainstteam(I, A), teamplaysinleague(I, J)', 'false': 'teamplaysagainstteam(A, H)', 'true,false': 'teamplaysagainstteam(C, F), teamplaysagainstteam(F, G)', 'false,false,true': 'athleteplaysforteam(K, I)'}, {'true,false,true': [1.136, 4, 5], 'false,false,true,true': [0.0, 2, 0], 'true,true': [1.635, 11, 7], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,false': [1.086, 3, 7], 'false,false,false,true': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'teamplaysagainstteam(K, A)', 'true': 'teamalsoknownas(C, D)', 'false,false': 'teamplaysagainstteam(A, I), athleteledsportsteam(J, I)', 'false': 'teamalsoknownas(A, E)', 'false,true,false': 'teamplaysagainstteam(A, H)', 'false,true': 'teamplaysagainstteam(F, A), athleteledsportsteam(G, F)'}, {'false,false,false,false': [1.068, 3, 6], 'true,true': [1.717, 11, 9], 'true,false': [0.977, 4, 3], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false,false': [0.329, 1, 2], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamplaysinleague(A, D)', 'true,false,true': 'athleteledsportsteam(G, F), athleteplaysforteam(C, F)', 'true': 'teamalsoknownas(A, E)', 'true,false': 'teamplaysinleague(F, D)', 'false': 'teamalsoknownas(A, H)', 'false,false': 'athleteledsportsteam(I, J)'}, {'false,false,false': [0.0, 0, 0], 'true,true': [0.208, 0, 2], 'true,false,true,true': [0.982, 8, 2], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.949, 3, 3], 'false,true': [0.453, 2, 2], 'false,false,true': [1.557, 7, 11]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false,false,false': 'teamplaysagainstteam(A, K)', 'true': 'athleteplaysforteam(C, D)', 'false,false': 'teamalsoknownas(A, I)', 'false': 'athleteledsportsteam(E, A), teamplaysagainstteam(F, A)', 'false,true': 'teamplaysinleague(F, G), teamplaysagainstteam(H, F)', 'false,false,true': 'teamplaysagainstteam(J, A)'}, {'false,false,true,true': [0.399, 2, 1], 'true,true': [1.518, 11, 8], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,true,true': [0.537, 1, 1], 'false,false,false,false': [1.071, 3, 6], 'false,false,false,true': [0.953, 3, 3]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false,false,false': 'athleteledsportsteam(L, A)', 'true': 'teamplaysagainstteam(D, C), athleteledsportsteam(E, A)', 'false,false': 'teamplaysagainstteam(A, J), athleteplaysforteam(K, A)', 'false': 'teamplaysagainstteam(A, H), teamalsoknownas(H, I)', 'true,false': 'teamplaysagainstteam(C, F), athleteplaysforteam(G, C)'}, {'true,false,true': [0.0, 0, 1], 'false,false,false,false': [1.297, 6, 7], 'true,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0], 'true,false,false': [0.476, 2, 3], 'false,true': [0.363, 11, 8], 'false,false,false,true': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false,false,false': 'teamplaysagainstteam(A, I)', 'true': 'teamplaysagainstteam(C, D)', 'false,false': 'teamplaysagainstteam(H, A)', 'false': 'teamplaysagainstteam(G, A)', 'true,false': 'teamplaysagainstteam(E, C), athleteledsportsteam(F, E)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [1.074, 3, 6], 'true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.464, 2, 3], 'false,true': [1.782, 15, 10], 'false,false,false,true': [0.0, 0, 0]}]]
[{'': [0.2331961591220851, 0.1775147928994082], 'false,false,false': [nan, 0.19834710743801634], 'true': [0.22222222222222224, 0.23437500000000003], 'false,false': [0.0, 0.19834710743801634], 'false': [0.0, 0.18749999999999978], 'true,false': [nan, 0.23437500000000003]}, {'': [0.23908040495761837, 0.22543026826979254], 'true': [0.24244799017197102, 0.22871259452977086], 'false,false': [0.0, 0.1983471074380164], 'false': [nan, 0.22543026826979254], 'false,false,true': [0.0, nan]}, {'': [0.23030224833475355, 0.19834710743801642], 'false,false,false': [0.0, 0.22222222222222227], 'true': [0.2380826374928732, 0.0], 'false,false': [nan, 0.19834710743801642], 'false': [nan, 0.19834710743801642], 'true,false': [0.0, nan]}, {'': [0.007545229228794259, 0.004998148725030627], 'true': [0.00987317735290022, 0.005608235445545395], 'true,false': [6.182182752784766e-06, 3.438613000415559e-05], 'false': [0.001640010969492825, 1.850371707708594e-17], 'true,false,false': [0.0, 6.240445815571445e-05], 'false,true,true': [2.9560614107233945e-06, 7.948520682171667e-06], 'false,true': [6.022221027064083e-06, 0.003257354232186968]}, {'': [0.14971739196393954, 0.10696280654986254], 'false,false,false': [0.0, 0.11795267771404996], 'true': [0.14852638625147413, 0.1434840779970868], 'false,false': [0.0, 0.10921497665170721], 'false': [nan, 0.10696280654986254], 'true,false': [0.1434840779970868, nan], 'false,false,true': [0.0, nan]}, {'': [0.14493896319548993, 0.10050101325329377], 'false,false,false': [nan, 0.12665742663775958], 'true': [0.14737638036841375, 0.13635000550539572], 'false,false': [nan, 0.12665742663775958], 'false': [0.04041243967106072, 0.12665742663775958], 'false,true,false': [nan, 0.03598127484127087], 'false,true': [0.0, 0.03598127484127087]}, {'': [0.13354452488071483, 0.11959863903431017], 'true,false,true': [0.09633898428118821, 0.15020360786218442], 'true': [0.02158664065366417, 0.12928373228492476], 'true,false': [0.12928373228492476, nan], 'false': [0.051371913834004426, 0.13471419608126825], 'false,false': [0.13471419608126825, nan]}, {'': [0.12129988295894323, 0.12084922281444464], 'false,false,false': [0.15132738705477214, 0.12735761243132163], 'true': [0.12129988295894323, nan], 'false,false': [0.04812275640612683, 0.13707620029593467], 'false': [0.144148497471033, 0.11837589247226218], 'false,true': [0.144148497471033, nan], 'false,false,true': [0.052948990309508996, 0.0]}, {'': [0.046108256747410446, 0.13132159270400492], 'false,false,false': [0.0, 0.1293955385047468], 'true': [nan, 0.046108256747410425], 'false,false': [0.0, 0.13373723593674197], 'false': [0.1320443917777041, 0.12984019738357575], 'true,false': [0.0, 0.04538096949989205]}, {'': [0.0406218214961214, 0.12761771856290305], 'false,false,false': [nan, 0.12814967728394372], 'true': [0.0, 0.04312443159964602], 'false,false': [nan, 0.12814967728394372], 'false': [0.12696793534759748, 0.12814967728394372], 'true,false': [nan, 0.04312443159964602]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamplaysinleague(C, D).;true;true
0;false,false;teamplaysagainstteam(H, A).;true;true
0;false;teamplaysagainstteam(A, F), teamalsoknownas(F, G).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
1;false;teamplaysagainstteam(F, A), teamplaysinleague(F, G).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
2;true;teamplaysagainstteam(A, D).;true;true
2;false;teamalsoknownas(A, H).;true;true
3;;teamplayssport(A, B) :- athleteplayssport(C, B).;true;true
3;true;teamalsoknownas(A, D).;true;true
3;true,false;teamplaysagainstteam(E, A), athleteplaysforteam(C, E).;true;true
3;false;teamplaysagainstteam(G, A).;true;true
3;true,false,false;teamplaysinleague(A, F).;true;true
3;false,true,true;athleteplaysforteam(I, A).;true;true
3;false,true;teamplaysagainstteam(G, H), teamplaysagainstteam(A, H).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), athleteplaysforteam(D, C).;true;true
4;false,false;athleteledsportsteam(L, A).;true;true
4;false;teamplaysagainstteam(I, A), teamplaysinleague(I, J).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
5;false,true;teamplaysagainstteam(F, A), athleteledsportsteam(G, F).;true;true
5;false;teamalsoknownas(A, E).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
7;false,false;teamalsoknownas(A, I).;true;true
7;false;athleteledsportsteam(E, A), teamplaysagainstteam(F, A).;true;true
7;false,false,true;teamplaysagainstteam(J, A).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
8;false,false,false;athleteledsportsteam(L, A).;true;true
8;true;teamplaysagainstteam(C, F), athleteplaysforteam(G, C).;true;true
8;false,false;teamplaysagainstteam(A, J), athleteplaysforteam(K, A).;true;true
8;false;teamplaysagainstteam(A, H), teamalsoknownas(H, I).;true;true
9;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
9;true;teamplaysagainstteam(C, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109544;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamplaysagainstteam(E, A), teamplaysinleague(E, F) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamalsoknownas(A, F) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysagainstteam(E, A), athleteplaysforteam(C, E) )
%   | | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( teamplaysinleague(A, F) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(G, A) )
%   | then if ( teamplaysagainstteam(G, H), teamplaysagainstteam(A, H) )
%   | | then if ( athleteplaysforteam(I, A) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then if ( athleteledsportsteam(F, A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(G, A), teamplaysinleague(G, H) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteledsportsteam(I, A) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(J, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( athleteledsportsteam(E, A) )
%   | | then if ( athleteplaysinleague(E, F), teamplaysinleague(A, F) )
%   | | | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamalsoknownas(A, G) )
%   | then if ( teamplaysagainstteam(H, A), athleteledsportsteam(I, H) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.141719911250194;  // std dev = 0,278, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( athleteplayssport(J, B) )
%   | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.0848170779060074;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(G, B) )
%   | then if ( teamalsoknownas(A, H) )
%   | | then return 0.22270744043778967;  // std dev = 0,016, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then if ( athleteledsportsteam(E, A) )
%   | | then return 0.18213805995566332;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( athleteledsportsteam(F, A) )
%   | | then return -0.07324622576333704;  // std dev = 9,31e-10, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(G, A), teamplaysagainstteam(H, A) )
%   | then return 0.05192513599097016;  // std dev = 0,177, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamalsoknownas(A, I) )
%   | | then if ( teamplaysagainstteam(J, A) )
%   | | | then return 0.004081970843281897;  // std dev = 0,210, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1922211843764352;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(K, B) )
%   | | | then return 0.17709649774527736;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.07310990275409505;  // std dev = 0,000472, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(C, D), athleteplaysforteam(E, C) )
%   | then return 0.17462804719934288;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.06375914770716022;  // std dev = 0,266, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | then if ( athleteplayssport(H, B) )
%   | | then if ( athleteplaysforteam(H, I), athleteplaysforteam(J, A) )
%   | | | then return 0.15248333692059585;  // std dev = 0,000713, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteplaysforteam(K, A), athleteledsportsteam(K, L) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07123465680142303;  // std dev = 0,007, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(A, M), athleteplaysforteam(N, A) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteledsportsteam(P, A) )
%   | | | then return 0.16965570496360172;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.050720089278889394;  // std dev = 0,397, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then return 0.15086869850577644;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.056743873221768396;  // std dev = 0,262, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysagainstteam(A, F), teamalsoknownas(F, G) )
%   | | then if ( teamplaysagainstteam(A, G) )
%   | | | then return 0.13391439859249715;  // std dev = 0,000516, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.13382240817304691;  // std dev = 0,000452, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.1464510798673627;  // std dev = 0,000698, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14629497616596443;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplaysforteam(I, A) )
%   | | then return -0.06416121198293304;  // std dev = 6,50e-05, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( teamplaysinleague(A, J) )
%   | | | then return -0.07180929157609883;  // std dev = 0,000168, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07154021955529852;  // std dev = 0,000401, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.986421
   AUC PR    = 0.109889
   CLL	      = -0.120648
   Precision = 0.123584 at threshold = 0.5
   Recall    = 0.916031
   F1        = 0.217786


Total learning time: 30.343 seconds
Total inference time: 20.828 seconds
AUC ROC: 0.986421


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102383
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.184 seconds
Refined model CLL: -0.102383


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.986421
   AUC PR    = 0.109889
   CLL	      = -0.120648
   Precision = 0.123584 at threshold = 0.5
   Recall    = 0.916031
   F1        = 0.217786


Total learning time: 39.693999999999996 seconds
Total inference time: 20.828 seconds
AUC ROC: 0.986421
Total revision time: 39.693999999999996
Best scored revision CLL: -0.102383


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 05:07:04
{'AUC ROC': 0.986421, 'Recall': 0.916031, 'CLL': -0.120648, 'Precision': [0.123584, 0.5], 'Learning time': 39.693999999999996, 'parameter_20': {'AUC ROC': 0.856755, 'Recall': 0.679389, 'CLL': -0.497503, 'Precision': [0.014476, 0.5], 'Learning time': 7.165, 'F1': 0.028348, 'Inference time': 13.968, 'AUC PR': 0.054326}, 'F1': 0.217786, 'Inference time': 20.828, 'AUC PR': 0.109889}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0641918400820262;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.097091
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 3.466 seconds
Total inference time: 4.025 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN-B), Time: 05:07:12
{'AUC ROC': 0.983994, 'Recall': 0.984733, 'CLL': -0.097091, 'Precision': [0.126223, 0.5], 'Learning time': 3.466, 'F1': 0.223764, 'Inference time': 4.025, 'AUC PR': 0.124824}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.140117
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.282 seconds
Total inference time: 2.83 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN), Time: 05:07:17
{'AUC ROC': 0.983994, 'Recall': 0.0, 'CLL': -0.140117, 'Precision': [nan, 0.5], 'Learning time': 1.282, 'F1': nan, 'Inference time': 2.83, 'AUC PR': 0.124824}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
0;false,false,false;acquired(A, I), cityhascompanyoffice(J, I).;false;false
0;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
0;true,false;companyalsoknownas(A, A).;false;true
0;false;acquired(F, A), companyalsoknownas(F, G).;true;true
0;true,false,false;economicsectorcompany(B, C).;false;false
0;false,false;acquired(A, H), economicsectorcompany(B, H).;false;true
0;false,true;economicsectorcompany(B, F).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
1;true;companyalsoknownas(C, D).;false;false
1;false,false;acquired(A, H), countryhascompanyoffice(I, H).;true;false
1;false;acquired(E, A).;true;true
1;false,true,false;cityhascompanyoffice(G, A), cityhascompanyoffice(G, E).;false;false
1;false,true;companyalsoknownas(A, F), economicsectorcompany(B, F).;false;true
1;false,false,true;companyalsoknownas(A, J), economicsectorcompany(B, J).;false;false
2;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
2;false,false,false;companyalsoknownas(A, I).;false;false
2;true;economicsectorcompany(B, C).;false;true
2;true,false;acquired(D, A), economicsectorcompany(B, D).;false;true
2;false;acquired(F, A), economicsectorcompany(B, F).;false;true
2;true,false,false;acquired(C, E), economicsectorcompany(B, E).;false;false
2;false,false;acquired(G, A).;true;true
2;false,false,true;acquired(H, G), economicsectorcompany(B, H).;false;false
4;;companyeconomicsector(A, B) :- acquired(C, A), cityhascompanyoffice(D, C).;true;true
4;false,false,false;companyceo(A, L).;false;false
4;true;economicsectorcompany(B, C).;false;true
4;true,false;companyalsoknownas(C, E), economicsectorcompany(B, E).;false;true
4;false;acquired(H, A), bankboughtbank(H, A).;false;true
4;true,false,false;acquired(F, C), acquired(G, F).;false;false
4;false,false;acquired(A, I), countryhascompanyoffice(J, I).;true;true
4;false,false,true;cityhascompanyoffice(K, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;true;true
5;false,false,false;acquired(A, L).;false;false
5;true;companyalsoknownas(C, D).;false;false
5;false,false;acquired(I, A), companyceo(I, J).;true;true
5;false;companyalsoknownas(A, E), economicsectorcompany(B, E).;true;true
5;false,true,false;acquired(H, A).;false;false
5;false,true;acquired(A, F), companyceo(F, G).;false;true
5;false,false,true;countryhascompanyoffice(K, A), countryhascompanyoffice(K, I).;false;false
6;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A), countryhascompanyoffice(D, A).;true;true
6;true,false,true;companyceo(F, G), cityhascompanyoffice(C, F).;false;false
6;false,false,false;companyalsoknownas(A, K), acquired(K, L).;false;false
6;true;companyalsoknownas(A, E), economicsectorcompany(B, E).;false;true
6;true,false;countryhascompanyoffice(D, F), economicsectorcompany(B, F).;true;false
6;false;companyalsoknownas(A, H), economicsectorcompany(B, H).;false;true
6;false,false;bankchiefexecutiveceo(A, I).;true;true
6;false,false,true;companyceo(J, I), economicsectorcompany(B, J).;false;false
7;;companyeconomicsector(A, B) :- cityhascompanyoffice(C, A).;true;true
7;false,false,false;acquired(K, A), economicsectorcompany(B, K).;false;false
7;true;cityhascompanyoffice(C, D), economicsectorcompany(B, D).;false;false
7;false,false;companyalsoknownas(A, I).;true;true
7;false;companyceo(A, E), acquired(A, F).;true;true
7;false,true,false;countryhascompanyoffice(G, F), acquired(F, H).;false;false
7;false,true;economicsectorcompany(B, F).;false;true
7;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
8;false,false,false;companyceo(A, L).;false;false
8;true;economicsectorcompany(B, C).;false;true
8;true,false;acquired(C, D), companyceo(A, E).;false;true
8;false;acquired(H, A), companyalsoknownas(H, I).;true;true
8;true,false,false;acquired(F, C), cityhascompanyoffice(G, C).;false;false
8;false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;true
8;false,true;economicsectorcompany(B, I).;false;false
9;;companyeconomicsector(A, B) :- companyalsoknownas(A, C).;true;true
9;false,false,false;acquired(K, A).;false;false
9;true;economicsectorcompany(B, C).;false;true
9;true,false;acquired(D, C).;false;true
9;false;acquired(A, G), economicsectorcompany(B, G).;false;true
9;true,false,false;acquired(C, E), companyceo(E, F).;false;false
9;false,false;acquired(A, H).;true;true
9;false,false,true;acquired(H, I), cityhascompanyoffice(J, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamplaysinleague(C, D) )
%   then if ( teamalsoknownas(E, A) )
%   | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( teamalsoknownas(A, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2812258581764354;  // std dev = 0,494, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   else if ( teamplaysagainstteam(A, F), teamalsoknownas(G, F) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(I, A), athleteplaysforteam(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5504566274072047;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(D, C) )
%   | then return 0.2444763460006877;  // std dev = 2,575, 28,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else return 0.32249916171392684;  // std dev = 1,230, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A), teamplaysinleague(F, G) )
%   | | then if ( teamalsoknownas(H, A) )
%   | | | then return -0.16679450876845162;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.8203578958104025;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.46952849908361544;  // std dev = 1,664, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.21664813662091545;  // std dev = 2,854, 34,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | else if ( teamplaysagainstteam(E, C) )
%   | | then return 0.12602355124092993;  // std dev = 0,664, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(H, A) )
%   | | | then return 0.6856833195111625;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3220469558747988;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.7489584660623116;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.25342833631122524;  // std dev = 0,010, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then if ( athleteledsportsteam(F, I), teamplaysagainstteam(A, I) )
%   | | | then return 0.7371721465420299;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6565137231673164;  // std dev = 0,108, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamalsoknownas(A, J), teamalsoknownas(J, K) )
%   | | | then return 0.5621486421342439;  // std dev = 0,095, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6300924994442871;  // std dev = 0,120, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( teamplaysagainstteam(L, A) )
%   | | then if ( athleteplaysforteam(M, L), teamplaysagainstteam(A, L) )
%   | | | then return -0.26282785345797005;  // std dev = 0,018, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.19338969364043668;  // std dev = 0,079, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.3874680008495395;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( teamalsoknownas(E, C) )
%   | then return 0.13536979734558374;  // std dev = 2,001, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | else if ( teamplaysagainstteam(C, F), teamplaysagainstteam(F, G) )
%   | | then return 0.17479074766994596;  // std dev = 0,979, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, H) )
%   | then return -0.22252027372845815;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(I, A), teamplaysinleague(I, J) )
%   | | then if ( athleteplaysforteam(K, I) )
%   | | | then return 0.0763637750549867;  // std dev = 0,522, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( athleteledsportsteam(L, A) )
%   | | | then return 0.3851330395329229;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19749952174564922;  // std dev = 1,221, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(D, C) )
%   | then return 0.0972243428298564;  // std dev = 1,997, 28,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else return 0.1372866016039674;  // std dev = 0,965, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( teamalsoknownas(E, A) )
%   | then if ( teamplaysagainstteam(F, A), athleteledsportsteam(G, F) )
%   | | then return -0.1460012424056454;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16411981567020842;  // std dev = 0,381, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamplaysagainstteam(A, I), athleteledsportsteam(J, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(K, A) )
%   | | | then return 0.4834760889177281;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13398783022101118;  // std dev = 1,197, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysinleague(A, D) )
%   then if ( teamalsoknownas(E, A) )
%   | then return 0.11560009255023204;  // std dev = 1,025, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( teamplaysinleague(F, D) )
%   | | then if ( athleteledsportsteam(G, F), athleteplaysforteam(C, F) )
%   | | | then return 0.024508084323624422;  // std dev = 1,219, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.09498558057910841;  // std dev = 0,689, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(H, A) )
%   | then return 0.0024560867954381005;  // std dev = 0,370, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( athleteledsportsteam(I, J) )
%   | | then return 0.16660872744112137;  // std dev = 1,734, 23,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( athleteplaysforteam(C, D) )
%   | then return 0.03706060319890661;  // std dev = 1,788, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(E, A), teamplaysagainstteam(F, A) )
%   | then if ( teamplaysinleague(F, G), teamplaysagainstteam(H, F) )
%   | | then return 0.09781528603178313;  // std dev = 0,541, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(I, A) )
%   | | then if ( teamplaysagainstteam(J, A) )
%   | | | then return -0.1485073727071874;  // std dev = 0,028, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.3032450571578744;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysagainstteam(A, K) )
%   | | | then return 0.1693502570004698;  // std dev = 1,049, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.0857891870773674;  // std dev = 1,224, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(D, C), athleteledsportsteam(E, A) )
%   | then return -0.2658918430889653;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( teamplaysagainstteam(C, F), athleteplaysforteam(G, C) )
%   | | then return 0.2468993449987048;  // std dev = 0,628, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.14113445351288129;  // std dev = 0,536, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( teamplaysagainstteam(A, H), teamalsoknownas(I, H) )
%   | then return 0.06229999751876278;  // std dev = 0,360, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else if ( teamplaysagainstteam(A, J), athleteplaysforteam(K, A) )
%   | | then return 0.09706979008788227;  // std dev = 0,524, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( athleteledsportsteam(L, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.032237058587580414;  // std dev = 1,399, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then return -0.014167367257482586;  // std dev = 0,795, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( teamplaysagainstteam(E, C), athleteledsportsteam(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.11745248229605716;  // std dev = 0,522, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( teamplaysagainstteam(G, A) )
%   | then return 0.04257340238436496;  // std dev = 1,902, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.03680303112707395;  // std dev = 1,203, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */


Results
   AUC ROC   = 0.90447
   AUC PR    = 0.060711
   CLL	      = -0.499188
   Precision = 0.015557 at threshold = 0.5
   Recall    = 0.816794
   F1        = 0.030532


Total learning time: 8.74 seconds
Total inference time: 16.08 seconds
AUC ROC: 0.90447


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.41806
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.96
   F1        = 0.979592


Total scoring time: 1.057 seconds
Parameter learned model CLL: -0.41806


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamplaysinleague(C, D)', 'false,false,false': 'teamplaysagainstteam(I, A), athleteplaysforteam(J, I)', 'true': 'teamalsoknownas(E, A)', 'false,false': 'teamplaysagainstteam(H, A)', 'false': 'teamplaysagainstteam(A, F), teamalsoknownas(G, F)', 'true,false': 'teamalsoknownas(A, A)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [1.664, 4, 9], 'true,true': [1.414, 6, 3], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.494, 15, 11], 'false,true': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamalsoknownas(D, C)', 'false,false': 'teamplaysagainstteam(F, A), teamplaysinleague(F, G)', 'false': 'teamplaysagainstteam(A, E)', 'false,false,true': 'teamalsoknownas(H, A)'}, {'false,false,false': [1.664, 4, 9], 'false,false,true,true': [0.0, 2, 0], 'true,true': [2.575, 16, 12], 'true,false': [1.23, 3, 3], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false,false': 'teamalsoknownas(H, A)', 'true': 'teamplaysagainstteam(A, D)', 'false,false': 'teamplaysagainstteam(A, G)', 'false': 'teamplaysagainstteam(A, F)', 'true,false': 'teamplaysagainstteam(E, C)'}, {'true,false,true': [0.664, 2, 1], 'false,false,false,false': [1.595, 4, 7], 'true,true': [2.854, 19, 15], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 2]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplayssport(C, D)', 'true': 'athleteplayssport(E, B)', 'false,false': 'teamplaysagainstteam(L, A)', 'false': 'athleteplayssport(F, B)', 'false,true,false': 'teamalsoknownas(A, J), teamalsoknownas(J, K)', 'false,true,true': 'athleteledsportsteam(F, I), teamplaysagainstteam(A, I)', 'false,true': 'teamplaysinleague(A, G), athleteplaysinleague(H, G)', 'false,false,true': 'athleteplaysforteam(M, L), teamplaysagainstteam(A, L)'}, {'false,false,false': [0.0, 4, 0], 'false,false,true,true': [0.018, 6, 0], 'true,true': [0.018, 0, 5], 'true,false': [0.01, 12, 0], 'false,true,false,true': [0.095, 0, 3], 'false,true,true,true': [0.018, 0, 6], 'false,true,true,false': [0.108, 0, 3], 'false,false,true,false': [0.079, 3, 0], 'false,true,false,false': [0.12, 0, 8]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), athleteplaysforteam(D, C)', 'false,false,false': 'athleteledsportsteam(L, A)', 'true': 'teamalsoknownas(E, C)', 'false,false': 'teamplaysagainstteam(I, A), teamplaysinleague(I, J)', 'false': 'teamplaysagainstteam(A, H)', 'true,false': 'teamplaysagainstteam(C, F), teamplaysagainstteam(F, G)', 'false,false,true': 'athleteplaysforteam(K, I)'}, {'true,false,true': [0.979, 3, 3], 'false,false,true,true': [0.522, 2, 1], 'true,true': [2.001, 15, 12], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,false': [1.221, 4, 8], 'false,false,false,true': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'teamplaysagainstteam(K, A)', 'true': 'teamalsoknownas(D, C)', 'false,false': 'teamplaysagainstteam(A, I), athleteledsportsteam(J, I)', 'false': 'teamalsoknownas(E, A)', 'false,true,false': 'teamplaysagainstteam(A, H)', 'false,true': 'teamplaysagainstteam(F, A), athleteledsportsteam(G, F)'}, {'false,false,false,false': [1.197, 4, 7], 'true,true': [1.997, 16, 12], 'true,false': [0.965, 3, 3], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'false,true,false,false': [0.381, 1, 2], 'false,false,false,true': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamplaysinleague(A, D)', 'true,false,true': 'athleteledsportsteam(G, F), athleteplaysforteam(C, F)', 'true': 'teamalsoknownas(E, A)', 'true,false': 'teamplaysinleague(F, D)', 'false': 'teamalsoknownas(H, A)', 'false,false': 'athleteledsportsteam(I, J)'}, {'false,false,false': [0.0, 0, 0], 'true,true': [1.025, 4, 4], 'true,false,true,true': [1.219, 7, 4], 'true,false,false': [0.0, 0, 0], 'true,false,true,false': [0.689, 4, 1], 'false,true': [0.37, 2, 1], 'false,false,true': [1.734, 8, 15]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false,false,false': 'teamplaysagainstteam(A, K)', 'true': 'athleteplaysforteam(C, D)', 'false,false': 'teamalsoknownas(I, A)', 'false': 'athleteledsportsteam(E, A), teamplaysagainstteam(F, A)', 'false,true': 'teamplaysinleague(F, G), teamplaysagainstteam(H, F)', 'false,false,true': 'teamplaysagainstteam(J, A)'}, {'false,false,true,true': [0.028, 2, 0], 'true,true': [1.788, 15, 10], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,true,true': [0.541, 1, 1], 'false,false,false,false': [1.224, 4, 8], 'false,false,false,true': [1.049, 3, 5]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'athleteledsportsteam(L, A)', 'true': 'teamplaysagainstteam(D, C), athleteledsportsteam(E, A)', 'false,false': 'teamplaysagainstteam(A, J), athleteplaysforteam(K, A)', 'false': 'teamplaysagainstteam(A, H), teamalsoknownas(I, H)', 'true,false': 'teamplaysagainstteam(C, F), athleteplaysforteam(G, C)'}, {'true,false,true': [0.628, 1, 2], 'false,false,false,false': [1.399, 6, 9], 'true,true': [0.0, 3, 0], 'false,false,true': [0.524, 1, 1], 'true,false,false': [0.536, 2, 3], 'false,true': [0.36, 12, 10], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamplaysagainstteam(A, I)', 'true': 'teamplaysagainstteam(C, D)', 'false,false': 'teamplaysagainstteam(H, A)', 'false': 'teamplaysagainstteam(G, A)', 'true,false': 'teamplaysagainstteam(E, C), athleteledsportsteam(F, E)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false,false': [1.203, 4, 7], 'true,true': [0.795, 4, 2], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.522, 2, 3], 'false,true': [1.902, 15, 13], 'false,false,false,true': [0.0, 0, 0]}]]
[{'': [0.2399999999999995, 0.1955555555555555], 'false,false,false': [nan, 0.2130177514792898], 'true': [0.2222222222222221, 0.24408284023668594], 'false,false': [nan, 0.2130177514792898], 'false': [0.0, 0.2130177514792898], 'true,false': [nan, 0.24408284023668594]}, {'': [0.240462416133708, 0.22806355362770794], 'true': [0.23688061769382204, 0.2521641910018723], 'false,false': [0.2165488599701808, 0.2130177514792899], 'false': [nan, 0.22806355362770794], 'false,false,true': [0.0, 0.0]}, {'': [0.23260215381384544, 0.21301775147929], 'false,false,false': [0.0, 0.23140495867768582], 'true': [0.23950873483281393, 0.14678065741436372], 'false,false': [nan, 0.21301775147929], 'false': [nan, 0.21301775147929], 'true,false': [0.14678065741436372, nan]}, {'': [0.20869132824450573, 0.21702633098534116], 'true': [6.768378507349126e-05, 9.452277731506846e-05], 'false,false': [0.0017963041186120294, 0.0], 'false': [0.005329516676327461, 0.005896064980589768], 'false,true,false': [0.0029773306059159843, 0.001801942459622341], 'false,true,true': [5.138930792392138e-05, 0.0038687840949897336], 'false,true': [0.0027695834061222235, 0.0030381460524794594], 'false,false,true': [5.1389307923754846e-05, 0.0020716950474250436]}, {'': [0.1506423694938463, 0.11758578011811842], 'false,false,false': [0.0, 0.12431068102564415], 'true': [0.1483540593300493, 0.1596683014199978], 'false,false': [0.09082203333886192, 0.11724817919507227], 'false': [0.0, 0.11509319947563079], 'true,false': [0.1596683014199978, nan], 'false,false,true': [0.09082203333886192, nan]}, {'': [0.14487245114286676, 0.1112280755209343], 'false,false,false': [0.0, 0.13026320240088124], 'true': [0.14237094838110992, 0.15522437869225172], 'false,false': [nan, 0.12873823048299876], 'false': [0.05430586376470936, 0.12873823048299876], 'false,true,false': [nan, 0.04836405068742403], 'false,true': [0.0, 0.04836405068742403]}, {'': [0.13121032514627037, 0.12367641148482131], 'true,false,true': [0.135142621678508, 0.0949633057606987], 'true': [0.1313255865347497, 0.12565428263135572], 'true,false': [0.12565428263135572, nan], 'false': [0.045646208810606805, 0.1307450998424352], 'false,false': [0.1307450998424352, nan]}, {'': [0.1278105171761755, 0.12395316282652764], 'false,false,false': [0.13762347264186212, 0.12491787834483002], 'true': [0.1278105171761755, nan], 'false,false': [0.045604948383838155, 0.1316759046412493], 'false': [0.14631660355717638, 0.12200551983617915], 'false,true': [0.14631660355717638, nan], 'false,false,true': [0.0003806699460946923, 0.0]}, {'': [0.1034934290909608, 0.13059361963562102], 'false,false,false': [nan, 0.13049288652303828], 'true': [-9.25185853854297e-18, 0.08788611419234299], 'false,false': [0.13703273997280843, 0.13049288652303828], 'false': [0.12952035413604535, 0.13169860800921784], 'true,false': [0.13147740129018212, 0.05753651233201149]}, {'': [0.08642924264805486, 0.12990027058173803], 'false,false,false': [nan, 0.13151021781996478], 'true': [0.10520560523350808, 0.054448270383785705], 'false,false': [nan, 0.13151021781996478], 'false': [0.12925839979601556, 0.13151021781996478], 'true,false': [nan, 0.054448270383785705]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamplaysinleague(C, D).;true;true
0;false;teamplaysagainstteam(A, F), teamalsoknownas(G, F).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
1;false,true;teamalsoknownas(H, A).;true;true
1;false;teamplaysagainstteam(F, A), teamplaysinleague(F, G).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
2;false;teamalsoknownas(H, A).;true;true
3;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplayssport(C, D).;true;true
3;true;athleteplayssport(E, B).;true;true
3;false,false;teamplaysagainstteam(L, A).;true;true
3;false;athleteplayssport(F, B).;true;true
3;false,true,false;teamalsoknownas(A, J), teamalsoknownas(J, K).;true;true
3;false,true,true;athleteledsportsteam(F, I), teamplaysagainstteam(A, I).;true;true
3;false,true;teamplaysinleague(A, G), athleteplaysinleague(H, G).;true;true
3;false,false,true;athleteplaysforteam(M, L), teamplaysagainstteam(A, L).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), athleteplaysforteam(D, C).;true;true
4;false,false,false;athleteledsportsteam(L, A).;true;true
4;false,false;teamplaysagainstteam(I, A), teamplaysinleague(I, J).;true;true
4;false;teamplaysagainstteam(A, H).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
5;false,false;teamplaysagainstteam(K, A).;true;true
5;false,true;teamplaysagainstteam(F, A), athleteledsportsteam(G, F).;true;true
5;false;teamalsoknownas(E, A).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
7;false,false;teamalsoknownas(I, A).;true;true
7;false;athleteledsportsteam(E, A), teamplaysagainstteam(F, A).;true;true
7;false,false,true;teamplaysagainstteam(J, A).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
8;true;teamplaysagainstteam(D, C), athleteledsportsteam(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( teamplaysagainstteam(A, F), teamalsoknownas(G, F) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5,96e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( teamplaysagainstteam(E, A), teamplaysinleague(E, F) )
%   | then if ( teamalsoknownas(G, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.7194734122109544;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(D, A), athleteledsportsteam(D, E) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamalsoknownas(H, A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplayssport(I, B) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplayssport(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then if ( athleteledsportsteam(F, I), teamplaysagainstteam(A, I) )
%   | | | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamalsoknownas(A, J), teamalsoknownas(J, K) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( teamplaysagainstteam(L, A) )
%   | | then if ( athleteplaysforteam(M, L), teamplaysagainstteam(A, L) )
%   | | | then return -0.10159632948783633;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10159632948783633;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), athleteplaysforteam(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then if ( athleteledsportsteam(F, A) )
%   | | | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(H, A), teamplaysinleague(H, I) )
%   | | then return 0.04510976492720923;  // std dev = 0,338, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( athleteledsportsteam(J, A) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18291080604367946;  // std dev = 0,675, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then if ( athleteplaysforteam(D, A) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.08518475138839683;  // std dev = 2,95e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( teamalsoknownas(F, A) )
%   | then if ( teamplaysagainstteam(G, A), athleteledsportsteam(H, G) )
%   | | then return -0.09655533091090081;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.1469498934833072;  // std dev = 0,299, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return 0.31096490769139185;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(J, B) )
%   | | | then return 0.2822327687913329;  // std dev = 1,49e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.10926239511336501;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return 0.22862960848575495;  // std dev = 0,000405, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.23983852066322642;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then return -0.07877675473109176;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.09915083756823284;  // std dev = 0,015, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(E, D) )
%   | then if ( athleteplayssport(F, B) )
%   | | then if ( teamalsoknownas(D, E) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.07324622576333704;  // std dev = 9,31e-10, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.11786056907042647;  // std dev = 0,221, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( athleteledsportsteam(G, A), teamplaysagainstteam(H, A) )
%   | then return 0.05192513599097016;  // std dev = 0,177, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamalsoknownas(I, A) )
%   | | then if ( teamplaysagainstteam(J, A) )
%   | | | then return -0.09079273615901837;  // std dev = 0,014, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.2107847563755615;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(K, B) )
%   | | | then return 0.1865136925280036;  // std dev = 0,031, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.08314477976853807;  // std dev = 0,023, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(D, C), athleteledsportsteam(E, A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.16337707331779022;  // std dev = 0,023, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07852849422827947;  // std dev = 0,018, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(G, B) )
%   | then if ( teamplaysagainstteam(A, H) )
%   | | then if ( athleteledsportsteam(G, A) )
%   | | | then return 0.16098933150861697;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15206900937508014;  // std dev = 0,002, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return 0.16372227138359818;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1673174060302104;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysagainstteam(A, J) )
%   | | then return -0.06974507073022444;  // std dev = 0,004, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return -0.08394953453379433;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteledsportsteam(C, A) )
%   | | then return 0.1404182112384176;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( athleteledsportsteam(C, E), teamplaysagainstteam(D, E) )
%   | | | then return 0.13331052399388663;  // std dev = 0,002, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.13560980879106102;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then return 0.14390700119957098;  // std dev = 0,008, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.14776941386376732;  // std dev = 0,014, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then if ( teamalsoknownas(H, G), teamplaysagainstteam(G, A) )
%   | | then if ( teamalsoknownas(H, A) )
%   | | | then return -0.06399045811186899;  // std dev = 0,000493, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0640661383175456;  // std dev = 0,000576, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.0679562572872056;  // std dev = 0,012, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07773135995455421;  // std dev = 0,012, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.981448
   AUC PR    = 0.185431
   CLL	      = -0.124406
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 32.63 seconds
Total inference time: 30.866 seconds
AUC ROC: 0.981448


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098889
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.338 seconds
Refined model CLL: -0.098889


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.981448
   AUC PR    = 0.185431
   CLL	      = -0.124406
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 43.76500000000001 seconds
Total inference time: 30.866 seconds
AUC ROC: 0.981448
Total revision time: 43.76500000000001
Best scored revision CLL: -0.098889


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 05:08:48
{'AUC ROC': 0.981448, 'Recall': 0.984733, 'CLL': -0.124406, 'Precision': [0.126223, 0.5], 'parameter_25': {'AUC ROC': 0.90447, 'Recall': 0.816794, 'CLL': -0.499188, 'Precision': [0.015557, 0.5], 'Learning time': 8.74, 'F1': 0.030532, 'Inference time': 16.08, 'AUC PR': 0.060711}, 'Learning time': 43.76500000000001, 'F1': 0.223764, 'Inference time': 30.866, 'AUC PR': 0.185431}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.097091
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 3.518 seconds
Total inference time: 3.842 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN-B), Time: 05:08:56
{'AUC ROC': 0.983994, 'Recall': 0.984733, 'CLL': -0.097091, 'Precision': [0.126223, 0.5], 'Learning time': 3.518, 'F1': 0.223764, 'Inference time': 3.842, 'AUC PR': 0.124824}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.140117
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.383 seconds
Total inference time: 2.902 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN), Time: 05:09:00
{'AUC ROC': 0.983994, 'Recall': 0.0, 'CLL': -0.140117, 'Precision': [nan, 0.5], 'Learning time': 1.383, 'F1': nan, 'Inference time': 2.902, 'AUC PR': 0.124824}


