Starting experiment #3 for 46_nell_finances_nell_sports

Start learning from source dataset

Source train facts examples: 5307
Source train pos examples: 778
Source train neg examples: 549655

WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C), cityhascompanyoffice(D, A) )
%   then if ( bankchiefexecutiveceo(E, C), economicsectorcompany(B, E) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( bankchiefexecutiveceo(F, C) )
%   | | then return 0.058148935099512286;  // std dev = 0,400, 20,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( cityhascompanyoffice(D, G), economicsectorcompany(B, G) )
%   | | | then return 0.8581489350995124;  // std dev = 0,000, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14185106490048763;  // std dev = 8,94e-08, 101,000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( companyceo(A, H), acquired(I, A) )
%   | then return 0.11346808403568258;  // std dev = 0,436, 47,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | else if ( countryhascompanyoffice(J, A), bankboughtbank(K, A) )
%   | | then if ( countryhascompanyoffice(J, K) )
%   | | | then return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( companyalsoknownas(A, L), acquired(A, M) )
%   | | | then return 0.13721870254137283;  // std dev = 2,941, 43,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.192467005015805;  // std dev = 21,260, 2.031,000 (wgt'ed) examples reached here.  /* #neg=1.352 #pos=679 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.8177496565525177;  // std dev = 0,261, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else if ( acquired(D, A) )
%   | then if ( bankboughtbank(E, A), bankchiefexecutiveceo(E, F) )
%   | | then return 0.40874113578563503;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( companyalsoknownas(D, G), economicsectorcompany(B, G) )
%   | | | then return 0.8373481674339605;  // std dev = 0,012, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06368282788322577;  // std dev = 6,702, 266,000 (wgt'ed) examples reached here.  /* #neg=205 #pos=61 */
%   | else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | | then if ( cityhascompanyoffice(I, A), companyceo(A, J) )
%   | | | then return 0.7194734122109542;  // std dev = 2,98e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.8323227954242898;  // std dev = 0,035, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( companyceo(A, K), acquired(A, L) )
%   | | | then return 0.1009470123853023;  // std dev = 5,036, 155,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=42 */
%   | | | else return 0.1634733691175357;  // std dev = 20,005, 1.815,000 (wgt'ed) examples reached here.  /* #neg=1.215 #pos=600 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), companyalsoknownas(C, D) )
%   then if ( economicsectorcompany(B, D) )
%   | then return 0.6923813315469717;  // std dev = 0,027, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( economicsectorcompany(B, C) )
%   | | then return 0.6565717532358254;  // std dev = 0,066, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.007786321176104926;  // std dev = 0,364, 127,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=21 */
%   else if ( acquired(A, E), cityhascompanyoffice(F, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.6438981729261166;  // std dev = 0,090, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.035267964178708804;  // std dev = 0,388, 75,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | else if ( companyalsoknownas(A, G), companyceo(G, H) )
%   | | then if ( acquired(G, I), economicsectorcompany(B, I) )
%   | | | then return 0.6230477467445059;  // std dev = 0,858, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.13238044572026522;  // std dev = 4,320, 105,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( cityhascompanyoffice(J, A) )
%   | | | then return 0.11441938709379866;  // std dev = 8,477, 364,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=112 */
%   | | | else return 0.1345069675524465;  // std dev = 19,195, 1.693,000 (wgt'ed) examples reached here.  /* #neg=1.140 #pos=553 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyalsoknownas(C, D) )
%   then if ( companyalsoknownas(A, E), acquired(F, E) )
%   | then return -0.09200560032388455;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( companyalsoknownas(A, G) )
%   | | then return 0.0435360723670632;  // std dev = 0,310, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else return 0.12991177811490706;  // std dev = 0,472, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   else if ( companyceo(A, H), bankchiefexecutiveceo(A, I) )
%   | then if ( bankchiefexecutiveceo(J, H), economicsectorcompany(B, J) )
%   | | then return 0.663158586532661;  // std dev = 0,109, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( bankboughtbank(K, A) )
%   | | | then return -0.1886266043237912;  // std dev = 0,091, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.13162034385430418;  // std dev = 2,320, 27,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( acquired(L, A), cityhascompanyoffice(M, A) )
%   | | then return 0.0877352638312445;  // std dev = 0,381, 100,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | else if ( companyalsoknownas(A, N) )
%   | | | then return 0.1398246562744001;  // std dev = 6,400, 210,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=76 */
%   | | | else return 0.1173781610170704;  // std dev = 20,393, 1.926,000 (wgt'ed) examples reached here.  /* #neg=1.288 #pos=638 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.5265137938030252;  // std dev = 0,110, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( bankchiefexecutiveceo(A, D), countryhascompanyoffice(E, A) )
%   | | then return 0.21901840415201465;  // std dev = 0,457, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0.03884272125265869;  // std dev = 0,401, 361,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=95 */
%   else if ( cityhascompanyoffice(F, A) )
%   | then if ( companyalsoknownas(A, G), economicsectorcompany(B, G) )
%   | | then return 0.7782552158221233;  // std dev = 0,023, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( cityhascompanyoffice(F, H), economicsectorcompany(B, H) )
%   | | | then return 0.6725181886288542;  // std dev = 2,637, 106,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=99 */
%   | | | else return -0.2211678760361469;  // std dev = 0,261, 204,000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | else if ( acquired(I, A), economicsectorcompany(B, I) )
%   | | then return 0.5744242778317215;  // std dev = 0,064, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( acquired(J, A) )
%   | | | then return 0.049128312427782705;  // std dev = 5,412, 157,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | | | else return 0.11812839475500965;  // std dev = 17,623, 1.365,000 (wgt'ed) examples reached here.  /* #neg=885 #pos=480 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( companyceo(A, C), bankchiefexecutiveceo(A, C) )
%   then if ( bankboughtbank(A, D) )
%   | then return 0.017004120030370457;  // std dev = 0,606, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( acquired(A, E) )
%   | | then return -0.0669164144099584;  // std dev = 0,277, 22,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else return -0.042997162679628276;  // std dev = 0,290, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   else if ( acquired(F, A), companyceo(F, G) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.43116350384022273;  // std dev = 0,084, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( companyalsoknownas(F, H), acquired(I, F) )
%   | | | then return 0.2841053598541192;  // std dev = 1,311, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.03853368375359911;  // std dev = 4,553, 167,000 (wgt'ed) examples reached here.  /* #neg=138 #pos=29 */
%   | else if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | then return 0.403481916461525;  // std dev = 0,087, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( companyceo(A, K), companyalsoknownas(A, L) )
%   | | | then return 0.001352876503209991;  // std dev = 4,094, 133,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=30 */
%   | | | else return 0.08905787712802414;  // std dev = 20,042, 1.903,000 (wgt'ed) examples reached here.  /* #neg=1.252 #pos=651 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), companyceo(A, D) )
%   then if ( countryhascompanyoffice(E, C), cityhascompanyoffice(F, A) )
%   | then return 0.17535828991811775;  // std dev = 0,376, 29,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | else return 0.028652803542072777;  // std dev = 0,361, 197,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=61 */
%   else if ( countryhascompanyoffice(G, A), acquired(H, A) )
%   | then if ( bankboughtbank(H, I), economicsectorcompany(B, I) )
%   | | then return 0.4007052367089681;  // std dev = 0,107, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( bankboughtbank(J, A), bankchiefexecutiveceo(J, K) )
%   | | | then return -0.07183270787279636;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.006197081773232634;  // std dev = 2,183, 33,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | else if ( bankboughtbank(L, A) )
%   | | then if ( cityhascompanyoffice(M, L) )
%   | | | then return 0.11491413674133961;  // std dev = 2,183, 20,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.037705556483129773;  // std dev = 1,810, 22,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( companyalsoknownas(A, N), economicsectorcompany(B, N) )
%   | | | then return 0.6771303824408295;  // std dev = 0,350, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.07119380608200501;  // std dev = 19,868, 1.909,000 (wgt'ed) examples reached here.  /* #neg=1.249 #pos=660 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), bankboughtbank(A, C) )
%   then if ( countryhascompanyoffice(D, A) )
%   | then return -0.15363297810821266;  // std dev = 0,333, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else return 0.06302920223353663;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( acquired(A, E), companyalsoknownas(E, F) )
%   | then if ( companyalsoknownas(A, G) )
%   | | then return -0.045061899653138116;  // std dev = 0,275, 32,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( acquired(E, H) )
%   | | | then return 0.07636860243289474;  // std dev = 1,410, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.011114473914442006;  // std dev = 1,507, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( bankboughtbank(I, A), cityhascompanyoffice(J, I) )
%   | | then if ( cityhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.6359287586375935;  // std dev = 0,350, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.28723149678533616;  // std dev = 0,138, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( countryhascompanyoffice(L, A), bankbankincountry(M, L) )
%   | | | then return 0.07378423090093883;  // std dev = 5,785, 185,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=66 */
%   | | | else return 0.04026319786942488;  // std dev = 20,145, 2.081,000 (wgt'ed) examples reached here.  /* #neg=1.397 #pos=684 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.3321488504042639;  // std dev = 0,083, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else if ( acquired(D, A), companyceo(D, E) )
%   | then if ( countryhascompanyoffice(F, D) )
%   | | then if ( acquired(G, D), economicsectorcompany(B, G) )
%   | | | then return 0.7631293630806191;  // std dev = 1,49e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03802075079238028;  // std dev = 2,343, 30,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( acquired(D, H), economicsectorcompany(B, H) )
%   | | | then return 0.6923350568253446;  // std dev = 0,549, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.2052760466282455;  // std dev = 0,339, 94,000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | | then if ( acquired(A, J), economicsectorcompany(B, J) )
%   | | | then return 0.2157224066124753;  // std dev = 0,101, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5309670899991904;  // std dev = 0,418, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( companyalsoknownas(A, K), cityhascompanyoffice(L, K) )
%   | | | then return -0.04287089528157294;  // std dev = 3,676, 124,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=29 */
%   | | | else return 0.03237064730872913;  // std dev = 20,109, 1.996,000 (wgt'ed) examples reached here.  /* #neg=1.345 #pos=651 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), companyceo(C, D) )
%   then return -0.0030968753025801053;  // std dev = 0,311, 202,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=62 */
%   else if ( bankboughtbank(E, A), countryhascompanyoffice(F, E) )
%   | then if ( countryhascompanyoffice(G, A), bankchiefexecutiveceo(E, H) )
%   | | then if ( countryhascompanyoffice(G, I), economicsectorcompany(B, I) )
%   | | | then return 0.647647949271133;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.35235205072886705;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( acquired(E, J), economicsectorcompany(B, J) )
%   | | | then return 0.3166106387362078;  // std dev = 0,178, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.04345999058849935;  // std dev = 2,716, 57,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | else if ( acquired(A, K), companyalsoknownas(A, L) )
%   | | then if ( economicsectorcompany(B, K) )
%   | | | then return 0.2558129677650908;  // std dev = 0,287, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.04303750110206664;  // std dev = 3,649, 96,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=29 */
%   | | else if ( companyceo(A, M) )
%   | | | then return -0.004599026094767225;  // std dev = 5,683, 205,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=61 */
%   | | | else return 0.026386655727267377;  // std dev = 19,175, 1.799,000 (wgt'ed) examples reached here.  /* #neg=1.208 #pos=591 */


Starting fold 1

Target train facts examples: 9690
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9690
Target test pos	 examples: 133
Target test neg examples: 53331

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyceo(A, C), cityhascompanyoffice(D, A).;true;true
0;false,false;countryhascompanyoffice(J, A), bankboughtbank(K, A).;true;true
0;true,false;bankchiefexecutiveceo(F, C).;false;true
0;false,false,false;companyalsoknownas(A, L), acquired(A, M).;false;false
0;false;companyceo(A, H), acquired(I, A).;false;true
0;true;bankchiefexecutiveceo(E, C), economicsectorcompany(B, E).;false;true
0;true,false,false;cityhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
0;false,false,true;countryhascompanyoffice(J, K).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
1;false,false;acquired(A, H), economicsectorcompany(B, H).;true;true
1;false,true;bankboughtbank(E, A), bankchiefexecutiveceo(E, F).;false;true
1;false;acquired(D, A).;true;true
1;false,false,false;companyceo(A, K), acquired(A, L).;false;false
1;false,false,true;cityhascompanyoffice(I, A), companyceo(A, J).;false;false
1;false,true,false;companyalsoknownas(D, G), economicsectorcompany(B, G).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
2;false,false;companyalsoknownas(A, G), companyceo(G, H).;true;true
2;true,false;economicsectorcompany(B, C).;false;false
2;false,true;economicsectorcompany(B, E).;false;false
2;false;acquired(A, E), cityhascompanyoffice(F, E).;true;true
2;true;economicsectorcompany(B, D).;false;true
2;false,false,false;cityhascompanyoffice(J, A).;false;false
2;false,false,true;acquired(G, I), economicsectorcompany(B, I).;false;false
3;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(C, D).;true;true
3;false,false;acquired(L, A), cityhascompanyoffice(M, A).;false;true
3;true,false;companyalsoknownas(A, G).;false;false
3;false,true;bankchiefexecutiveceo(J, H), economicsectorcompany(B, J).;false;true
3;false;companyceo(A, H), bankchiefexecutiveceo(A, I).;true;true
3;true;companyalsoknownas(A, E), acquired(F, E).;false;true
3;false,false,false;companyalsoknownas(A, N).;false;false
3;false,true,false;bankboughtbank(K, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
4;true,false;bankchiefexecutiveceo(A, D), countryhascompanyoffice(E, A).;false;false
4;false,true;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
4;false;cityhascompanyoffice(F, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;false,false,false;acquired(J, A).;false;false
4;false,true,false;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
5;;companyeconomicsector(A, B) :- companyceo(A, C), bankchiefexecutiveceo(A, C).;true;true
5;false,false;acquired(A, J), economicsectorcompany(B, J).;false;true
5;true,false;acquired(A, E).;false;false
5;false,true;economicsectorcompany(B, F).;false;true
5;false;acquired(F, A), companyceo(F, G).;true;true
5;true;bankboughtbank(A, D).;false;true
5;false,false,false;companyceo(A, K), companyalsoknownas(A, L).;false;false
5;false,true,false;companyalsoknownas(F, H), acquired(I, F).;false;false
6;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(A, D).;true;true
6;false,false;bankboughtbank(L, A).;true;true
6;false,false,false;companyalsoknownas(A, N), economicsectorcompany(B, N).;false;false
6;false,true;bankboughtbank(H, I), economicsectorcompany(B, I).;false;true
6;false;countryhascompanyoffice(G, A), acquired(H, A).;true;true
6;true;countryhascompanyoffice(E, C), cityhascompanyoffice(F, A).;false;false
6;false,false,true;cityhascompanyoffice(M, L).;false;false
6;false,true,false;bankboughtbank(J, A), bankchiefexecutiveceo(J, K).;false;false
7;;companyeconomicsector(A, B) :- acquired(A, C), bankboughtbank(A, C).;true;true
7;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
7;false,false,false;countryhascompanyoffice(L, A), bankbankincountry(M, L).;false;false
7;false,true;companyalsoknownas(A, G).;false;true
7;false;acquired(A, E), companyalsoknownas(E, F).;true;true
7;true;countryhascompanyoffice(D, A).;false;false
7;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
7;false,true,false;acquired(E, H).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;true;true
8;false,true,true;acquired(G, D), economicsectorcompany(B, G).;false;false
8;false,true;countryhascompanyoffice(F, D).;true;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,false,false;companyalsoknownas(A, K), cityhascompanyoffice(L, K).;false;false
8;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;false,true,false;acquired(D, H), economicsectorcompany(B, H).;false;false
9;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;false;true
9;false,false;acquired(A, K), companyalsoknownas(A, L).;true;true
9;false,true,true;countryhascompanyoffice(G, I), economicsectorcompany(B, I).;false;false
9;false,true;countryhascompanyoffice(G, A), bankchiefexecutiveceo(E, H).;true;true
9;false;bankboughtbank(E, A), countryhascompanyoffice(F, E).;true;true
9;false,false,false;companyceo(A, M).;false;false
9;false,false,true;economicsectorcompany(B, K).;false;false
9;false,true,false;acquired(E, J), economicsectorcompany(B, J).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysinleague(A, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamalsoknownas(F, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(G, D) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.6581489350995122;  // std dev = 0,400, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.3042521785923904;  // std dev = 1,494, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.2527838886261914;  // std dev = 0,468, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(A, D) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, E) )
%   | then return 0.15504078983691338;  // std dev = 1,393, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0.6421745830612471;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), athleteplaysforteam(D, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, E) )
%   | then if ( teamplaysinleague(F, E) )
%   | | then return 0.12281241121586814;  // std dev = 1,387, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.4856640340294405;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(A, C) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(D, E) )
%   | then return 0.12317227285030793;  // std dev = 0,445, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplaysforteam(D, E), teamplaysinleague(A, F) )
%   | then return -0.11391905655937576;  // std dev = 0,884, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(H, I) )
%   | | then return 0.3045246172458907;  // std dev = 0,867, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then return -0.03747768781976926;  // std dev = 0,853, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( teamplaysinleague(D, E) )
%   | then if ( teamplaysinleague(F, E) )
%   | | then return 0.1423724187369935;  // std dev = 0,994, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( athleteplaysforteam(E, C) )
%   | then return 0.053554649675791335;  // std dev = 0,419, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.041773304877481675;  // std dev = 1,326, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.46294
   AUC PR    = 0.002244
   CLL	      = -0.697604
   Precision = 0.00213 at threshold = 0.5
   Recall    = 0.390977
   F1        = 0.004237


Total learning time: 1.794 seconds
Total inference time: 195.939 seconds
AUC ROC: 0.46294


Results scoring model
   AUC ROC   = 0.82
   AUC PR    = 0.837287
   CLL	      = -0.538867
   Precision = 0.8 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.8


Total scoring time: 0.951 seconds
Parameter learned model CLL: -0.538867


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamplaysinleague(A, D)', 'false,false': 'athleteplaysforteam(I, A)', 'true,false': 'teamalsoknownas(F, C)', 'false': 'teamplaysagainstteam(A, H)', 'true': 'teamalsoknownas(E, C)', 'true,false,false': 'teamplaysinleague(G, D)'}, {'true,false,false,true': [0.0, 1, 0], 'true,true': [0.866, 3, 1], 'false,false,false': [0.4, 1, 4], 'true,false,false,false': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.494, 5, 5]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.468, 5, 5]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(A, D)', 'false': 'teamplaysinleague(A, E)'}, {'false,false': [0.0, 0, 1], 'true': [0.0, 0, 0], 'false,true': [1.393, 5, 4]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(A, E)', 'false,true': 'teamplaysinleague(F, E)'}, {'false,false': [0.0, 0, 1], 'true': [0.0, 0, 0], 'false,true,true': [1.387, 5, 4], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(A, C)', 'false': 'teamplaysagainstteam(D, E)'}, {'false,false': [0.0, 0, 0], 'true': [0.0, 0, 0], 'false,true': [0.445, 5, 5]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'athleteplaysforteam(G, A)', 'true': 'athleteplaysforteam(D, E), teamplaysinleague(A, F)', 'false,false': 'teamplaysinleague(H, I)'}, {'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,false,true': [0.867, 1, 4], 'true,true': [0.884, 4, 1], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false': 'teamplaysinleague(D, E)', 'false,true': 'teamplaysinleague(F, E)'}, {'false,false': [0.0, 0, 0], 'true': [0.853, 3, 1], 'false,true,true': [0.994, 2, 4], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)', 'true': 'athleteplaysforteam(E, C)'}, {'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.419, 5, 5]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'false': [0.0, 0, 0], 'true': [1.326, 5, 5]}]]
[{'': [0.16000000000000003, 0.15999999999999986], 'false,false': [nan, 0.15999999999999986], 'true,false': [nan, 0.0], 'false': [nan, 0.15999999999999986], 'true': [0.18750000000000003, 0.0], 'true,false,false': [0.0, nan]}, {'': [0.22326667518574572, nan]}, {'': [0.21874051253441312, nan]}, {'': [nan, 0.21527099499373703], 'false': [0.21546006118737285, 0.0]}, {'': [nan, 0.20424602183425677], 'false': [0.21377389424244098, 0.0], 'false,true': [0.21377389424244098, nan]}, {'': [nan, 0.1979736609135713], 'false': [0.1979736609135713, nan]}, {'': [0.15625850682759374, 0.15030318731259124], 'false': [nan, 0.15030318731259124], 'true': [0.15625850682759374, nan], 'false,false': [0.15030318731259124, nan]}, {'': [0.1817459333295003, 0.16452504692809058], 'false': [0.16452504692809058, nan], 'false,true': [0.16452504692809058, nan]}, {'': [0.1759013580120291, nan], 'true': [0.1759013580120291, nan]}, {'': [0.17574205646062052, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamplaysinleague(A, D).;true;true
0;true;teamalsoknownas(E, C).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(A, E).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysinleague(A, D) )
%   then if ( teamalsoknownas(E, C) )
%   | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.7753089552646348;  // std dev = 0,077, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.16680459807985398;  // std dev = 0,088, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.6153659359932705;  // std dev = 0,111, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14510994660541685;  // std dev = 0,079, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.4722672667626765;  // std dev = 0,118, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.12817444568422556;  // std dev = 0,072, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4381130166740067;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.35969738649808736;  // std dev = 0,113, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.11463480653799296;  // std dev = 0,065, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.33471483383022815;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.2790218609806939;  // std dev = 0,103, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10358954831861811;  // std dev = 0,060, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.22695919636194128;  // std dev = 0,091, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09442340157707442;  // std dev = 0,055, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.18992615235896096;  // std dev = 0,081, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08670428595177182;  // std dev = 0,051, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.1626162060258878;  // std dev = 0,072, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08012097650505641;  // std dev = 0,048, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.14181136187570953;  // std dev = 0,065, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07444421272862174;  // std dev = 0,045, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.971485
   AUC PR    = 0.21422
   CLL	      = -0.140492
   Precision = 0.24053 at threshold = 0.5
   Recall    = 0.954887
   F1        = 0.384266


Total learning time: 1.786 seconds
Total inference time: 4.782 seconds
AUC ROC: 0.971485


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103414
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.742 seconds
Refined model CLL: -0.103414


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.971485
   AUC PR    = 0.21422
   CLL	      = -0.140492
   Precision = 0.24053 at threshold = 0.5
   Recall    = 0.954887
   F1        = 0.384266


Total learning time: 5.273000000000001 seconds
Total inference time: 4.782 seconds
AUC ROC: 0.971485
Total revision time: 5.273000000000001
Best scored revision CLL: -0.103414


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 00:49:22
{'AUC ROC': 0.971485, 'AUC PR': 0.21422, 'CLL': -0.140492, 'Inference time': 4.782, 'Recall': 0.954887, 'F1': 0.384266, 'Precision': [0.24053, 0.5], 'Learning time': 5.273000000000001, 'parameter_5': {'AUC ROC': 0.46294, 'AUC PR': 0.002244, 'CLL': -0.697604, 'Inference time': 195.939, 'Recall': 0.390977, 'F1': 0.004237, 'Precision': [0.00213, 0.5], 'Learning time': 1.794}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.973684
   AUC PR    = 0.230835
   CLL	      = -0.078292
   Precision = 0.24053 at threshold = 0.5
   Recall    = 0.954887
   F1        = 0.384266


Total learning time: 1.914 seconds
Total inference time: 4.737 seconds
AUC ROC: 0.973684


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN-B), Time: 00:49:29
{'AUC ROC': 0.973684, 'AUC PR': 0.230835, 'CLL': -0.078292, 'Inference time': 4.737, 'Recall': 0.954887, 'F1': 0.384266, 'Precision': [0.24053, 0.5], 'Learning time': 1.914}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.973684
   AUC PR    = 0.230835
   CLL	      = -0.138423
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.96 seconds
Total inference time: 2.68 seconds
AUC ROC: 0.973684


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN), Time: 00:49:32
{'AUC ROC': 0.973684, 'AUC PR': 0.230835, 'CLL': -0.138423, 'Inference time': 2.68, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.96}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyceo(A, C), cityhascompanyoffice(D, A).;true;true
0;false,false;countryhascompanyoffice(J, A), bankboughtbank(K, A).;true;true
0;true,false;bankchiefexecutiveceo(F, C).;false;true
0;false,false,false;companyalsoknownas(A, L), acquired(A, M).;false;false
0;false;companyceo(A, H), acquired(I, A).;false;true
0;true;bankchiefexecutiveceo(E, C), economicsectorcompany(B, E).;false;true
0;true,false,false;cityhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
0;false,false,true;countryhascompanyoffice(J, K).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
1;false,false;acquired(A, H), economicsectorcompany(B, H).;true;true
1;false,true;bankboughtbank(E, A), bankchiefexecutiveceo(E, F).;false;true
1;false;acquired(D, A).;true;true
1;false,false,false;companyceo(A, K), acquired(A, L).;false;false
1;false,false,true;cityhascompanyoffice(I, A), companyceo(A, J).;false;false
1;false,true,false;companyalsoknownas(D, G), economicsectorcompany(B, G).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
2;false,false;companyalsoknownas(A, G), companyceo(G, H).;true;true
2;true,false;economicsectorcompany(B, C).;false;false
2;false,true;economicsectorcompany(B, E).;false;false
2;false;acquired(A, E), cityhascompanyoffice(F, E).;true;true
2;true;economicsectorcompany(B, D).;false;true
2;false,false,false;cityhascompanyoffice(J, A).;false;false
2;false,false,true;acquired(G, I), economicsectorcompany(B, I).;false;false
3;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(C, D).;true;true
3;false,false;acquired(L, A), cityhascompanyoffice(M, A).;false;true
3;true,false;companyalsoknownas(A, G).;false;false
3;false,true;bankchiefexecutiveceo(J, H), economicsectorcompany(B, J).;false;true
3;false;companyceo(A, H), bankchiefexecutiveceo(A, I).;true;true
3;true;companyalsoknownas(A, E), acquired(F, E).;false;true
3;false,false,false;companyalsoknownas(A, N).;false;false
3;false,true,false;bankboughtbank(K, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
4;true,false;bankchiefexecutiveceo(A, D), countryhascompanyoffice(E, A).;false;false
4;false,true;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
4;false;cityhascompanyoffice(F, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;false,false,false;acquired(J, A).;false;false
4;false,true,false;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
5;;companyeconomicsector(A, B) :- companyceo(A, C), bankchiefexecutiveceo(A, C).;true;true
5;false,false;acquired(A, J), economicsectorcompany(B, J).;false;true
5;true,false;acquired(A, E).;false;false
5;false,true;economicsectorcompany(B, F).;false;true
5;false;acquired(F, A), companyceo(F, G).;true;true
5;true;bankboughtbank(A, D).;false;true
5;false,false,false;companyceo(A, K), companyalsoknownas(A, L).;false;false
5;false,true,false;companyalsoknownas(F, H), acquired(I, F).;false;false
6;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(A, D).;true;true
6;false,false;bankboughtbank(L, A).;true;true
6;false,false,false;companyalsoknownas(A, N), economicsectorcompany(B, N).;false;false
6;false,true;bankboughtbank(H, I), economicsectorcompany(B, I).;false;true
6;false;countryhascompanyoffice(G, A), acquired(H, A).;true;true
6;true;countryhascompanyoffice(E, C), cityhascompanyoffice(F, A).;false;false
6;false,false,true;cityhascompanyoffice(M, L).;false;false
6;false,true,false;bankboughtbank(J, A), bankchiefexecutiveceo(J, K).;false;false
7;;companyeconomicsector(A, B) :- acquired(A, C), bankboughtbank(A, C).;true;true
7;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
7;false,false,false;countryhascompanyoffice(L, A), bankbankincountry(M, L).;false;false
7;false,true;companyalsoknownas(A, G).;false;true
7;false;acquired(A, E), companyalsoknownas(E, F).;true;true
7;true;countryhascompanyoffice(D, A).;false;false
7;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
7;false,true,false;acquired(E, H).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;true;true
8;false,true,true;acquired(G, D), economicsectorcompany(B, G).;false;false
8;false,true;countryhascompanyoffice(F, D).;true;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,false,false;companyalsoknownas(A, K), cityhascompanyoffice(L, K).;false;false
8;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;false,true,false;acquired(D, H), economicsectorcompany(B, H).;false;false
9;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;false;true
9;false,false;acquired(A, K), companyalsoknownas(A, L).;true;true
9;false,true,true;countryhascompanyoffice(G, I), economicsectorcompany(B, I).;false;false
9;false,true;countryhascompanyoffice(G, A), bankchiefexecutiveceo(E, H).;true;true
9;false;bankboughtbank(E, A), countryhascompanyoffice(F, E).;true;true
9;false,false,false;companyceo(A, M).;false;false
9;false,false,true;economicsectorcompany(B, K).;false;false
9;false,true,false;acquired(E, J), economicsectorcompany(B, J).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return 0.19148226843284566;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F), teamalsoknownas(G, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplaysforteam(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, F), teamalsoknownas(A, G) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.26045775179057506;  // std dev = 2,078, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamalsoknownas(A, D), teamplaysagainstteam(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then if ( teamalsoknownas(F, H) )
%   | | | then return 0.2183006769263024;  // std dev = 2,073, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then return 0.1141482180959315;  // std dev = 0,481, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( teamalsoknownas(G, A), teamplaysagainstteam(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.6892094427243577;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then if ( teamplaysagainstteam(E, F) )
%   | | then return 0.06745014413504331;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2850907468483032;  // std dev = 1,084, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.06506178860483643;  // std dev = 1,916, 16,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   else if ( teamalsoknownas(E, A), teamplaysinleague(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.4556483211462886;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(A, D) )
%   then if ( athleteplaysforteam(E, C), teamplaysagainstteam(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( athleteplaysforteam(G, A), teamalsoknownas(H, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, J) )
%   | | then return 0.08400546543702986;  // std dev = 1,956, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then if ( teamplaysagainstteam(F, H) )
%   | | | then return 0.06556092698164168;  // std dev = 1,956, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamalsoknownas(D, A), teamplaysinleague(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(G, H) )
%   | | | then return 0.050906830387224405;  // std dev = 1,956, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(C, D) )
%   then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( athleteplaysforteam(E, F) )
%   | then if ( athleteplaysforteam(G, A) )
%   | | then if ( athleteplaysforteam(G, H) )
%   | | | then return 0.027960889009870052;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(F, I) )
%   | | | then return 0.0573411994588421;  // std dev = 1,130, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.460266
   AUC PR    = 0.002234
   CLL	      = -0.757626
   Precision = 0.002098 at threshold = 0.5
   Recall    = 0.308271
   F1        = 0.004167


Total learning time: 2.284 seconds
Total inference time: 187.768 seconds
AUC ROC: 0.460266


Results scoring model
   AUC ROC   = 0.72
   AUC PR    = 0.796087
   CLL	      = -0.568342
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.571429


Total scoring time: 1.052 seconds
Parameter learned model CLL: -0.568342


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), teamplaysagainstteam(D, A)', 'false': 'teamplaysinleague(A, F), teamalsoknownas(G, A)', 'true': 'teamplaysagainstteam(D, E)', 'false,false': 'athleteplaysforteam(H, A)', 'false,false,false': 'teamalsoknownas(A, I)'}, {'true,false': [0.0, 0, 0], 'true,true': [1.633, 8, 4], 'false,true': [0.0, 0, 2], 'false,false,false,false': [1.155, 2, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A)', 'false,false': 'teamalsoknownas(A, E)', 'false,false,false': 'teamplaysinleague(A, F), teamalsoknownas(A, G)'}, {'false,false,false,false': [2.078, 10, 8], 'false,false,false,true': [0.0, 0, 0], 'true': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(A, D), teamplaysagainstteam(E, D)', 'false,false': 'teamplaysinleague(F, G)', 'false,false,true': 'teamalsoknownas(F, H)'}, {'false,true': [0.0, 0, 0], 'true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.073, 10, 8], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysinleague(A, F)', 'true': 'teamalsoknownas(D, E)', 'false,false': 'teamalsoknownas(G, A), teamplaysagainstteam(H, A)'}, {'false,true': [0.481, 10, 6], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.0, 0, 2], 'false,false,false': [0.0, 0, 2]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false,false': 'teamalsoknownas(G, A)', 'false,true': 'teamplaysagainstteam(E, F)', 'false': 'teamplaysagainstteam(E, A)', 'true': 'athleteplaysforteam(D, A)', 'false,false,false': 'teamalsoknownas(H, A)'}, {'true,false': [0.0, 0, 2], 'false,true,true': [1.633, 8, 4], 'true,true': [0.0, 0, 0], 'false,false,false,false': [1.084, 2, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false': 'teamalsoknownas(E, A), teamplaysinleague(E, F)', 'true': 'teamalsoknownas(A, D)', 'false,false': 'teamalsoknownas(A, G)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true,false': [1.916, 10, 6], 'true,true': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysinleague(A, D)', 'false': 'athleteplaysforteam(G, A), teamalsoknownas(H, A)', 'true': 'athleteplaysforteam(E, C), teamplaysagainstteam(F, A)', 'false,false': 'teamplaysagainstteam(I, J)'}, {'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,false,true': [1.956, 10, 8], 'true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamalsoknownas(A, E)', 'true': 'athleteplaysforteam(D, A)', 'false,false': 'teamplaysagainstteam(F, G)', 'false,false,true': 'teamplaysagainstteam(F, H)'}, {'false,false,true,true': [1.956, 10, 8], 'true,false': [0.0, 0, 2], 'true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A), teamplaysinleague(D, E)', 'false,false': 'teamalsoknownas(A, F)', 'false,false,false': 'teamplaysagainstteam(G, H)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [1.956, 10, 8], 'true': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysinleague(C, D)', 'false': 'athleteplaysforteam(E, F)', 'false,true': 'athleteplaysforteam(G, A)', 'false,true,true': 'athleteplaysforteam(G, H)', 'false,true,false': 'teamalsoknownas(F, I)'}, {'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 0], 'false,true,true,true': [1.595, 7, 4], 'false,true,false,true': [1.13, 3, 4]}]]
[{'': [0.22222222222222207, 0.18749999999999994], 'false': [0.0, 0.22222222222222224], 'true': [0.22222222222222207, nan], 'false,false,false': [nan, 0.22222222222222213], 'false,false': [nan, 0.22222222222222213]}, {'': [0.0, 0.23986375200467236], 'false': [nan, 0.23986375200467236], 'false,false,false': [nan, 0.23986375200467236], 'false,false': [nan, 0.23986375200467236]}, {'': [0.0, 0.23884071431685638], 'false': [nan, 0.23884071431685638], 'false,false,true': [0.23884071431685638, nan], 'false,false': [0.23884071431685638, nan]}, {'': [0.0, 0.23803436784190646], 'false': [0.2310447291475731, 0.0], 'true': [0.0, nan], 'false,false': [nan, 0.0]}, {'': [0.0, 0.22396529342342003], 'false,false': [nan, 0.1958731478595551], 'false,false,false': [nan, 0.1958731478595551], 'false': [0.22222222222222232, 0.1958731478595551], 'true': [nan, 0.0], 'false,true': [0.22222222222222232, nan]}, {'': [0.2075949687874986, 0.0], 'false': [nan, 0.0], 'true': [0.0, 0.22952856380741968], 'false,false,false': [nan, 0.0], 'false,false': [nan, 0.0]}, {'': [0.0, 0.21261731154379027], 'false': [nan, 0.2126173115437902], 'true': [nan, 0.0], 'false,false': [0.21261731154379027, nan]}, {'': [0.0, 0.2125572145550804], 'false': [nan, 0.2125572145550804], 'true': [nan, 0.0], 'false,false,true': [0.2125572145550804, nan], 'false,false': [0.2125572145550804, nan]}, {'': [0.0, 0.21255650811975968], 'false': [nan, 0.21255650811975968], 'false,false,false': [0.21255650811975968, nan], 'false,false': [nan, 0.21255650811975968]}, {'': [0.0, 0.21258368623503707], 'false': [0.21258368623503707, nan], 'false,true,false': [0.18247988824230305, nan], 'false,true,true': [0.2314049586776859, nan], 'false,true': [0.2314049586776859, 0.18247988824230305]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(A, C), teamplaysagainstteam(D, A).;true;true
0;false;teamplaysinleague(A, F), teamalsoknownas(G, A).;true;true
1;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
2;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
3;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
3;false;teamplaysinleague(A, F).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
5;true;teamalsoknownas(A, D).;true;true
6;;teamplayssport(A, B) :- teamalsoknownas(A, C), teamplaysinleague(A, D).;true;true
7;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
9;;teamplayssport(A, B) :- teamalsoknownas(C, A), teamplaysinleague(C, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   then if ( athleteplayssport(E, B), athleteplaysforteam(E, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysinleague(A, F), teamalsoknownas(G, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5248156017661788;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.7505511758931249;  // std dev = 0,088, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.14402992290765404;  // std dev = 0,118, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.5879550920336303;  // std dev = 0,114, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.12733832241280701;  // std dev = 0,107, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | | then return 0.42946909194646343;  // std dev = 0,095, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.11397267085222909;  // std dev = 0,097, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.4841748200216123;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.32071184716014967;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.33865302037394684;  // std dev = 0,098, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.10305496387616257;  // std dev = 0,090, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | | then return 0.2596468155258052;  // std dev = 0,076, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.09398458416117318;  // std dev = 0,083, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2919050307001241;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(A, D) )
%   then return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then return 0.21868824536475745;  // std dev = 0,072, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.0863388858222491;  // std dev = 0,077, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.18373532281952887;  // std dev = 0,063, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.07981289662430072;  // std dev = 0,072, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.15274385809367097;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.15783775983270476;  // std dev = 0,056, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.07418160999168055;  // std dev = 0,067, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(C, D) )
%   then return 0.13400703000801117;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then return 0.1380234356830395;  // std dev = 0,050, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.06927571701499471;  // std dev = 0,063, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.936621
   AUC PR    = 0.208908
   CLL	      = -0.376253
   Precision = 0.016375 at threshold = 0.5
   Recall    = 0.962406
   F1        = 0.032201


Total learning time: 2.342 seconds
Total inference time: 5.773 seconds
AUC ROC: 0.936621


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098695
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.805 seconds
Refined model CLL: -0.098695


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.936621
   AUC PR    = 0.208908
   CLL	      = -0.376253
   Precision = 0.016375 at threshold = 0.5
   Recall    = 0.962406
   F1        = 0.032201


Total learning time: 6.483 seconds
Total inference time: 5.773 seconds
AUC ROC: 0.936621
Total revision time: 6.483
Best scored revision CLL: -0.098695


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 00:52:53
{'AUC ROC': 0.936621, 'AUC PR': 0.208908, 'parameter_10': {'AUC ROC': 0.460266, 'AUC PR': 0.002234, 'CLL': -0.757626, 'Inference time': 187.768, 'Recall': 0.308271, 'F1': 0.004167, 'Precision': [0.002098, 0.5], 'Learning time': 2.284}, 'CLL': -0.376253, 'Inference time': 5.773, 'Recall': 0.962406, 'F1': 0.032201, 'Precision': [0.016375, 0.5], 'Learning time': 6.483}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.973684
   AUC PR    = 0.230835
   CLL	      = -0.078292
   Precision = 0.24053 at threshold = 0.5
   Recall    = 0.954887
   F1        = 0.384266


Total learning time: 2.087 seconds
Total inference time: 4.49 seconds
AUC ROC: 0.973684


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN-B), Time: 00:53:00
{'AUC ROC': 0.973684, 'AUC PR': 0.230835, 'CLL': -0.078292, 'Inference time': 4.49, 'Recall': 0.954887, 'F1': 0.384266, 'Precision': [0.24053, 0.5], 'Learning time': 2.087}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.973684
   AUC PR    = 0.230835
   CLL	      = -0.138423
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.008 seconds
Total inference time: 2.678 seconds
AUC ROC: 0.973684


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN), Time: 00:53:04
{'AUC ROC': 0.973684, 'AUC PR': 0.230835, 'CLL': -0.138423, 'Inference time': 2.678, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 1.008}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyceo(A, C), cityhascompanyoffice(D, A).;true;true
0;false,false;countryhascompanyoffice(J, A), bankboughtbank(K, A).;true;true
0;true,false;bankchiefexecutiveceo(F, C).;false;true
0;false,false,false;companyalsoknownas(A, L), acquired(A, M).;false;false
0;false;companyceo(A, H), acquired(I, A).;false;true
0;true;bankchiefexecutiveceo(E, C), economicsectorcompany(B, E).;false;true
0;true,false,false;cityhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
0;false,false,true;countryhascompanyoffice(J, K).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
1;false,false;acquired(A, H), economicsectorcompany(B, H).;true;true
1;false,true;bankboughtbank(E, A), bankchiefexecutiveceo(E, F).;false;true
1;false;acquired(D, A).;true;true
1;false,false,false;companyceo(A, K), acquired(A, L).;false;false
1;false,false,true;cityhascompanyoffice(I, A), companyceo(A, J).;false;false
1;false,true,false;companyalsoknownas(D, G), economicsectorcompany(B, G).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
2;false,false;companyalsoknownas(A, G), companyceo(G, H).;true;true
2;true,false;economicsectorcompany(B, C).;false;false
2;false,true;economicsectorcompany(B, E).;false;false
2;false;acquired(A, E), cityhascompanyoffice(F, E).;true;true
2;true;economicsectorcompany(B, D).;false;true
2;false,false,false;cityhascompanyoffice(J, A).;false;false
2;false,false,true;acquired(G, I), economicsectorcompany(B, I).;false;false
3;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(C, D).;true;true
3;false,false;acquired(L, A), cityhascompanyoffice(M, A).;false;true
3;true,false;companyalsoknownas(A, G).;false;false
3;false,true;bankchiefexecutiveceo(J, H), economicsectorcompany(B, J).;false;true
3;false;companyceo(A, H), bankchiefexecutiveceo(A, I).;true;true
3;true;companyalsoknownas(A, E), acquired(F, E).;false;true
3;false,false,false;companyalsoknownas(A, N).;false;false
3;false,true,false;bankboughtbank(K, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
4;true,false;bankchiefexecutiveceo(A, D), countryhascompanyoffice(E, A).;false;false
4;false,true;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
4;false;cityhascompanyoffice(F, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;false,false,false;acquired(J, A).;false;false
4;false,true,false;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
5;;companyeconomicsector(A, B) :- companyceo(A, C), bankchiefexecutiveceo(A, C).;true;true
5;false,false;acquired(A, J), economicsectorcompany(B, J).;false;true
5;true,false;acquired(A, E).;false;false
5;false,true;economicsectorcompany(B, F).;false;true
5;false;acquired(F, A), companyceo(F, G).;true;true
5;true;bankboughtbank(A, D).;false;true
5;false,false,false;companyceo(A, K), companyalsoknownas(A, L).;false;false
5;false,true,false;companyalsoknownas(F, H), acquired(I, F).;false;false
6;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(A, D).;true;true
6;false,false;bankboughtbank(L, A).;true;true
6;false,false,false;companyalsoknownas(A, N), economicsectorcompany(B, N).;false;false
6;false,true;bankboughtbank(H, I), economicsectorcompany(B, I).;false;true
6;false;countryhascompanyoffice(G, A), acquired(H, A).;true;true
6;true;countryhascompanyoffice(E, C), cityhascompanyoffice(F, A).;false;false
6;false,false,true;cityhascompanyoffice(M, L).;false;false
6;false,true,false;bankboughtbank(J, A), bankchiefexecutiveceo(J, K).;false;false
7;;companyeconomicsector(A, B) :- acquired(A, C), bankboughtbank(A, C).;true;true
7;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
7;false,false,false;countryhascompanyoffice(L, A), bankbankincountry(M, L).;false;false
7;false,true;companyalsoknownas(A, G).;false;true
7;false;acquired(A, E), companyalsoknownas(E, F).;true;true
7;true;countryhascompanyoffice(D, A).;false;false
7;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
7;false,true,false;acquired(E, H).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;true;true
8;false,true,true;acquired(G, D), economicsectorcompany(B, G).;false;false
8;false,true;countryhascompanyoffice(F, D).;true;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,false,false;companyalsoknownas(A, K), cityhascompanyoffice(L, K).;false;false
8;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;false,true,false;acquired(D, H), economicsectorcompany(B, H).;false;false
9;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;false;true
9;false,false;acquired(A, K), companyalsoknownas(A, L).;true;true
9;false,true,true;countryhascompanyoffice(G, I), economicsectorcompany(B, I).;false;false
9;false,true;countryhascompanyoffice(G, A), bankchiefexecutiveceo(E, H).;true;true
9;false;bankboughtbank(E, A), countryhascompanyoffice(F, E).;true;true
9;false,false,false;companyceo(A, M).;false;false
9;false,false,true;economicsectorcompany(B, K).;false;false
9;false,true,false;acquired(E, J), economicsectorcompany(B, J).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysinleague(A, D) )
%   then if ( teamalsoknownas(C, E) )
%   | then return 0.14386322081379804;  // std dev = 1,690, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( teamalsoknownas(C, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(G, D) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, H) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplaysforteam(I, A) )
%   | | then if ( athleteplaysforteam(I, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.6359267128772901;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.30575701621746293;  // std dev = 2,637, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.25402712258735144;  // std dev = 0,478, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, A) )
%   then if ( teamalsoknownas(C, E) )
%   | then return -0.2504239233528001;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then return 0.16895574791075685;  // std dev = 2,379, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | else return 0.4667210441541501;  // std dev = 0,334, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), athleteplaysforteam(D, A) )
%   then return -0.20639786384414024;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamplaysinleague(A, E) )
%   | then if ( teamplaysinleague(F, E) )
%   | | then return 0.13338497147020592;  // std dev = 2,375, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.3591911234467233;  // std dev = 0,323, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, A) )
%   then return -0.17462825498854437;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamplaysagainstteam(D, E) )
%   | then return 0.13281977223674987;  // std dev = 0,465, 29,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplaysforteam(D, E), teamplaysinleague(A, F) )
%   | then return 0.018543837485767146;  // std dev = 2,043, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else return 0.3597003344374776;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplaysforteam(G, A) )
%   | then if ( teamalsoknownas(H, I) )
%   | | then return -0.39571899327234383;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(J, K) )
%   | | then return 0.27666737727572194;  // std dev = 1,190, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then return 0.036469487334217114;  // std dev = 2,002, 18,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   else if ( teamplaysinleague(D, E) )
%   | then if ( teamplaysinleague(F, E) )
%   | | then return 0.12274688350568581;  // std dev = 1,396, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( athleteplaysforteam(E, C) )
%   | then return 0.05453333475319134;  // std dev = 0,447, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.042001311368883805;  // std dev = 2,446, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.456018
   AUC PR    = 0.002149
   CLL	      = -0.735095
   Precision = 0.002135 at threshold = 0.5
   Recall    = 0.398496
   F1        = 0.004247


Total learning time: 2.731 seconds
Total inference time: 192.018 seconds
AUC ROC: 0.456018


Results scoring model
   AUC ROC   = 0.773333
   AUC PR    = 0.807272
   CLL	      = -0.588556
   Precision = 0.8 at threshold = 0.5
   Recall    = 0.533333
   F1        = 0.64


Total scoring time: 1.205 seconds
Parameter learned model CLL: -0.588556


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamplaysinleague(A, D)', 'false,false': 'athleteplaysforteam(I, A)', 'true,false': 'teamalsoknownas(C, F)', 'false': 'teamplaysagainstteam(A, H)', 'true': 'teamalsoknownas(C, E)', 'true,false,false': 'teamplaysinleague(G, D)', 'false,false,true': 'athleteplaysforteam(I, J)'}, {'true,false,false,true': [1.095, 2, 3], 'false,false,true,false': [0.0, 0, 0], 'true,true': [1.69, 10, 4], 'false,false,false': [0.416, 2, 7], 'true,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.0, 1, 0], 'true,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'false': [0.0, 0, 0], 'true': [2.637, 15, 15]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.478, 15, 15]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(D, A)', 'false': 'teamplaysinleague(A, F)', 'true': 'teamalsoknownas(C, E)'}, {'false,false': [0.334, 1, 4], 'true,false': [0.0, 0, 0], 'true,true': [0.0, 1, 0], 'false,true': [2.379, 13, 11]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(A, E)', 'false,true': 'teamplaysinleague(F, E)'}, {'false,false': [0.323, 1, 4], 'true': [0.0, 1, 0], 'false,true,true': [2.375, 13, 11], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(C, A)', 'false': 'teamplaysagainstteam(D, E)'}, {'false,false': [0.0, 0, 0], 'true': [0.0, 1, 0], 'false,true': [0.465, 14, 15]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'athleteplaysforteam(G, A)', 'true': 'athleteplaysforteam(D, E), teamplaysinleague(A, F)', 'false,true': 'teamalsoknownas(H, I)', 'false,false': 'teamplaysinleague(J, K)'}, {'true,false': [0.0, 0, 1], 'false,true,true': [0.0, 1, 0], 'true,true': [2.043, 12, 7], 'false,false,false': [0.0, 0, 0], 'false,false,true': [1.19, 2, 7], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false': 'teamplaysinleague(D, E)', 'false,true': 'teamplaysinleague(F, E)'}, {'false,false': [0.0, 0, 0], 'true': [2.002, 11, 7], 'false,true,true': [1.396, 4, 8], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)', 'true': 'athleteplaysforteam(E, C)'}, {'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.447, 15, 15]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'false': [0.0, 0, 0], 'true': [2.446, 15, 15]}]]
[{'': [0.23268698060941836, 0.19834710743801634], 'false,false': [0.0, 0.17283950617283939], 'true,false': [nan, 0.23999999999999994], 'false': [0.0, 0.20999999999999988], 'true': [0.20408163265306106, 0.23999999999999994], 'true,false,false': [0.23999999999999994, nan], 'false,false,true': [0.0, nan]}, {'': [0.23187004573930045, nan]}, {'': [0.22887332309296196, nan]}, {'': [0.0, 0.22703790039577773], 'false': [0.2357661885733072, 0.11176487164274036], 'true': [0.0, nan]}, {'': [0.0, 0.21985058347698067], 'false': [0.23509089075509895, 0.10449979686992303], 'false,true': [0.23509089075509895, nan]}, {'': [0.0, 0.21577264602039786], 'false': [0.21577264602039778, nan]}, {'': [0.2141364254407696, 0.18230160387361277], 'false': [0.0, 0.15734699450746742], 'true': [0.21958737585124463, 0.0], 'false,true': [0.0, nan], 'false,false': [0.15734699450746742, nan]}, {'': [0.22261344381107134, 0.16237152802136534], 'false': [0.16237152802136534, nan], 'false,true': [0.16237152802136534, nan]}, {'': [0.19954151748557386, nan], 'true': [0.19954151748557386, nan]}, {'': [0.19949041740011583, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamplaysinleague(A, D).;true;true
0;false;teamplaysagainstteam(A, H).;true;true
0;false,false;athleteplaysforteam(I, A).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, A).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(C, A), athleteplaysforteam(D, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(C, A).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
6;false;athleteplaysforteam(G, A).;true;true
6;true;athleteplaysforteam(D, E), teamplaysinleague(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysinleague(A, D) )
%   then if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplaysforteam(H, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995121;  // std dev = 2,98e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.7270555508123272;  // std dev = 0,110, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1309579545603994;  // std dev = 0,054, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.5637354848269766;  // std dev = 0,148, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1167827569753487;  // std dev = 0,050, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, A) )
%   then return -0.10068905249587629;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then return 0.4246482077868293;  // std dev = 0,160, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10561058174417899;  // std dev = 0,045, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), athleteplaysforteam(D, A) )
%   then return -0.09193110370796558;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then return 0.3262095318663743;  // std dev = 0,152, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09605591393432888;  // std dev = 0,042, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(C, A) )
%   then return -0.08453922169367709;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then return 0.2593512070571562;  // std dev = 0,139, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.0880434913268209;  // std dev = 0,039, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplaysforteam(D, E), teamplaysinleague(A, F) )
%   | then if ( athleteplayssport(G, B), athleteledsportsteam(G, H) )
%   | | then return 0.20437866031655827;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.07739701573089704;  // std dev = 0,000862, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.20437866031655827;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplaysforteam(I, A) )
%   | then return -0.07732200194447135;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysinleague(A, J), athleteplayssport(K, B) )
%   | | then return 0.2366542732068465;  // std dev = 0,112, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.08074377239585295;  // std dev = 0,339, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.18324141151591936;  // std dev = 0,108, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07744030543445066;  // std dev = 0,053, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.15751013622006216;  // std dev = 0,097, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07209893243250991;  // std dev = 0,050, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.13780181143382444;  // std dev = 0,088, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06743276528981004;  // std dev = 0,047, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.974928
   AUC PR    = 0.239874
   CLL	      = -0.125339
   Precision = 0.24053 at threshold = 0.5
   Recall    = 0.954887
   F1        = 0.384266


Total learning time: 36.504 seconds
Total inference time: 554.485 seconds
AUC ROC: 0.974928


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098113
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.489 seconds
Refined model CLL: -0.098113


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.974928
   AUC PR    = 0.239874
   CLL	      = -0.125339
   Precision = 0.24053 at threshold = 0.5
   Recall    = 0.954887
   F1        = 0.384266


Total learning time: 41.928999999999995 seconds
Total inference time: 554.485 seconds
AUC ROC: 0.974928
Total revision time: 41.928999999999995
Best scored revision CLL: -0.098113


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 01:06:13
{'parameter_15': {'AUC ROC': 0.456018, 'AUC PR': 0.002149, 'CLL': -0.735095, 'Inference time': 192.018, 'Recall': 0.398496, 'F1': 0.004247, 'Precision': [0.002135, 0.5], 'Learning time': 2.731}, 'AUC ROC': 0.974928, 'AUC PR': 0.239874, 'CLL': -0.125339, 'Inference time': 554.485, 'Recall': 0.954887, 'F1': 0.384266, 'Precision': [0.24053, 0.5], 'Learning time': 41.928999999999995}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.973684
   AUC PR    = 0.230835
   CLL	      = -0.078292
   Precision = 0.24053 at threshold = 0.5
   Recall    = 0.954887
   F1        = 0.384266


Total learning time: 2.56 seconds
Total inference time: 4.067 seconds
AUC ROC: 0.973684


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN-B), Time: 01:06:20
{'AUC ROC': 0.973684, 'AUC PR': 0.230835, 'CLL': -0.078292, 'Inference time': 4.067, 'Recall': 0.954887, 'F1': 0.384266, 'Precision': [0.24053, 0.5], 'Learning time': 2.56}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.973684
   AUC PR    = 0.230835
   CLL	      = -0.138423
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.107 seconds
Total inference time: 2.889 seconds
AUC ROC: 0.973684


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN), Time: 01:06:24
{'AUC ROC': 0.973684, 'AUC PR': 0.230835, 'CLL': -0.138423, 'Inference time': 2.889, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 1.107}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyceo(A, C), cityhascompanyoffice(D, A).;true;true
0;false,false;countryhascompanyoffice(J, A), bankboughtbank(K, A).;true;true
0;true,false;bankchiefexecutiveceo(F, C).;false;true
0;false,false,false;companyalsoknownas(A, L), acquired(A, M).;false;false
0;false;companyceo(A, H), acquired(I, A).;false;true
0;true;bankchiefexecutiveceo(E, C), economicsectorcompany(B, E).;false;true
0;true,false,false;cityhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
0;false,false,true;countryhascompanyoffice(J, K).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
1;false,false;acquired(A, H), economicsectorcompany(B, H).;true;true
1;false,true;bankboughtbank(E, A), bankchiefexecutiveceo(E, F).;false;true
1;false;acquired(D, A).;true;true
1;false,false,false;companyceo(A, K), acquired(A, L).;false;false
1;false,false,true;cityhascompanyoffice(I, A), companyceo(A, J).;false;false
1;false,true,false;companyalsoknownas(D, G), economicsectorcompany(B, G).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
2;false,false;companyalsoknownas(A, G), companyceo(G, H).;true;true
2;true,false;economicsectorcompany(B, C).;false;false
2;false,true;economicsectorcompany(B, E).;false;false
2;false;acquired(A, E), cityhascompanyoffice(F, E).;true;true
2;true;economicsectorcompany(B, D).;false;true
2;false,false,false;cityhascompanyoffice(J, A).;false;false
2;false,false,true;acquired(G, I), economicsectorcompany(B, I).;false;false
3;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(C, D).;true;true
3;false,false;acquired(L, A), cityhascompanyoffice(M, A).;false;true
3;true,false;companyalsoknownas(A, G).;false;false
3;false,true;bankchiefexecutiveceo(J, H), economicsectorcompany(B, J).;false;true
3;false;companyceo(A, H), bankchiefexecutiveceo(A, I).;true;true
3;true;companyalsoknownas(A, E), acquired(F, E).;false;true
3;false,false,false;companyalsoknownas(A, N).;false;false
3;false,true,false;bankboughtbank(K, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
4;true,false;bankchiefexecutiveceo(A, D), countryhascompanyoffice(E, A).;false;false
4;false,true;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
4;false;cityhascompanyoffice(F, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;false,false,false;acquired(J, A).;false;false
4;false,true,false;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
5;;companyeconomicsector(A, B) :- companyceo(A, C), bankchiefexecutiveceo(A, C).;true;true
5;false,false;acquired(A, J), economicsectorcompany(B, J).;false;true
5;true,false;acquired(A, E).;false;false
5;false,true;economicsectorcompany(B, F).;false;true
5;false;acquired(F, A), companyceo(F, G).;true;true
5;true;bankboughtbank(A, D).;false;true
5;false,false,false;companyceo(A, K), companyalsoknownas(A, L).;false;false
5;false,true,false;companyalsoknownas(F, H), acquired(I, F).;false;false
6;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(A, D).;true;true
6;false,false;bankboughtbank(L, A).;true;true
6;false,false,false;companyalsoknownas(A, N), economicsectorcompany(B, N).;false;false
6;false,true;bankboughtbank(H, I), economicsectorcompany(B, I).;false;true
6;false;countryhascompanyoffice(G, A), acquired(H, A).;true;true
6;true;countryhascompanyoffice(E, C), cityhascompanyoffice(F, A).;false;false
6;false,false,true;cityhascompanyoffice(M, L).;false;false
6;false,true,false;bankboughtbank(J, A), bankchiefexecutiveceo(J, K).;false;false
7;;companyeconomicsector(A, B) :- acquired(A, C), bankboughtbank(A, C).;true;true
7;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
7;false,false,false;countryhascompanyoffice(L, A), bankbankincountry(M, L).;false;false
7;false,true;companyalsoknownas(A, G).;false;true
7;false;acquired(A, E), companyalsoknownas(E, F).;true;true
7;true;countryhascompanyoffice(D, A).;false;false
7;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
7;false,true,false;acquired(E, H).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;true;true
8;false,true,true;acquired(G, D), economicsectorcompany(B, G).;false;false
8;false,true;countryhascompanyoffice(F, D).;true;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,false,false;companyalsoknownas(A, K), cityhascompanyoffice(L, K).;false;false
8;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;false,true,false;acquired(D, H), economicsectorcompany(B, H).;false;false
9;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;false;true
9;false,false;acquired(A, K), companyalsoknownas(A, L).;true;true
9;false,true,true;countryhascompanyoffice(G, I), economicsectorcompany(B, I).;false;false
9;false,true;countryhascompanyoffice(G, A), bankchiefexecutiveceo(E, H).;true;true
9;false;bankboughtbank(E, A), countryhascompanyoffice(F, E).;true;true
9;false,false,false;companyceo(A, M).;false;false
9;false,false,true;economicsectorcompany(B, K).;false;false
9;false,true,false;acquired(E, J), economicsectorcompany(B, J).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysagainstteam(D, A) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( teamplaysinleague(A, G) )
%   | | then if ( teamplaysinleague(H, G) )
%   | | | then return 0.3396304165809938;  // std dev = 2,596, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.4831489350995123;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(A, D) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.3206333399233716;  // std dev = 2,951, 35,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.2518085177524215;  // std dev = 0,482, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.11307137200299351;  // std dev = 0,310, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.18602209743421233;  // std dev = 2,498, 25,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | else return 0.2901605021653526;  // std dev = 0,488, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then return 0.14771560175521958;  // std dev = 2,669, 31,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( teamplaysagainstteam(D, E) )
%   | | then return 0.039336174610311726;  // std dev = 0,746, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.27831559216368473;  // std dev = 0,471, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.06954703075191065;  // std dev = 0,293, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( teamalsoknownas(D, E) )
%   | then return 0.1304898130447807;  // std dev = 0,496, 35,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysinleague(D, E), teamplaysagainstteam(F, A) )
%   | then return -0.1793960367771715;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.41101648557870374;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamplaysinleague(A, G) )
%   | then return 0.08212376362666086;  // std dev = 0,500, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | else if ( teamplaysagainstteam(H, I) )
%   | | then return 0.1575032204043531;  // std dev = 1,358, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then return 0.06438170740766308;  // std dev = 2,639, 31,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   else if ( teamplaysagainstteam(D, E) )
%   | then if ( teamplaysagainstteam(D, F) )
%   | | then return 0.08910277661628409;  // std dev = 1,380, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then if ( teamplaysinleague(C, E) )
%   | then return 0.05347746661638997;  // std dev = 0,471, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.040816034803446595;  // std dev = 2,976, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.474027
   AUC PR    = 0.002327
   CLL	      = -0.668344
   Precision = 0.002306 at threshold = 0.5
   Recall    = 0.218045
   F1        = 0.004563


Total learning time: 2.266 seconds
Total inference time: 85.336 seconds
AUC ROC: 0.474027


Results scoring model
   AUC ROC   = 0.66125
   AUC PR    = 0.684908
   CLL	      = -0.63225
   Precision = 0.75 at threshold = 0.5
   Recall    = 0.3
   F1        = 0.428571


Total scoring time: 0.997 seconds
Parameter learned model CLL: -0.63225


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysagainstteam(D, A)', 'false': 'teamalsoknownas(A, F)', 'true': 'teamplaysagainstteam(D, E)', 'false,false': 'teamplaysinleague(A, G)', 'false,false,true': 'teamplaysinleague(H, G)'}, {'false,false,true,true': [2.596, 14, 13], 'true,false': [0.0, 0, 0], 'true,true': [0.0, 3, 0], 'false,false,false': [0.484, 3, 5], 'false,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(A, D)', 'false': 'teamalsoknownas(A, E)'}, {'false,false': [2.951, 17, 18], 'true': [0.0, 3, 0], 'false,true': [0.0, 0, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.482, 20, 20]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysagainstteam(D, A)'}, {'false,false': [0.488, 4, 6], 'true': [0.31, 3, 2], 'false,true': [2.498, 13, 12]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'teamplaysagainstteam(D, E)'}, {'false,false': [0.471, 2, 4], 'true': [2.669, 16, 15], 'false,true,true': [0.746, 2, 1], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamalsoknownas(D, E)'}, {'false,false': [0.0, 0, 0], 'true': [0.293, 3, 2], 'false,true': [0.496, 17, 18]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysinleague(A, G)', 'true': 'teamplaysinleague(D, E), teamplaysagainstteam(F, A)', 'false,false': 'teamplaysagainstteam(H, I)'}, {'false,true': [0.5, 14, 13], 'true,false': [0.0, 0, 2], 'false,false,true': [1.358, 3, 5], 'true,true': [0.013, 3, 0], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false': 'teamplaysagainstteam(D, E)', 'false,true': 'teamplaysagainstteam(D, F)'}, {'false,false': [0.0, 0, 0], 'true': [2.639, 16, 15], 'false,true,true': [1.38, 4, 5], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)', 'true': 'teamplaysinleague(C, E)'}, {'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.471, 20, 20]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'false': [0.0, 0, 0], 'true': [2.976, 20, 20]}]]
[{'': [0.0, 0.24835646457268032], 'false': [0.0, 0.24979591836734646], 'true': [0.0, nan], 'false,false,true': [0.24965706447187883, nan], 'false,false': [0.24965706447187883, 0.23437499999999983]}, {'': [0.0, 0.24341702793487208], 'false': [0.0, 0.24872801004978698]}, {'': [0.23219639764673672, nan]}, {'': [0.09604965344683596, 0.2484161503824963], 'false': [0.2495708703569596, 0.23778305948923445]}, {'': [0.2297432521289592, 0.22263455693076248], 'false': [0.18538511833840995, 0.22222222222222224], 'false,true': [0.18538511833840995, nan]}, {'': [0.08566562052577228, 0.24626431842361507], 'false': [0.24626431842361507, nan]}, {'': [0.08369399620353783, 0.246219366993578], 'false': [0.24959889248665737, 0.23043016309412934], 'true': [5.521505071231133e-05, 0.0], 'false,false': [0.23043016309412934, nan]}, {'': [0.22471511477626152, 0.21166282050018573], 'false': [0.21166282050018573, nan], 'false,true': [0.21166282050018573, nan]}, {'': [0.22161526345554083, nan], 'true': [0.22161526345554083, nan]}, {'': [0.22148161885722448, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamalsoknownas(A, C), teamplaysagainstteam(D, A).;true;true
0;false;teamalsoknownas(A, F).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamalsoknownas(A, D).;true;true
1;false;teamalsoknownas(A, E).;true;true
6;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
6;true;teamplaysinleague(D, E), teamplaysagainstteam(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysagainstteam(D, A) )
%   then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplayssport(F, B), athleteledsportsteam(F, G) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(A, D) )
%   then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplayssport(F, B), athleteledsportsteam(F, G) )
%   | | then return 0.7194734122109542;  // std dev = 7,30e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysinleague(D, E), teamplaysagainstteam(F, A) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( athleteplayssport(G, B), athleteledsportsteam(G, H) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteledsportsteam(D, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06419184008202619;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.978593
   AUC PR    = 0.275783
   CLL	      = -0.114933
   Precision = 0.243363 at threshold = 0.5
   Recall    = 0.827068
   F1        = 0.376068


Total learning time: 4.204 seconds
Total inference time: 20.776 seconds
AUC ROC: 0.978593


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.985 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.978593
   AUC PR    = 0.275783
   CLL	      = -0.114933
   Precision = 0.243363 at threshold = 0.5
   Recall    = 0.827068
   F1        = 0.376068


Total learning time: 8.452 seconds
Total inference time: 20.776 seconds
AUC ROC: 0.978593
Total revision time: 8.452
Best scored revision CLL: -0.094637


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 01:08:20
{'AUC ROC': 0.978593, 'AUC PR': 0.275783, 'parameter_20': {'AUC ROC': 0.474027, 'AUC PR': 0.002327, 'CLL': -0.668344, 'Inference time': 85.336, 'Recall': 0.218045, 'F1': 0.004563, 'Precision': [0.002306, 0.5], 'Learning time': 2.266}, 'CLL': -0.114933, 'Inference time': 20.776, 'Recall': 0.827068, 'F1': 0.376068, 'Precision': [0.243363, 0.5], 'Learning time': 8.452}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0641918400820262;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.973684
   AUC PR    = 0.230835
   CLL	      = -0.078292
   Precision = 0.24053 at threshold = 0.5
   Recall    = 0.954887
   F1        = 0.384266


Total learning time: 3.181 seconds
Total inference time: 4.037 seconds
AUC ROC: 0.973684


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN-B), Time: 01:08:27
{'AUC ROC': 0.973684, 'AUC PR': 0.230835, 'CLL': -0.078292, 'Inference time': 4.037, 'Recall': 0.954887, 'F1': 0.384266, 'Precision': [0.24053, 0.5], 'Learning time': 3.181}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteledsportsteam(C, D) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.973684
   AUC PR    = 0.230835
   CLL	      = -0.138423
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.195 seconds
Total inference time: 2.64 seconds
AUC ROC: 0.973684


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN), Time: 01:08:31
{'AUC ROC': 0.973684, 'AUC PR': 0.230835, 'CLL': -0.138423, 'Inference time': 2.64, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 1.195}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyceo(A, C), cityhascompanyoffice(D, A).;true;true
0;false,false;countryhascompanyoffice(J, A), bankboughtbank(K, A).;true;true
0;true,false;bankchiefexecutiveceo(F, C).;false;true
0;false,false,false;companyalsoknownas(A, L), acquired(A, M).;false;false
0;false;companyceo(A, H), acquired(I, A).;false;true
0;true;bankchiefexecutiveceo(E, C), economicsectorcompany(B, E).;false;true
0;true,false,false;cityhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
0;false,false,true;countryhascompanyoffice(J, K).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
1;false,false;acquired(A, H), economicsectorcompany(B, H).;true;true
1;false,true;bankboughtbank(E, A), bankchiefexecutiveceo(E, F).;false;true
1;false;acquired(D, A).;true;true
1;false,false,false;companyceo(A, K), acquired(A, L).;false;false
1;false,false,true;cityhascompanyoffice(I, A), companyceo(A, J).;false;false
1;false,true,false;companyalsoknownas(D, G), economicsectorcompany(B, G).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
2;false,false;companyalsoknownas(A, G), companyceo(G, H).;true;true
2;true,false;economicsectorcompany(B, C).;false;false
2;false,true;economicsectorcompany(B, E).;false;false
2;false;acquired(A, E), cityhascompanyoffice(F, E).;true;true
2;true;economicsectorcompany(B, D).;false;true
2;false,false,false;cityhascompanyoffice(J, A).;false;false
2;false,false,true;acquired(G, I), economicsectorcompany(B, I).;false;false
3;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(C, D).;true;true
3;false,false;acquired(L, A), cityhascompanyoffice(M, A).;false;true
3;true,false;companyalsoknownas(A, G).;false;false
3;false,true;bankchiefexecutiveceo(J, H), economicsectorcompany(B, J).;false;true
3;false;companyceo(A, H), bankchiefexecutiveceo(A, I).;true;true
3;true;companyalsoknownas(A, E), acquired(F, E).;false;true
3;false,false,false;companyalsoknownas(A, N).;false;false
3;false,true,false;bankboughtbank(K, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
4;true,false;bankchiefexecutiveceo(A, D), countryhascompanyoffice(E, A).;false;false
4;false,true;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
4;false;cityhascompanyoffice(F, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;false,false,false;acquired(J, A).;false;false
4;false,true,false;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
5;;companyeconomicsector(A, B) :- companyceo(A, C), bankchiefexecutiveceo(A, C).;true;true
5;false,false;acquired(A, J), economicsectorcompany(B, J).;false;true
5;true,false;acquired(A, E).;false;false
5;false,true;economicsectorcompany(B, F).;false;true
5;false;acquired(F, A), companyceo(F, G).;true;true
5;true;bankboughtbank(A, D).;false;true
5;false,false,false;companyceo(A, K), companyalsoknownas(A, L).;false;false
5;false,true,false;companyalsoknownas(F, H), acquired(I, F).;false;false
6;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(A, D).;true;true
6;false,false;bankboughtbank(L, A).;true;true
6;false,false,false;companyalsoknownas(A, N), economicsectorcompany(B, N).;false;false
6;false,true;bankboughtbank(H, I), economicsectorcompany(B, I).;false;true
6;false;countryhascompanyoffice(G, A), acquired(H, A).;true;true
6;true;countryhascompanyoffice(E, C), cityhascompanyoffice(F, A).;false;false
6;false,false,true;cityhascompanyoffice(M, L).;false;false
6;false,true,false;bankboughtbank(J, A), bankchiefexecutiveceo(J, K).;false;false
7;;companyeconomicsector(A, B) :- acquired(A, C), bankboughtbank(A, C).;true;true
7;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
7;false,false,false;countryhascompanyoffice(L, A), bankbankincountry(M, L).;false;false
7;false,true;companyalsoknownas(A, G).;false;true
7;false;acquired(A, E), companyalsoknownas(E, F).;true;true
7;true;countryhascompanyoffice(D, A).;false;false
7;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
7;false,true,false;acquired(E, H).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;true;true
8;false,true,true;acquired(G, D), economicsectorcompany(B, G).;false;false
8;false,true;countryhascompanyoffice(F, D).;true;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,false,false;companyalsoknownas(A, K), cityhascompanyoffice(L, K).;false;false
8;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;false,true,false;acquired(D, H), economicsectorcompany(B, H).;false;false
9;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;false;true
9;false,false;acquired(A, K), companyalsoknownas(A, L).;true;true
9;false,true,true;countryhascompanyoffice(G, I), economicsectorcompany(B, I).;false;false
9;false,true;countryhascompanyoffice(G, A), bankchiefexecutiveceo(E, H).;true;true
9;false;bankboughtbank(E, A), countryhascompanyoffice(F, E).;true;true
9;false,false,false;companyceo(A, M).;false;false
9;false,false,true;economicsectorcompany(B, K).;false;false
9;false,true,false;acquired(E, J), economicsectorcompany(B, J).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return 0.2823913593419366;  // std dev = 2,839, 33,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F), teamalsoknownas(G, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplaysforteam(H, A) )
%   | | then if ( athleteplaysforteam(H, I) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.524815601766179;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.3628395969270121;  // std dev = 1,247, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, E) )
%   | | then if ( teamplaysagainstteam(F, A), teamplaysinleague(A, G) )
%   | | | then return -0.1798139291865647;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.1667945087684516;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysinleague(A, H), teamalsoknownas(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3217312724226679;  // std dev = 3,180, 41,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.2976549208904342;  // std dev = 0,467, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( teamalsoknownas(A, D), teamplaysagainstteam(E, D) )
%   | then return -0.15480219215214144;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysinleague(F, G) )
%   | | then if ( teamalsoknownas(F, H) )
%   | | | then return 0.2574851761556329;  // std dev = 3,203, 42,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.20474644016796129;  // std dev = 1,015, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then return 0.16713020013587274;  // std dev = 0,497, 35,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | else if ( teamalsoknownas(G, A), teamplaysagainstteam(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.34940147666648;  // std dev = 0,467, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.09470732076154587;  // std dev = 0,690, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.23194338192201136;  // std dev = 0,703, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then if ( teamplaysagainstteam(E, F) )
%   | | then return 0.13253153629641623;  // std dev = 2,845, 33,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.24188802161020598;  // std dev = 1,592, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0.19745970773883653;  // std dev = 0,907, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.09812651592108261;  // std dev = 2,934, 35,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   else if ( teamalsoknownas(E, A), teamplaysinleague(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, G) )
%   | | then return -0.22822284567062304;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.21969215961933203;  // std dev = 1,401, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(A, D) )
%   then if ( athleteplaysforteam(E, C), teamplaysagainstteam(F, A) )
%   | then return -0.020134340995872357;  // std dev = 0,765, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.4127052942941163;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( athleteplaysforteam(G, A), teamalsoknownas(H, A) )
%   | then return 0.11285424170207306;  // std dev = 0,500, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysagainstteam(I, J) )
%   | | then return 0.08625649923612752;  // std dev = 3,195, 43,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.06267578144849291;  // std dev = 0,651, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.06512821223510239;  // std dev = 0,618, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then if ( teamplaysagainstteam(F, H) )
%   | | | then return 0.0728011037742541;  // std dev = 3,260, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.06295002963915818;  // std dev = 1,179, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( teamalsoknownas(D, A), teamplaysinleague(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, F) )
%   | | then return -0.21329108163303523;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( teamplaysagainstteam(G, H) )
%   | | | then return 0.06625165490149043;  // std dev = 3,145, 41,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(C, D) )
%   then return 0.04811830885295121;  // std dev = 1,180, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( athleteplaysforteam(E, F) )
%   | then if ( athleteplaysforteam(G, A) )
%   | | then if ( athleteplaysforteam(G, H) )
%   | | | then return 0.039524079832781174;  // std dev = 2,616, 29,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(F, I) )
%   | | | then return 0.03911796974682961;  // std dev = 1,774, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.470092
   AUC PR    = 0.002282
   CLL	      = -0.654712
   Precision = 0.002189 at threshold = 0.5
   Recall    = 0.338346
   F1        = 0.004351


Total learning time: 3.336 seconds
Total inference time: 169.253 seconds
AUC ROC: 0.470092


Results scoring model
   AUC ROC   = 0.6672
   AUC PR    = 0.684028
   CLL	      = -0.647133
   Precision = 0.714286 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.512821


Total scoring time: 1.222 seconds
Parameter learned model CLL: -0.647133


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), teamplaysagainstteam(D, A)', 'false,false': 'athleteplaysforteam(H, A)', 'false,false,false': 'teamalsoknownas(A, J)', 'false': 'teamplaysinleague(A, F), teamalsoknownas(G, A)', 'true': 'teamplaysagainstteam(D, E)', 'false,false,true': 'athleteplaysforteam(H, I)'}, {'false,false,true,true': [0.816, 2, 1], 'true,false': [0.0, 0, 0], 'true,true': [2.839, 19, 14], 'false,true': [0.0, 0, 2], 'false,false,false,false': [1.633, 4, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A)', 'false,false,true': 'teamplaysagainstteam(F, A), teamplaysinleague(A, G)', 'false,false': 'teamalsoknownas(A, E)', 'false,false,false': 'teamplaysinleague(A, H), teamalsoknownas(A, I)'}, {'false,false,true,true': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [3.18, 20, 21], 'false,false,false,true': [0.0, 0, 0], 'true': [1.247, 3, 4], 'false,false,true,false': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(A, D), teamplaysagainstteam(E, D)', 'false,false': 'teamplaysinleague(F, G)', 'false,false,true': 'teamalsoknownas(F, H)'}, {'false,true': [0.0, 1, 0], 'true': [0.467, 3, 4], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.203, 21, 21], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysinleague(A, F)', 'true': 'teamalsoknownas(D, E)', 'false,false': 'teamalsoknownas(G, A), teamplaysagainstteam(H, A)'}, {'false,true': [0.497, 19, 16], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [1.015, 3, 3], 'false,false,false': [0.467, 3, 6]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false,false': 'teamalsoknownas(G, A)', 'false,true': 'teamplaysagainstteam(E, F)', 'false': 'teamplaysagainstteam(E, A)', 'true': 'athleteplaysforteam(D, A)', 'false,false,false': 'teamalsoknownas(H, A)'}, {'true,false': [0.703, 1, 2], 'false,true,true': [2.845, 18, 15], 'true,true': [0.69, 2, 1], 'false,false,false,false': [1.592, 4, 7], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false': 'teamalsoknownas(E, A), teamplaysinleague(E, F)', 'true': 'teamalsoknownas(A, D)', 'false,false': 'teamalsoknownas(A, G)', 'false,false,false': 'teamplaysinleague(A, H)'}, {'true,false': [2.934, 19, 16], 'true,true': [0.907, 2, 3], 'false,true': [0.0, 0, 0], 'false,false,false,false': [1.401, 3, 6], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysinleague(A, D)', 'false': 'athleteplaysforteam(G, A), teamalsoknownas(H, A)', 'true': 'athleteplaysforteam(E, C), teamplaysagainstteam(F, A)', 'false,false': 'teamplaysagainstteam(I, J)'}, {'false,true': [0.5, 1, 1], 'true,false': [0.0, 0, 2], 'false,false,true': [3.195, 22, 21], 'true,true': [0.765, 2, 1], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamalsoknownas(A, E)', 'true': 'athleteplaysforteam(D, A)', 'false,false': 'teamplaysagainstteam(F, G)', 'false,false,true': 'teamplaysagainstteam(F, H)'}, {'false,false,true,true': [3.26, 22, 22], 'true,false': [0.618, 1, 2], 'true,true': [0.651, 2, 1], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A), teamplaysinleague(D, E)', 'false,false': 'teamalsoknownas(A, F)', 'false,false,false': 'teamplaysagainstteam(G, H)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [3.145, 20, 21], 'true': [1.179, 3, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.002, 2, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysinleague(C, D)', 'false': 'athleteplaysforteam(E, F)', 'false,true': 'athleteplaysforteam(G, A)', 'false,true,true': 'athleteplaysforteam(G, H)', 'false,true,false': 'teamalsoknownas(F, I)'}, {'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'true': [1.18, 3, 4], 'false,true,true,false': [0.0, 0, 0], 'false,true,true,true': [2.616, 16, 13], 'false,true,false,true': [1.774, 6, 8]}]]
[{'': [0.2442607897153347, 0.2283737024221452], 'false,false': [0.22222222222222224, 0.2222222222222221], 'false,false,false': [nan, 0.2222222222222221], 'false': [0.0, 0.23999999999999994], 'true': [0.2442607897153347, nan], 'false,false,true': [0.22222222222222224, nan]}, {'': [0.22230364271016403, 0.24607584085555922], 'false': [nan, 0.24607584085555922], 'false,false,false': [nan, 0.2466793273299204], 'false,false,true': [0.0, 0.0], 'false,false': [4.237632700589827e-05, 0.24667932732992046]}, {'': [0.21853894706846053, 0.24241424420424093], 'false': [0.0, 0.24423296834045574], 'false,false,true': [0.24423296834045574, nan], 'false,false': [0.24423296834045574, nan]}, {'': [0.17172723294420278, 0.2462501519157789], 'false': [0.24674215299546606, 0.21790957259540308], 'true': [0.17172723294420278, nan], 'false,false': [nan, 0.21790957259540308]}, {'': [0.16660108346440458, 0.2438167201888998], 'false,false': [nan, 0.23043693168436602], 'false,false,false': [nan, 0.23043693168436602], 'false': [0.24528693947036467, 0.23043693168436602], 'true': [0.15881786803830775, 0.16496743064908184], 'false,true': [0.24528693947036467, nan]}, {'': [0.23689266968794126, 0.214438094433183], 'false': [nan, 0.214438094433183], 'true': [0.1645169265989292, 0.24599867618321203], 'false,false,false': [nan, 0.2182017641738133], 'false,false': [0.0, 0.2182017641738133]}, {'': [0.16204527968908813, 0.23798401079575193], 'false': [0.24999999999999997, 0.23739368580342624], 'true': [0.19513540619729206, 0.0], 'false,false': [0.23739368580342593, nan]}, {'': [0.13423427360825718, 0.2415449201433342], 'false': [nan, 0.2415449201433342], 'true': [0.1411292133585224, 0.1273363266496104], 'false,false,true': [0.2415449201433342, nan], 'false,false': [0.2415449201433342, nan]}, {'': [0.19847713558279803, 0.23347995713581185], 'false': [nan, 0.23347995713581185], 'false,false,false': [0.24123453375080625, nan], 'false,false': [1.606214062858935e-06, 0.24123453375080625]}, {'': [0.1988309731108129, 0.23234478560799834], 'false': [0.23234478560799834, nan], 'false,true,false': [0.22468782170352156, nan], 'false,true,true': [0.23604119724455153, nan], 'false,true': [0.23604119724455153, 0.22468782170352156]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(A, C), teamplaysagainstteam(D, A).;true;true
0;false;teamplaysinleague(A, F), teamalsoknownas(G, A).;true;true
1;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
1;false;teamalsoknownas(A, E).;true;true
1;false,true;teamplaysagainstteam(F, A), teamplaysinleague(A, G).;true;true
2;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
2;false;teamalsoknownas(A, D), teamplaysagainstteam(E, D).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
5;false;teamalsoknownas(A, G).;true;true
6;;teamplayssport(A, B) :- teamalsoknownas(A, C), teamplaysinleague(A, D).;true;true
6;true;athleteplaysforteam(E, C), teamplaysagainstteam(F, A).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
8;false;teamalsoknownas(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   then if ( athleteplayssport(E, B), athleteledsportsteam(E, F) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( teamplaysinleague(A, G), teamalsoknownas(H, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplayssport(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamalsoknownas(A, E) )
%   | then if ( teamplaysagainstteam(F, A), teamplaysinleague(A, G) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(H, B), athleteplaysinleague(H, I) )
%   | | then return 0.7194734122109542;  // std dev = 7,30e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.5553664367462844;  // std dev = 1,49e-08, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamalsoknownas(A, E), teamplaysagainstteam(F, E) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(G, A), athleteledsportsteam(H, G) )
%   | | then if ( athleteplayssport(I, B) )
%   | | | then return 0.4946679990244764;  // std dev = 0,637, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.11231637819360635;  // std dev = 1,39e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( athleteplayssport(J, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), athleteplaysforteam(F, E) )
%   | then if ( athleteledsportsteam(F, E) )
%   | | then if ( athleteledsportsteam(C, G), teamalsoknownas(E, G) )
%   | | | then return 0.4281073847478399;  // std dev = 0,018, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4323449049836519;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysagainstteam(I, A), teamalsoknownas(J, I) )
%   | then return -0.10159632948783634;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return -0.11163144160149199;  // std dev = 0,025, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteledsportsteam(D, C) )
%   then if ( athleteplayssport(D, B) )
%   | then if ( teamalsoknownas(C, E), athleteplaysforteam(D, C) )
%   | | then if ( athleteledsportsteam(F, A), athleteplaysinleague(F, G) )
%   | | | then return 0.3250661875275726;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.33141114620014817;  // std dev = 0,000766, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.33097307859800595;  // std dev = 0,000840, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamalsoknownas(H, C) )
%   | | then if ( teamalsoknownas(C, H) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.11341128354118964;  // std dev = 0,053, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(I, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.09185076976927911;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B), athleteledsportsteam(D, E) )
%   | then if ( teamplaysagainstteam(A, F), teamplaysagainstteam(E, F) )
%   | | then if ( athleteplaysforteam(D, F), teamplaysagainstteam(A, E) )
%   | | | then return 0.2616464446412753;  // std dev = 0,010, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2542287018198653;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( athleteplaysforteam(G, A) )
%   | | then if ( athleteplaysinleague(G, H) )
%   | | | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.08360720526919324;  // std dev = 0,002, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0944385083972865;  // std dev = 0,052, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamalsoknownas(A, I) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(J, B) )
%   | | then return 0.2563099118153411;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.08470888965506122;  // std dev = 0,000583, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(A, D) )
%   then if ( athleteplaysforteam(E, C), teamplaysagainstteam(F, A) )
%   | then return 0.016448089800556783;  // std dev = 0,232, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( athleteplayssport(G, B), athleteplaysinleague(G, H) )
%   | then if ( teamplaysinleague(A, I), athleteplaysinleague(J, I) )
%   | | then if ( athleteplaysforteam(J, A), athleteledsportsteam(K, A) )
%   | | | then return 0.21531112845209327;  // std dev = 0,002, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2103170709077399;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( teamplaysagainstteam(A, L), athleteplaysforteam(M, L) )
%   | | | then return 0.2135181856960285;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20962306054569632;  // std dev = 0,000225, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( athleteplaysforteam(N, A) )
%   | | then return -0.07852462473063973;  // std dev = 0,000696, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( teamplaysagainstteam(A, P) )
%   | | | then return -0.09573994072976416;  // std dev = 0,043, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.07779732305168609;  // std dev = 0,000698, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteledsportsteam(D, C) )
%   then if ( athleteplaysforteam(E, A), athleteplayssport(E, F) )
%   | then if ( athleteplayssport(D, B) )
%   | | then if ( athleteledsportsteam(E, A), teamalsoknownas(C, G) )
%   | | | then return 0.18475685983318907;  // std dev = 0,022, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1809141392745406;  // std dev = 0,000883, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( athleteledsportsteam(H, A) )
%   | | | then return -0.07326334249602763;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07550179803478478;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( athleteplaysinleague(D, I) )
%   | | then if ( athleteplaysforteam(D, C), teamalsoknownas(J, C) )
%   | | | then return -0.07378141225891835;  // std dev = 0,006, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.08901454240514699;  // std dev = 0,039, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.013000828475610599;  // std dev = 0,207, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( athleteplayssport(K, B) )
%   | then return 0.17700355555638778;  // std dev = 0,000154, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.07239591089035467;  // std dev = 0,000653, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.15765760337447748;  // std dev = 0,020, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.06975372881977804;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamalsoknownas(A, E) )
%   | then return -0.07102043594715743;  // std dev = 0,005, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then if ( athleteplayssport(H, B), athleteplaysinleague(H, I) )
%   | | | then return 0.1548773998149765;  // std dev = 0,004, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.07153365237025064;  // std dev = 0,042, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( athleteplayssport(J, B) )
%   | | | then return 0.1556692658816759;  // std dev = 0,026, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.06805232912210311;  // std dev = 0,000782, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), athleteledsportsteam(F, E) )
%   | then if ( athleteledsportsteam(G, A) )
%   | | then if ( athleteplaysforteam(C, A), athleteplaysinleague(G, D) )
%   | | | then return 0.13986887554680688;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1348950642436753;  // std dev = 0,005, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.14370364256456658;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then return 0.13360810751335497;  // std dev = 0,000192, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.133562550344954;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( athleteplaysforteam(I, A) )
%   | then if ( athleteplaysinleague(I, J), teamplaysinleague(A, J) )
%   | | then return -0.06402796281176544;  // std dev = 3,61e-05, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06544916889130087;  // std dev = 0,002, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( teamplaysagainstteam(A, K) )
%   | | then return -0.07471537272671436;  // std dev = 0,035, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06340933928078135;  // std dev = 0,000785, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.994024
   AUC PR    = 0.260612
   CLL	      = -0.090476
   Precision = 0.183616 at threshold = 0.5
   Recall    = 0.977444
   F1        = 0.309156


Total learning time: 122.255 seconds
Total inference time: 51.243 seconds
AUC ROC: 0.994024


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096581
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.684 seconds
Refined model CLL: -0.096581


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.994024
   AUC PR    = 0.260612
   CLL	      = -0.090476
   Precision = 0.183616 at threshold = 0.5
   Recall    = 0.977444
   F1        = 0.309156


Total learning time: 128.49699999999999 seconds
Total inference time: 51.243 seconds
AUC ROC: 0.994024
Total revision time: 128.49699999999999
Best scored revision CLL: -0.096581


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 01:14:21
{'AUC ROC': 0.994024, 'AUC PR': 0.260612, 'parameter_25': {'AUC ROC': 0.470092, 'AUC PR': 0.002282, 'CLL': -0.654712, 'Inference time': 169.253, 'Recall': 0.338346, 'F1': 0.004351, 'Precision': [0.002189, 0.5], 'Learning time': 3.336}, 'CLL': -0.090476, 'Inference time': 51.243, 'Recall': 0.977444, 'F1': 0.309156, 'Precision': [0.183616, 0.5], 'Learning time': 128.49699999999999}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.987409
   AUC PR    = 0.192788
   CLL	      = -0.083498
   Precision = 0.19494 at threshold = 0.5
   Recall    = 0.984962
   F1        = 0.325466


Total learning time: 3.27 seconds
Total inference time: 4.032 seconds
AUC ROC: 0.987409


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN-B), Time: 01:14:29
{'AUC ROC': 0.987409, 'AUC PR': 0.192788, 'CLL': -0.083498, 'Inference time': 4.032, 'Recall': 0.984962, 'F1': 0.325466, 'Precision': [0.19494, 0.5], 'Learning time': 3.27}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.987409
   AUC PR    = 0.192788
   CLL	      = -0.138874
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.147 seconds
Total inference time: 2.891 seconds
AUC ROC: 0.987409


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN), Time: 01:14:33
{'AUC ROC': 0.987409, 'AUC PR': 0.192788, 'CLL': -0.138874, 'Inference time': 2.891, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 1.147}


Starting fold 2

Target train facts examples: 9690
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9690
Target test pos	 examples: 133
Target test neg examples: 53331

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyceo(A, C), cityhascompanyoffice(D, A).;true;true
0;false,false;countryhascompanyoffice(J, A), bankboughtbank(K, A).;true;true
0;true,false;bankchiefexecutiveceo(F, C).;false;true
0;false,false,false;companyalsoknownas(A, L), acquired(A, M).;false;false
0;false;companyceo(A, H), acquired(I, A).;false;true
0;true;bankchiefexecutiveceo(E, C), economicsectorcompany(B, E).;false;true
0;true,false,false;cityhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
0;false,false,true;countryhascompanyoffice(J, K).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
1;false,false;acquired(A, H), economicsectorcompany(B, H).;true;true
1;false,true;bankboughtbank(E, A), bankchiefexecutiveceo(E, F).;false;true
1;false;acquired(D, A).;true;true
1;false,false,false;companyceo(A, K), acquired(A, L).;false;false
1;false,false,true;cityhascompanyoffice(I, A), companyceo(A, J).;false;false
1;false,true,false;companyalsoknownas(D, G), economicsectorcompany(B, G).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
2;false,false;companyalsoknownas(A, G), companyceo(G, H).;true;true
2;true,false;economicsectorcompany(B, C).;false;false
2;false,true;economicsectorcompany(B, E).;false;false
2;false;acquired(A, E), cityhascompanyoffice(F, E).;true;true
2;true;economicsectorcompany(B, D).;false;true
2;false,false,false;cityhascompanyoffice(J, A).;false;false
2;false,false,true;acquired(G, I), economicsectorcompany(B, I).;false;false
3;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(C, D).;true;true
3;false,false;acquired(L, A), cityhascompanyoffice(M, A).;false;true
3;true,false;companyalsoknownas(A, G).;false;false
3;false,true;bankchiefexecutiveceo(J, H), economicsectorcompany(B, J).;false;true
3;false;companyceo(A, H), bankchiefexecutiveceo(A, I).;true;true
3;true;companyalsoknownas(A, E), acquired(F, E).;false;true
3;false,false,false;companyalsoknownas(A, N).;false;false
3;false,true,false;bankboughtbank(K, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
4;true,false;bankchiefexecutiveceo(A, D), countryhascompanyoffice(E, A).;false;false
4;false,true;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
4;false;cityhascompanyoffice(F, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;false,false,false;acquired(J, A).;false;false
4;false,true,false;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
5;;companyeconomicsector(A, B) :- companyceo(A, C), bankchiefexecutiveceo(A, C).;true;true
5;false,false;acquired(A, J), economicsectorcompany(B, J).;false;true
5;true,false;acquired(A, E).;false;false
5;false,true;economicsectorcompany(B, F).;false;true
5;false;acquired(F, A), companyceo(F, G).;true;true
5;true;bankboughtbank(A, D).;false;true
5;false,false,false;companyceo(A, K), companyalsoknownas(A, L).;false;false
5;false,true,false;companyalsoknownas(F, H), acquired(I, F).;false;false
6;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(A, D).;true;true
6;false,false;bankboughtbank(L, A).;true;true
6;false,false,false;companyalsoknownas(A, N), economicsectorcompany(B, N).;false;false
6;false,true;bankboughtbank(H, I), economicsectorcompany(B, I).;false;true
6;false;countryhascompanyoffice(G, A), acquired(H, A).;true;true
6;true;countryhascompanyoffice(E, C), cityhascompanyoffice(F, A).;false;false
6;false,false,true;cityhascompanyoffice(M, L).;false;false
6;false,true,false;bankboughtbank(J, A), bankchiefexecutiveceo(J, K).;false;false
7;;companyeconomicsector(A, B) :- acquired(A, C), bankboughtbank(A, C).;true;true
7;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
7;false,false,false;countryhascompanyoffice(L, A), bankbankincountry(M, L).;false;false
7;false,true;companyalsoknownas(A, G).;false;true
7;false;acquired(A, E), companyalsoknownas(E, F).;true;true
7;true;countryhascompanyoffice(D, A).;false;false
7;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
7;false,true,false;acquired(E, H).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;true;true
8;false,true,true;acquired(G, D), economicsectorcompany(B, G).;false;false
8;false,true;countryhascompanyoffice(F, D).;true;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,false,false;companyalsoknownas(A, K), cityhascompanyoffice(L, K).;false;false
8;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;false,true,false;acquired(D, H), economicsectorcompany(B, H).;false;false
9;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;false;true
9;false,false;acquired(A, K), companyalsoknownas(A, L).;true;true
9;false,true,true;countryhascompanyoffice(G, I), economicsectorcompany(B, I).;false;false
9;false,true;countryhascompanyoffice(G, A), bankchiefexecutiveceo(E, H).;true;true
9;false;bankboughtbank(E, A), countryhascompanyoffice(F, E).;true;true
9;false,false,false;companyceo(A, M).;false;false
9;false,false,true;economicsectorcompany(B, K).;false;false
9;false,true,false;acquired(E, J), economicsectorcompany(B, J).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), teamplaysagainstteam(D, A) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(F, A), teamalsoknownas(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, A) )
%   | | then if ( athleteplaysforteam(H, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.8074172154034218;  // std dev = 0,036, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, E) )
%   | | then if ( teamplaysagainstteam(F, A), athleteledsportsteam(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteledsportsteam(H, A), teamalsoknownas(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2249365257627962;  // std dev = 1,277, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.6525324927598659;  // std dev = 0,038, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamalsoknownas(A, D), teamplaysagainstteam(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(F, G) )
%   | | then if ( teamalsoknownas(G, H) )
%   | | | then return 0.14886589733546307;  // std dev = 1,302, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.16295143363281878;  // std dev = 0,412, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(F, A) )
%   | then return 0.02878647800163167;  // std dev = 0,359, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamalsoknownas(G, A), teamplaysagainstteam(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.3112334161264731;  // std dev = 0,490, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.4139362141041212;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.14735754661936937;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then if ( teamplaysagainstteam(E, F) )
%   | | then return 0.23466602556902139;  // std dev = 1,171, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.35660076869659996;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.025982437374425443;  // std dev = 0,609, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamalsoknownas(E, A), athleteledsportsteam(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, G) )
%   | | then return 0.09424982899027656;  // std dev = 0,317, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( athleteledsportsteam(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.21444935007060795;  // std dev = 1,027, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), athleteledsportsteam(D, A) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, A), teamalsoknownas(F, A) )
%   | then return 0.38799259864311114;  // std dev = 0,090, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( teamplaysagainstteam(G, H) )
%   | | then return 0.017041724953110987;  // std dev = 1,159, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.22375866544857093;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.14288348415716332;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then if ( teamplaysagainstteam(F, H) )
%   | | | then return 0.07908471499688527;  // std dev = 1,191, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.275888858534585;  // std dev = 0,125, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamalsoknownas(D, A), athleteledsportsteam(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, F) )
%   | | then return -0.1262612936355564;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysagainstteam(G, H) )
%   | | | then return 0.017306556510172266;  // std dev = 1,143, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), athleteledsportsteam(D, C) )
%   then return 0.303250190915033;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplaysforteam(E, F) )
%   | then if ( athleteplaysforteam(G, A) )
%   | | then if ( athleteplaysforteam(G, H) )
%   | | | then return -0.03243142891375021;  // std dev = 0,777, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(F, I) )
%   | | | then return 0.05167897459105447;  // std dev = 0,849, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.502637
   AUC PR    = 0.002667
   CLL	      = -0.580372
   Precision = 0.002771 at threshold = 0.5
   Recall    = 0.218045
   F1        = 0.005472


Total learning time: 1.646 seconds
Total inference time: 162.86 seconds
AUC ROC: 0.502637


Results scoring model
   AUC ROC   = 0.98
   AUC PR    = 0.983333
   CLL	      = -0.446714
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.914 seconds
Parameter learned model CLL: -0.446714


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A), teamplaysagainstteam(D, A)', 'false,false': 'athleteplaysforteam(H, A)', 'false,false,false': 'teamalsoknownas(A, J)', 'false': 'athleteledsportsteam(F, A), teamalsoknownas(G, A)', 'true': 'teamplaysagainstteam(D, E)', 'false,false,true': 'athleteplaysforteam(H, I)'}, {'false,false,true,true': [0.816, 1, 2], 'true,false': [0.0, 0, 0], 'true,true': [0.816, 2, 1], 'false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2], 'false,false,false,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A)', 'false,false,true': 'teamplaysagainstteam(F, A), athleteledsportsteam(G, A)', 'false,false': 'teamalsoknownas(A, E)', 'false,false,false': 'athleteledsportsteam(H, A), teamalsoknownas(A, I)'}, {'false,false,true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [1.277, 4, 3], 'false,false,false,true': [0.0, 0, 0], 'true': [0.036, 0, 2], 'false,false,true,false': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(A, D), teamplaysagainstteam(E, D)', 'false,false': 'athleteledsportsteam(F, G)', 'false,false,true': 'teamalsoknownas(G, H)'}, {'false,true': [0.0, 0, 0], 'true': [0.038, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.302, 5, 3], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'athleteledsportsteam(F, A)', 'true': 'teamalsoknownas(D, E)', 'false,false': 'teamalsoknownas(G, A), teamplaysagainstteam(H, A)'}, {'false,true': [0.359, 2, 1], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.412, 1, 1], 'false,false,false': [0.49, 2, 3]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false,false': 'teamalsoknownas(G, A)', 'false,true': 'teamplaysagainstteam(E, F)', 'false': 'teamplaysagainstteam(E, A)', 'true': 'athleteplaysforteam(D, A)', 'false,false,false': 'teamalsoknownas(H, A)'}, {'true,false': [0.0, 1, 0], 'false,true,true': [1.171, 3, 4], 'true,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, A)', 'false': 'teamalsoknownas(E, A), athleteledsportsteam(F, E)', 'true': 'teamalsoknownas(A, D)', 'false,false': 'teamalsoknownas(A, G)', 'false,false,false': 'athleteledsportsteam(H, A)'}, {'true,false': [0.609, 2, 1], 'true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [1.027, 2, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.317, 1, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), athleteledsportsteam(D, A)', 'false': 'athleteplaysforteam(E, A), teamalsoknownas(F, A)', 'false,false': 'teamplaysagainstteam(G, H)'}, {'false,true': [0.09, 0, 2], 'true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,false,true': [1.159, 5, 3]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamalsoknownas(A, E)', 'true': 'athleteplaysforteam(D, A)', 'false,false': 'teamplaysagainstteam(F, G)', 'false,false,true': 'teamplaysagainstteam(F, H)'}, {'false,false,true,true': [1.191, 4, 4], 'true,false': [0.0, 1, 0], 'true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A), athleteledsportsteam(E, D)', 'false,false': 'teamalsoknownas(A, F)', 'false,false,false': 'teamplaysagainstteam(G, H)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [1.143, 4, 3], 'true': [0.125, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), athleteledsportsteam(D, C)', 'false': 'athleteplaysforteam(E, F)', 'false,true': 'athleteplaysforteam(G, A)', 'false,true,true': 'athleteplaysforteam(G, H)', 'false,true,false': 'teamalsoknownas(F, I)'}, {'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,true,true': [0.777, 2, 2], 'false,true,false,true': [0.849, 3, 2]}]]
[{'': [0.22222222222222224, 0.24489795918367332], 'false,false': [0.22222222222222224, 0.25], 'false,false,false': [0.0, 0.22222222222222224], 'false': [nan, 0.24489795918367332], 'true': [0.22222222222222224, nan], 'false,false,true': [0.22222222222222224, nan]}, {'': [0.0006650351701875667, 0.2171362574769466], 'false': [nan, 0.2171362574769466], 'false,false,false': [nan, 0.2328098527945401], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.2328098527945401]}, {'': [0.0014195827192609034, 0.21205929176242794], 'false': [nan, 0.21205929176242794], 'false,false,true': [0.21205929176242794, nan], 'false,false': [0.21205929176242794, nan]}, {'': [0.08467413213270224, 0.2171393215826181], 'false': [0.12917802035192041, 0.23999999999999994], 'true': [0.08467413213270224, nan], 'false,false': [nan, 0.23999999999999994]}, {'': [0.07876267145677976, 0.2095580845702316], 'false,false': [nan, 0.0], 'false,true': [0.19579540104440735, nan], 'false': [0.19579540104440735, 0.0], 'true': [0.0, 0.0], 'false,false,false': [nan, 0.0]}, {'': [0.12365009689063582, 0.16800804212606826], 'false': [nan, 0.16800804212606826], 'true': [nan, 0.12365009689063582], 'false,false,false': [nan, 0.21100612943800656], 'false,false': [0.050192877511978956, 0.21100612943800656]}, {'': [nan, 0.15798203659361054], 'false': [0.008063414557112347, 0.1679407819644602], 'false,false': [0.16794078196446022, nan]}, {'': [0.0336066164668784, 0.17739503227814177], 'false': [nan, 0.17739503227814177], 'true': [0.0, 0.0], 'false,false,true': [0.17739503227814177, nan], 'false,false': [0.17739503227814177, nan]}, {'': [0.007848083552984067, 0.16569006050783885], 'false': [nan, 0.16569006050783885], 'false,false,false': [0.18678360320238255, nan], 'false,false': [0.0, 0.18678360320238255]}, {'': [0.0, 0.14895373162895173], 'false': [0.14895373162895173, nan], 'false,true,false': [0.144264600647918, nan], 'false,true,true': [0.15088483425649887, nan], 'false,true': [0.15088483425649887, 0.144264600647918]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteledsportsteam(C, A), teamplaysagainstteam(D, A).;true;true
0;false;athleteplaysforteam(H, A).;true;true
0;false,false;teamalsoknownas(A, J).;true;true
1;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
1;false;teamalsoknownas(A, E).;true;true
2;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
4;false;teamplaysagainstteam(E, A).;true;true
4;true;athleteplaysforteam(D, A).;true;true
7;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
7;true;athleteplaysforteam(D, A).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
8;false;teamalsoknownas(A, F).;true;true
9;;teamplayssport(A, B) :- teamalsoknownas(C, A), athleteledsportsteam(D, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, A), teamplaysagainstteam(D, A) )
%   then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( athleteplaysforteam(E, A) )
%   | then return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamalsoknownas(A, F) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.8074172154034218;  // std dev = 0,036, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamalsoknownas(A, D) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.7816289395752953;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.19258278459657813;  // std dev = 0,052, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.6525324927598659;  // std dev = 0,053, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.6209436491414324;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1540630280447245;  // std dev = 0,065, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4791202641209734;  // std dev = 0,066, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.13514737282063452;  // std dev = 0,058, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.33986731212834786;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.08655002007042863;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.36916862321787175;  // std dev = 0,057, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1224178412329181;  // std dev = 0,030, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1471692803411957;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   return 0;  // std dev = 0,197, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.28426589613443337;  // std dev = 0,053, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10785450246371002;  // std dev = 0,045, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.2161883412504998;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.07236533245582819;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.23376314180988536;  // std dev = 0,044, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10434045367123382;  // std dev = 0,030, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.20506577642370033;  // std dev = 0,033, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamalsoknownas(A, D) )
%   | then return -0.06765535934647351;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.18336611122913116;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.09500475893528519;  // std dev = 0,027, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), athleteledsportsteam(D, C) )
%   then return 0.19422055352444456;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.1564271696532628;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08243065180058474;  // std dev = 0,033, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.982517
   AUC PR    = 0.114173
   CLL	      = -0.209633
   Precision = 0.03435 at threshold = 0.5
   Recall    = 0.93985
   F1        = 0.066278


Total learning time: 1.854 seconds
Total inference time: 4.666 seconds
AUC ROC: 0.982517


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.116792
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.793 seconds
Refined model CLL: -0.116792


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.982517
   AUC PR    = 0.114173
   CLL	      = -0.209633
   Precision = 0.03435 at threshold = 0.5
   Recall    = 0.93985
   F1        = 0.066278


Total learning time: 5.207 seconds
Total inference time: 4.666 seconds
AUC ROC: 0.982517
Total revision time: 5.207
Best scored revision CLL: -0.116792


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 01:17:27
{'AUC ROC': 0.982517, 'AUC PR': 0.114173, 'CLL': -0.209633, 'Inference time': 4.666, 'Recall': 0.93985, 'F1': 0.066278, 'Precision': [0.03435, 0.5], 'Learning time': 5.207, 'parameter_5': {'AUC ROC': 0.502637, 'AUC PR': 0.002667, 'CLL': -0.580372, 'Inference time': 162.86, 'Recall': 0.218045, 'F1': 0.005472, 'Precision': [0.002771, 0.5], 'Learning time': 1.646}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.991403
   AUC PR    = 0.126667
   CLL	      = -0.097917
   Precision = 0.126667 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.224852


Total learning time: 2.186 seconds
Total inference time: 4.171 seconds
AUC ROC: 0.991403


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN-B), Time: 01:17:34
{'AUC ROC': 0.991403, 'AUC PR': 0.126667, 'CLL': -0.097917, 'Inference time': 4.171, 'Recall': 1.0, 'F1': 0.224852, 'Precision': [0.126667, 0.5], 'Learning time': 2.186}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.991403
   AUC PR    = 0.126667
   CLL	      = -0.140216
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.078 seconds
Total inference time: 3.217 seconds
AUC ROC: 0.991403


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN), Time: 01:17:38
{'AUC ROC': 0.991403, 'AUC PR': 0.126667, 'CLL': -0.140216, 'Inference time': 3.217, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 1.078}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyceo(A, C), cityhascompanyoffice(D, A).;true;true
0;false,false;countryhascompanyoffice(J, A), bankboughtbank(K, A).;true;true
0;true,false;bankchiefexecutiveceo(F, C).;false;true
0;false,false,false;companyalsoknownas(A, L), acquired(A, M).;false;false
0;false;companyceo(A, H), acquired(I, A).;false;true
0;true;bankchiefexecutiveceo(E, C), economicsectorcompany(B, E).;false;true
0;true,false,false;cityhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
0;false,false,true;countryhascompanyoffice(J, K).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
1;false,false;acquired(A, H), economicsectorcompany(B, H).;true;true
1;false,true;bankboughtbank(E, A), bankchiefexecutiveceo(E, F).;false;true
1;false;acquired(D, A).;true;true
1;false,false,false;companyceo(A, K), acquired(A, L).;false;false
1;false,false,true;cityhascompanyoffice(I, A), companyceo(A, J).;false;false
1;false,true,false;companyalsoknownas(D, G), economicsectorcompany(B, G).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
2;false,false;companyalsoknownas(A, G), companyceo(G, H).;true;true
2;true,false;economicsectorcompany(B, C).;false;false
2;false,true;economicsectorcompany(B, E).;false;false
2;false;acquired(A, E), cityhascompanyoffice(F, E).;true;true
2;true;economicsectorcompany(B, D).;false;true
2;false,false,false;cityhascompanyoffice(J, A).;false;false
2;false,false,true;acquired(G, I), economicsectorcompany(B, I).;false;false
3;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(C, D).;true;true
3;false,false;acquired(L, A), cityhascompanyoffice(M, A).;false;true
3;true,false;companyalsoknownas(A, G).;false;false
3;false,true;bankchiefexecutiveceo(J, H), economicsectorcompany(B, J).;false;true
3;false;companyceo(A, H), bankchiefexecutiveceo(A, I).;true;true
3;true;companyalsoknownas(A, E), acquired(F, E).;false;true
3;false,false,false;companyalsoknownas(A, N).;false;false
3;false,true,false;bankboughtbank(K, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
4;true,false;bankchiefexecutiveceo(A, D), countryhascompanyoffice(E, A).;false;false
4;false,true;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
4;false;cityhascompanyoffice(F, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;false,false,false;acquired(J, A).;false;false
4;false,true,false;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
5;;companyeconomicsector(A, B) :- companyceo(A, C), bankchiefexecutiveceo(A, C).;true;true
5;false,false;acquired(A, J), economicsectorcompany(B, J).;false;true
5;true,false;acquired(A, E).;false;false
5;false,true;economicsectorcompany(B, F).;false;true
5;false;acquired(F, A), companyceo(F, G).;true;true
5;true;bankboughtbank(A, D).;false;true
5;false,false,false;companyceo(A, K), companyalsoknownas(A, L).;false;false
5;false,true,false;companyalsoknownas(F, H), acquired(I, F).;false;false
6;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(A, D).;true;true
6;false,false;bankboughtbank(L, A).;true;true
6;false,false,false;companyalsoknownas(A, N), economicsectorcompany(B, N).;false;false
6;false,true;bankboughtbank(H, I), economicsectorcompany(B, I).;false;true
6;false;countryhascompanyoffice(G, A), acquired(H, A).;true;true
6;true;countryhascompanyoffice(E, C), cityhascompanyoffice(F, A).;false;false
6;false,false,true;cityhascompanyoffice(M, L).;false;false
6;false,true,false;bankboughtbank(J, A), bankchiefexecutiveceo(J, K).;false;false
7;;companyeconomicsector(A, B) :- acquired(A, C), bankboughtbank(A, C).;true;true
7;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
7;false,false,false;countryhascompanyoffice(L, A), bankbankincountry(M, L).;false;false
7;false,true;companyalsoknownas(A, G).;false;true
7;false;acquired(A, E), companyalsoknownas(E, F).;true;true
7;true;countryhascompanyoffice(D, A).;false;false
7;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
7;false,true,false;acquired(E, H).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;true;true
8;false,true,true;acquired(G, D), economicsectorcompany(B, G).;false;false
8;false,true;countryhascompanyoffice(F, D).;true;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,false,false;companyalsoknownas(A, K), cityhascompanyoffice(L, K).;false;false
8;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;false,true,false;acquired(D, H), economicsectorcompany(B, H).;false;false
9;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;false;true
9;false,false;acquired(A, K), companyalsoknownas(A, L).;true;true
9;false,true,true;countryhascompanyoffice(G, I), economicsectorcompany(B, I).;false;false
9;false,true;countryhascompanyoffice(G, A), bankchiefexecutiveceo(E, H).;true;true
9;false;bankboughtbank(E, A), countryhascompanyoffice(F, E).;true;true
9;false,false,false;companyceo(A, M).;false;false
9;false,false,true;economicsectorcompany(B, K).;false;false
9;false,true,false;acquired(E, J), economicsectorcompany(B, J).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamalsoknownas(D, A) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F), teamplaysagainstteam(A, G) )
%   | then return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( athleteplaysforteam(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.37471396354905684;  // std dev = 1,609, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, F), teamplaysagainstteam(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1996880650444049;  // std dev = 1,318, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.30744948151329665;  // std dev = 0,459, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else if ( teamplaysagainstteam(D, A), teamalsoknownas(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then if ( teamplaysagainstteam(H, F) )
%   | | | then return 0.16929888257239273;  // std dev = 1,313, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return 0.29207151640075624;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then return 0.22863630413847563;  // std dev = 0,486, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamplaysagainstteam(A, G), teamalsoknownas(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.016335622085791524;  // std dev = 0,400, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.17194790660012188;  // std dev = 1,219, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0.3179349546152246;  // std dev = 0,788, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamalsoknownas(E, A) )
%   | then if ( teamalsoknownas(E, F) )
%   | | then return 0.18581906855936337;  // std dev = 0,565, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return -0.34162718571779843;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.10508278851310866;  // std dev = 1,143, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.11698747356606178;  // std dev = 1,411, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0.17843267193566098;  // std dev = 0,914, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( teamplaysagainstteam(A, E), teamplaysinleague(E, F) )
%   | then if ( teamplaysagainstteam(E, G) )
%   | | then return 0.41330510263868714;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.034696476626853615;  // std dev = 0,898, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamplaysinleague(A, D) )
%   then if ( athleteplaysforteam(E, C), teamalsoknownas(F, A) )
%   | then return 0.4203542636929466;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.006372269398429894;  // std dev = 1,306, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( athleteplaysforteam(G, A), teamplaysagainstteam(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(I, J) )
%   | | then return 0.09557972094999942;  // std dev = 1,348, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.07568108142131076;  // std dev = 1,171, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0.1692152376241288;  // std dev = 0,752, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(F, G) )
%   | | then if ( teamalsoknownas(F, H) )
%   | | | then return 0.026970414775457547;  // std dev = 1,301, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.049661979123695486;  // std dev = 1,455, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else if ( teamplaysagainstteam(A, D), teamplaysinleague(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(G, H) )
%   | | | then return 0.06566823693048619;  // std dev = 1,245, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysinleague(C, D) )
%   then return 0.03822214848039061;  // std dev = 1,456, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else if ( athleteplaysforteam(E, F) )
%   | then if ( athleteplaysforteam(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, F) )
%   | | | then return 0.05206150439560472;  // std dev = 1,244, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.490817
   AUC PR    = 0.00258
   CLL	      = -0.645065
   Precision = 0.00257 at threshold = 0.5
   Recall    = 0.300752
   F1        = 0.005096


Total learning time: 1.804 seconds
Total inference time: 75.653 seconds
AUC ROC: 0.490817


Results scoring model
   AUC ROC   = 0.815
   AUC PR    = 0.861333
   CLL	      = -0.554713
   Precision = 0.857143 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.705882


Total scoring time: 0.894 seconds
Parameter learned model CLL: -0.554713


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), teamalsoknownas(D, A)', 'false': 'teamplaysinleague(A, F), teamplaysagainstteam(A, G)', 'true': 'teamalsoknownas(D, E)', 'false,false': 'athleteplaysforteam(H, A)', 'false,false,false': 'teamplaysagainstteam(I, A)'}, {'true,false': [0.0, 0, 0], 'true,true': [2.11e-08, 0, 3], 'false,true': [1.369, 5, 3], 'false,false,false,false': [1.195, 5, 2], 'false,false,false,true': [0.0, 0, 2], 'false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysagainstteam(A, D)', 'false,false': 'teamplaysagainstteam(E, A)', 'false,false,false': 'teamplaysinleague(A, F), teamplaysagainstteam(G, A)'}, {'false,false,false,false': [1.318, 5, 3], 'false,false,false,true': [0.0, 0, 0], 'true': [1.609, 5, 7], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysagainstteam(D, A), teamalsoknownas(E, D)', 'false,false': 'teamplaysinleague(F, G)', 'false,false,true': 'teamplaysagainstteam(H, F)'}, {'false,true': [0.0, 0, 0], 'true': [0.459, 5, 7], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.313, 5, 3], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysinleague(A, F)', 'true': 'teamplaysagainstteam(D, E)', 'false,false': 'teamplaysagainstteam(A, G), teamalsoknownas(H, A)'}, {'false,true': [0.486, 2, 2], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [1.477, 4, 7], 'false,false,false': [0.4, 4, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false': 'teamplaysagainstteam(A, G)', 'false,true': 'teamalsoknownas(E, F)', 'false': 'teamalsoknownas(E, A)', 'true': 'athleteplaysforteam(D, A)', 'false,false,false': 'teamplaysagainstteam(A, H)'}, {'true,false': [0.788, 1, 3], 'false,true,true': [0.565, 1, 1], 'true,true': [1.219, 3, 4], 'false,false,false,false': [1.143, 4, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false,false': 'teamplaysagainstteam(H, A)', 'false,true': 'teamplaysagainstteam(E, G)', 'false': 'teamplaysagainstteam(A, E), teamplaysinleague(E, F)', 'true': 'teamplaysagainstteam(D, A)', 'false,false,false': 'teamplaysinleague(A, I)'}, {'true,false': [0.914, 2, 2], 'false,true,true': [0.0, 0, 2], 'true,true': [1.411, 4, 5], 'false,false,false,false': [0.898, 4, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamplaysinleague(A, D)', 'false': 'athleteplaysforteam(G, A), teamplaysagainstteam(A, H)', 'true': 'athleteplaysforteam(E, C), teamalsoknownas(F, A)', 'false,false': 'teamalsoknownas(I, J)'}, {'false,true': [0.0, 0, 0], 'true,false': [1.306, 4, 3], 'false,false,true': [1.348, 6, 5], 'true,true': [0.0, 0, 2], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysagainstteam(E, A)', 'true': 'athleteplaysforteam(D, A)', 'false,false': 'teamalsoknownas(F, G)', 'false,false,true': 'teamalsoknownas(F, H)'}, {'false,false,true,true': [1.301, 6, 3], 'true,false': [0.752, 1, 3], 'true,true': [1.171, 3, 4], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysagainstteam(A, D), teamplaysinleague(D, E)', 'false,false': 'teamplaysagainstteam(F, A)', 'false,false,false': 'teamalsoknownas(G, H)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [1.245, 5, 3], 'true': [1.455, 5, 7], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamplaysinleague(C, D)', 'false': 'athleteplaysforteam(E, F)', 'false,true': 'athleteplaysforteam(G, A)', 'false,true,false': 'teamplaysagainstteam(H, F)'}, {'false,false': [0.0, 0, 0], 'true': [1.456, 5, 7], 'false,true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [1.244, 5, 3]}]]
[{'': [1.4802973661668753e-16, 0.2422145328719722], 'false': [0.2343749999999999, 0.24691358024691348], 'true': [1.4802973661668753e-16, nan], 'false,false,false': [0.0, 0.20408163265306126], 'false,false': [nan, 0.2469135802469134]}, {'': [0.2156795387208279, 0.21716811530414998], 'false': [nan, 0.21716811530414998], 'false,false,false': [nan, 0.21716811530415003], 'false,false': [nan, 0.21716811530414998]}, {'': [0.21091564786236436, 0.21546236090100268], 'false': [nan, 0.21546236090100268], 'false,false,true': [0.21546236090100268, nan], 'false,false': [0.21546236090100268, nan]}, {'': [0.198272556623664, 0.2088265502717701], 'false': [0.2365201577570229, 0.16000000000000006], 'true': [0.198272556623664, nan], 'false,false': [nan, 0.16000000000000006]}, {'': [0.1965412597239121, 0.20323971090592785], 'false,false': [0.0, 0.2177622171735951], 'false,false,false': [nan, 0.2177622171735951], 'false': [0.15951882134729162, 0.21108799852561755], 'true': [0.21237751981369865, 0.1552654839015902], 'false,true': [0.15951882134729162, nan]}, {'': [0.21805616962315738, 0.156109785880637], 'false,false': [nan, 0.16120929594020078], 'false,false,false': [nan, 0.16120929594020078], 'false': [0.0, 0.16120929594020078], 'true': [0.22106405939613097, 0.20867460135518873], 'false,true': [0.0, nan]}, {'': [0.22101234721093904, 0.16530407411335], 'false': [nan, 0.16530407411335002], 'true': [0.0, 0.243693057896309], 'false,false': [0.16530407411335002, nan]}, {'': [0.17807900946717792, 0.18803846123287266], 'false': [nan, 0.18803846123287266], 'true': [0.19582371756446257, 0.14145845496638323], 'false,false,true': [0.18803846123287266, nan], 'false,false': [0.18803846123287266, nan]}, {'': [0.1763414500373143, 0.19376101683102728], 'false': [nan, 0.19376101683102728], 'false,false,false': [0.19376101683102728, nan], 'false,false': [nan, 0.19376101683102728]}, {'': [0.17662365746779593, 0.19330484357764532], 'false': [0.19330484357764532, nan], 'false,true,false': [0.19330484357764532, nan], 'false,true': [nan, 0.19330484357764532]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(A, C), teamalsoknownas(D, A).;true;true
0;false;teamplaysinleague(A, F), teamplaysagainstteam(A, G).;true;true
0;false,false;teamplaysagainstteam(I, A).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
4;false;teamalsoknownas(E, A).;true;true
4;false,false;teamplaysagainstteam(A, G).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
5;false;teamplaysagainstteam(A, E), teamplaysinleague(E, F).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamplaysinleague(A, D).;true;true
6;true;athleteplaysforteam(E, C), teamalsoknownas(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamalsoknownas(D, A) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysinleague(A, E), teamplaysagainstteam(A, F) )
%   | then if ( athleteplayssport(G, B) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.1438632208137979;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7435224757157431;  // std dev = 0,152, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1428629543967468;  // std dev = 0,055, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.549420261070844;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6588299750709002;  // std dev = 0,134, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.12628215481075872;  // std dev = 0,050, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.41311771855009555;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5043607845502026;  // std dev = 0,144, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.1130205449526283;  // std dev = 0,045, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.3177330604673723;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.0891533428381869;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamalsoknownas(E, A) )
%   | then return 0.08033303105811569;  // std dev = 0,277, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then return -0.0891533428381869;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.06906740483444385;  // std dev = 0,638, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then if ( athleteplaysforteam(E, A) )
%   | | then return 0.25313860189682424;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3113499889567671;  // std dev = 0,134, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.08889010504512924;  // std dev = 0,037, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysagainstteam(A, F), teamplaysinleague(F, G) )
%   | then return 0.25313860189682424;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.014067531374195622;  // std dev = 0,486, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamplaysinleague(A, D) )
%   then if ( athleteplaysforteam(E, C), teamalsoknownas(F, A) )
%   | then return 0.208320141494456;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.2051743135750522;  // std dev = 0,008, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.07571388080189198;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(H, B) )
%   | then return 0.2785845495722201;  // std dev = 0,203, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11233662855454334;  // std dev = 0,041, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.17220510371284287;  // std dev = 0,013, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.26939690182493503;  // std dev = 0,139, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.08921717347019895;  // std dev = 0,061, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.14902627198948212;  // std dev = 0,011, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2211735198856741;  // std dev = 0,121, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.08225793304377232;  // std dev = 0,056, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.13110029159197772;  // std dev = 0,010, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.18630691387684747;  // std dev = 0,106, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.07628139030931509;  // std dev = 0,053, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.991331
   AUC PR    = 0.130148
   CLL	      = -0.13042
   Precision = 0.126667 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.224852


Total learning time: 4.415 seconds
Total inference time: 7.494 seconds
AUC ROC: 0.991331


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106956
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.81 seconds
Refined model CLL: -0.106956


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991331
   AUC PR    = 0.130148
   CLL	      = -0.13042
   Precision = 0.126667 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.224852


Total learning time: 7.923 seconds
Total inference time: 7.494 seconds
AUC ROC: 0.991331
Total revision time: 7.923
Best scored revision CLL: -0.106956


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 01:19:10
{'AUC ROC': 0.991331, 'AUC PR': 0.130148, 'parameter_10': {'AUC ROC': 0.490817, 'AUC PR': 0.00258, 'CLL': -0.645065, 'Inference time': 75.653, 'Recall': 0.300752, 'F1': 0.005096, 'Precision': [0.00257, 0.5], 'Learning time': 1.804}, 'CLL': -0.13042, 'Inference time': 7.494, 'Recall': 1.0, 'F1': 0.224852, 'Precision': [0.126667, 0.5], 'Learning time': 7.923}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.991403
   AUC PR    = 0.126667
   CLL	      = -0.097917
   Precision = 0.126667 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.224852


Total learning time: 2.193 seconds
Total inference time: 4.047 seconds
AUC ROC: 0.991403


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN-B), Time: 01:19:16
{'AUC ROC': 0.991403, 'AUC PR': 0.126667, 'CLL': -0.097917, 'Inference time': 4.047, 'Recall': 1.0, 'F1': 0.224852, 'Precision': [0.126667, 0.5], 'Learning time': 2.193}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.991403
   AUC PR    = 0.126667
   CLL	      = -0.140216
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.003 seconds
Total inference time: 2.978 seconds
AUC ROC: 0.991403


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN), Time: 01:19:21
{'AUC ROC': 0.991403, 'AUC PR': 0.126667, 'CLL': -0.140216, 'Inference time': 2.978, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 1.003}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyceo(A, C), cityhascompanyoffice(D, A).;true;true
0;false,false;countryhascompanyoffice(J, A), bankboughtbank(K, A).;true;true
0;true,false;bankchiefexecutiveceo(F, C).;false;true
0;false,false,false;companyalsoknownas(A, L), acquired(A, M).;false;false
0;false;companyceo(A, H), acquired(I, A).;false;true
0;true;bankchiefexecutiveceo(E, C), economicsectorcompany(B, E).;false;true
0;true,false,false;cityhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
0;false,false,true;countryhascompanyoffice(J, K).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
1;false,false;acquired(A, H), economicsectorcompany(B, H).;true;true
1;false,true;bankboughtbank(E, A), bankchiefexecutiveceo(E, F).;false;true
1;false;acquired(D, A).;true;true
1;false,false,false;companyceo(A, K), acquired(A, L).;false;false
1;false,false,true;cityhascompanyoffice(I, A), companyceo(A, J).;false;false
1;false,true,false;companyalsoknownas(D, G), economicsectorcompany(B, G).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
2;false,false;companyalsoknownas(A, G), companyceo(G, H).;true;true
2;true,false;economicsectorcompany(B, C).;false;false
2;false,true;economicsectorcompany(B, E).;false;false
2;false;acquired(A, E), cityhascompanyoffice(F, E).;true;true
2;true;economicsectorcompany(B, D).;false;true
2;false,false,false;cityhascompanyoffice(J, A).;false;false
2;false,false,true;acquired(G, I), economicsectorcompany(B, I).;false;false
3;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(C, D).;true;true
3;false,false;acquired(L, A), cityhascompanyoffice(M, A).;false;true
3;true,false;companyalsoknownas(A, G).;false;false
3;false,true;bankchiefexecutiveceo(J, H), economicsectorcompany(B, J).;false;true
3;false;companyceo(A, H), bankchiefexecutiveceo(A, I).;true;true
3;true;companyalsoknownas(A, E), acquired(F, E).;false;true
3;false,false,false;companyalsoknownas(A, N).;false;false
3;false,true,false;bankboughtbank(K, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
4;true,false;bankchiefexecutiveceo(A, D), countryhascompanyoffice(E, A).;false;false
4;false,true;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
4;false;cityhascompanyoffice(F, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;false,false,false;acquired(J, A).;false;false
4;false,true,false;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
5;;companyeconomicsector(A, B) :- companyceo(A, C), bankchiefexecutiveceo(A, C).;true;true
5;false,false;acquired(A, J), economicsectorcompany(B, J).;false;true
5;true,false;acquired(A, E).;false;false
5;false,true;economicsectorcompany(B, F).;false;true
5;false;acquired(F, A), companyceo(F, G).;true;true
5;true;bankboughtbank(A, D).;false;true
5;false,false,false;companyceo(A, K), companyalsoknownas(A, L).;false;false
5;false,true,false;companyalsoknownas(F, H), acquired(I, F).;false;false
6;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(A, D).;true;true
6;false,false;bankboughtbank(L, A).;true;true
6;false,false,false;companyalsoknownas(A, N), economicsectorcompany(B, N).;false;false
6;false,true;bankboughtbank(H, I), economicsectorcompany(B, I).;false;true
6;false;countryhascompanyoffice(G, A), acquired(H, A).;true;true
6;true;countryhascompanyoffice(E, C), cityhascompanyoffice(F, A).;false;false
6;false,false,true;cityhascompanyoffice(M, L).;false;false
6;false,true,false;bankboughtbank(J, A), bankchiefexecutiveceo(J, K).;false;false
7;;companyeconomicsector(A, B) :- acquired(A, C), bankboughtbank(A, C).;true;true
7;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
7;false,false,false;countryhascompanyoffice(L, A), bankbankincountry(M, L).;false;false
7;false,true;companyalsoknownas(A, G).;false;true
7;false;acquired(A, E), companyalsoknownas(E, F).;true;true
7;true;countryhascompanyoffice(D, A).;false;false
7;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
7;false,true,false;acquired(E, H).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;true;true
8;false,true,true;acquired(G, D), economicsectorcompany(B, G).;false;false
8;false,true;countryhascompanyoffice(F, D).;true;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,false,false;companyalsoknownas(A, K), cityhascompanyoffice(L, K).;false;false
8;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;false,true,false;acquired(D, H), economicsectorcompany(B, H).;false;false
9;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;false;true
9;false,false;acquired(A, K), companyalsoknownas(A, L).;true;true
9;false,true,true;countryhascompanyoffice(G, I), economicsectorcompany(B, I).;false;false
9;false,true;countryhascompanyoffice(G, A), bankchiefexecutiveceo(E, H).;true;true
9;false;bankboughtbank(E, A), countryhascompanyoffice(F, E).;true;true
9;false,false,false;companyceo(A, M).;false;false
9;false,false,true;economicsectorcompany(B, K).;false;false
9;false,true,false;acquired(E, J), economicsectorcompany(B, J).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(A, D) )
%   then if ( teamplaysinleague(E, D) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A), teamplaysagainstteam(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(H, A) )
%   | | then if ( athleteledsportsteam(H, I) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, J) )
%   | | | then return 0.4945125714631487;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.19148226843284566;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.38338780375823533;  // std dev = 1,954, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, E) )
%   | | then if ( teamplaysinleague(A, F), teamalsoknownas(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.21324294031064786;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamalsoknownas(H, A), teamplaysagainstteam(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.24039448464649885;  // std dev = 1,672, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.3146399803080482;  // std dev = 0,470, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   else if ( teamplaysagainstteam(A, D), teamplaysinleague(D, E) )
%   | then return -0.17964855513937317;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamalsoknownas(F, G) )
%   | | then if ( teamplaysagainstteam(G, H) )
%   | | | then return 0.20302958905465918;  // std dev = 1,668, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return 0.2564479298177867;  // std dev = 1,895, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A) )
%   | then return 0.19217331189430903;  // std dev = 0,430, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysagainstteam(G, A), teamplaysinleague(A, H) )
%   | | then return -0.28689958929840775;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.16225702663973363;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return 0.04050609701636665;  // std dev = 1,005, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.26451886118260953;  // std dev = 1,538, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   else if ( teamplaysinleague(A, E) )
%   | then if ( teamplaysinleague(F, E) )
%   | | then return 0.3784157249136519;  // std dev = 1,097, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12637188959093346;  // std dev = 0,927, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.4589373292528865;  // std dev = 0,039, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.11604739075712674;  // std dev = 0,517, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | then if ( teamplaysagainstteam(G, E) )
%   | | then return 0.20131606960166232;  // std dev = 1,288, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0.0057177393558514745;  // std dev = 1,200, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( teamalsoknownas(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07573351614220097;  // std dev = 1,515, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, A) )
%   then if ( athleteledsportsteam(E, C), teamplaysinleague(A, F) )
%   | then return 0.34928529788232077;  // std dev = 0,036, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(G, A), teamplaysagainstteam(H, A) )
%   | then return -0.11738393148440936;  // std dev = 0,427, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysinleague(I, J) )
%   | | then return 0.1068128800939817;  // std dev = 2,198, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return -0.013062897382258154;  // std dev = 0,922, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.14063768638958016;  // std dev = 1,495, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then if ( teamplaysinleague(H, G) )
%   | | | then return 0.04186810261301144;  // std dev = 1,594, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.06850517954149178;  // std dev = 1,785, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   else if ( teamplaysagainstteam(D, A), teamalsoknownas(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then return -0.28409397497674294;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysinleague(G, H) )
%   | | | then return 0.06502024719444353;  // std dev = 1,540, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then return 0.1292145585230584;  // std dev = 1,261, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( athleteledsportsteam(E, F) )
%   | then if ( athleteledsportsteam(G, A) )
%   | | then if ( athleteledsportsteam(G, H) )
%   | | | then return -0.32014768975272495;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, I) )
%   | | | then return 0.021384933527234397;  // std dev = 1,958, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.481057
   AUC PR    = 0.002388
   CLL	      = -0.693308
   Precision = 0.002346 at threshold = 0.5
   Recall    = 0.37594
   F1        = 0.004663


Total learning time: 2.06 seconds
Total inference time: 82.064 seconds
AUC ROC: 0.481057


Results scoring model
   AUC ROC   = 0.844444
   AUC PR    = 0.835917
   CLL	      = -0.558003
   Precision = 0.769231 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.714286


Total scoring time: 1.064 seconds
Parameter learned model CLL: -0.558003


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysinleague(A, D)', 'false,false': 'athleteledsportsteam(H, A)', 'false,false,false': 'teamplaysagainstteam(A, J)', 'false': 'teamalsoknownas(F, A), teamplaysagainstteam(G, A)', 'true': 'teamplaysinleague(E, D)', 'false,false,true': 'athleteledsportsteam(H, I)'}, {'false,false,true,true': [0.866, 3, 1], 'true,false': [0.0, 0, 0], 'true,true': [2.11e-08, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,false,false': [1.633, 8, 4], 'false,false,false,true': [1.595, 4, 7], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysagainstteam(D, A)', 'false,false,true': 'teamplaysinleague(A, F), teamalsoknownas(G, A)', 'false,false': 'teamplaysagainstteam(A, E)', 'false,false,false': 'teamalsoknownas(H, A), teamplaysagainstteam(A, I)'}, {'false,false,true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [1.672, 7, 5], 'false,false,false,true': [0.0, 0, 0], 'true': [1.954, 7, 10], 'false,false,true,false': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysagainstteam(A, D), teamplaysinleague(D, E)', 'false,false': 'teamalsoknownas(F, G)', 'false,false,true': 'teamplaysagainstteam(G, H)'}, {'false,true': [0.0, 1, 0], 'true': [0.47, 7, 10], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.668, 7, 5], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamalsoknownas(F, A)', 'true': 'teamplaysagainstteam(D, E)', 'false,false': 'teamplaysagainstteam(G, A), teamplaysinleague(A, H)'}, {'false,true': [0.43, 1, 1], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0], 'true,true': [1.895, 7, 10], 'false,false,false': [0.49, 6, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false': 'teamplaysagainstteam(G, A)', 'false,true': 'teamplaysinleague(F, E)', 'false': 'teamplaysinleague(A, E)', 'true': 'athleteledsportsteam(D, A)', 'false,false,false': 'teamplaysagainstteam(H, A)'}, {'true,false': [1.538, 4, 8], 'false,true,true': [1.097, 2, 4], 'true,true': [1.005, 3, 2], 'false,false,false,false': [0.927, 6, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false': 'teamplaysagainstteam(A, H)', 'false,true': 'teamplaysagainstteam(G, E)', 'false': 'teamplaysagainstteam(E, A), teamalsoknownas(F, E)', 'true': 'teamplaysagainstteam(A, D)', 'false,false,false': 'teamalsoknownas(I, A)'}, {'true,false': [0.517, 1, 1], 'false,true,true': [1.288, 3, 5], 'true,true': [0.039, 0, 2], 'false,false,false,false': [1.515, 7, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [1.2, 4, 3], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(D, A)', 'false': 'athleteledsportsteam(G, A), teamplaysagainstteam(H, A)', 'true': 'athleteledsportsteam(E, C), teamplaysinleague(A, F)', 'false,false': 'teamplaysinleague(I, J)'}, {'false,true': [0.427, 3, 1], 'true,false': [0.0, 0, 0], 'false,false,true': [2.198, 12, 12], 'true,true': [0.036, 0, 2], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysagainstteam(A, E)', 'true': 'athleteledsportsteam(D, A)', 'false,false': 'teamplaysinleague(F, G)', 'false,false,true': 'teamplaysinleague(H, G)'}, {'false,false,true,true': [1.594, 8, 5], 'true,false': [1.495, 4, 8], 'true,true': [0.922, 3, 2], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysagainstteam(D, A), teamalsoknownas(E, D)', 'false,false': 'teamplaysagainstteam(A, F)', 'false,false,false': 'teamplaysinleague(G, H)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [1.54, 7, 5], 'true': [1.785, 7, 10], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(D, C)', 'false': 'athleteledsportsteam(E, F)', 'false,true': 'athleteledsportsteam(G, A)', 'false,true,true': 'athleteledsportsteam(G, H)', 'false,true,false': 'teamplaysagainstteam(F, I)'}, {'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'true': [1.261, 3, 6], 'false,true,true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,false,true': [1.958, 11, 9]}]]
[{'': [1.4802973661668753e-16, 0.2469135802469131], 'false,false': [0.18750000000000003, 0.24952741020793906], 'false,false,false': [0.23140495867768587, 0.22222222222222207], 'false': [nan, 0.2469135802469131], 'true': [1.4802973661668753e-16, nan], 'false,false,true': [0.18750000000000003, nan]}, {'': [0.22466821126658387, 0.22967642017048714], 'false': [nan, 0.22967642017048714], 'false,false,false': [nan, 0.2329863592881494], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.23298635928814945]}, {'': [0.22114793656225237, 0.22438480071182157], 'false': [0.0, 0.23181872163956654], 'false,false,true': [0.23181872163956654, nan], 'false,false': [0.23181872163956654, nan]}, {'': [0.21134134581679556, 0.22780986005146472], 'false': [0.1848280123270934, 0.23485468311082672], 'true': [0.21134134581679556, nan], 'false,false': [0.0, 0.24]}, {'': [0.2090651000571714, 0.22201999005449985], 'false,false': [nan, 0.12269468076044378], 'false,true': [0.20069384446418517, nan], 'false': [0.20069384446418517, 0.12269468076044378], 'true': [0.20206104296999197, 0.19722412820347643], 'false,false,false': [nan, 0.12269468076044378]}, {'': [0.09672802282487276, 0.21321571896098876], 'false,false': [0.20567788039583257, 0.20854143776652317], 'false,false,false': [nan, 0.20854143776652317], 'false': [0.207450946492223, 0.20859286327336166], 'true': [0.000771901089043403, 0.13389738959988923], 'false,true': [0.207450946492223, nan]}, {'': [0.0006463567830461286, 0.2046595216606028], 'false': [0.1822753145600571, 0.20120962136946752], 'true': [0.0006463567830461286, nan], 'false,false': [0.20120962136946752, nan]}, {'': [0.18640673143549596, 0.1953820663985824], 'false': [nan, 0.1953820663985824], 'true': [0.1700046187041957, 0.1862927481759483], 'false,false,true': [0.1953820663985824, nan], 'false,false': [0.1953820663985824, nan]}, {'': [0.18747507451254874, 0.19115485380182806], 'false': [nan, 0.19115485380182806], 'false,false,false': [0.19770898340411944, nan], 'false,false': [0.0, 0.19770898340411944]}, {'': [0.1765424348614112, 0.1878383612257615], 'false': [0.18783836122576147, nan], 'false,true,false': [0.1916757777268357, nan], 'false,true,true': [0.0, nan], 'false,true': [0.0, 0.1916757777268357]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamalsoknownas(C, A), teamplaysinleague(A, D).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
1;false;teamplaysagainstteam(A, E).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
2;false;teamplaysagainstteam(A, D), teamplaysinleague(D, E).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
3;false;teamalsoknownas(F, A).;true;true
3;false,false;teamplaysagainstteam(G, A), teamplaysinleague(A, H).;true;true
5;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
5;true;teamplaysagainstteam(A, D).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, A).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;false;teamplaysagainstteam(A, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamalsoknownas(D, C).;true;true
9;false;athleteledsportsteam(G, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(A, D) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.7194734122109543;  // std dev = 5,16e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(A, F), teamplaysinleague(F, G) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamalsoknownas(F, A) )
%   | then return 0.15795862733523686;  // std dev = 0,367, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysagainstteam(G, A), teamplaysinleague(A, H) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.32464241782642717;  // std dev = 0,057, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09430839966889805;  // std dev = 0,023, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.2544259199447617;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.0995727758734638;  // std dev = 0,293, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then return 0.25442591994476166;  // std dev = 2,79e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.08505881619505853;  // std dev = 6,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, A) )
%   then return 0.20923038434256114;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then return 0.21513147564813373;  // std dev = 0,074, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.08125689093925291;  // std dev = 0,038, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.18051727695118266;  // std dev = 0,066, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07540035236817358;  // std dev = 0,035, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.15135186489095448;  // std dev = 0,000960, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06803754335757083;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then return -0.06803754335757081;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.16343028953162184;  // std dev = 0,055, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07291749225585757;  // std dev = 0,032, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.13289669420040337;  // std dev = 0,000622, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.06384813055543792;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteledsportsteam(F, A) )
%   | then return -0.06384813055543792;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, B), athleteledsportsteam(G, H) )
%   | | then return 0.13818961549341768;  // std dev = 0,051, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.066584829140551;  // std dev = 0,031, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */


Results
   AUC ROC   = 0.995483
   AUC PR    = 0.227808
   CLL	      = -0.112795
   Precision = 0.197309 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.329177


Total learning time: 3.203 seconds
Total inference time: 6.904 seconds
AUC ROC: 0.995483


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096438
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.869 seconds
Refined model CLL: -0.096438


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.995483
   AUC PR    = 0.227808
   CLL	      = -0.112795
   Precision = 0.197309 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.329177


Total learning time: 7.196 seconds
Total inference time: 6.904 seconds
AUC ROC: 0.995483
Total revision time: 7.196
Best scored revision CLL: -0.096438


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 01:20:58
{'parameter_15': {'AUC ROC': 0.481057, 'AUC PR': 0.002388, 'CLL': -0.693308, 'Inference time': 82.064, 'Recall': 0.37594, 'F1': 0.004663, 'Precision': [0.002346, 0.5], 'Learning time': 2.06}, 'AUC ROC': 0.995483, 'AUC PR': 0.227808, 'CLL': -0.112795, 'Inference time': 6.904, 'Recall': 0.992481, 'F1': 0.329177, 'Precision': [0.197309, 0.5], 'Learning time': 7.196}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.987597
   AUC PR    = 0.1987
   CLL	      = -0.082726
   Precision = 0.20092 at threshold = 0.5
   Recall    = 0.984962
   F1        = 0.333758


Total learning time: 2.508 seconds
Total inference time: 3.896 seconds
AUC ROC: 0.987597


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN-B), Time: 01:21:04
{'AUC ROC': 0.987597, 'AUC PR': 0.1987, 'CLL': -0.082726, 'Inference time': 3.896, 'Recall': 0.984962, 'F1': 0.333758, 'Precision': [0.20092, 0.5], 'Learning time': 2.508}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.987597
   AUC PR    = 0.1987
   CLL	      = -0.138801
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.145 seconds
Total inference time: 3.065 seconds
AUC ROC: 0.987597


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN), Time: 01:21:09
{'AUC ROC': 0.987597, 'AUC PR': 0.1987, 'CLL': -0.138801, 'Inference time': 3.065, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 1.145}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyceo(A, C), cityhascompanyoffice(D, A).;true;true
0;false,false;countryhascompanyoffice(J, A), bankboughtbank(K, A).;true;true
0;true,false;bankchiefexecutiveceo(F, C).;false;true
0;false,false,false;companyalsoknownas(A, L), acquired(A, M).;false;false
0;false;companyceo(A, H), acquired(I, A).;false;true
0;true;bankchiefexecutiveceo(E, C), economicsectorcompany(B, E).;false;true
0;true,false,false;cityhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
0;false,false,true;countryhascompanyoffice(J, K).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
1;false,false;acquired(A, H), economicsectorcompany(B, H).;true;true
1;false,true;bankboughtbank(E, A), bankchiefexecutiveceo(E, F).;false;true
1;false;acquired(D, A).;true;true
1;false,false,false;companyceo(A, K), acquired(A, L).;false;false
1;false,false,true;cityhascompanyoffice(I, A), companyceo(A, J).;false;false
1;false,true,false;companyalsoknownas(D, G), economicsectorcompany(B, G).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
2;false,false;companyalsoknownas(A, G), companyceo(G, H).;true;true
2;true,false;economicsectorcompany(B, C).;false;false
2;false,true;economicsectorcompany(B, E).;false;false
2;false;acquired(A, E), cityhascompanyoffice(F, E).;true;true
2;true;economicsectorcompany(B, D).;false;true
2;false,false,false;cityhascompanyoffice(J, A).;false;false
2;false,false,true;acquired(G, I), economicsectorcompany(B, I).;false;false
3;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(C, D).;true;true
3;false,false;acquired(L, A), cityhascompanyoffice(M, A).;false;true
3;true,false;companyalsoknownas(A, G).;false;false
3;false,true;bankchiefexecutiveceo(J, H), economicsectorcompany(B, J).;false;true
3;false;companyceo(A, H), bankchiefexecutiveceo(A, I).;true;true
3;true;companyalsoknownas(A, E), acquired(F, E).;false;true
3;false,false,false;companyalsoknownas(A, N).;false;false
3;false,true,false;bankboughtbank(K, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
4;true,false;bankchiefexecutiveceo(A, D), countryhascompanyoffice(E, A).;false;false
4;false,true;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
4;false;cityhascompanyoffice(F, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;false,false,false;acquired(J, A).;false;false
4;false,true,false;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
5;;companyeconomicsector(A, B) :- companyceo(A, C), bankchiefexecutiveceo(A, C).;true;true
5;false,false;acquired(A, J), economicsectorcompany(B, J).;false;true
5;true,false;acquired(A, E).;false;false
5;false,true;economicsectorcompany(B, F).;false;true
5;false;acquired(F, A), companyceo(F, G).;true;true
5;true;bankboughtbank(A, D).;false;true
5;false,false,false;companyceo(A, K), companyalsoknownas(A, L).;false;false
5;false,true,false;companyalsoknownas(F, H), acquired(I, F).;false;false
6;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(A, D).;true;true
6;false,false;bankboughtbank(L, A).;true;true
6;false,false,false;companyalsoknownas(A, N), economicsectorcompany(B, N).;false;false
6;false,true;bankboughtbank(H, I), economicsectorcompany(B, I).;false;true
6;false;countryhascompanyoffice(G, A), acquired(H, A).;true;true
6;true;countryhascompanyoffice(E, C), cityhascompanyoffice(F, A).;false;false
6;false,false,true;cityhascompanyoffice(M, L).;false;false
6;false,true,false;bankboughtbank(J, A), bankchiefexecutiveceo(J, K).;false;false
7;;companyeconomicsector(A, B) :- acquired(A, C), bankboughtbank(A, C).;true;true
7;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
7;false,false,false;countryhascompanyoffice(L, A), bankbankincountry(M, L).;false;false
7;false,true;companyalsoknownas(A, G).;false;true
7;false;acquired(A, E), companyalsoknownas(E, F).;true;true
7;true;countryhascompanyoffice(D, A).;false;false
7;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
7;false,true,false;acquired(E, H).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;true;true
8;false,true,true;acquired(G, D), economicsectorcompany(B, G).;false;false
8;false,true;countryhascompanyoffice(F, D).;true;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,false,false;companyalsoknownas(A, K), cityhascompanyoffice(L, K).;false;false
8;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;false,true,false;acquired(D, H), economicsectorcompany(B, H).;false;false
9;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;false;true
9;false,false;acquired(A, K), companyalsoknownas(A, L).;true;true
9;false,true,true;countryhascompanyoffice(G, I), economicsectorcompany(B, I).;false;false
9;false,true;countryhascompanyoffice(G, A), bankchiefexecutiveceo(E, H).;true;true
9;false;bankboughtbank(E, A), countryhascompanyoffice(F, E).;true;true
9;false,false,false;companyceo(A, M).;false;false
9;false,false,true;economicsectorcompany(B, K).;false;false
9;false,true,false;acquired(E, J), economicsectorcompany(B, J).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(A, D) )
%   then if ( teamplaysinleague(E, D) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A), teamplaysagainstteam(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(H, A) )
%   | | then if ( athleteledsportsteam(H, I) )
%   | | | then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, J) )
%   | | | then return 0.42957750652808374;  // std dev = 2,268, 21,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.19148226843284566;  // std dev = 1,633, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.37698237558500136;  // std dev = 2,464, 26,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, E) )
%   | | then if ( teamplaysinleague(A, F), teamalsoknownas(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.20255159483086574;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( teamalsoknownas(H, A), teamplaysagainstteam(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.24039448464649885;  // std dev = 1,672, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.3103123581282554;  // std dev = 0,481, 26,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   else if ( teamplaysagainstteam(A, D), teamplaysinleague(D, E) )
%   | then return -0.17179282516193783;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamalsoknownas(F, G) )
%   | | then if ( teamplaysagainstteam(G, H) )
%   | | | then return 0.20302958905465918;  // std dev = 1,668, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return 0.2363438620347322;  // std dev = 2,451, 27,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A) )
%   | then return 0.19217331189430903;  // std dev = 0,430, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysagainstteam(G, A), teamplaysinleague(A, H) )
%   | | then return -0.2847087656073389;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.16225702663973363;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return 0.04741786879119625;  // std dev = 1,006, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.21499179832459517;  // std dev = 2,198, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   else if ( teamplaysinleague(A, E) )
%   | then if ( teamplaysinleague(F, E) )
%   | | then return 0.378668768066383;  // std dev = 1,096, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.12637188959093346;  // std dev = 0,927, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.47183123419596884;  // std dev = 0,030, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.11601580164935373;  // std dev = 0,517, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamplaysagainstteam(E, A), teamalsoknownas(F, E) )
%   | then if ( teamplaysagainstteam(G, E) )
%   | | then return 0.16979629622470074;  // std dev = 1,665, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0.06301049020280378;  // std dev = 1,672, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( teamalsoknownas(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07587238189136451;  // std dev = 1,514, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, A) )
%   then if ( athleteledsportsteam(E, C), teamplaysinleague(A, F) )
%   | then return 0.35805255781292467;  // std dev = 0,027, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(G, A), teamplaysagainstteam(H, A) )
%   | then return -0.1095340083686931;  // std dev = 0,430, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysinleague(I, J) )
%   | | then return 0.10152665839839457;  // std dev = 2,694, 34,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return -0.008277999374392575;  // std dev = 0,925, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.10700646494501266;  // std dev = 2,167, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then if ( teamplaysinleague(H, G) )
%   | | | then return 0.04311809432583166;  // std dev = 1,593, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.07422691489859122;  // std dev = 2,352, 26,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   else if ( teamplaysagainstteam(D, A), teamalsoknownas(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then return -0.26465987435326904;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( teamplaysinleague(G, H) )
%   | | | then return 0.06586009384735007;  // std dev = 1,540, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then return 0.09403606280205092;  // std dev = 1,657, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else if ( athleteledsportsteam(E, F) )
%   | then if ( athleteledsportsteam(G, A) )
%   | | then if ( athleteledsportsteam(G, H) )
%   | | | then return -0.3315087278382839;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(F, I) )
%   | | | then return 0.02912694819960151;  // std dev = 2,261, 26,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.481558
   AUC PR    = 0.002391
   CLL	      = -0.65599
   Precision = 0.002346 at threshold = 0.5
   Recall    = 0.37594
   F1        = 0.004663


Total learning time: 2.136 seconds
Total inference time: 84.69 seconds
AUC ROC: 0.481558


Results scoring model
   AUC ROC   = 0.7875
   AUC PR    = 0.775259
   CLL	      = -0.587214
   Precision = 0.681818 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.714286


Total scoring time: 1.139 seconds
Parameter learned model CLL: -0.587214


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysinleague(A, D)', 'false,false': 'athleteledsportsteam(H, A)', 'false,false,false': 'teamplaysagainstteam(A, J)', 'false': 'teamalsoknownas(F, A), teamplaysagainstteam(G, A)', 'true': 'teamplaysinleague(E, D)', 'false,false,true': 'athleteledsportsteam(H, I)'}, {'false,false,true,true': [0.866, 3, 1], 'true,false': [0.0, 0, 0], 'true,true': [2.11e-08, 0, 3], 'false,true': [0.0, 0, 0], 'false,false,false,false': [1.633, 8, 4], 'false,false,false,true': [2.268, 9, 12], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysagainstteam(D, A)', 'false,false,true': 'teamplaysinleague(A, F), teamalsoknownas(G, A)', 'false,false': 'teamplaysagainstteam(A, E)', 'false,false,false': 'teamalsoknownas(H, A), teamplaysagainstteam(A, I)'}, {'false,false,true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [1.672, 7, 5], 'false,false,false,true': [0.0, 0, 0], 'true': [2.464, 11, 15], 'false,false,true,false': [0.0, 2, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysagainstteam(A, D), teamplaysinleague(D, E)', 'false,false': 'teamalsoknownas(F, G)', 'false,false,true': 'teamplaysagainstteam(G, H)'}, {'false,true': [0.0, 2, 0], 'true': [0.481, 11, 15], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.668, 7, 5], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamalsoknownas(F, A)', 'true': 'teamplaysagainstteam(D, E)', 'false,false': 'teamplaysagainstteam(G, A), teamplaysinleague(A, H)'}, {'false,true': [0.43, 1, 1], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0], 'true,true': [2.451, 12, 15], 'false,false,false': [0.49, 6, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false': 'teamplaysagainstteam(G, A)', 'false,true': 'teamplaysinleague(F, E)', 'false': 'teamplaysinleague(A, E)', 'true': 'athleteledsportsteam(D, A)', 'false,false,false': 'teamplaysagainstteam(H, A)'}, {'true,false': [2.198, 9, 13], 'false,true,true': [1.096, 2, 4], 'true,true': [1.006, 3, 2], 'false,false,false,false': [0.927, 6, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false': 'teamplaysagainstteam(A, H)', 'false,true': 'teamplaysagainstteam(G, E)', 'false': 'teamplaysagainstteam(E, A), teamalsoknownas(F, E)', 'true': 'teamplaysagainstteam(A, D)', 'false,false,false': 'teamalsoknownas(I, A)'}, {'true,false': [0.517, 1, 1], 'false,true,true': [1.665, 5, 7], 'true,true': [0.03, 0, 2], 'false,false,false,false': [1.514, 7, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [1.672, 7, 6], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(D, A)', 'false': 'athleteledsportsteam(G, A), teamplaysagainstteam(H, A)', 'true': 'athleteledsportsteam(E, C), teamplaysinleague(A, F)', 'false,false': 'teamplaysinleague(I, J)'}, {'false,true': [0.43, 3, 1], 'true,false': [0.0, 0, 0], 'false,false,true': [2.694, 17, 17], 'true,true': [0.027, 0, 2], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysagainstteam(A, E)', 'true': 'athleteledsportsteam(D, A)', 'false,false': 'teamplaysinleague(F, G)', 'false,false,true': 'teamplaysinleague(H, G)'}, {'false,false,true,true': [1.593, 8, 5], 'true,false': [2.167, 9, 13], 'true,true': [0.925, 3, 2], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamplaysagainstteam(D, A), teamalsoknownas(E, D)', 'false,false': 'teamplaysagainstteam(A, F)', 'false,false,false': 'teamplaysinleague(G, H)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [1.54, 7, 5], 'true': [2.352, 11, 15], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 2, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), teamalsoknownas(D, C)', 'false': 'athleteledsportsteam(E, F)', 'false,true': 'athleteledsportsteam(G, A)', 'false,true,true': 'athleteledsportsteam(G, H)', 'false,true,false': 'teamplaysagainstteam(F, I)'}, {'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'true': [1.657, 5, 8], 'false,true,true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,false,true': [2.261, 14, 12]}]]
[{'': [1.4802973661668753e-16, 0.24835646457268032], 'false,false': [0.18750000000000003, 0.24977043158861298], 'false,false,false': [0.24489795918367308, 0.22222222222222207], 'false': [nan, 0.24835646457268032], 'true': [1.4802973661668753e-16, nan], 'false,false,true': [0.18750000000000003, nan]}, {'': [0.23354114711438548, 0.22372723400098948], 'false': [nan, 0.22372723400098948], 'false,false,false': [nan, 0.2329863592881494], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.23298635928814945]}, {'': [0.23146864199619552, 0.21590484412360705], 'false': [0.0, 0.23181872163956654], 'false,false,true': [0.23181872163956654, nan], 'false,false': [0.23181872163956654, nan]}, {'': [0.2225145095804752, 0.2276689066807586], 'false': [0.1848280123270934, 0.23469243135859943], 'true': [0.2225145095804752, nan], 'false,false': [0.0, 0.24]}, {'': [0.22065609542032727, 0.2219410765143939], 'false,false': [nan, 0.12269468076044378], 'false,true': [0.2003852719805248, nan], 'false': [0.2003852719805248, 0.12269468076044378], 'true': [0.2022431300895129, 0.21964067103504253], 'false,false,false': [nan, 0.12269468076044378]}, {'': [0.09880602707657629, 0.22070890121104414], 'false,false': [0.21513871372386958, 0.20840612435168707], 'false,false,false': [nan, 0.20840612435168707], 'false': [0.23115271142359148, 0.21209401345756826], 'true': [0.00043547070395338894, 0.1338742724300318], 'false,true': [0.23115271142359148, nan]}, {'': [0.00037035190140888297, 0.21460945880906881], 'false': [0.18456217799293004, 0.21345531670103032], 'true': [0.00037035190140888297, nan], 'false,false': [0.21345531670103032, nan]}, {'': [0.207571456666196, 0.19529693603361228], 'false': [nan, 0.19529693603361228], 'true': [0.1711067971567318, 0.21339767414986996], 'false,false,true': [0.19529693603361228, nan], 'false,false': [0.19529693603361228, nan]}, {'': [0.21267902860360594, 0.1828573730505336], 'false': [nan, 0.1828573730505336], 'false,false,false': [0.197727394838098, nan], 'false,false': [0.0, 0.197727394838098]}, {'': [0.21123867389502834, 0.19391383358070569], 'false': [0.19391383358070569, nan], 'false,true,false': [0.19655509162210907, nan], 'false,true,true': [0.0, nan], 'false,true': [0.0, 0.19655509162210907]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamalsoknownas(C, A), teamplaysinleague(A, D).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
1;false;teamplaysagainstteam(A, E).;true;true
2;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
2;false;teamplaysagainstteam(A, D), teamplaysinleague(D, E).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
3;false;teamalsoknownas(F, A).;true;true
3;false,false;teamplaysagainstteam(G, A), teamplaysinleague(A, H).;true;true
5;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
5;true;teamplaysagainstteam(A, D).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(D, A).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;false;teamplaysagainstteam(A, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), teamalsoknownas(D, C).;true;true
9;false;athleteledsportsteam(G, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(A, D) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.7194734122109542;  // std dev = 5,96e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamplaysagainstteam(A, F), teamplaysinleague(F, G) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamalsoknownas(F, A) )
%   | then return 0.15795862733523686;  // std dev = 0,367, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysagainstteam(G, A), teamplaysinleague(A, H) )
%   | | then return -0.10159632948783633;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.10159632948783627;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.32365977515985767;  // std dev = 0,057, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09390411879898877;  // std dev = 0,024, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.2546123657213937;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.09965786206854899;  // std dev = 0,293, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then return 0.2546123657213935;  // std dev = 2,11e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.08509028415268394;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(D, A) )
%   then return 0.2093621480285961;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( teamplaysinleague(A, E) )
%   | then if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | | then return 0.21484541387262857;  // std dev = 0,074, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.07869563136134058;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.2093621480285961;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.08301207627300225;  // std dev = 0,037, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.1796644382937645;  // std dev = 0,066, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07486030341338425;  // std dev = 0,035, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(D, F) )
%   | | then return 0.15156626948692212;  // std dev = 0,000911, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.09705141928099471;  // std dev = 0,191, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.0681759596892552;  // std dev = 0,000397, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then return -0.06825816282458802;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.16383846704786867;  // std dev = 0,055, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07290136258661506;  // std dev = 0,032, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.13306064607842075;  // std dev = 0,000593, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.06399614795395075;  // std dev = 0,000231, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteledsportsteam(F, A) )
%   | then return -0.06404780112003582;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamplaysagainstteam(G, A), teamplaysagainstteam(A, G) )
%   | | then if ( athleteplayssport(H, B), athleteledsportsteam(H, I) )
%   | | | then return 0.13610247951391805;  // std dev = 0,009, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.06658051851482961;  // std dev = 0,009, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( athleteplayssport(J, B) )
%   | | | then return 0.1426929992191656;  // std dev = 0,049, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.0669075023338632;  // std dev = 0,030, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.995004
   AUC PR    = 0.204136
   CLL	      = -0.113553
   Precision = 0.186014 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.313679


Total learning time: 6.001 seconds
Total inference time: 7.174 seconds
AUC ROC: 0.995004


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.09668
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.887 seconds
Refined model CLL: -0.09668


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.995004
   AUC PR    = 0.204136
   CLL	      = -0.113553
   Precision = 0.186014 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.313679


Total learning time: 10.163 seconds
Total inference time: 7.174 seconds
AUC ROC: 0.995004
Total revision time: 10.163
Best scored revision CLL: -0.09668


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 01:22:52
{'AUC ROC': 0.995004, 'AUC PR': 0.204136, 'parameter_20': {'AUC ROC': 0.481558, 'AUC PR': 0.002391, 'CLL': -0.65599, 'Inference time': 84.69, 'Recall': 0.37594, 'F1': 0.004663, 'Precision': [0.002346, 0.5], 'Learning time': 2.136}, 'CLL': -0.113553, 'Inference time': 7.174, 'Recall': 1.0, 'F1': 0.313679, 'Precision': [0.186014, 0.5], 'Learning time': 10.163}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0641918400820262;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.987597
   AUC PR    = 0.1987
   CLL	      = -0.082726
   Precision = 0.20092 at threshold = 0.5
   Recall    = 0.984962
   F1        = 0.333758


Total learning time: 2.764 seconds
Total inference time: 4.463 seconds
AUC ROC: 0.987597


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN-B), Time: 01:22:59
{'AUC ROC': 0.987597, 'AUC PR': 0.1987, 'CLL': -0.082726, 'Inference time': 4.463, 'Recall': 0.984962, 'F1': 0.333758, 'Precision': [0.20092, 0.5], 'Learning time': 2.764}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.987597
   AUC PR    = 0.1987
   CLL	      = -0.138801
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.145 seconds
Total inference time: 2.721 seconds
AUC ROC: 0.987597


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN), Time: 01:23:03
{'AUC ROC': 0.987597, 'AUC PR': 0.1987, 'CLL': -0.138801, 'Inference time': 2.721, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 1.145}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyceo(A, C), cityhascompanyoffice(D, A).;true;true
0;false,false;countryhascompanyoffice(J, A), bankboughtbank(K, A).;true;true
0;true,false;bankchiefexecutiveceo(F, C).;false;true
0;false,false,false;companyalsoknownas(A, L), acquired(A, M).;false;false
0;false;companyceo(A, H), acquired(I, A).;false;true
0;true;bankchiefexecutiveceo(E, C), economicsectorcompany(B, E).;false;true
0;true,false,false;cityhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
0;false,false,true;countryhascompanyoffice(J, K).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
1;false,false;acquired(A, H), economicsectorcompany(B, H).;true;true
1;false,true;bankboughtbank(E, A), bankchiefexecutiveceo(E, F).;false;true
1;false;acquired(D, A).;true;true
1;false,false,false;companyceo(A, K), acquired(A, L).;false;false
1;false,false,true;cityhascompanyoffice(I, A), companyceo(A, J).;false;false
1;false,true,false;companyalsoknownas(D, G), economicsectorcompany(B, G).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
2;false,false;companyalsoknownas(A, G), companyceo(G, H).;true;true
2;true,false;economicsectorcompany(B, C).;false;false
2;false,true;economicsectorcompany(B, E).;false;false
2;false;acquired(A, E), cityhascompanyoffice(F, E).;true;true
2;true;economicsectorcompany(B, D).;false;true
2;false,false,false;cityhascompanyoffice(J, A).;false;false
2;false,false,true;acquired(G, I), economicsectorcompany(B, I).;false;false
3;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(C, D).;true;true
3;false,false;acquired(L, A), cityhascompanyoffice(M, A).;false;true
3;true,false;companyalsoknownas(A, G).;false;false
3;false,true;bankchiefexecutiveceo(J, H), economicsectorcompany(B, J).;false;true
3;false;companyceo(A, H), bankchiefexecutiveceo(A, I).;true;true
3;true;companyalsoknownas(A, E), acquired(F, E).;false;true
3;false,false,false;companyalsoknownas(A, N).;false;false
3;false,true,false;bankboughtbank(K, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
4;true,false;bankchiefexecutiveceo(A, D), countryhascompanyoffice(E, A).;false;false
4;false,true;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
4;false;cityhascompanyoffice(F, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;false,false,false;acquired(J, A).;false;false
4;false,true,false;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
5;;companyeconomicsector(A, B) :- companyceo(A, C), bankchiefexecutiveceo(A, C).;true;true
5;false,false;acquired(A, J), economicsectorcompany(B, J).;false;true
5;true,false;acquired(A, E).;false;false
5;false,true;economicsectorcompany(B, F).;false;true
5;false;acquired(F, A), companyceo(F, G).;true;true
5;true;bankboughtbank(A, D).;false;true
5;false,false,false;companyceo(A, K), companyalsoknownas(A, L).;false;false
5;false,true,false;companyalsoknownas(F, H), acquired(I, F).;false;false
6;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(A, D).;true;true
6;false,false;bankboughtbank(L, A).;true;true
6;false,false,false;companyalsoknownas(A, N), economicsectorcompany(B, N).;false;false
6;false,true;bankboughtbank(H, I), economicsectorcompany(B, I).;false;true
6;false;countryhascompanyoffice(G, A), acquired(H, A).;true;true
6;true;countryhascompanyoffice(E, C), cityhascompanyoffice(F, A).;false;false
6;false,false,true;cityhascompanyoffice(M, L).;false;false
6;false,true,false;bankboughtbank(J, A), bankchiefexecutiveceo(J, K).;false;false
7;;companyeconomicsector(A, B) :- acquired(A, C), bankboughtbank(A, C).;true;true
7;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
7;false,false,false;countryhascompanyoffice(L, A), bankbankincountry(M, L).;false;false
7;false,true;companyalsoknownas(A, G).;false;true
7;false;acquired(A, E), companyalsoknownas(E, F).;true;true
7;true;countryhascompanyoffice(D, A).;false;false
7;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
7;false,true,false;acquired(E, H).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;true;true
8;false,true,true;acquired(G, D), economicsectorcompany(B, G).;false;false
8;false,true;countryhascompanyoffice(F, D).;true;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,false,false;companyalsoknownas(A, K), cityhascompanyoffice(L, K).;false;false
8;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;false,true,false;acquired(D, H), economicsectorcompany(B, H).;false;false
9;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;false;true
9;false,false;acquired(A, K), companyalsoknownas(A, L).;true;true
9;false,true,true;countryhascompanyoffice(G, I), economicsectorcompany(B, I).;false;false
9;false,true;countryhascompanyoffice(G, A), bankchiefexecutiveceo(E, H).;true;true
9;false;bankboughtbank(E, A), countryhascompanyoffice(F, E).;true;true
9;false,false,false;companyceo(A, M).;false;false
9;false,false,true;economicsectorcompany(B, K).;false;false
9;false,true,false;acquired(E, J), economicsectorcompany(B, J).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   then if ( teamplaysagainstteam(D, E) )
%   | then return 0.4581489350995123;  // std dev = 2,449, 25,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F), teamalsoknownas(A, G) )
%   | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( athleteplaysforteam(H, A) )
%   | | then if ( athleteplaysforteam(H, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(J, A) )
%   | | | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.35814893509951234;  // std dev = 2,000, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.28413332297705735;  // std dev = 1,764, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( teamalsoknownas(A, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(E, A) )
%   | | then if ( teamplaysagainstteam(F, A), teamplaysinleague(A, G) )
%   | | | then return 0.7927941835770488;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1667945087684516;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamplaysinleague(A, H), teamalsoknownas(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.31625033960628757;  // std dev = 2,940, 35,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.23907121904871165;  // std dev = 0,488, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( teamalsoknownas(D, A), teamplaysagainstteam(E, D) )
%   | then return 0.2445169047219437;  // std dev = 0,389, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysinleague(F, G) )
%   | | then if ( teamalsoknownas(H, F) )
%   | | | then return 0.261318229255825;  // std dev = 2,937, 35,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.3043243443624895;  // std dev = 1,211, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then return 0.2289621022620483;  // std dev = 0,491, 30,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | else if ( teamalsoknownas(A, G), teamplaysagainstteam(H, A) )
%   | | then return 0.7147662451591402;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.04462963166772769;  // std dev = 0,467, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.5629365271099758;  // std dev = 0,089, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.11455086082891797;  // std dev = 1,071, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then if ( teamplaysagainstteam(E, F) )
%   | | then return 0.1956372278550683;  // std dev = 2,634, 29,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, G) )
%   | | then return -0.2709744149947345;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( teamalsoknownas(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.133992544846845;  // std dev = 1,624, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamalsoknownas(D, A) )
%   | then return 0.3076545150878728;  // std dev = 0,750, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.14385626065303084;  // std dev = 2,647, 30,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   else if ( teamalsoknownas(A, E), teamplaysinleague(E, F) )
%   | then if ( teamalsoknownas(E, G) )
%   | | then return 0.660705106050288;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.502060750796505;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamalsoknownas(H, A) )
%   | | then return -0.2934039920867526;  // std dev = 0,065, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0011886600598662127;  // std dev = 1,612, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(A, D) )
%   then if ( athleteplaysforteam(E, C), teamplaysagainstteam(F, A) )
%   | then return 0.2951761930029737;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.21769100265094443;  // std dev = 0,746, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( athleteplaysforteam(G, A), teamalsoknownas(A, H) )
%   | then return 0.06222349522618631;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamplaysagainstteam(I, J) )
%   | | then return 0.08235166597277759;  // std dev = 3,026, 42,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.2989918016469086;  // std dev = 0,087, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.022638117397015923;  // std dev = 0,932, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( teamalsoknownas(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then if ( teamplaysagainstteam(F, H) )
%   | | | then return 0.06655844981826455;  // std dev = 3,124, 43,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.018203958561034263;  // std dev = 1,502, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( teamalsoknownas(A, D), teamplaysinleague(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(F, A) )
%   | | then return -0.013167673450200479;  // std dev = 0,284, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( teamplaysagainstteam(G, H) )
%   | | | then return 0.07249197110092521;  // std dev = 2,885, 35,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(C, D) )
%   then return 0.04038375499427382;  // std dev = 1,465, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( athleteplaysforteam(E, F) )
%   | then if ( athleteplaysforteam(G, A) )
%   | | then if ( athleteplaysforteam(G, H) )
%   | | | then return 0.02119448998862062;  // std dev = 1,832, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(I, F) )
%   | | | then return 0.05546396848294082;  // std dev = 2,272, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.473197
   AUC PR    = 0.002324
   CLL	      = -0.713009
   Precision = 0.00224 at threshold = 0.5
   Recall    = 0.466165
   F1        = 0.004459


Total learning time: 3.186 seconds
Total inference time: 182.046 seconds
AUC ROC: 0.473197


Results scoring model
   AUC ROC   = 0.7456
   AUC PR    = 0.748604
   CLL	      = -0.617315
   Precision = 0.652174 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.625


Total scoring time: 1.266 seconds
Parameter learned model CLL: -0.617315


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), teamplaysagainstteam(D, A)', 'false,false': 'athleteplaysforteam(H, A)', 'false,false,false': 'teamalsoknownas(J, A)', 'false': 'teamplaysinleague(A, F), teamalsoknownas(A, G)', 'true': 'teamplaysagainstteam(D, E)', 'false,false,true': 'athleteplaysforteam(H, I)'}, {'false,false,true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'true,true': [2.449, 10, 15], 'false,true': [0.894, 4, 1], 'false,false,false,false': [2.0, 8, 8], 'false,false,false,true': [0.816, 2, 1], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamalsoknownas(A, D)', 'false,false,true': 'teamplaysagainstteam(F, A), teamplaysinleague(A, G)', 'false,false': 'teamalsoknownas(E, A)', 'false,false,false': 'teamplaysinleague(A, H), teamalsoknownas(I, A)'}, {'false,false,true,true': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,false,false': [2.94, 17, 18], 'false,false,false,true': [0.0, 0, 0], 'true': [1.764, 7, 6], 'false,false,true,false': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamalsoknownas(D, A), teamplaysagainstteam(E, D)', 'false,false': 'teamplaysinleague(F, G)', 'false,false,true': 'teamalsoknownas(H, F)'}, {'false,true': [0.389, 1, 1], 'true': [0.488, 7, 6], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.937, 17, 18], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamplaysinleague(A, F)', 'true': 'teamalsoknownas(D, E)', 'false,false': 'teamalsoknownas(A, G), teamplaysagainstteam(H, A)'}, {'false,true': [0.491, 14, 16], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'true,true': [1.211, 3, 4], 'false,false,false': [0.467, 8, 4]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false': 'teamalsoknownas(A, G)', 'false,true': 'teamplaysagainstteam(E, F)', 'false': 'teamplaysagainstteam(E, A)', 'true': 'athleteplaysforteam(D, A)', 'false,false,false': 'teamalsoknownas(A, H)'}, {'true,false': [1.071, 3, 2], 'false,true,true': [2.634, 13, 16], 'true,true': [0.089, 0, 2], 'false,false,false,false': [1.624, 6, 5], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 3, 0], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false,false': 'teamalsoknownas(H, A)', 'false,true': 'teamalsoknownas(E, G)', 'false': 'teamalsoknownas(A, E), teamplaysinleague(E, F)', 'true': 'teamalsoknownas(D, A)', 'false,false,false': 'teamplaysinleague(A, I)'}, {'true,false': [2.647, 14, 16], 'false,true,true': [0.0, 0, 1], 'true,true': [0.75, 1, 3], 'false,false,false,false': [1.612, 8, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.065, 2, 0], 'false,true,false': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysinleague(A, D)', 'false': 'athleteplaysforteam(G, A), teamalsoknownas(A, H)', 'true': 'athleteplaysforteam(E, C), teamplaysagainstteam(F, A)', 'false,false': 'teamplaysagainstteam(I, J)'}, {'false,true': [0.5, 2, 2], 'true,false': [0.746, 1, 2], 'false,false,true': [3.026, 22, 20], 'true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(E, A)', 'true': 'athleteplaysforteam(D, A)', 'false,false': 'teamplaysagainstteam(F, G)', 'false,false,true': 'teamplaysagainstteam(F, H)'}, {'false,false,true,true': [3.124, 22, 21], 'true,false': [0.932, 3, 2], 'true,true': [0.087, 0, 2], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamalsoknownas(A, D), teamplaysinleague(D, E)', 'false,false': 'teamalsoknownas(F, A)', 'false,false,false': 'teamplaysagainstteam(G, H)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [2.885, 17, 18], 'true': [1.502, 7, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.284, 1, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysinleague(C, D)', 'false': 'athleteplaysforteam(E, F)', 'false,true': 'athleteplaysforteam(G, A)', 'false,true,true': 'athleteplaysforteam(G, H)', 'false,true,false': 'teamalsoknownas(I, F)'}, {'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'true': [1.465, 6, 6], 'false,true,true,false': [0.0, 0, 0], 'false,true,true,true': [1.832, 7, 8], 'false,true,false,true': [2.272, 12, 11]}]]
[{'': [0.23999999999999955, 0.23999999999999996], 'false,false': [0.0, 0.2493074792243767], 'false,false,false': [0.22222222222222224, 0.24999999999999997], 'false': [0.16000000000000003, 0.2475], 'true': [0.23999999999999955, nan], 'false,false,true': [0.0, nan]}, {'': [0.23930791967570078, 0.24605296929603512], 'false': [nan, 0.24605296929603512], 'false,false,false': [nan, 0.2469581327265804], 'false,false,true': [0.0, 0.0], 'false,false': [0.23020261461933683, 0.2469581327265804]}, {'': [0.2377223853445164, 0.24130542182667855], 'false': [0.15163224152844093, 0.24641434493605538], 'false,false,true': [0.24641434493605538, nan], 'false,false': [0.24641434493605538, nan]}, {'': [0.20949443643939197, 0.2423732849205635], 'false': [0.24116517889750702, 0.23286020471631852], 'true': [0.20949443643939197, nan], 'false,false': [0.0, 0.2177203694112626]}, {'': [0.20593657541364138, 0.23646594009216754], 'false,false': [0.0, 0.23961728590702816], 'false,false,false': [nan, 0.23961728590702816], 'false': [0.239230300539525, 0.21588267297077696], 'true': [0.003954223778641963, 0.22928674300298163], 'false,true': [0.239230300539525, nan]}, {'': [0.22540805645521142, 0.21501877831568766], 'false,false': [0.002105974873795796, 0.2164230099076294], 'false,false,false': [nan, 0.2164230099076294], 'false': [0.006292007863472171, 0.1964330045801975], 'true': [0.14081106566562873, 0.23353120014999104], 'false,true': [0.0, 0.0]}, {'': [0.14026428811332112, 0.22079304142305506], 'false': [0.25, 0.2179761964720016], 'true': [0.0, 0.1855180621367889], 'false,false': [0.21797619647200156, nan]}, {'': [0.14072507699478204, 0.22694278906522636], 'false': [nan, 0.22694278906522636], 'true': [0.0037615906361205126, 0.17369008331010685], 'false,false,true': [0.22694278906522636, nan], 'false,false': [0.22694278906522636, nan]}, {'': [0.1734643961104383, 0.22756300753108025], 'false': [nan, 0.22756300753108025], 'false,false,false': [0.2378627070049268, nan], 'false,false': [0.040377317693849904, 0.2378627070049268]}, {'': [0.17878146224423716, 0.22451385897788032], 'false': [0.22451385897788032, nan], 'false,true,false': [0.22452448855339166, nan], 'false,true,true': [0.22378674096400142, nan], 'false,true': [0.22378674096400142, 0.22452448855339166]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(A, C), teamplaysagainstteam(D, A).;true;true
0;false;teamplaysinleague(A, F), teamalsoknownas(A, G).;true;true
0;false,false;athleteplaysforteam(H, A).;true;true
1;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
1;false;teamalsoknownas(E, A).;true;true
1;false,true;teamplaysagainstteam(F, A), teamplaysinleague(A, G).;true;true
3;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
3;false;teamplaysinleague(A, F).;true;true
3;false,false;teamalsoknownas(A, G), teamplaysagainstteam(H, A).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
4;false;teamplaysagainstteam(E, A).;true;true
4;false,false;teamalsoknownas(A, G).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
5;false;teamalsoknownas(A, E), teamplaysinleague(E, F).;true;true
5;false,false;teamalsoknownas(H, A).;true;true
5;false,true;teamalsoknownas(E, G).;true;true
6;;teamplayssport(A, B) :- teamalsoknownas(C, A), teamplaysinleague(A, D).;true;true
6;true;athleteplaysforteam(E, C), teamplaysagainstteam(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamplaysagainstteam(D, A) )
%   then if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysinleague(A, G), teamalsoknownas(A, H) )
%   | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( athleteplaysforteam(I, A) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.7413815155947211;  // std dev = 0,120, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.13894939793299388;  // std dev = 0,031, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( teamalsoknownas(E, A) )
%   | then if ( teamplaysagainstteam(F, A), teamplaysinleague(A, G) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(H, B), athleteplaysinleague(H, I) )
%   | | then return 0.7194734122109542;  // std dev = 7,30e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysagainstteam(C, D) )
%   then if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then return 0.5541628320972809;  // std dev = 0,010, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.11364728268426462;  // std dev = 0,019, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( athleteplayssport(G, B) )
%   | then if ( teamplaysinleague(A, H) )
%   | | then return 0.5993125494622517;  // std dev = 0,152, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.553561029772779;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1171999055407628;  // std dev = 0,030, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.46047299461870494;  // std dev = 0,160, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10683156174667939;  // std dev = 0,015, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(A, E) )
%   | then if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | | then return 0.4150901808696694;  // std dev = 0,017, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.10512434821763539;  // std dev = 0,028, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( teamalsoknownas(A, H), teamplaysagainstteam(I, A) )
%   | | then return 0.412487097061388;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysagainstteam(J, A), athleteledsportsteam(K, J) )
%   | | | then return 0.02834539408710288;  // std dev = 0,450, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.09349431095987966;  // std dev = 0,711, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.3527485489613478;  // std dev = 0,153, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09706514486000593;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then if ( athleteplayssport(F, B), athleteplaysinleague(F, G) )
%   | | then return 0.3308437774036707;  // std dev = 0,110, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.09481180512410359;  // std dev = 0,018, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then return -0.10890846349062844;  // std dev = 0,000282, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.3451995925047181;  // std dev = 0,092, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.10697648875185427;  // std dev = 0,016, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B), athleteplaysinleague(D, E) )
%   | then if ( teamalsoknownas(A, F), teamalsoknownas(F, G) )
%   | | then return 0.29521334234916446;  // std dev = 0,127, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.25081373085650494;  // std dev = 0,020, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.08822820362474053;  // std dev = 0,025, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamalsoknownas(A, H), teamplaysinleague(H, I) )
%   | then if ( teamalsoknownas(H, J) )
%   | | then return 0.23752206896411554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.25029789285030013;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamalsoknownas(K, A) )
%   | | then return -0.08354514165659435;  // std dev = 0,000731, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( athleteplayssport(L, B) )
%   | | | then return 0.3215790510093249;  // std dev = 0,014, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09829757948793749;  // std dev = 0,006, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(A, D) )
%   then if ( athleteplaysforteam(E, C), teamplaysagainstteam(F, A) )
%   | then return 0.1984801800410202;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.14213285330617542;  // std dev = 0,304, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( athleteplayssport(G, B), athleteplaysinleague(G, H) )
%   | then if ( teamplaysinleague(A, I) )
%   | | then if ( teamplaysagainstteam(A, J) )
%   | | | then return 0.20829677244925993;  // std dev = 0,011, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.19972109961331797;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.23777109612922778;  // std dev = 0,064, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( teamplaysinleague(A, K), teamplaysagainstteam(L, A) )
%   | | then return -0.07783366325782076;  // std dev = 0,001, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( teamplaysagainstteam(M, A) )
%   | | | then return -0.08501796620434249;  // std dev = 0,008, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08845720136430382;  // std dev = 0,018, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysagainstteam(C, D) )
%   then if ( teamplaysagainstteam(D, A), teamplaysagainstteam(C, A) )
%   | then if ( athleteplayssport(E, B) )
%   | | then if ( athleteplaysforteam(F, A) )
%   | | | then return 0.17264684450031753;  // std dev = 0,011, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.19221240684419624;  // std dev = 0,037, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.07471163548809102;  // std dev = 0,004, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( athleteplaysforteam(G, C) )
%   | | then if ( teamalsoknownas(C, H) )
%   | | | then return 0.09147991380446568;  // std dev = 0,201, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18564056458091838;  // std dev = 0,030, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.08989412199542494;  // std dev = 0,213, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(I, A), teamalsoknownas(A, I) )
%   | then return 0.13032196414310698;  // std dev = 0,265, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( athleteplayssport(J, B) )
%   | | then return 0.18553448640108344;  // std dev = 0,043, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.08268605013875599;  // std dev = 0,009, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamplaysagainstteam(A, D) )
%   then if ( athleteplayssport(E, B), athleteplaysinleague(E, F) )
%   | then if ( teamplaysinleague(A, G), athleteledsportsteam(H, D) )
%   | | then if ( teamplaysagainstteam(C, D), athleteplaysinleague(I, G) )
%   | | | then return 0.14921579129060183;  // std dev = 0,009, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15439069492026283;  // std dev = 0,011, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.17190427168665398;  // std dev = 0,028, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamplaysinleague(A, J), teamplaysagainstteam(C, D) )
%   | | then return -0.06754580511796734;  // std dev = 0,001, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07636847659916621;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( athleteplayssport(K, B) )
%   | then if ( teamplaysinleague(A, L) )
%   | | then return 0.17708608178640256;  // std dev = 0,111, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.16859033581121372;  // std dev = 0,029, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.07802958552144991;  // std dev = 0,009, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(C, D) )
%   | then if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then if ( athleteplaysforteam(G, A) )
%   | | | then return 0.13250740596098418;  // std dev = 0,013, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.1285505156921123;  // std dev = 0,008, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0.15051625998128096;  // std dev = 0,024, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16053056163136972;  // std dev = 0,094, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.06818875000138686;  // std dev = 0,174, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(A, I), teamalsoknownas(I, J) )
%   | then return -0.07628933553978261;  // std dev = 0,022, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( teamplaysagainstteam(K, A) )
%   | | then if ( teamplaysinleague(A, L) )
%   | | | then return -0.06335145940771142;  // std dev = 0,001, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06822363810217999;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07077686237658308;  // std dev = 0,011, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.995318
   AUC PR    = 0.218251
   CLL	      = -0.097063
   Precision = 0.165829 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.284177


Total learning time: 73.825 seconds
Total inference time: 47.347 seconds
AUC ROC: 0.995318


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100929
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.312 seconds
Refined model CLL: -0.100929


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.995318
   AUC PR    = 0.218251
   CLL	      = -0.097063
   Precision = 0.165829 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.284177


Total learning time: 79.589 seconds
Total inference time: 47.347 seconds
AUC ROC: 0.995318
Total revision time: 79.589
Best scored revision CLL: -0.100929


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 01:28:13
{'AUC ROC': 0.995318, 'AUC PR': 0.218251, 'parameter_25': {'AUC ROC': 0.473197, 'AUC PR': 0.002324, 'CLL': -0.713009, 'Inference time': 182.046, 'Recall': 0.466165, 'F1': 0.004459, 'Precision': [0.00224, 0.5], 'Learning time': 3.186}, 'CLL': -0.097063, 'Inference time': 47.347, 'Recall': 0.992481, 'F1': 0.284177, 'Precision': [0.165829, 0.5], 'Learning time': 79.589}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.987597
   AUC PR    = 0.1987
   CLL	      = -0.082726
   Precision = 0.20092 at threshold = 0.5
   Recall    = 0.984962
   F1        = 0.333758


Total learning time: 3.226 seconds
Total inference time: 4.469 seconds
AUC ROC: 0.987597


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN-B), Time: 01:28:21
{'AUC ROC': 0.987597, 'AUC PR': 0.1987, 'CLL': -0.082726, 'Inference time': 4.469, 'Recall': 0.984962, 'F1': 0.333758, 'Precision': [0.20092, 0.5], 'Learning time': 3.226}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B), athleteplaysinleague(C, D) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.987597
   AUC PR    = 0.1987
   CLL	      = -0.138801
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.219 seconds
Total inference time: 3.085 seconds
AUC ROC: 0.987597


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN), Time: 01:28:25
{'AUC ROC': 0.987597, 'AUC PR': 0.1987, 'CLL': -0.138801, 'Inference time': 3.085, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 1.219}


Starting fold 3

Target train facts examples: 9690
Target train pos examples: 266
Target train neg examples: 106662

Target test facts examples: 9690
Target test pos	 examples: 131
Target test neg examples: 53329

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyceo(A, C), cityhascompanyoffice(D, A).;true;true
0;false,false;countryhascompanyoffice(J, A), bankboughtbank(K, A).;true;true
0;true,false;bankchiefexecutiveceo(F, C).;false;true
0;false,false,false;companyalsoknownas(A, L), acquired(A, M).;false;false
0;false;companyceo(A, H), acquired(I, A).;false;true
0;true;bankchiefexecutiveceo(E, C), economicsectorcompany(B, E).;false;true
0;true,false,false;cityhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
0;false,false,true;countryhascompanyoffice(J, K).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
1;false,false;acquired(A, H), economicsectorcompany(B, H).;true;true
1;false,true;bankboughtbank(E, A), bankchiefexecutiveceo(E, F).;false;true
1;false;acquired(D, A).;true;true
1;false,false,false;companyceo(A, K), acquired(A, L).;false;false
1;false,false,true;cityhascompanyoffice(I, A), companyceo(A, J).;false;false
1;false,true,false;companyalsoknownas(D, G), economicsectorcompany(B, G).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
2;false,false;companyalsoknownas(A, G), companyceo(G, H).;true;true
2;true,false;economicsectorcompany(B, C).;false;false
2;false,true;economicsectorcompany(B, E).;false;false
2;false;acquired(A, E), cityhascompanyoffice(F, E).;true;true
2;true;economicsectorcompany(B, D).;false;true
2;false,false,false;cityhascompanyoffice(J, A).;false;false
2;false,false,true;acquired(G, I), economicsectorcompany(B, I).;false;false
3;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(C, D).;true;true
3;false,false;acquired(L, A), cityhascompanyoffice(M, A).;false;true
3;true,false;companyalsoknownas(A, G).;false;false
3;false,true;bankchiefexecutiveceo(J, H), economicsectorcompany(B, J).;false;true
3;false;companyceo(A, H), bankchiefexecutiveceo(A, I).;true;true
3;true;companyalsoknownas(A, E), acquired(F, E).;false;true
3;false,false,false;companyalsoknownas(A, N).;false;false
3;false,true,false;bankboughtbank(K, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
4;true,false;bankchiefexecutiveceo(A, D), countryhascompanyoffice(E, A).;false;false
4;false,true;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
4;false;cityhascompanyoffice(F, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;false,false,false;acquired(J, A).;false;false
4;false,true,false;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
5;;companyeconomicsector(A, B) :- companyceo(A, C), bankchiefexecutiveceo(A, C).;true;true
5;false,false;acquired(A, J), economicsectorcompany(B, J).;false;true
5;true,false;acquired(A, E).;false;false
5;false,true;economicsectorcompany(B, F).;false;true
5;false;acquired(F, A), companyceo(F, G).;true;true
5;true;bankboughtbank(A, D).;false;true
5;false,false,false;companyceo(A, K), companyalsoknownas(A, L).;false;false
5;false,true,false;companyalsoknownas(F, H), acquired(I, F).;false;false
6;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(A, D).;true;true
6;false,false;bankboughtbank(L, A).;true;true
6;false,false,false;companyalsoknownas(A, N), economicsectorcompany(B, N).;false;false
6;false,true;bankboughtbank(H, I), economicsectorcompany(B, I).;false;true
6;false;countryhascompanyoffice(G, A), acquired(H, A).;true;true
6;true;countryhascompanyoffice(E, C), cityhascompanyoffice(F, A).;false;false
6;false,false,true;cityhascompanyoffice(M, L).;false;false
6;false,true,false;bankboughtbank(J, A), bankchiefexecutiveceo(J, K).;false;false
7;;companyeconomicsector(A, B) :- acquired(A, C), bankboughtbank(A, C).;true;true
7;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
7;false,false,false;countryhascompanyoffice(L, A), bankbankincountry(M, L).;false;false
7;false,true;companyalsoknownas(A, G).;false;true
7;false;acquired(A, E), companyalsoknownas(E, F).;true;true
7;true;countryhascompanyoffice(D, A).;false;false
7;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
7;false,true,false;acquired(E, H).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;true;true
8;false,true,true;acquired(G, D), economicsectorcompany(B, G).;false;false
8;false,true;countryhascompanyoffice(F, D).;true;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,false,false;companyalsoknownas(A, K), cityhascompanyoffice(L, K).;false;false
8;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;false,true,false;acquired(D, H), economicsectorcompany(B, H).;false;false
9;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;false;true
9;false,false;acquired(A, K), companyalsoknownas(A, L).;true;true
9;false,true,true;countryhascompanyoffice(G, I), economicsectorcompany(B, I).;false;false
9;false,true;countryhascompanyoffice(G, A), bankchiefexecutiveceo(E, H).;true;true
9;false;bankboughtbank(E, A), countryhascompanyoffice(F, E).;true;true
9;false,false,false;companyceo(A, M).;false;false
9;false,false,true;economicsectorcompany(B, K).;false;false
9;false,true,false;acquired(E, J), economicsectorcompany(B, J).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamplaysagainstteam(A, D) )
%   then if ( teamplaysagainstteam(E, D) )
%   | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F), teamalsoknownas(G, A) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplaysforteam(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.4622743190865373;  // std dev = 0,722, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, E) )
%   | | then if ( teamplaysagainstteam(A, F), teamplaysinleague(A, G) )
%   | | | then return 0.7927941835770488;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H), teamalsoknownas(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14633317073763194;  // std dev = 1,156, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.3796303571259769;  // std dev = 0,401, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(A, D), teamplaysagainstteam(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then if ( teamalsoknownas(F, H) )
%   | | | then return 0.1960994157817077;  // std dev = 1,249, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.2875168169376389;  // std dev = 0,659, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, F) )
%   | then return 0.11907025451976336;  // std dev = 0,457, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( teamalsoknownas(G, A), teamplaysagainstteam(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2800718528003303;  // std dev = 0,500, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.22074190351049552;  // std dev = 0,648, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then if ( teamplaysagainstteam(F, E) )
%   | | then return 0.17869188193944033;  // std dev = 0,947, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07185492015388595;  // std dev = 0,804, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0.05250240694129288;  // std dev = 0,578, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.06032324874084423;  // std dev = 1,008, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( teamalsoknownas(E, A), teamplaysinleague(E, F) )
%   | then if ( teamalsoknownas(G, E) )
%   | | then return 0.3993168612898892;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2138503400478677;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(A, D) )
%   then if ( athleteplaysforteam(E, C), teamplaysagainstteam(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.03992904805435893;  // std dev = 0,577, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( athleteplaysforteam(G, A), teamalsoknownas(H, A) )
%   | then return 0.5354058934887609;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(I, J) )
%   | | then return 0.04914827580999055;  // std dev = 1,172, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.11955974057967973;  // std dev = 0,617, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then if ( teamplaysagainstteam(H, G) )
%   | | | then return 0.05332370012020187;  // std dev = 1,198, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.08584153453486541;  // std dev = 0,608, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(D, A), teamplaysinleague(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, F) )
%   | | then return 0.40919542263557984;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysagainstteam(G, H) )
%   | | | then return -0.016925283055969565;  // std dev = 1,137, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysinleague(C, D) )
%   then return 0.06657265109535648;  // std dev = 0,610, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( athleteplaysforteam(E, F) )
%   | then if ( athleteplaysforteam(G, A) )
%   | | then if ( athleteplaysforteam(G, H) )
%   | | | then return -0.031189631479111246;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(F, I) )
%   | | | then return 0.08251521779814687;  // std dev = 0,835, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.489801
   AUC PR    = 0.002451
   CLL	      = -0.557541
   Precision = 0.00206 at threshold = 0.5
   Recall    = 0.183206
   F1        = 0.004075


Total learning time: 1.829 seconds
Total inference time: 168.779 seconds
AUC ROC: 0.489801


Results scoring model
   AUC ROC   = 0.82
   AUC PR    = 0.863889
   CLL	      = -0.538357
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.75


Total scoring time: 0.973 seconds
Parameter learned model CLL: -0.538357


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), teamplaysagainstteam(A, D)', 'false': 'teamplaysinleague(A, F), teamalsoknownas(G, A)', 'true': 'teamplaysagainstteam(E, D)', 'false,false': 'athleteplaysforteam(H, A)', 'false,false,false': 'teamalsoknownas(A, I)'}, {'true,false': [0.0, 0, 0], 'true,true': [1.095, 2, 3], 'false,true': [0.0, 1, 0], 'false,false,false,false': [0.816, 2, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A)', 'false,false,true': 'teamplaysagainstteam(A, F), teamplaysinleague(A, G)', 'false,false': 'teamalsoknownas(A, E)', 'false,false,false': 'teamplaysinleague(A, H), teamalsoknownas(A, I)'}, {'false,false,true,true': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,false,false': [1.156, 4, 2], 'false,false,false,true': [0.0, 0, 0], 'true': [0.722, 1, 2], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(A, D), teamplaysagainstteam(D, E)', 'false,false': 'teamplaysinleague(F, G)', 'false,false,true': 'teamalsoknownas(F, H)'}, {'false,true': [0.0, 0, 0], 'true': [0.401, 1, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.249, 4, 3], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysinleague(A, F)', 'true': 'teamalsoknownas(D, E)', 'false,false': 'teamalsoknownas(G, A), teamplaysagainstteam(A, H)'}, {'false,true': [0.457, 3, 2], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.659, 1, 2], 'false,false,false': [0.5, 1, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false,false': 'teamalsoknownas(G, A)', 'false,true': 'teamplaysagainstteam(F, E)', 'false': 'teamplaysagainstteam(A, E)', 'true': 'athleteplaysforteam(D, A)', 'false,false,false': 'teamalsoknownas(H, A)'}, {'true,false': [0.648, 1, 2], 'false,true,true': [0.947, 2, 2], 'true,true': [0.0, 0, 0], 'false,false,false,false': [0.804, 2, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false,false': 'teamalsoknownas(A, H)', 'false,true': 'teamalsoknownas(G, E)', 'false': 'teamalsoknownas(E, A), teamplaysinleague(E, F)', 'true': 'teamalsoknownas(A, D)', 'false,false,false': 'teamplaysinleague(A, I)'}, {'true,false': [1.008, 3, 2], 'false,true,true': [0.0, 0, 1], 'true,true': [0.578, 1, 1], 'false,false,false,false': [0.707, 1, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysinleague(A, D)', 'false': 'athleteplaysforteam(G, A), teamalsoknownas(H, A)', 'true': 'athleteplaysforteam(E, C), teamplaysagainstteam(A, F)', 'false,false': 'teamplaysagainstteam(I, J)'}, {'false,true': [0.0, 0, 1], 'true,false': [0.577, 1, 1], 'false,false,true': [1.172, 4, 3], 'true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamalsoknownas(A, E)', 'true': 'athleteplaysforteam(D, A)', 'false,false': 'teamplaysagainstteam(F, G)', 'false,false,true': 'teamplaysagainstteam(H, G)'}, {'false,false,true,true': [1.198, 4, 3], 'true,false': [0.617, 1, 2], 'true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A), teamplaysinleague(D, E)', 'false,false': 'teamalsoknownas(A, F)', 'false,false,false': 'teamplaysagainstteam(G, H)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [1.137, 4, 2], 'true': [0.608, 1, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysinleague(C, D)', 'false': 'athleteplaysforteam(E, F)', 'false,true': 'athleteplaysforteam(G, A)', 'false,true,true': 'athleteplaysforteam(G, H)', 'false,true,false': 'teamalsoknownas(F, I)'}, {'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'true': [0.61, 1, 2], 'false,true,true,false': [0.0, 0, 0], 'false,true,true,true': [0.816, 2, 1], 'false,true,false,true': [0.835, 2, 2]}]]
[{'': [0.23999999999999994, 0.23999999999999994], 'false': [0.0, 0.25], 'true': [0.23999999999999994, nan], 'false,false,false': [0.0, 0.22222222222222224], 'false,false': [nan, 0.25]}, {'': [0.1736027758222756, 0.24199901336363588], 'false': [nan, 0.24199901336363588], 'false,false,false': [nan, 0.22263049066880888], 'false,false,true': [0.0, nan], 'false,false': [0.0, 0.22263049066880888]}, {'': [0.16100401283229568, 0.22284103021992158], 'false': [nan, 0.22284103021992158], 'false,false,true': [0.22284103021992158, nan], 'false,false': [0.22284103021992158, nan]}, {'': [0.14497609413851906, 0.22585884484056917], 'false': [0.20879623573425485, 0.25], 'true': [0.14497609413851906, nan], 'false,false': [nan, 0.25]}, {'': [0.14011649175711238, 0.2233073711146172], 'false,false': [nan, 0.2156166388200498], 'false,false,false': [nan, 0.2156166388200498], 'false': [0.22418364759115636, 0.2156166388200498], 'true': [nan, 0.14011649175711238], 'false,true': [0.22418364759115636, nan]}, {'': [0.1929095512674466, 0.1743106290003594], 'false,false': [nan, 0.25000000000000006], 'false,false,false': [nan, 0.25000000000000006], 'false': [0.0, 0.25000000000000006], 'true': [0.16707666513407726, 0.2032252298446647], 'false,true': [0.0, nan]}, {'': [0.16671393634103424, 0.19744443823511088], 'false': [0.0, 0.1960949777105833], 'true': [nan, 0.16671393634103424], 'false,false': [0.1960949777105833, nan]}, {'': [0.1269252104647265, 0.2051605242060135], 'false': [nan, 0.2051605242060135], 'true': [nan, 0.1269252104647265], 'false,false,true': [0.2051605242060135, nan], 'false,false': [0.2051605242060135, nan]}, {'': [0.12331400086842452, 0.2069317101050802], 'false': [nan, 0.2069317101050802], 'false,false,false': [0.21548049191034635, nan], 'false,false': [0.0, 0.21548049191034635]}, {'': [0.12396463755682856, 0.19791635868259877], 'false': [0.19791635868259877, nan], 'false,true,false': [0.17414604984966808, nan], 'false,true,true': [0.2222222222222222, nan], 'false,true': [0.2222222222222222, 0.17414604984966808]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysinleague(A, C), teamplaysagainstteam(A, D).;true;true
0;false;teamplaysinleague(A, F), teamalsoknownas(G, A).;true;true
0;false,false;teamalsoknownas(A, I).;true;true
1;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
1;false;teamalsoknownas(A, E).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
5;false;teamalsoknownas(E, A), teamplaysinleague(E, F).;true;true
6;;teamplayssport(A, B) :- teamalsoknownas(A, C), teamplaysinleague(A, D).;true;true
6;false;athleteplaysforteam(G, A), teamalsoknownas(H, A).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
8;false;teamalsoknownas(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), teamplaysagainstteam(A, D) )
%   then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( teamplaysinleague(A, E), teamalsoknownas(F, A) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamalsoknownas(A, G) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.4622743190865373;  // std dev = 0,722, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(A, D) )
%   | then return 0.7927941835770488;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1463331707376319;  // std dev = 1,156, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7075784468903652;  // std dev = 0,167, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.20526105052038818;  // std dev = 0,049, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5492787832920207;  // std dev = 0,203, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.17387421588429947;  // std dev = 0,044, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751931237006906;  // std dev = 0,202, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1503503824153427;  // std dev = 0,039, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamplaysagainstteam(D, A), teamalsoknownas(D, E) )
%   | then return 0.1808109558401132;  // std dev = 0,410, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.036134226210494044;  // std dev = 0,326, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( teamalsoknownas(F, A), teamplaysinleague(F, G) )
%   | then return 0.232401595243783;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.16353494021909853;  // std dev = 0,401, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysinleague(A, D) )
%   then return 0.06861653039783197;  // std dev = 0,259, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( athleteplaysforteam(E, A), teamalsoknownas(F, A) )
%   | then return 0.27376357391843453;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysinleague(A, G) )
%   | | then return -0.024518772855483414;  // std dev = 0,424, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.15407749078248364;  // std dev = 0,389, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2698791678645048;  // std dev = 0,170, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14187837708525955;  // std dev = 0,049, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.0693309333305039;  // std dev = 0,219, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(A, D) )
%   | then return 0.19346024767545422;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.012967600559226392;  // std dev = 0,497, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.21102592502940115;  // std dev = 0,160, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12806474673713897;  // std dev = 0,042, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.985838
   AUC PR    = 0.112667
   CLL	      = -0.197824
   Precision = 0.121241 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.2159


Total learning time: 1.624 seconds
Total inference time: 4.533 seconds
AUC ROC: 0.985838


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.160955
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.763 seconds
Refined model CLL: -0.160955


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.985838
   AUC PR    = 0.112667
   CLL	      = -0.197824
   Precision = 0.121241 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.2159


Total learning time: 5.189 seconds
Total inference time: 4.533 seconds
AUC ROC: 0.985838
Total revision time: 5.189
Best scored revision CLL: -0.160955


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 01:31:25
{'AUC ROC': 0.985838, 'AUC PR': 0.112667, 'CLL': -0.197824, 'Inference time': 4.533, 'Recall': 0.984733, 'F1': 0.2159, 'Precision': [0.121241, 0.5], 'Learning time': 5.189, 'parameter_5': {'AUC ROC': 0.489801, 'AUC PR': 0.002451, 'CLL': -0.557541, 'Inference time': 168.779, 'Recall': 0.183206, 'F1': 0.004075, 'Precision': [0.00206, 0.5], 'Learning time': 1.829}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.9836
   AUC PR    = 0.119898
   CLL	      = -0.098713
   Precision = 0.121241 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.2159


Total learning time: 2.088 seconds
Total inference time: 4.098 seconds
AUC ROC: 0.9836


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN-B), Time: 01:31:32
{'AUC ROC': 0.9836, 'AUC PR': 0.119898, 'CLL': -0.098713, 'Inference time': 4.098, 'Recall': 0.984733, 'F1': 0.2159, 'Precision': [0.121241, 0.5], 'Learning time': 2.088}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.9836
   AUC PR    = 0.119898
   CLL	      = -0.14027
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.992 seconds
Total inference time: 3.129 seconds
AUC ROC: 0.9836


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN), Time: 01:31:36
{'AUC ROC': 0.9836, 'AUC PR': 0.119898, 'CLL': -0.14027, 'Inference time': 3.129, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.992}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyceo(A, C), cityhascompanyoffice(D, A).;true;true
0;false,false;countryhascompanyoffice(J, A), bankboughtbank(K, A).;true;true
0;true,false;bankchiefexecutiveceo(F, C).;false;true
0;false,false,false;companyalsoknownas(A, L), acquired(A, M).;false;false
0;false;companyceo(A, H), acquired(I, A).;false;true
0;true;bankchiefexecutiveceo(E, C), economicsectorcompany(B, E).;false;true
0;true,false,false;cityhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
0;false,false,true;countryhascompanyoffice(J, K).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
1;false,false;acquired(A, H), economicsectorcompany(B, H).;true;true
1;false,true;bankboughtbank(E, A), bankchiefexecutiveceo(E, F).;false;true
1;false;acquired(D, A).;true;true
1;false,false,false;companyceo(A, K), acquired(A, L).;false;false
1;false,false,true;cityhascompanyoffice(I, A), companyceo(A, J).;false;false
1;false,true,false;companyalsoknownas(D, G), economicsectorcompany(B, G).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
2;false,false;companyalsoknownas(A, G), companyceo(G, H).;true;true
2;true,false;economicsectorcompany(B, C).;false;false
2;false,true;economicsectorcompany(B, E).;false;false
2;false;acquired(A, E), cityhascompanyoffice(F, E).;true;true
2;true;economicsectorcompany(B, D).;false;true
2;false,false,false;cityhascompanyoffice(J, A).;false;false
2;false,false,true;acquired(G, I), economicsectorcompany(B, I).;false;false
3;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(C, D).;true;true
3;false,false;acquired(L, A), cityhascompanyoffice(M, A).;false;true
3;true,false;companyalsoknownas(A, G).;false;false
3;false,true;bankchiefexecutiveceo(J, H), economicsectorcompany(B, J).;false;true
3;false;companyceo(A, H), bankchiefexecutiveceo(A, I).;true;true
3;true;companyalsoknownas(A, E), acquired(F, E).;false;true
3;false,false,false;companyalsoknownas(A, N).;false;false
3;false,true,false;bankboughtbank(K, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
4;true,false;bankchiefexecutiveceo(A, D), countryhascompanyoffice(E, A).;false;false
4;false,true;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
4;false;cityhascompanyoffice(F, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;false,false,false;acquired(J, A).;false;false
4;false,true,false;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
5;;companyeconomicsector(A, B) :- companyceo(A, C), bankchiefexecutiveceo(A, C).;true;true
5;false,false;acquired(A, J), economicsectorcompany(B, J).;false;true
5;true,false;acquired(A, E).;false;false
5;false,true;economicsectorcompany(B, F).;false;true
5;false;acquired(F, A), companyceo(F, G).;true;true
5;true;bankboughtbank(A, D).;false;true
5;false,false,false;companyceo(A, K), companyalsoknownas(A, L).;false;false
5;false,true,false;companyalsoknownas(F, H), acquired(I, F).;false;false
6;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(A, D).;true;true
6;false,false;bankboughtbank(L, A).;true;true
6;false,false,false;companyalsoknownas(A, N), economicsectorcompany(B, N).;false;false
6;false,true;bankboughtbank(H, I), economicsectorcompany(B, I).;false;true
6;false;countryhascompanyoffice(G, A), acquired(H, A).;true;true
6;true;countryhascompanyoffice(E, C), cityhascompanyoffice(F, A).;false;false
6;false,false,true;cityhascompanyoffice(M, L).;false;false
6;false,true,false;bankboughtbank(J, A), bankchiefexecutiveceo(J, K).;false;false
7;;companyeconomicsector(A, B) :- acquired(A, C), bankboughtbank(A, C).;true;true
7;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
7;false,false,false;countryhascompanyoffice(L, A), bankbankincountry(M, L).;false;false
7;false,true;companyalsoknownas(A, G).;false;true
7;false;acquired(A, E), companyalsoknownas(E, F).;true;true
7;true;countryhascompanyoffice(D, A).;false;false
7;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
7;false,true,false;acquired(E, H).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;true;true
8;false,true,true;acquired(G, D), economicsectorcompany(B, G).;false;false
8;false,true;countryhascompanyoffice(F, D).;true;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,false,false;companyalsoknownas(A, K), cityhascompanyoffice(L, K).;false;false
8;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;false,true,false;acquired(D, H), economicsectorcompany(B, H).;false;false
9;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;false;true
9;false,false;acquired(A, K), companyalsoknownas(A, L).;true;true
9;false,true,true;countryhascompanyoffice(G, I), economicsectorcompany(B, I).;false;false
9;false,true;countryhascompanyoffice(G, A), bankchiefexecutiveceo(E, H).;true;true
9;false;bankboughtbank(E, A), countryhascompanyoffice(F, E).;true;true
9;false,false,false;companyceo(A, M).;false;false
9;false,false,true;economicsectorcompany(B, K).;false;false
9;false,true,false;acquired(E, J), economicsectorcompany(B, J).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysinleague(A, D) )
%   then if ( teamplaysinleague(E, D) )
%   | then return 0.4831489350995123;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F), teamalsoknownas(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(H, A) )
%   | | then if ( athleteplaysforteam(H, I) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, J) )
%   | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.3581489350995123;  // std dev = 1,414, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.46871320009319417;  // std dev = 0,808, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, E) )
%   | | then if ( teamplaysinleague(A, F), teamplaysagainstteam(A, G) )
%   | | | then return 0.7886573287083125;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, H), teamalsoknownas(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2469364863423858;  // std dev = 1,954, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.3838884562926273;  // std dev = 0,465, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(A, D), teamplaysinleague(D, E) )
%   | then return 0.6290617311727265;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then if ( teamalsoknownas(F, H) )
%   | | | then return 0.20613586434185682;  // std dev = 1,949, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.2537300577772727;  // std dev = 0,757, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0.2621027077770109;  // std dev = 0,485, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( teamalsoknownas(G, A), teamplaysinleague(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.14625628114900113;  // std dev = 0,477, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1928237575445435;  // std dev = 0,756, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamplaysinleague(A, E) )
%   | then if ( teamplaysinleague(F, E) )
%   | | then return 0.14709262271370716;  // std dev = 1,852, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19899620345892965;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0.3664627753045109;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.16916150939244773;  // std dev = 1,280, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( teamalsoknownas(E, A), teamplaysagainstteam(E, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, G) )
%   | | then return 0.03561348854593016;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08495641650174754;  // std dev = 1,501, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysagainstteam(A, D) )
%   then if ( athleteplaysforteam(E, C), teamplaysinleague(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.286205589053242;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplaysforteam(G, A), teamalsoknownas(H, A) )
%   | then return 0.4715040547521254;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysinleague(I, J) )
%   | | then return 0.06353945872101173;  // std dev = 2,062, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.08440901971119487;  // std dev = 0,730, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(F, G) )
%   | | then if ( teamplaysinleague(H, G) )
%   | | | then return 0.07132963682585088;  // std dev = 1,957, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.10699891219061346;  // std dev = 0,763, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(D, A), teamplaysagainstteam(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, F) )
%   | | then return 0.21678533446427228;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysinleague(G, H) )
%   | | | then return 0.036679183014044284;  // std dev = 1,934, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysagainstteam(C, D) )
%   then return 0.3177914538422978;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplaysforteam(E, F) )
%   | then if ( athleteplaysforteam(G, A) )
%   | | then if ( athleteplaysforteam(G, H) )
%   | | | then return -0.1314352359461518;  // std dev = 1,124, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(F, I) )
%   | | | then return 0.12300180894577324;  // std dev = 1,650, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.492943
   AUC PR    = 0.002462
   CLL	      = -0.703552
   Precision = 0.002317 at threshold = 0.5
   Recall    = 0.351145
   F1        = 0.004604


Total learning time: 2.1 seconds
Total inference time: 153.708 seconds
AUC ROC: 0.492943


Results scoring model
   AUC ROC   = 0.695
   AUC PR    = 0.731171
   CLL	      = -0.608615
   Precision = 0.8 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.533333


Total scoring time: 1.112 seconds
Parameter learned model CLL: -0.608615


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamplaysinleague(A, D)', 'false,false': 'athleteplaysforteam(H, A)', 'false,false,false': 'teamalsoknownas(A, J)', 'false': 'teamplaysagainstteam(A, F), teamalsoknownas(G, A)', 'true': 'teamplaysinleague(E, D)', 'false,false,true': 'athleteplaysforteam(H, I)'}, {'false,false,true,true': [0.0, 2, 0], 'true,false': [0.0, 0, 0], 'true,true': [1.369, 3, 5], 'false,true': [0.0, 0, 0], 'false,false,false,false': [1.414, 4, 4], 'false,false,false,true': [0.707, 1, 1], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A)', 'false,false,true': 'teamplaysinleague(A, F), teamplaysagainstteam(A, G)', 'false,false': 'teamalsoknownas(A, E)', 'false,false,false': 'teamplaysagainstteam(A, H), teamalsoknownas(A, I)'}, {'false,false,true,true': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,false,false': [1.954, 9, 7], 'false,false,false,true': [0.0, 0, 0], 'true': [0.808, 1, 2], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(A, D), teamplaysinleague(D, E)', 'false,false': 'teamplaysagainstteam(F, G)', 'false,false,true': 'teamalsoknownas(F, H)'}, {'false,true': [0.0, 0, 1], 'true': [0.465, 1, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.949, 9, 7], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysagainstteam(A, F)', 'true': 'teamalsoknownas(D, E)', 'false,false': 'teamalsoknownas(G, A), teamplaysinleague(A, H)'}, {'false,true': [0.485, 3, 4], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.757, 1, 2], 'false,false,false': [0.477, 6, 4]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false,false': 'teamalsoknownas(G, A)', 'false,true': 'teamplaysinleague(F, E)', 'false': 'teamplaysinleague(A, E)', 'true': 'athleteplaysforteam(D, A)', 'false,false,false': 'teamalsoknownas(H, A)'}, {'true,false': [0.756, 1, 2], 'false,true,true': [1.852, 8, 7], 'true,true': [0.0, 0, 0], 'false,false,false,false': [0.707, 1, 1], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamalsoknownas(E, A), teamplaysagainstteam(E, F)', 'true': 'teamalsoknownas(A, D)', 'false,false': 'teamalsoknownas(A, G)', 'false,false,false': 'teamplaysagainstteam(A, H)'}, {'true,false': [1.28, 3, 4], 'true,true': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,false,false': [1.501, 6, 4], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.707, 1, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysagainstteam(A, D)', 'false': 'athleteplaysforteam(G, A), teamalsoknownas(H, A)', 'true': 'athleteplaysforteam(E, C), teamplaysinleague(A, F)', 'false,false': 'teamplaysinleague(I, J)'}, {'false,true': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,false,true': [2.062, 10, 8], 'true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamalsoknownas(A, E)', 'true': 'athleteplaysforteam(D, A)', 'false,false': 'teamplaysinleague(F, G)', 'false,false,true': 'teamplaysinleague(H, G)'}, {'false,false,true,true': [1.957, 9, 8], 'true,false': [0.73, 1, 2], 'true,true': [0.0, 0, 0], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A), teamplaysagainstteam(D, E)', 'false,false': 'teamalsoknownas(A, F)', 'false,false,false': 'teamplaysinleague(G, H)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [1.934, 9, 7], 'true': [0.763, 1, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysagainstteam(C, D)', 'false': 'athleteplaysforteam(E, F)', 'false,true': 'athleteplaysforteam(G, A)', 'false,true,true': 'athleteplaysforteam(G, H)', 'false,true,false': 'teamalsoknownas(F, I)'}, {'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,true,true': [1.124, 5, 2], 'false,true,false,true': [1.65, 5, 7]}]]
[{'': [0.23437499999999983, 0.24305555555555536], 'false,false': [0.0, 0.24999999999999983], 'false,false,false': [0.25, 0.24999999999999986], 'false': [nan, 0.24305555555555536], 'true': [0.23437499999999983, nan], 'false,false,true': [0.0, nan]}, {'': [0.21784878938431032, 0.24085510150404207], 'false': [nan, 0.24085510150404207], 'false,false,false': [nan, 0.23864610587430057], 'false,false,true': [0.0, nan], 'false,false': [0.0, 0.23864610587430066]}, {'': [0.21668568925251042, 0.23344005845662674], 'false': [0.0, 0.23750851570812812], 'false,false,true': [0.23750851570812812, nan], 'false,false': [0.23750851570812812, nan]}, {'': [0.19110359023522797, 0.23368207414932907], 'false': [0.23492688517490473, 0.22728466161158173], 'true': [0.19110359023522797, nan], 'false,false': [nan, 0.22728466161158173]}, {'': [0.19074452177201706, 0.23143835252179923], 'false,false': [nan, 0.25], 'false,false,false': [nan, 0.25], 'false': [0.22864652716852832, 0.25], 'true': [nan, 0.19074452177201706], 'false,true': [0.22864652716852832, nan]}, {'': [0.20907516554741593, 0.229656044103416], 'false': [nan, 0.22965604410341597], 'true': [0.0, 0.2340770726485911], 'false,false,false': [nan, 0.22518146550089035], 'false,false': [0.24999999999999997, 0.22518146550089035]}, {'': [0.0, 0.23199663550567337], 'false': [0.0, 0.23612559476164086], 'true': [nan, 0.0], 'false,false': [0.23612559476164074, nan]}, {'': [0.17747854079876155, 0.22535097231383097], 'false': [nan, 0.22535097231383097], 'true': [nan, 0.17747854079876155], 'false,false,true': [0.22535097231383097, nan], 'false,false': [0.22535097231383097, nan]}, {'': [0.19414494964895448, 0.22181638121882935], 'false': [nan, 0.22181638121882935], 'false,false,false': [0.23377177411617012, nan], 'false,false': [0.0, 0.23377177411617012]}, {'': [0.0, 0.22478016048805605], 'false': [0.22478016048805607, nan], 'false,true,false': [0.22682321825117088, nan], 'false,true,true': [0.18039048534286556, nan], 'false,true': [0.18039048534286556, 0.22682321825117088]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamplaysinleague(A, D).;true;true
0;false;athleteplaysforteam(H, A).;true;true
1;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
1;false;teamalsoknownas(A, E).;true;true
2;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
2;false;teamalsoknownas(A, D), teamplaysinleague(D, E).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
5;true;teamalsoknownas(A, D).;true;true
6;;teamplayssport(A, B) :- teamalsoknownas(A, C), teamplaysagainstteam(A, D).;true;true
6;false;athleteplaysforteam(G, A), teamalsoknownas(H, A).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
8;false;teamalsoknownas(A, F).;true;true
9;;teamplayssport(A, B) :- teamalsoknownas(C, A), teamplaysagainstteam(C, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysinleague(A, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplaysforteam(F, A) )
%   | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.43783406196450586;  // std dev = 0,690, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.7194734122109546;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.3549928621916349;  // std dev = 0,657, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(A, D), teamplaysinleague(D, E) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.5553664367462843;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.44144831509862426;  // std dev = 0,151, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11550343382569113;  // std dev = 0,132, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.33789814269389523;  // std dev = 0,142, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10439501858477004;  // std dev = 0,122, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0.2474357836745339;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.272436202002829;  // std dev = 0,087, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.08321002833657688;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.26743611833716996;  // std dev = 0,089, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10029344907265543;  // std dev = 0,111, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysagainstteam(A, D) )
%   then return 0.20427751915609804;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplaysforteam(E, A), teamalsoknownas(F, A) )
%   | then return 0.2884839508995156;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.2118031978578244;  // std dev = 0,083, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.08735286740953925;  // std dev = 0,105, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.18360885254003087;  // std dev = 0,091, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08072253310988724;  // std dev = 0,098, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.0847732920720471;  // std dev = 0,303, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(A, D) )
%   | then return 0.14834291238225195;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.14463386466143444;  // std dev = 0,000810, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.06524368099085746;  // std dev = 0,001, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysagainstteam(C, D) )
%   then return 0.1885247461520757;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.13615611543342557;  // std dev = 0,069, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.07271047870767504;  // std dev = 0,108, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.983843
   AUC PR    = 0.121075
   CLL	      = -0.166307
   Precision = 0.121241 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.2159


Total learning time: 3.187 seconds
Total inference time: 5.406 seconds
AUC ROC: 0.983843


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102508
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.829 seconds
Refined model CLL: -0.102508


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983843
   AUC PR    = 0.121075
   CLL	      = -0.166307
   Precision = 0.121241 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.2159


Total learning time: 7.228 seconds
Total inference time: 5.406 seconds
AUC ROC: 0.983843
Total revision time: 7.228
Best scored revision CLL: -0.102508


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 01:34:23
{'AUC ROC': 0.983843, 'AUC PR': 0.121075, 'parameter_10': {'AUC ROC': 0.492943, 'AUC PR': 0.002462, 'CLL': -0.703552, 'Inference time': 153.708, 'Recall': 0.351145, 'F1': 0.004604, 'Precision': [0.002317, 0.5], 'Learning time': 2.1}, 'CLL': -0.166307, 'Inference time': 5.406, 'Recall': 0.984733, 'F1': 0.2159, 'Precision': [0.121241, 0.5], 'Learning time': 7.228}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.9836
   AUC PR    = 0.119898
   CLL	      = -0.098713
   Precision = 0.121241 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.2159


Total learning time: 2.565 seconds
Total inference time: 4.033 seconds
AUC ROC: 0.9836


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN-B), Time: 01:34:30
{'AUC ROC': 0.9836, 'AUC PR': 0.119898, 'CLL': -0.098713, 'Inference time': 4.033, 'Recall': 0.984733, 'F1': 0.2159, 'Precision': [0.121241, 0.5], 'Learning time': 2.565}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.9836
   AUC PR    = 0.119898
   CLL	      = -0.14027
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.127 seconds
Total inference time: 3.008 seconds
AUC ROC: 0.9836


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN), Time: 01:34:34
{'AUC ROC': 0.9836, 'AUC PR': 0.119898, 'CLL': -0.14027, 'Inference time': 3.008, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 1.127}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyceo(A, C), cityhascompanyoffice(D, A).;true;true
0;false,false;countryhascompanyoffice(J, A), bankboughtbank(K, A).;true;true
0;true,false;bankchiefexecutiveceo(F, C).;false;true
0;false,false,false;companyalsoknownas(A, L), acquired(A, M).;false;false
0;false;companyceo(A, H), acquired(I, A).;false;true
0;true;bankchiefexecutiveceo(E, C), economicsectorcompany(B, E).;false;true
0;true,false,false;cityhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
0;false,false,true;countryhascompanyoffice(J, K).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
1;false,false;acquired(A, H), economicsectorcompany(B, H).;true;true
1;false,true;bankboughtbank(E, A), bankchiefexecutiveceo(E, F).;false;true
1;false;acquired(D, A).;true;true
1;false,false,false;companyceo(A, K), acquired(A, L).;false;false
1;false,false,true;cityhascompanyoffice(I, A), companyceo(A, J).;false;false
1;false,true,false;companyalsoknownas(D, G), economicsectorcompany(B, G).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
2;false,false;companyalsoknownas(A, G), companyceo(G, H).;true;true
2;true,false;economicsectorcompany(B, C).;false;false
2;false,true;economicsectorcompany(B, E).;false;false
2;false;acquired(A, E), cityhascompanyoffice(F, E).;true;true
2;true;economicsectorcompany(B, D).;false;true
2;false,false,false;cityhascompanyoffice(J, A).;false;false
2;false,false,true;acquired(G, I), economicsectorcompany(B, I).;false;false
3;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(C, D).;true;true
3;false,false;acquired(L, A), cityhascompanyoffice(M, A).;false;true
3;true,false;companyalsoknownas(A, G).;false;false
3;false,true;bankchiefexecutiveceo(J, H), economicsectorcompany(B, J).;false;true
3;false;companyceo(A, H), bankchiefexecutiveceo(A, I).;true;true
3;true;companyalsoknownas(A, E), acquired(F, E).;false;true
3;false,false,false;companyalsoknownas(A, N).;false;false
3;false,true,false;bankboughtbank(K, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
4;true,false;bankchiefexecutiveceo(A, D), countryhascompanyoffice(E, A).;false;false
4;false,true;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
4;false;cityhascompanyoffice(F, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;false,false,false;acquired(J, A).;false;false
4;false,true,false;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
5;;companyeconomicsector(A, B) :- companyceo(A, C), bankchiefexecutiveceo(A, C).;true;true
5;false,false;acquired(A, J), economicsectorcompany(B, J).;false;true
5;true,false;acquired(A, E).;false;false
5;false,true;economicsectorcompany(B, F).;false;true
5;false;acquired(F, A), companyceo(F, G).;true;true
5;true;bankboughtbank(A, D).;false;true
5;false,false,false;companyceo(A, K), companyalsoknownas(A, L).;false;false
5;false,true,false;companyalsoknownas(F, H), acquired(I, F).;false;false
6;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(A, D).;true;true
6;false,false;bankboughtbank(L, A).;true;true
6;false,false,false;companyalsoknownas(A, N), economicsectorcompany(B, N).;false;false
6;false,true;bankboughtbank(H, I), economicsectorcompany(B, I).;false;true
6;false;countryhascompanyoffice(G, A), acquired(H, A).;true;true
6;true;countryhascompanyoffice(E, C), cityhascompanyoffice(F, A).;false;false
6;false,false,true;cityhascompanyoffice(M, L).;false;false
6;false,true,false;bankboughtbank(J, A), bankchiefexecutiveceo(J, K).;false;false
7;;companyeconomicsector(A, B) :- acquired(A, C), bankboughtbank(A, C).;true;true
7;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
7;false,false,false;countryhascompanyoffice(L, A), bankbankincountry(M, L).;false;false
7;false,true;companyalsoknownas(A, G).;false;true
7;false;acquired(A, E), companyalsoknownas(E, F).;true;true
7;true;countryhascompanyoffice(D, A).;false;false
7;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
7;false,true,false;acquired(E, H).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;true;true
8;false,true,true;acquired(G, D), economicsectorcompany(B, G).;false;false
8;false,true;countryhascompanyoffice(F, D).;true;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,false,false;companyalsoknownas(A, K), cityhascompanyoffice(L, K).;false;false
8;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;false,true,false;acquired(D, H), economicsectorcompany(B, H).;false;false
9;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;false;true
9;false,false;acquired(A, K), companyalsoknownas(A, L).;true;true
9;false,true,true;countryhascompanyoffice(G, I), economicsectorcompany(B, I).;false;false
9;false,true;countryhascompanyoffice(G, A), bankchiefexecutiveceo(E, H).;true;true
9;false;bankboughtbank(E, A), countryhascompanyoffice(F, E).;true;true
9;false,false,false;companyceo(A, M).;false;false
9;false,false,true;economicsectorcompany(B, K).;false;false
9;false,true,false;acquired(E, J), economicsectorcompany(B, J).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, A) )
%   then if ( athleteplaysforteam(D, E) )
%   | then return 0.24276431971489695;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A), teamalsoknownas(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, H) )
%   | | then if ( teamplaysinleague(I, H) )
%   | | | then return 0.4945125714631487;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.37625563701708054;  // std dev = 1,296, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, E) )
%   | | then if ( athleteplaysforteam(F, A), teamplaysagainstteam(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.7867570596893522;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysagainstteam(H, A), teamalsoknownas(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.26406159789975836;  // std dev = 2,305, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.31107278078691036;  // std dev = 0,490, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( teamalsoknownas(A, D), athleteplaysforteam(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then if ( teamalsoknownas(G, H) )
%   | | | then return 0.2378010730802159;  // std dev = 2,334, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.37189738289123075;  // std dev = 0,841, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then return 0.11393665233807353;  // std dev = 0,477, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( teamalsoknownas(G, A), athleteplaysforteam(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.24483850894304426;  // std dev = 0,497, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.2201737756771696;  // std dev = 0,813, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4706899582791173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplaysforteam(E, A) )
%   | then if ( athleteplaysforteam(E, F) )
%   | | then return 0.04299517873066233;  // std dev = 1,610, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, A) )
%   | | then return -0.3521312536431911;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.27007807235604775;  // std dev = 1,749, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0.569015636342899;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.07786356340415221;  // std dev = 1,700, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else if ( teamalsoknownas(E, A), teamplaysagainstteam(F, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, G) )
%   | | then return 0.09547888907789213;  // std dev = 0,723, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13925043960598163;  // std dev = 1,753, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysagainstteam(D, A) )
%   then if ( teamplaysinleague(C, E), athleteplaysforteam(F, A) )
%   | then return 0.427715122554412;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, G), teamalsoknownas(H, A) )
%   | then return 0.11090054264542165;  // std dev = 0,546, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( athleteplaysforteam(I, J) )
%   | | then return 0.07773140094416914;  // std dev = 2,301, 25,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.05463673018029317;  // std dev = 0,735, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.31836951739250885;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then if ( athleteplaysforteam(F, H) )
%   | | | then return 0.06444997653356034;  // std dev = 2,439, 26,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.07336036233516421;  // std dev = 1,205, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( teamalsoknownas(D, A), teamplaysagainstteam(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, F) )
%   | | then return 0.368422825179766;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplaysforteam(G, H) )
%   | | | then return 0.03532485620817411;  // std dev = 2,229, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), teamplaysagainstteam(D, C) )
%   then return 0.27158333066277374;  // std dev = 0,817, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysinleague(E, F) )
%   | then if ( teamplaysinleague(A, G) )
%   | | then if ( teamplaysinleague(H, G) )
%   | | | then return 0.004748187786939207;  // std dev = 2,094, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(E, I) )
%   | | | then return 0.015794531571476884;  // std dev = 1,091, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.480982
   AUC PR    = 0.002378
   CLL	      = -0.703578
   Precision = 0.002335 at threshold = 0.5
   Recall    = 0.358779
   F1        = 0.00464


Total learning time: 2.335 seconds
Total inference time: 133.931 seconds
AUC ROC: 0.480982


Results scoring model
   AUC ROC   = 0.726667
   AUC PR    = 0.728422
   CLL	      = -0.616974
   Precision = 0.666667 at threshold = 0.5
   Recall    = 0.533333
   F1        = 0.592593


Total scoring time: 1.116 seconds
Parameter learned model CLL: -0.616974


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteplaysforteam(D, A)', 'false,false': 'teamplaysinleague(A, H)', 'false,false,false': 'teamalsoknownas(A, J)', 'false': 'teamplaysagainstteam(F, A), teamalsoknownas(G, A)', 'true': 'athleteplaysforteam(D, E)', 'false,false,true': 'teamplaysinleague(I, H)'}, {'false,false,true,true': [1.595, 4, 7], 'true,false': [0.0, 0, 0], 'true,true': [1.754, 8, 5], 'false,true': [0.0, 0, 0], 'false,false,false,false': [1.095, 3, 2], 'false,false,false,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A)', 'false,false,true': 'athleteplaysforteam(F, A), teamplaysagainstteam(G, A)', 'false,false': 'teamalsoknownas(A, E)', 'false,false,false': 'teamplaysagainstteam(H, A), teamalsoknownas(A, I)'}, {'false,false,true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [2.305, 12, 10], 'false,false,false,true': [0.0, 0, 0], 'true': [1.296, 3, 4], 'false,false,true,false': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(A, D), athleteplaysforteam(E, D)', 'false,false': 'teamplaysagainstteam(F, G)', 'false,false,true': 'teamalsoknownas(G, H)'}, {'false,true': [0.0, 0, 0], 'true': [0.49, 3, 4], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.334, 12, 11], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysagainstteam(F, A)', 'true': 'teamalsoknownas(D, E)', 'false,false': 'teamalsoknownas(G, A), athleteplaysforteam(H, A)'}, {'false,true': [0.477, 8, 5], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,true': [0.841, 1, 3], 'false,false,false': [0.497, 6, 7]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false,false': 'teamalsoknownas(G, A)', 'false,true': 'athleteplaysforteam(E, F)', 'false': 'athleteplaysforteam(E, A)', 'true': 'teamplaysinleague(A, D)', 'false,false,false': 'teamalsoknownas(H, A)'}, {'true,false': [0.0, 0, 1], 'false,true,true': [1.61, 8, 4], 'true,true': [0.813, 1, 2], 'false,false,false,false': [1.749, 5, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false': 'teamalsoknownas(E, A), teamplaysagainstteam(F, E)', 'true': 'teamalsoknownas(A, D)', 'false,false': 'teamalsoknownas(A, G)', 'false,false,false': 'teamplaysagainstteam(H, A)'}, {'true,false': [1.7, 8, 5], 'true,true': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false,false,false': [1.753, 6, 7], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.723, 1, 2]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysagainstteam(D, A)', 'false': 'teamplaysinleague(A, G), teamalsoknownas(H, A)', 'true': 'teamplaysinleague(C, E), athleteplaysforteam(F, A)', 'false,false': 'athleteplaysforteam(I, J)'}, {'false,true': [0.546, 2, 2], 'true,false': [0.0, 0, 0], 'false,false,true': [2.301, 13, 12], 'true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamalsoknownas(A, E)', 'true': 'teamplaysinleague(A, D)', 'false,false': 'athleteplaysforteam(F, G)', 'false,false,true': 'athleteplaysforteam(F, H)'}, {'false,false,true,true': [2.439, 14, 12], 'true,false': [0.0, 0, 1], 'true,true': [0.735, 1, 2], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A), teamplaysagainstteam(E, D)', 'false,false': 'teamalsoknownas(A, F)', 'false,false,false': 'athleteplaysforteam(G, H)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [2.229, 12, 10], 'true': [1.205, 3, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), teamplaysagainstteam(D, C)', 'false': 'teamplaysinleague(E, F)', 'false,true': 'teamplaysinleague(A, G)', 'false,true,true': 'teamplaysinleague(H, G)', 'false,true,false': 'teamalsoknownas(E, I)'}, {'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'true': [0.817, 1, 3], 'false,true,true,false': [0.0, 0, 0], 'false,true,true,true': [2.094, 11, 9], 'false,true,false,true': [1.091, 3, 3]}]]
[{'': [0.2366863905325442, 0.2422145328719722], 'false,false': [0.23140495867768587, 0.24999999999999992], 'false,false,false': [0.0, 0.24000000000000005], 'false': [nan, 0.2422145328719722], 'true': [0.2366863905325442, nan], 'false,false,true': [0.23140495867768587, nan]}, {'': [0.24001557532292678, 0.24231747534200257], 'false': [nan, 0.24231747534200257], 'false,false,false': [nan, 0.24145318665782556], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.24145318665782559]}, {'': [0.2396257527709107, 0.2368937004963199], 'false': [nan, 0.2368937004963199], 'false,false,true': [0.2368937004963199, nan], 'false,false': [0.2368937004963199, nan]}, {'': [0.17699655966405248, 0.24146120328183315], 'false': [0.22738777982514174, 0.2469669787072101], 'true': [0.17699655966405248, nan], 'false,false': [nan, 0.2469669787072101]}, {'': [0.17719976570854146, 0.23945861540311844], 'false,false': [0.0, 0.23528028949521834], 'false,false,false': [nan, 0.23528028949521834], 'false': [0.216020877155953, 0.24415250243783307], 'true': [0.22057676484169222, 0.0], 'false,true': [0.216020877155953, nan]}, {'': [0.22244576349832682, 0.22511630078482175], 'false': [nan, 0.22511630078482173], 'true': [0.0, 0.22232623616426206], 'false,false,false': [nan, 0.236517126942054], 'false,false': [0.17415601250369664, 0.236517126942054]}, {'': [0.0, 0.22390067591774124], 'false': [0.29822906221581974, 0.2118563834947111], 'true': [0.0, nan], 'false,false': [0.2118563834947111, nan]}, {'': [0.14821515735716823, 0.22886874907257726], 'false': [nan, 0.22886874907257726], 'true': [0.18023146404687665, 0.0], 'false,false,true': [0.22886874907257726, nan], 'false,false': [0.22886874907257726, nan]}, {'': [0.2074907021840954, 0.22054659261197587], 'false': [nan, 0.22054659261197587], 'false,false,false': [0.22574733960318036, nan], 'false,false': [0.0, 0.22574733960318036]}, {'': [0.16693745390737486, 0.21444710723463387], 'false': [0.21444710723463387, nan], 'false,true,false': [0.19854500182334542, nan], 'false,true,true': [0.2191895800016344, nan], 'false,true': [0.2191895800016344, 0.19854500182334542]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), athleteplaysforteam(D, A).;true;true
0;false;teamplaysinleague(A, H).;true;true
0;false,false;teamalsoknownas(A, J).;true;true
1;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
1;false;teamalsoknownas(A, E).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
4;false;athleteplaysforteam(E, A).;true;true
4;true;teamplaysinleague(A, D).;true;true
4;false,false;teamalsoknownas(G, A).;true;true
5;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
5;true;teamalsoknownas(A, D).;true;true
6;;teamplayssport(A, B) :- teamalsoknownas(A, C), teamplaysagainstteam(D, A).;true;true
7;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
7;true;teamplaysinleague(A, D).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
8;false;teamalsoknownas(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, A) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysinleague(A, F) )
%   | then if ( athleteplayssport(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14238520752422565;  // std dev = 0,041, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.7403254606655846;  // std dev = 0,132, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.1339149230263085;  // std dev = 0,066, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5706084191161543;  // std dev = 0,182, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1205248375227418;  // std dev = 0,071, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.43027381251292013;  // std dev = 0,193, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10835780299558237;  // std dev = 0,065, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.179747425106309;  // std dev = 0,330, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.31464227299545633;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplaysforteam(E, A) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.31240271616248877;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.0906516416909137;  // std dev = 0,000651, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( teamalsoknownas(G, A) )
%   | | then return -0.1286308638025873;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(H, B) )
%   | | | then return 0.3452036827897065;  // std dev = 0,172, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.10627651500062647;  // std dev = 0,043, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0.277228309248444;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(E, B) )
%   | | then return 0.2478930154932713;  // std dev = 0,008, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.08345100806175026;  // std dev = 0,000604, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( teamplaysinleague(A, G) )
%   | | then return 0.24744144048765368;  // std dev = 0,033, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3284269743302987;  // std dev = 0,095, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.10056220189462199;  // std dev = 0,043, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysagainstteam(D, A) )
%   then return 0.2252236823262611;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then return 0.204448243164679;  // std dev = 0,030, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.2612270523799507;  // std dev = 0,082, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.08408166864656236;  // std dev = 0,049, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.09830983246902793;  // std dev = 0,230, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.15672494249558844;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | | then return 0.17151191225568543;  // std dev = 0,009, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.20593128046291237;  // std dev = 0,075, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07699768908548724;  // std dev = 0,044, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.15399753629716412;  // std dev = 0,026, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.08497704004047511;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0.1811683911694678;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.15809649230084222;  // std dev = 0,025, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.07058384846116374;  // std dev = 0,035, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1385603698592463;  // std dev = 0,020, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06860110735211354;  // std dev = 0,044, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.988604
   AUC PR    = 0.125365
   CLL	      = -0.161371
   Precision = 0.069392 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.129648


Total learning time: 9.356 seconds
Total inference time: 7.581 seconds
AUC ROC: 0.988604


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098956
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.897 seconds
Refined model CLL: -0.098956


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.988604
   AUC PR    = 0.125365
   CLL	      = -0.161371
   Precision = 0.069392 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.129648


Total learning time: 13.704 seconds
Total inference time: 7.581 seconds
AUC ROC: 0.988604
Total revision time: 13.704
Best scored revision CLL: -0.098956


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 01:37:10
{'parameter_15': {'AUC ROC': 0.480982, 'AUC PR': 0.002378, 'CLL': -0.703578, 'Inference time': 133.931, 'Recall': 0.358779, 'F1': 0.00464, 'Precision': [0.002335, 0.5], 'Learning time': 2.335}, 'AUC ROC': 0.988604, 'AUC PR': 0.125365, 'CLL': -0.161371, 'Inference time': 7.581, 'Recall': 0.984733, 'F1': 0.129648, 'Precision': [0.069392, 0.5], 'Learning time': 13.704}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.9836
   AUC PR    = 0.119898
   CLL	      = -0.098713
   Precision = 0.121241 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.2159


Total learning time: 2.921 seconds
Total inference time: 3.96 seconds
AUC ROC: 0.9836


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN-B), Time: 01:37:18
{'AUC ROC': 0.9836, 'AUC PR': 0.119898, 'CLL': -0.098713, 'Inference time': 3.96, 'Recall': 0.984733, 'F1': 0.2159, 'Precision': [0.121241, 0.5], 'Learning time': 2.921}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.9836
   AUC PR    = 0.119898
   CLL	      = -0.14027
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.127 seconds
Total inference time: 3.151 seconds
AUC ROC: 0.9836


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN), Time: 01:37:22
{'AUC ROC': 0.9836, 'AUC PR': 0.119898, 'CLL': -0.14027, 'Inference time': 3.151, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 1.127}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyceo(A, C), cityhascompanyoffice(D, A).;true;true
0;false,false;countryhascompanyoffice(J, A), bankboughtbank(K, A).;true;true
0;true,false;bankchiefexecutiveceo(F, C).;false;true
0;false,false,false;companyalsoknownas(A, L), acquired(A, M).;false;false
0;false;companyceo(A, H), acquired(I, A).;false;true
0;true;bankchiefexecutiveceo(E, C), economicsectorcompany(B, E).;false;true
0;true,false,false;cityhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
0;false,false,true;countryhascompanyoffice(J, K).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
1;false,false;acquired(A, H), economicsectorcompany(B, H).;true;true
1;false,true;bankboughtbank(E, A), bankchiefexecutiveceo(E, F).;false;true
1;false;acquired(D, A).;true;true
1;false,false,false;companyceo(A, K), acquired(A, L).;false;false
1;false,false,true;cityhascompanyoffice(I, A), companyceo(A, J).;false;false
1;false,true,false;companyalsoknownas(D, G), economicsectorcompany(B, G).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
2;false,false;companyalsoknownas(A, G), companyceo(G, H).;true;true
2;true,false;economicsectorcompany(B, C).;false;false
2;false,true;economicsectorcompany(B, E).;false;false
2;false;acquired(A, E), cityhascompanyoffice(F, E).;true;true
2;true;economicsectorcompany(B, D).;false;true
2;false,false,false;cityhascompanyoffice(J, A).;false;false
2;false,false,true;acquired(G, I), economicsectorcompany(B, I).;false;false
3;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(C, D).;true;true
3;false,false;acquired(L, A), cityhascompanyoffice(M, A).;false;true
3;true,false;companyalsoknownas(A, G).;false;false
3;false,true;bankchiefexecutiveceo(J, H), economicsectorcompany(B, J).;false;true
3;false;companyceo(A, H), bankchiefexecutiveceo(A, I).;true;true
3;true;companyalsoknownas(A, E), acquired(F, E).;false;true
3;false,false,false;companyalsoknownas(A, N).;false;false
3;false,true,false;bankboughtbank(K, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
4;true,false;bankchiefexecutiveceo(A, D), countryhascompanyoffice(E, A).;false;false
4;false,true;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
4;false;cityhascompanyoffice(F, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;false,false,false;acquired(J, A).;false;false
4;false,true,false;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
5;;companyeconomicsector(A, B) :- companyceo(A, C), bankchiefexecutiveceo(A, C).;true;true
5;false,false;acquired(A, J), economicsectorcompany(B, J).;false;true
5;true,false;acquired(A, E).;false;false
5;false,true;economicsectorcompany(B, F).;false;true
5;false;acquired(F, A), companyceo(F, G).;true;true
5;true;bankboughtbank(A, D).;false;true
5;false,false,false;companyceo(A, K), companyalsoknownas(A, L).;false;false
5;false,true,false;companyalsoknownas(F, H), acquired(I, F).;false;false
6;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(A, D).;true;true
6;false,false;bankboughtbank(L, A).;true;true
6;false,false,false;companyalsoknownas(A, N), economicsectorcompany(B, N).;false;false
6;false,true;bankboughtbank(H, I), economicsectorcompany(B, I).;false;true
6;false;countryhascompanyoffice(G, A), acquired(H, A).;true;true
6;true;countryhascompanyoffice(E, C), cityhascompanyoffice(F, A).;false;false
6;false,false,true;cityhascompanyoffice(M, L).;false;false
6;false,true,false;bankboughtbank(J, A), bankchiefexecutiveceo(J, K).;false;false
7;;companyeconomicsector(A, B) :- acquired(A, C), bankboughtbank(A, C).;true;true
7;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
7;false,false,false;countryhascompanyoffice(L, A), bankbankincountry(M, L).;false;false
7;false,true;companyalsoknownas(A, G).;false;true
7;false;acquired(A, E), companyalsoknownas(E, F).;true;true
7;true;countryhascompanyoffice(D, A).;false;false
7;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
7;false,true,false;acquired(E, H).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;true;true
8;false,true,true;acquired(G, D), economicsectorcompany(B, G).;false;false
8;false,true;countryhascompanyoffice(F, D).;true;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,false,false;companyalsoknownas(A, K), cityhascompanyoffice(L, K).;false;false
8;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;false,true,false;acquired(D, H), economicsectorcompany(B, H).;false;false
9;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;false;true
9;false,false;acquired(A, K), companyalsoknownas(A, L).;true;true
9;false,true,true;countryhascompanyoffice(G, I), economicsectorcompany(B, I).;false;false
9;false,true;countryhascompanyoffice(G, A), bankchiefexecutiveceo(E, H).;true;true
9;false;bankboughtbank(E, A), countryhascompanyoffice(F, E).;true;true
9;false,false,false;companyceo(A, M).;false;false
9;false,false,true;economicsectorcompany(B, K).;false;false
9;false,true,false;acquired(E, J), economicsectorcompany(B, J).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysagainstteam(D, A) )
%   then if ( athleteledsportsteam(C, E) )
%   | then return 0.22178529873587596;  // std dev = 1,595, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( athleteledsportsteam(C, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(D, G) )
%   | | | then return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(H, A), teamalsoknownas(I, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, J) )
%   | | then if ( teamplaysinleague(K, J) )
%   | | | then return 0.5248156017661789;  // std dev = 1,826, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, L) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.3785877075848395;  // std dev = 1,296, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, E) )
%   | | then if ( teamplaysagainstteam(F, A), athleteplaysforteam(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.7816289395752953;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplaysforteam(H, A), teamalsoknownas(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2770841107875503;  // std dev = 2,777, 32,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.31358527316659934;  // std dev = 0,490, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( teamalsoknownas(A, D), teamplaysagainstteam(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, G) )
%   | | then if ( teamalsoknownas(G, H) )
%   | | | then return 0.2424763602623582;  // std dev = 2,796, 33,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamalsoknownas(D, E) )
%   | then return 0.3685930093001407;  // std dev = 0,848, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, A), athleteledsportsteam(G, A) )
%   | then if ( athleteledsportsteam(F, H) )
%   | | then return 0.0643130712200121;  // std dev = 1,391, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(I, A), teamplaysagainstteam(J, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.22783879449863692;  // std dev = 0,491, 27,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteledsportsteam(D, A), teamplaysinleague(A, E) )
%   | then return 0.6265509964026145;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1647872346019937;  // std dev = 0,749, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return 0.1155968515285902;  // std dev = 2,094, 19,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(H, A) )
%   | | then return -0.3343655130751768;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( teamalsoknownas(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2145688499807491;  // std dev = 1,959, 16,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(C, A) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0.47275145233115523;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.052692076153691925;  // std dev = 1,210, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( teamalsoknownas(E, A), athleteplaysforteam(F, E) )
%   | then if ( teamalsoknownas(G, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.6695458658206277;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0.12394711136761676;  // std dev = 0,749, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( athleteplaysforteam(I, A) )
%   | | | then return 0.033884212593268556;  // std dev = 1,365, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.18812054688453705;  // std dev = 2,094, 19,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), athleteplaysforteam(D, A) )
%   then if ( teamplaysinleague(C, E), teamplaysagainstteam(F, A) )
%   | then return 0.35850616032115146;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysinleague(A, G), teamalsoknownas(H, A) )
%   | then if ( athleteledsportsteam(I, J) )
%   | | then return 0.08819292093938516;  // std dev = 1,031, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(K, L) )
%   | | then return 0.08654334108834101;  // std dev = 2,758, 35,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.03984192353204604;  // std dev = 0,714, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.37890639390999725;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, G) )
%   | | then if ( teamplaysagainstteam(F, H) )
%   | | | then return 0.06586082013512781;  // std dev = 2,845, 36,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.06363837428751937;  // std dev = 1,146, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( teamalsoknownas(D, A), athleteplaysforteam(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, F) )
%   | | then return 0.3699028706873484;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysagainstteam(G, H) )
%   | | | then return 0.04312779728029205;  // std dev = 2,691, 32,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A), athleteplaysforteam(D, C) )
%   then return 0.2448519543853526;  // std dev = 0,755, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamplaysinleague(E, F) )
%   | then if ( teamplaysinleague(A, G), athleteledsportsteam(H, E) )
%   | | then if ( teamplaysinleague(I, G) )
%   | | | then return 0.03257307495060945;  // std dev = 2,537, 29,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(E, J) )
%   | | | then return -0.03453910836068881;  // std dev = 1,183, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.4936
   AUC PR    = 0.002416
   CLL	      = -0.695956
   Precision = 0.002461 at threshold = 0.5
   Recall    = 0.465649
   F1        = 0.004896


Total learning time: 2.832 seconds
Total inference time: 172.213 seconds
AUC ROC: 0.4936


Results scoring model
   AUC ROC   = 0.745
   AUC PR    = 0.744874
   CLL	      = -0.618357
   Precision = 0.722222 at threshold = 0.5
   Recall    = 0.65
   F1        = 0.684211


Total scoring time: 1.24 seconds
Parameter learned model CLL: -0.618357


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), teamplaysagainstteam(D, A)', 'false,false': 'teamplaysinleague(A, J)', 'true,false': 'athleteledsportsteam(C, F)', 'false,false,false': 'teamalsoknownas(A, L)', 'false': 'athleteplaysforteam(H, A), teamalsoknownas(I, A)', 'true': 'athleteledsportsteam(C, E)', 'true,false,false': 'teamplaysagainstteam(D, G)', 'false,false,true': 'teamplaysinleague(K, J)'}, {'true,false,false,true': [1.309, 4, 3], 'true,true': [1.595, 7, 4], 'false,true': [0.0, 0, 0], 'false,false,false,false': [1.155, 4, 2], 'true,false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.826, 5, 10], 'false,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A)', 'false,false,true': 'teamplaysagainstteam(F, A), athleteplaysforteam(G, A)', 'false,false': 'teamalsoknownas(A, E)', 'false,false,false': 'athleteplaysforteam(H, A), teamalsoknownas(A, I)'}, {'false,false,true,true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,false': [2.777, 17, 15], 'false,false,false,true': [0.0, 0, 0], 'true': [1.296, 3, 4], 'false,false,true,false': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(A, D), teamplaysagainstteam(E, D)', 'false,false': 'athleteplaysforteam(F, G)', 'false,false,true': 'teamalsoknownas(G, H)'}, {'false,true': [0.0, 0, 0], 'true': [0.49, 3, 4], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.796, 17, 16], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'athleteplaysforteam(F, A), athleteledsportsteam(G, A)', 'true': 'teamalsoknownas(D, E)', 'false,true': 'athleteledsportsteam(F, H)', 'false,false': 'teamalsoknownas(I, A), teamplaysagainstteam(J, A)'}, {'true,false': [0.0, 0, 0], 'false,true,true': [1.391, 6, 3], 'true,true': [0.848, 1, 3], 'false,false,false': [0.491, 13, 14], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false,false': 'teamalsoknownas(H, A)', 'false,true': 'teamplaysagainstteam(F, G)', 'false': 'teamplaysagainstteam(F, A)', 'true': 'athleteledsportsteam(D, A), teamplaysinleague(A, E)', 'false,false,false': 'teamalsoknownas(I, A)'}, {'true,false': [0.749, 1, 2], 'false,true,true': [2.094, 11, 8], 'true,true': [0.0, 0, 1], 'false,false,false,false': [1.959, 7, 9], 'false,false,false,true': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteledsportsteam(C, A)', 'false,false': 'teamalsoknownas(A, H)', 'false,true': 'teamalsoknownas(G, E)', 'false': 'teamalsoknownas(E, A), athleteplaysforteam(F, E)', 'true': 'teamalsoknownas(A, D)', 'false,false,false': 'athleteplaysforteam(I, A)'}, {'true,false': [1.21, 6, 2], 'false,true,true': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,false,false,false': [2.094, 8, 11], 'false,false,false,true': [1.365, 5, 3], 'false,false,true': [0.749, 1, 2], 'false,true,false': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), athleteplaysforteam(D, A)', 'false': 'teamplaysinleague(A, G), teamalsoknownas(H, A)', 'true': 'teamplaysinleague(C, E), teamplaysagainstteam(F, A)', 'false,true': 'athleteledsportsteam(I, J)', 'false,false': 'teamplaysagainstteam(K, L)'}, {'true,false': [0.0, 0, 0], 'false,true,true': [1.031, 2, 2], 'true,true': [0.0, 0, 1], 'false,false,false': [0.0, 0, 0], 'false,false,true': [2.758, 18, 17], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamalsoknownas(A, E)', 'true': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysagainstteam(F, G)', 'false,false,true': 'teamplaysagainstteam(F, H)'}, {'false,false,true,true': [2.845, 19, 17], 'true,false': [0.0, 0, 1], 'true,true': [0.714, 1, 2], 'false,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false': 'teamalsoknownas(D, A), athleteplaysforteam(E, D)', 'false,false': 'teamalsoknownas(A, F)', 'false,false,false': 'teamplaysagainstteam(G, H)'}, {'false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [2.691, 17, 15], 'true': [1.146, 3, 4], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A), athleteplaysforteam(D, C)', 'false': 'teamplaysinleague(E, F)', 'false,true': 'teamplaysinleague(A, G), athleteledsportsteam(H, E)', 'false,true,true': 'teamplaysinleague(I, G)', 'false,true,false': 'teamalsoknownas(E, J)'}, {'false,false': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'true': [0.755, 1, 3], 'false,true,true,false': [0.0, 0, 0], 'false,true,true,true': [2.537, 15, 14], 'false,true,false,true': [1.183, 4, 3]}]]
[{'': [0.23765432098765438, 0.2417355371900822], 'false,false': [0.22222222222222215, 0.24489795918367335], 'true,false': [nan, 0.24489795918367335], 'false,false,false': [0.0, 0.22222222222222224], 'false': [nan, 0.2417355371900822], 'true': [0.2314049586776858, 0.24489795918367335], 'true,false,false': [0.24489795918367335, nan], 'false,false,true': [0.22222222222222215, nan]}, {'': [0.24008389108440142, 0.2411855795024267], 'false': [nan, 0.2411855795024267], 'false,false,false': [nan, 0.24100852327834843], 'false,false,true': [nan, 0.0], 'false,false': [0.0, 0.2410085232783486]}, {'': [0.23971406472931836, 0.23696251460425838], 'false': [nan, 0.23696251460425838], 'false,false,true': [0.23696251460425838, nan], 'false,false': [0.23696251460425838, nan]}, {'': [0.1796384883729086, 0.2398701077918749], 'false': [0.21484889289388553, 0.24152534721442181], 'true': [0.1796384883729086, nan], 'false,true': [0.21484889289388553, nan], 'false,false': [nan, 0.24152534721442184]}, {'': [0.1801526518224748, 0.2373773138911092], 'false,false': [0.0, 0.23975964061987448], 'false,false,false': [nan, 0.23975964061987448], 'false': [0.23083846142675538, 0.24233870314084327], 'true': [0.0, 0.18689709283523467], 'false,true': [0.23083846142675538, nan]}, {'': [0.19005037137635064, 0.23282355230549534], 'false,false': [0.18699174554627215, 0.23647584681170336], 'false,false,false': [0.23304053245051293, 0.2308737477591591], 'false': [0.0, 0.23155815193746718], 'true': [0.0, 0.18312990095099374], 'false,true': [nan, 0.0]}, {'': [0.0, 0.2222634183417967], 'false': [0.26565641168722726, 0.21730394001373576], 'true': [0.0, nan], 'false,false': [0.21730394001373576, nan], 'false,true': [0.26565641168722726, nan]}, {'': [0.14908175141427468, 0.2248023271268156], 'false': [nan, 0.2248023271268156], 'true': [0.1700344897841961, 0.0], 'false,false,true': [0.2248023271268156, nan], 'false,false': [0.2248023271268156, nan]}, {'': [0.18759543041167168, 0.22249532629369473], 'false': [nan, 0.22249532629369473], 'false,false,false': [0.2262124886161246, nan], 'false,false': [0.0, 0.2262124886161246]}, {'': [0.14244421698574206, 0.2183644646844503], 'false': [0.2183644646844503, nan], 'false,true,false': [0.19992595424360848, nan], 'false,true,true': [0.2219393530617337, nan], 'false,true': [0.2219393530617337, 0.19992595424360848]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- athleteplaysforteam(C, A), teamplaysagainstteam(D, A).;true;true
0;false;teamplaysinleague(A, J).;true;true
0;false,false;teamalsoknownas(A, L).;true;true
1;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
1;false;teamalsoknownas(A, E).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
4;false;teamplaysagainstteam(F, A).;true;true
4;true;athleteledsportsteam(D, A), teamplaysinleague(A, E).;true;true
4;false,false;teamalsoknownas(H, A).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteledsportsteam(C, A).;true;true
5;false;teamalsoknownas(E, A), athleteplaysforteam(F, E).;true;true
5;true;teamalsoknownas(A, D).;true;true
6;;teamplayssport(A, B) :- teamalsoknownas(A, C), athleteplaysforteam(D, A).;true;true
7;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
7;true;teamplaysinleague(A, D).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
8;false;teamalsoknownas(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), teamplaysagainstteam(D, A) )
%   then if ( teamalsoknownas(E, A) )
%   | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysinleague(A, G) )
%   | then if ( athleteplayssport(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( teamalsoknownas(A, I) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.75517232473028;  // std dev = 0,041, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.17505572835337377;  // std dev = 0,077, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.7346376894137002;  // std dev = 0,150, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.13274167445310792;  // std dev = 0,065, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5753226034634366;  // std dev = 0,213, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12320893699544497;  // std dev = 0,105, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.41916620690254924;  // std dev = 0,088, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.5174078237941276;  // std dev = 0,139, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.11056374316981765;  // std dev = 0,096, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteledsportsteam(D, A), teamplaysinleague(A, E) )
%   | then return 0.36405431847651515;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.172273093755503;  // std dev = 0,318, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( athleteplayssport(G, B) )
%   | | then return 0.3255790687890293;  // std dev = 0,063, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.09747379392779497;  // std dev = 0,074, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( teamalsoknownas(H, A) )
%   | | then return -0.11739368460973233;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.3422541524898824;  // std dev = 0,166, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.10389689677028258;  // std dev = 0,041, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(C, A) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0.28457816460822305;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteledsportsteam(E, A), athleteplaysinleague(E, F) )
%   | | then return -0.006921918399291443;  // std dev = 0,351, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -2.1160626715634873E-4;  // std dev = 0,286, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( teamalsoknownas(G, A), athleteplaysforteam(H, G) )
%   | then return 0.2924759586536484;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(I, B) )
%   | | then if ( teamplaysinleague(A, J) )
%   | | | then return 0.24818819888664065;  // std dev = 0,034, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.3268023421214001;  // std dev = 0,089, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.09168354840052118;  // std dev = 0,047, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), athleteplaysforteam(D, A) )
%   then return 0.2303311053415431;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( teamplaysinleague(A, F) )
%   | | then if ( teamplaysagainstteam(A, G) )
%   | | | then return 0.22558210882504115;  // std dev = 0,087, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2013757833977885;  // std dev = 7,45e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.26002923345257706;  // std dev = 0,077, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.08735670071821353;  // std dev = 0,081, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.10017360828493187;  // std dev = 0,229, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.15907103120200816;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(E, B) )
%   | then if ( athleteplaysforteam(E, A), athleteledsportsteam(E, F) )
%   | | then return 0.21824825933532907;  // std dev = 0,039, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | | then return 0.17025851758919225;  // std dev = 0,001, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.19423801607927285;  // std dev = 0,081, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( athleteledsportsteam(I, A), athleteplaysinleague(I, J) )
%   | | then return -0.09815822189697905;  // std dev = 0,055, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07702103039068334;  // std dev = 0,039, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.1729806358885819;  // std dev = 0,052, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10325933545501458;  // std dev = 0,035, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0.1797078371915367;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | | then return 0.15049396207942697;  // std dev = 0,025, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.16580325225845685;  // std dev = 0,072, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.0707215611730792;  // std dev = 0,035, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteledsportsteam(C, E), teamplaysinleague(E, D) )
%   | | then if ( athleteledsportsteam(F, A), athleteplaysforteam(F, A) )
%   | | | then return 0.16338691837050678;  // std dev = 0,025, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12929286448828162;  // std dev = 0,015, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.13832458244765633;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1606579501938883;  // std dev = 0,050, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | then if ( athleteledsportsteam(H, A) )
%   | | then return -0.08316854280382492;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.062318429112382806;  // std dev = 0,008, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.08214447690869836;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.987265
   AUC PR    = 0.117185
   CLL	      = -0.153168
   Precision = 0.121241 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.2159


Total learning time: 20.661 seconds
Total inference time: 12.814 seconds
AUC ROC: 0.987265


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100559
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.118 seconds
Refined model CLL: -0.100559


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987265
   AUC PR    = 0.117185
   CLL	      = -0.153168
   Precision = 0.121241 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.2159


Total learning time: 25.851 seconds
Total inference time: 12.814 seconds
AUC ROC: 0.987265
Total revision time: 25.851
Best scored revision CLL: -0.100559


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 01:40:54
{'AUC ROC': 0.987265, 'AUC PR': 0.117185, 'parameter_20': {'AUC ROC': 0.4936, 'AUC PR': 0.002416, 'CLL': -0.695956, 'Inference time': 172.213, 'Recall': 0.465649, 'F1': 0.004896, 'Precision': [0.002461, 0.5], 'Learning time': 2.832}, 'CLL': -0.153168, 'Inference time': 12.814, 'Recall': 0.984733, 'F1': 0.2159, 'Precision': [0.121241, 0.5], 'Learning time': 25.851}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0641918400820262;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.9836
   AUC PR    = 0.119898
   CLL	      = -0.098713
   Precision = 0.121241 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.2159


Total learning time: 3.159 seconds
Total inference time: 4.208 seconds
AUC ROC: 0.9836


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN-B), Time: 01:41:01
{'AUC ROC': 0.9836, 'AUC PR': 0.119898, 'CLL': -0.098713, 'Inference time': 4.208, 'Recall': 0.984733, 'F1': 0.2159, 'Precision': [0.121241, 0.5], 'Learning time': 3.159}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.9836
   AUC PR    = 0.119898
   CLL	      = -0.14027
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.328 seconds
Total inference time: 3.135 seconds
AUC ROC: 0.9836


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN), Time: 01:41:06
{'AUC ROC': 0.9836, 'AUC PR': 0.119898, 'CLL': -0.14027, 'Inference time': 3.135, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 1.328}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyceo(A, C), cityhascompanyoffice(D, A).;true;true
0;false,false;countryhascompanyoffice(J, A), bankboughtbank(K, A).;true;true
0;true,false;bankchiefexecutiveceo(F, C).;false;true
0;false,false,false;companyalsoknownas(A, L), acquired(A, M).;false;false
0;false;companyceo(A, H), acquired(I, A).;false;true
0;true;bankchiefexecutiveceo(E, C), economicsectorcompany(B, E).;false;true
0;true,false,false;cityhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
0;false,false,true;countryhascompanyoffice(J, K).;false;false
1;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
1;false,false;acquired(A, H), economicsectorcompany(B, H).;true;true
1;false,true;bankboughtbank(E, A), bankchiefexecutiveceo(E, F).;false;true
1;false;acquired(D, A).;true;true
1;false,false,false;companyceo(A, K), acquired(A, L).;false;false
1;false,false,true;cityhascompanyoffice(I, A), companyceo(A, J).;false;false
1;false,true,false;companyalsoknownas(D, G), economicsectorcompany(B, G).;false;false
2;;companyeconomicsector(A, B) :- acquired(C, A), companyalsoknownas(C, D).;true;true
2;false,false;companyalsoknownas(A, G), companyceo(G, H).;true;true
2;true,false;economicsectorcompany(B, C).;false;false
2;false,true;economicsectorcompany(B, E).;false;false
2;false;acquired(A, E), cityhascompanyoffice(F, E).;true;true
2;true;economicsectorcompany(B, D).;false;true
2;false,false,false;cityhascompanyoffice(J, A).;false;false
2;false,false,true;acquired(G, I), economicsectorcompany(B, I).;false;false
3;;companyeconomicsector(A, B) :- acquired(A, C), companyalsoknownas(C, D).;true;true
3;false,false;acquired(L, A), cityhascompanyoffice(M, A).;false;true
3;true,false;companyalsoknownas(A, G).;false;false
3;false,true;bankchiefexecutiveceo(J, H), economicsectorcompany(B, J).;false;true
3;false;companyceo(A, H), bankchiefexecutiveceo(A, I).;true;true
3;true;companyalsoknownas(A, E), acquired(F, E).;false;true
3;false,false,false;companyalsoknownas(A, N).;false;false
3;false,true,false;bankboughtbank(K, A).;false;false
4;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
4;false,false;acquired(I, A), economicsectorcompany(B, I).;false;true
4;true,false;bankchiefexecutiveceo(A, D), countryhascompanyoffice(E, A).;false;false
4;false,true;companyalsoknownas(A, G), economicsectorcompany(B, G).;false;true
4;false;cityhascompanyoffice(F, A).;true;true
4;true;economicsectorcompany(B, C).;false;true
4;false,false,false;acquired(J, A).;false;false
4;false,true,false;cityhascompanyoffice(F, H), economicsectorcompany(B, H).;false;false
5;;companyeconomicsector(A, B) :- companyceo(A, C), bankchiefexecutiveceo(A, C).;true;true
5;false,false;acquired(A, J), economicsectorcompany(B, J).;false;true
5;true,false;acquired(A, E).;false;false
5;false,true;economicsectorcompany(B, F).;false;true
5;false;acquired(F, A), companyceo(F, G).;true;true
5;true;bankboughtbank(A, D).;false;true
5;false,false,false;companyceo(A, K), companyalsoknownas(A, L).;false;false
5;false,true,false;companyalsoknownas(F, H), acquired(I, F).;false;false
6;;companyeconomicsector(A, B) :- acquired(A, C), companyceo(A, D).;true;true
6;false,false;bankboughtbank(L, A).;true;true
6;false,false,false;companyalsoknownas(A, N), economicsectorcompany(B, N).;false;false
6;false,true;bankboughtbank(H, I), economicsectorcompany(B, I).;false;true
6;false;countryhascompanyoffice(G, A), acquired(H, A).;true;true
6;true;countryhascompanyoffice(E, C), cityhascompanyoffice(F, A).;false;false
6;false,false,true;cityhascompanyoffice(M, L).;false;false
6;false,true,false;bankboughtbank(J, A), bankchiefexecutiveceo(J, K).;false;false
7;;companyeconomicsector(A, B) :- acquired(A, C), bankboughtbank(A, C).;true;true
7;false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;true;true
7;false,false,false;countryhascompanyoffice(L, A), bankbankincountry(M, L).;false;false
7;false,true;companyalsoknownas(A, G).;false;true
7;false;acquired(A, E), companyalsoknownas(E, F).;true;true
7;true;countryhascompanyoffice(D, A).;false;false
7;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
7;false,true,false;acquired(E, H).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), economicsectorcompany(B, C).;false;true
8;false,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;true;true
8;false,true,true;acquired(G, D), economicsectorcompany(B, G).;false;false
8;false,true;countryhascompanyoffice(F, D).;true;true
8;false;acquired(D, A), companyceo(D, E).;true;true
8;false,false,false;companyalsoknownas(A, K), cityhascompanyoffice(L, K).;false;false
8;false,false,true;acquired(A, J), economicsectorcompany(B, J).;false;false
8;false,true,false;acquired(D, H), economicsectorcompany(B, H).;false;false
9;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;false;true
9;false,false;acquired(A, K), companyalsoknownas(A, L).;true;true
9;false,true,true;countryhascompanyoffice(G, I), economicsectorcompany(B, I).;false;false
9;false,true;countryhascompanyoffice(G, A), bankchiefexecutiveceo(E, H).;true;true
9;false;bankboughtbank(E, A), countryhascompanyoffice(F, E).;true;true
9;false,false,false;companyceo(A, M).;false;false
9;false,false,true;economicsectorcompany(B, K).;false;false
9;false,true,false;acquired(E, J), economicsectorcompany(B, J).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(A, D) )
%   then if ( teamalsoknownas(E, D) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, F) )
%   | then return 0.3819584589090361;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | else if ( teamplaysinleague(A, G) )
%   | | then if ( teamplaysinleague(H, G) )
%   | | | then return 0.324815601766179;  // std dev = 1,932, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.22178529873587596;  // std dev = 0,481, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysagainstteam(A, D) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0.3288407320374489;  // std dev = 2,289, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | else return 0.24331263302342399;  // std dev = 2,516, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then return 0.2539859668736114;  // std dev = 0,488, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.2551200498199511;  // std dev = 0,476, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   else if ( teamalsoknownas(A, D) )
%   | then return 0.23667790950895795;  // std dev = 0,721, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.1516796764495634;  // std dev = 0,491, 24,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then return 0.17166287433211352;  // std dev = 2,995, 38,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   else if ( teamalsoknownas(A, D) )
%   | then if ( teamalsoknownas(E, D) )
%   | | then return 0.6993570766840117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.0736629716046126;  // std dev = 0,472, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.15834619583958676;  // std dev = 0,476, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   else if ( teamplaysagainstteam(D, E) )
%   | then return 0.09248595190132443;  // std dev = 0,486, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysinleague(D, E), teamalsoknownas(A, F) )
%   | then return 0.3505238342683905;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.08714786998130303;  // std dev = 2,294, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( teamplaysinleague(A, G) )
%   | then return 0.1022700750471517;  // std dev = 0,500, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( teamalsoknownas(H, I) )
%   | | then return 0.03030297054925569;  // std dev = 1,535, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then return 0.07403366375450408;  // std dev = 2,983, 38,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   else if ( teamalsoknownas(D, E) )
%   | then if ( teamalsoknownas(F, E) )
%   | | then return 0.06871248605584594;  // std dev = 1,620, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamplaysinleague(C, E) )
%   | then return 0.05546395715300743;  // std dev = 0,480, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then return 0.04219467993932842;  // std dev = 3,395, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.491699
   AUC PR    = 0.002425
   CLL	      = -0.709622
   Precision = 0.00242 at threshold = 0.5
   Recall    = 0.549618
   F1        = 0.004818


Total learning time: 3.646 seconds
Total inference time: 292.071 seconds
AUC ROC: 0.491699


Results scoring model
   AUC ROC   = 0.6384
   AUC PR    = 0.676173
   CLL	      = -0.65403
   Precision = 0.583333 at threshold = 0.5
   Recall    = 0.56
   F1        = 0.571429


Total scoring time: 1.433 seconds
Parameter learned model CLL: -0.65403


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamalsoknownas(A, D)', 'false': 'teamplaysagainstteam(A, F)', 'true': 'teamalsoknownas(E, D)', 'false,false': 'teamplaysinleague(A, G)', 'false,false,true': 'teamplaysinleague(H, G)'}, {'false,false,true,true': [1.932, 8, 7], 'true,false': [0.0, 0, 0], 'true,true': [2.11e-08, 0, 3], 'false,false,false': [0.481, 7, 4], 'false,true': [2.289, 10, 11], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), teamplaysagainstteam(A, D)', 'false': 'teamplaysagainstteam(A, E)'}, {'false,false': [2.516, 15, 11], 'true': [0.0, 0, 3], 'false,true': [2.289, 10, 11]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)'}, {'false': [0.0, 0, 0], 'true': [0.488, 25, 25]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamalsoknownas(A, D)'}, {'false,false': [0.491, 14, 10], 'true': [0.476, 10, 14], 'false,true': [0.721, 1, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false': 'teamalsoknownas(A, D)', 'false,true': 'teamalsoknownas(E, D)'}, {'false,false': [0.472, 7, 4], 'true': [2.995, 18, 20], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysagainstteam(D, E)'}, {'false,false': [0.0, 0, 0], 'true': [0.476, 10, 14], 'false,true': [0.486, 15, 11]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false': 'teamplaysinleague(A, G)', 'true': 'teamplaysinleague(D, E), teamalsoknownas(A, F)', 'false,false': 'teamalsoknownas(H, I)'}, {'false,true': [0.5, 8, 7], 'true,false': [2.294, 10, 11], 'false,false,true': [1.535, 7, 4], 'true,true': [0.0, 0, 3], 'false,false,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false': 'teamalsoknownas(D, E)', 'false,true': 'teamalsoknownas(F, E)'}, {'false,false': [0.0, 0, 0], 'true': [2.983, 18, 20], 'false,true,true': [1.62, 7, 5], 'false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)', 'true': 'teamplaysinleague(C, E)'}, {'false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.48, 25, 25]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)'}, {'false': [0.0, 0, 0], 'true': [3.395, 25, 25]}]]
[{'': [1.4802973661668753e-16, 0.24898143956541383], 'false': [0.2494331065759633, 0.24408284023668594], 'true': [1.4802973661668753e-16, nan], 'false,false,true': [0.24888888888888888, nan], 'false,false': [0.24888888888888888, 0.2314049586776858]}, {'': [0.0, 0.24789193186048425], 'false': [0.2494331065759638, 0.24337870774606635]}, {'': [0.23811958331892277, nan]}, {'': [0.2262766573155436, 0.24317541574593418], 'false': [0.2600891864358906, 0.24121018873024144]}, {'': [0.23603908480609598, 0.23441987386252772], 'false': [0.0, 0.22310634539213473], 'false,true': [0.0, nan]}, {'': [0.2266913305177524, 0.23635814876004796], 'false': [0.23635814876004796, nan]}, {'': [0.22681436744128958, 0.23621224871321056], 'false': [0.25015015047157957, 0.21421798204473966], 'true': [0.0, 0.2505455576123832], 'false,false': [0.21421798204473966, nan]}, {'': [0.23413039672584196, 0.2186678897336176], 'false': [0.2186678897336176, nan], 'false,true': [0.2186678897336176, nan]}, {'': [0.23045587100143933, nan], 'true': [0.23045587100143933, nan]}, {'': [0.23049477004334018, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C), teamalsoknownas(A, D).;true;true
1;;teamplayssport(A, B) :- teamalsoknownas(A, C), teamplaysagainstteam(A, D).;true;true
4;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
4;false;teamalsoknownas(A, D).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
6;true;teamplaysinleague(D, E), teamalsoknownas(A, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamalsoknownas(A, D) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamplaysagainstteam(E, A), teamalsoknownas(E, F) )
%   | then if ( athleteplayssport(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), teamplaysagainstteam(A, D) )
%   then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109542;  // std dev = 5,96e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783633;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysinleague(D, E), teamalsoknownas(A, F) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(H, B) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 3,73e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.986773
   AUC PR    = 0.120233
   CLL	      = -0.138958
   Precision = 0.121241 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.2159


Total learning time: 5.765 seconds
Total inference time: 181.439 seconds
AUC ROC: 0.986773


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 1.37 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.986773
   AUC PR    = 0.120233
   CLL	      = -0.138958
   Precision = 0.121241 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.2159


Total learning time: 12.213999999999999 seconds
Total inference time: 181.439 seconds
AUC ROC: 0.986773
Total revision time: 12.213999999999999
Best scored revision CLL: -0.094637


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 01:49:13
{'AUC ROC': 0.986773, 'AUC PR': 0.120233, 'parameter_25': {'AUC ROC': 0.491699, 'AUC PR': 0.002425, 'CLL': -0.709622, 'Inference time': 292.071, 'Recall': 0.549618, 'F1': 0.004818, 'Precision': [0.00242, 0.5], 'Learning time': 3.646}, 'CLL': -0.138958, 'Inference time': 181.439, 'Recall': 0.984733, 'F1': 0.2159, 'Precision': [0.121241, 0.5], 'Learning time': 12.213999999999999}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.9836
   AUC PR    = 0.119898
   CLL	      = -0.098713
   Precision = 0.121241 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.2159


Total learning time: 2.964 seconds
Total inference time: 4.176 seconds
AUC ROC: 0.9836


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN-B), Time: 01:49:20
{'AUC ROC': 0.9836, 'AUC PR': 0.119898, 'CLL': -0.098713, 'Inference time': 4.176, 'Recall': 0.984733, 'F1': 0.2159, 'Precision': [0.121241, 0.5], 'Learning time': 2.964}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.9836
   AUC PR    = 0.119898
   CLL	      = -0.14027
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.182 seconds
Total inference time: 3.112 seconds
AUC ROC: 0.9836


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN), Time: 01:49:25
{'AUC ROC': 0.9836, 'AUC PR': 0.119898, 'CLL': -0.14027, 'Inference time': 3.112, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 1.182}


