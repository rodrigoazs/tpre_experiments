Starting experiment #1 for 46_nell_finances_nell_sports

Start learning from source dataset

Source train facts examples: 5307
Source train pos examples: 778
Source train neg examples: 549655

WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(A, C), economicsectorcompany(B, C) )
%   then return 0.8581489350995118;  // std dev = 1,58e-07, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( bankchiefexecutiveceo(A, D), companyceo(E, D) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( bankchiefexecutiveceo(E, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.10814893509951232;  // std dev = 1,732, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( companyalsoknownas(A, G) )
%   | | then if ( companyalsoknownas(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.13731560176618043;  // std dev = 6,950, 240,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=67 */
%   | | else if ( countryhascompanyoffice(H, A), acquired(A, I) )
%   | | | then return 0.3581489350995123;  // std dev = 2,236, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.17881170313069672;  // std dev = 21,142, 2.052,000 (wgt'ed) examples reached here.  /* #neg=1.394 #pos=658 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), countryhascompanyoffice(D, C) )
%   then if ( countryhascompanyoffice(D, A), acquired(C, E) )
%   | then if ( companyalsoknownas(E, F) )
%   | | then return 0.47540780245230163;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( countryhascompanyoffice(D, G), economicsectorcompany(B, G) )
%   | | | then return 0.7908939952774484;  // std dev = 0,091, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1644641376767746;  // std dev = 0,031, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.10813175607421092;  // std dev = 0,438, 86,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=24 */
%   else if ( acquired(A, H), economicsectorcompany(B, H) )
%   | then return 0.8136663433901515;  // std dev = 0,236, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( acquired(I, A), cityhascompanyoffice(J, I) )
%   | | then if ( cityhascompanyoffice(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.831640044421514;  // std dev = 0,115, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.03764915065876539;  // std dev = 3,709, 125,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=16 */
%   | | else if ( acquired(A, L), cityhascompanyoffice(M, L) )
%   | | | then return 0.00409035964282605;  // std dev = 2,537, 48,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | | | else return 0.15627161906627252;  // std dev = 21,245, 2.088,000 (wgt'ed) examples reached here.  /* #neg=1.416 #pos=672 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( bankboughtbank(C, A), cityhascompanyoffice(D, C) )
%   then if ( bankboughtbank(A, E) )
%   | then return 0.19226606108071964;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0.03856418523244812;  // std dev = 0,398, 36,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   else if ( companyceo(A, F) )
%   | then if ( acquired(A, G), cityhascompanyoffice(H, G) )
%   | | then return 0.058003098545738575;  // std dev = 0,385, 50,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | else if ( companyalsoknownas(A, I), economicsectorcompany(B, I) )
%   | | | then return 0.6577476008675789;  // std dev = 0,211, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1178879125935996;  // std dev = 7,969, 318,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=98 */
%   | else if ( countryhascompanyoffice(J, A), bankbankincountry(K, J) )
%   | | then if ( countryhascompanyoffice(J, L), economicsectorcompany(B, L) )
%   | | | then return 0.7378391035792188;  // std dev = 1,392, 44,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.1913469761317633;  // std dev = 0,205, 95,000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( acquired(M, A), economicsectorcompany(B, M) )
%   | | | then return 0.7608785700016479;  // std dev = 0,330, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.13695857873529346;  // std dev = 19,610, 1.779,000 (wgt'ed) examples reached here.  /* #neg=1.202 #pos=577 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A) )
%   then if ( acquired(D, C), cityhascompanyoffice(E, D) )
%   | then return 0.28769699388276154;  // std dev = 0,430, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0.08205882854343793;  // std dev = 0,413, 344,000 (wgt'ed) examples reached here.  /* #neg=239 #pos=105 */
%   else if ( acquired(A, F), cityhascompanyoffice(G, A) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.605603281061527;  // std dev = 0,110, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( companyalsoknownas(F, H) )
%   | | | then return -0.020221203304895984;  // std dev = 1,273, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.1377655003434077;  // std dev = 4,438, 90,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=30 */
%   | else if ( companyalsoknownas(A, I) )
%   | | then if ( economicsectorcompany(B, I) )
%   | | | then return 0.5683046934129438;  // std dev = 0,966, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.04662132735751381;  // std dev = 5,123, 143,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=36 */
%   | | else if ( companyceo(A, J) )
%   | | | then return 0.08264999197810392;  // std dev = 5,622, 162,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=47 */
%   | | | else return 0.11710649920056256;  // std dev = 18,576, 1.599,000 (wgt'ed) examples reached here.  /* #neg=1.075 #pos=524 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), bankbankincountry(D, C) )
%   then if ( companyalsoknownas(A, E), countryhascompanyoffice(F, E) )
%   | then if ( economicsectorcompany(B, E) )
%   | | then return 0.46379253478742327;  // std dev = 0,076, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.11203911510714903;  // std dev = 0,217, 34,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=2 */
%   | else if ( countryhascompanyoffice(C, G), economicsectorcompany(B, G) )
%   | | then return 0.6293511218311892;  // std dev = 0,237, 72,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=69 */
%   | | else return -0.19114954470456363;  // std dev = 0,313, 141,000 (wgt'ed) examples reached here.  /* #neg=141 */
%   else if ( companyalsoknownas(A, A) )
%   | then return 0.06155452750714325;  // std dev = 0,562, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( bankchiefexecutiveceo(A, H) )
%   | | then if ( companyceo(I, H), economicsectorcompany(B, I) )
%   | | | then return 0.5998239350826512;  // std dev = 0,255, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.09173001830250252;  // std dev = 1,611, 33,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | | else if ( acquired(J, A), economicsectorcompany(B, J) )
%   | | | then return 0.5993636855091972;  // std dev = 0,526, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return 0.09264435647624061;  // std dev = 20,725, 2.018,000 (wgt'ed) examples reached here.  /* #neg=1.368 #pos=650 */
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C), economicsectorcompany(B, C) )
%   then return 0.5001310363465739;  // std dev = 0,148, 31,000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( acquired(D, A) )
%   | then if ( acquired(E, D), companyceo(E, F) )
%   | | then if ( economicsectorcompany(B, D) )
%   | | | then return 0.43632764567469834;  // std dev = 0,240, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1038333600174957;  // std dev = 2,007, 35,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | else if ( economicsectorcompany(B, D) )
%   | | | then return 0.46778932200536133;  // std dev = 0,491, 32,000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return 0.009286549003955515;  // std dev = 6,201, 250,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=62 */
%   | else if ( bankchiefexecutiveceo(A, G), companyceo(H, G) )
%   | | then if ( economicsectorcompany(B, H) )
%   | | | then return 0.5047542946441014;  // std dev = 0,040, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.058582321234167054;  // std dev = 1,368, 29,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | else if ( companyalsoknownas(A, I) )
%   | | | then return 0.057210548798081566;  // std dev = 6,143, 217,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=66 */
%   | | | else return 0.07995875308739532;  // std dev = 19,193, 1.737,000 (wgt'ed) examples reached here.  /* #neg=1.170 #pos=567 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), bankbankincountry(D, C) )
%   then if ( countryhascompanyoffice(C, E), economicsectorcompany(B, E) )
%   | then return 0.464631623473397;  // std dev = 0,210, 82,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=80 */
%   | else return -0.17188586644575451;  // std dev = 0,347, 159,000 (wgt'ed) examples reached here.  /* #neg=159 */
%   else if ( acquired(F, A) )
%   | then if ( economicsectorcompany(B, F) )
%   | | then return 0.34756877475008313;  // std dev = 0,077, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else if ( companyceo(F, G) )
%   | | | then return -0.05788735375151598;  // std dev = 4,515, 156,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=27 */
%   | | | else return 0.03858994727353785;  // std dev = 4,391, 104,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=29 */
%   | else if ( companyalsoknownas(A, H) )
%   | | then if ( economicsectorcompany(B, H) )
%   | | | then return 0.4292715667483748;  // std dev = 0,425, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.0268778074011395;  // std dev = 5,594, 170,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=47 */
%   | | else if ( bankboughtbank(I, A), cityhascompanyoffice(J, I) )
%   | | | then return -0.013951552927964007;  // std dev = 1,968, 22,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.07788966598203469;  // std dev = 18,690, 1.578,000 (wgt'ed) examples reached here.  /* #neg=1.041 #pos=537 */
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( countryhascompanyoffice(C, A), bankbankincountry(D, C) )
%   then if ( cityhascompanyoffice(E, A) )
%   | then return 0.04377016819987628;  // std dev = 0,296, 79,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=27 */
%   | else return 0.007603126302128531;  // std dev = 0,255, 165,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=53 */
%   else if ( companyalsoknownas(A, F) )
%   | then if ( acquired(F, G), economicsectorcompany(B, G) )
%   | | then return 0.5467182668155001;  // std dev = 0,423, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( economicsectorcompany(B, F) )
%   | | | then return 0.344906963231347;  // std dev = 0,457, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.020892024468409407;  // std dev = 5,795, 188,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=53 */
%   | else if ( companyceo(A, H) )
%   | | then if ( bankboughtbank(I, A) )
%   | | | then return -0.017559681719993003;  // std dev = 1,593, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.03850204882205016;  // std dev = 5,454, 165,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=53 */
%   | | else if ( acquired(J, A), cityhascompanyoffice(K, A) )
%   | | | then return 5.863877725717516E-4;  // std dev = 2,273, 43,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return 0.04743189523702361;  // std dev = 18,998, 1.699,000 (wgt'ed) examples reached here.  /* #neg=1.146 #pos=553 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), companyceo(C, D) )
%   then if ( economicsectorcompany(B, C) )
%   | then return 0.2571788162260378;  // std dev = 0,061, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.03488040427791185;  // std dev = 0,362, 160,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=33 */
%   else if ( companyalsoknownas(A, E), acquired(E, F) )
%   | then if ( companyceo(A, G) )
%   | | then if ( countryhascompanyoffice(H, A), acquired(F, I) )
%   | | | then return 0.013858702243306539;  // std dev = 1,006, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.2132033090681449;  // std dev = 2,938, 44,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | else return 0.014887767619833063;  // std dev = 0,333, 43,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | else if ( companyalsoknownas(A, J) )
%   | | then if ( companyalsoknownas(J, K), economicsectorcompany(B, K) )
%   | | | then return 0.5845797659032143;  // std dev = 1,454, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.23594123849078716;  // std dev = 0,570, 82,000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( acquired(A, L), countryhascompanyoffice(M, A) )
%   | | | then return -0.025177082866745738;  // std dev = 1,393, 45,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0.05494465841406112;  // std dev = 19,409, 1.797,000 (wgt'ed) examples reached here.  /* #neg=1.180 #pos=617 */
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( acquired(A, C) )
%   then if ( cityhascompanyoffice(D, A) )
%   | then return -0.029833923263929776;  // std dev = 0,362, 223,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=63 */
%   | else if ( acquired(C, E), cityhascompanyoffice(F, C) )
%   | | then if ( companyalsoknownas(E, G) )
%   | | | then return 0.02646036512455452;  // std dev = 0,468, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.22882643964391317;  // std dev = 1,140, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.0208350587761564;  // std dev = 0,384, 183,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=62 */
%   else if ( cityhascompanyoffice(H, A) )
%   | then if ( cityhascompanyoffice(H, I), economicsectorcompany(B, I) )
%   | | then return 0.556618236472495;  // std dev = 0,259, 109,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=103 */
%   | | else return -0.25821073302361136;  // std dev = 0,055, 196,000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | else if ( companyalsoknownas(A, J) )
%   | | then return 0.01842498385833656;  // std dev = 0,350, 114,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | | else if ( companyceo(A, K) )
%   | | | then return 0.11344754688558856;  // std dev = 3,742, 68,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=27 */
%   | | | else return 0.036130459671724846;  // std dev = 17,221, 1.434,000 (wgt'ed) examples reached here.  /* #neg=953 #pos=481 */


Starting fold 1

Target train facts examples: 9690
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9690
Target test pos	 examples: 133
Target test neg examples: 53331

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false,false,false;countryhascompanyoffice(H, A), acquired(A, I).;false;false
0;false,false;companyalsoknownas(A, G).;true;true
0;false;bankchiefexecutiveceo(A, D), companyceo(E, D).;true;true
0;false,true,false;bankchiefexecutiveceo(E, F).;false;false
0;false,true;economicsectorcompany(B, E).;false;true
0;false,false,true;companyalsoknownas(A, A).;false;false
1;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
1;false,false,false;acquired(A, L), cityhascompanyoffice(M, L).;false;false
1;true,true;companyalsoknownas(E, F).;false;true
1;false,false;acquired(I, A), cityhascompanyoffice(J, I).;true;true
1;false;acquired(A, H), economicsectorcompany(B, H).;false;true
1;true,true,false;countryhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
1;true;countryhascompanyoffice(D, A), acquired(C, E).;true;false
1;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
2;;companyeconomicsector(A, B) :- bankboughtbank(C, A), cityhascompanyoffice(D, C).;true;true
2;false,false,false;acquired(M, A), economicsectorcompany(B, M).;false;false
2;true;bankboughtbank(A, E).;false;false
2;false,false;countryhascompanyoffice(J, A), bankbankincountry(K, J).;true;true
2;false;companyceo(A, F).;true;true
2;false,true,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;false;false
2;false,true;acquired(A, G), cityhascompanyoffice(H, G).;false;true
2;false,false,true;countryhascompanyoffice(J, L), economicsectorcompany(B, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;false,false,false;companyceo(A, J).;false;false
3;true;acquired(D, C), cityhascompanyoffice(E, D).;false;false
3;false,false;companyalsoknownas(A, I).;true;true
3;false;acquired(A, F), cityhascompanyoffice(G, A).;true;true
3;false,true,false;companyalsoknownas(F, H).;false;false
3;false,true;economicsectorcompany(B, F).;false;true
3;false,false,true;economicsectorcompany(B, I).;false;false
4;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
4;false,false,false;acquired(J, A), economicsectorcompany(B, J).;false;false
4;true,true;economicsectorcompany(B, E).;false;false
4;true,false;countryhascompanyoffice(C, G), economicsectorcompany(B, G).;false;false
4;false;companyalsoknownas(A, A).;false;true
4;false,false;bankchiefexecutiveceo(A, H).;true;true
4;true;companyalsoknownas(A, E), countryhascompanyoffice(F, E).;true;true
4;false,false,true;companyceo(I, H), economicsectorcompany(B, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), economicsectorcompany(B, C).;false;true
5;false,false,false;companyalsoknownas(A, I).;false;false
5;false,false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
5;false;acquired(D, A).;true;true
5;false,true,false;economicsectorcompany(B, D).;false;false
5;false,true,true;economicsectorcompany(B, D).;false;false
5;false,true;acquired(E, D), companyceo(E, F).;true;true
5;false,false,true;economicsectorcompany(B, H).;false;false
6;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
6;false,false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;false;false
6;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
6;false,false;companyalsoknownas(A, H).;true;true
6;false;acquired(F, A).;true;true
6;false,true,false;companyceo(F, G).;false;false
6;false,true;economicsectorcompany(B, F).;false;true
6;false,false,true;economicsectorcompany(B, H).;false;false
7;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
7;false,false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;false
7;true;cityhascompanyoffice(E, A).;false;false
7;false,false;companyceo(A, H).;true;true
7;false;companyalsoknownas(A, F).;true;true
7;false,true,false;economicsectorcompany(B, F).;false;false
7;false,true;acquired(F, G), economicsectorcompany(B, G).;false;true
7;false,false,true;bankboughtbank(I, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
8;false,false,false;acquired(A, L), countryhascompanyoffice(M, A).;false;false
8;true;economicsectorcompany(B, C).;false;false
8;false,false;companyalsoknownas(A, J).;true;true
8;false;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(H, A), acquired(F, I).;false;false
8;false,true;companyceo(A, G).;true;false
8;false,false,true;companyalsoknownas(J, K), economicsectorcompany(B, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true,false,true;companyalsoknownas(E, G).;false;false
9;false,false,false;companyceo(A, K).;false;false
9;true;cityhascompanyoffice(D, A).;false;true
9;true,false;acquired(C, E), cityhascompanyoffice(F, C).;true;false
9;false;cityhascompanyoffice(H, A).;true;true
9;false,false;companyalsoknownas(A, J).;false;true
9;false,true;cityhascompanyoffice(H, I), economicsectorcompany(B, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( athleteplaysforteam(D, A), athleteledsportsteam(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(G, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then if ( teamalsoknownas(C, A) )
%   | then if ( teamplaysagainstteam(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2615147572847855;  // std dev = 1,489, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.25279345961750754;  // std dev = 0,481, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.20408989439274533;  // std dev = 1,519, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(E, D) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(C, F) )
%   | | then return 0.44164077523109235;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(G, A) )
%   | | then if ( athleteledsportsteam(G, H) )
%   | | | then return -0.05503118567130805;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.694968814328692;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17336692732814218;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then return 0.1231853024759674;  // std dev = 0,455, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamalsoknownas(C, D) )
%   | then return 0.3101684759601222;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(E, F) )
%   | then return 0.07146520684721075;  // std dev = 1,421, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.2479640682171076;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0.02836791682449651;  // std dev = 0,449, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( athleteledsportsteam(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return -0.41206494590663306;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.2546017207600337;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then return 0.057254237792498185;  // std dev = 0,436, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then return -0.0129914201159632;  // std dev = 1,074, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( teamplaysinleague(D, E) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return 0.17755983231666841;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.490209
   AUC PR    = 0.002394
   CLL	      = -0.693322
   Precision = 0.002424 at threshold = 0.5
   Recall    = 0.451128
   F1        = 0.004822


Total learning time: 1.645 seconds
Total inference time: 101.375 seconds
AUC ROC: 0.490209


Results scoring model
   AUC ROC   = 0.86
   AUC PR    = 0.886984
   CLL	      = -0.560628
   Precision = 0.8 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.8


Total scoring time: 0.918 seconds
Parameter learned model CLL: -0.560628


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'teamalsoknownas(G, A)', 'false,false': 'teamplaysagainstteam(A, F)', 'false': 'athleteplaysforteam(D, A), athleteledsportsteam(D, E)'}, {'false,false,false,false': [1.0, 2, 2], 'true': [1.095, 3, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)', 'true,true': 'teamplaysagainstteam(E, F)', 'true': 'teamalsoknownas(C, A)'}, {'true,true,true': [0.0, 0, 1], 'true,false': [1.489, 5, 4], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [0.481, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [1.519, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamplaysagainstteam(A, D), teamalsoknownas(E, D)', 'true,false': 'teamalsoknownas(C, F)', 'false': 'teamplaysagainstteam(A, A)', 'false,false': 'athleteplaysforteam(G, A)', 'false,false,true': 'athleteledsportsteam(G, H)'}, {'true,false,true': [0.0, 0, 1], 'false,false,false': [0.5, 2, 2], 'false,false,true,true': [0.866, 3, 1], 'true,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)'}, {'true': [0.455, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamalsoknownas(C, D)', 'false': 'athleteledsportsteam(E, F)'}, {'false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 1], 'false,true': [1.421, 5, 4], 'true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamplaysinleague(A, G)', 'true': 'teamplaysinleague(A, D)', 'false,false': 'athleteledsportsteam(F, A)', 'false': 'teamplaysagainstteam(A, E)'}, {'false,false,false,false': [0.816, 1, 2], 'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.449, 3, 2], 'false,false,false,true': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)'}, {'true': [0.436, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false,true': 'teamplaysagainstteam(F, G)', 'false': 'teamplaysinleague(D, E)'}, {'false,true,true': [0.816, 1, 2], 'true': [1.074, 4, 3], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.24000000000000005, 0.23999999999999994], 'false,false,false': [0.0, 0.25], 'false,false': [nan, 0.23999999999999994], 'false': [nan, 0.23999999999999994]}, {'': [0.24048118986090064, nan], 'true,true': [0.0, nan], 'true': [0.0, 0.24622870910548877]}, {'': [0.23168481319923218, nan]}, {'': [0.2306627488805521, nan]}, {'': [0.0, 0.2459620405239196], 'true': [nan, 0.0], 'false,false': [0.24, 0.24999999999999997], 'false': [nan, 0.2459620405239196], 'true,false': [0.0, nan], 'false,false,true': [0.1875, 0.0]}, {'': [0.2074567906017514, nan]}, {'': [0.0, 0.2243319417983206], 'true': [0.0, nan], 'false': [0.2243319417983206, nan]}, {'': [0.0, 0.22408622697743338], 'false,false,false': [0.0, 0.2222222222222222], 'true': [0.0, nan], 'false,false': [nan, 0.25000000000000006], 'false': [0.20177821129608745, 0.25000000000000006]}, {'': [0.18973147776446034, nan]}, {'': [0.16472679517462036, 0.2222222222222222], 'false,true': [0.2222222222222222, nan], 'false': [0.2222222222222222, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
0;false;teamalsoknownas(G, A).;true;true
1;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
4;false,true;athleteledsportsteam(G, H).;true;true
4;false;athleteplaysforteam(G, A).;true;true
6;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
7;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
7;false,false;teamplaysinleague(A, G).;true;true
7;false;teamplaysagainstteam(A, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8162373951348705;  // std dev = 0,015, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.18226335299528248;  // std dev = 0,016, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.6412077659803699;  // std dev = 0,099, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1566604648557343;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.486235550299314;  // std dev = 0,103, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.13706292781431653;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.2880106153910945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplaysforteam(D, A) )
%   | then if ( athleteledsportsteam(D, E) )
%   | | then return 0.01221114351098282;  // std dev = 0,449, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.40087282713422046;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.12450395946182385;  // std dev = 0,505, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32735704630320694;  // std dev = 0,123, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12823384153242534;  // std dev = 0,026, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.17939771891955503;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.28078377101071117;  // std dev = 0,056, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.11458417448716489;  // std dev = 0,024, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.15448733296974737;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0.034850525135755296;  // std dev = 0,360, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return -0.11545915428386797;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.1117797863109572;  // std dev = 0,278, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.19937514897360575;  // std dev = 0,088, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10543293057268617;  // std dev = 0,025, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.16969720622286286;  // std dev = 0,077, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09590612029222742;  // std dev = 0,023, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.989613
   AUC PR    = 0.113781
   CLL	      = -0.199712
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 1.613 seconds
Total inference time: 4.556 seconds
AUC ROC: 0.989613


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.126023
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.823 seconds
Refined model CLL: -0.126023


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.989613
   AUC PR    = 0.113781
   CLL	      = -0.199712
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 4.9990000000000006 seconds
Total inference time: 4.556 seconds
AUC ROC: 0.989613
Total revision time: 4.9990000000000006
Best scored revision CLL: -0.126023


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 01:50:45
{'AUC ROC': 0.989613, 'parameter_5': {'AUC ROC': 0.490209, 'Recall': 0.451128, 'CLL': -0.693322, 'Precision': [0.002424, 0.5], 'Learning time': 1.645, 'F1': 0.004822, 'Inference time': 101.375, 'AUC PR': 0.002394}, 'Recall': 0.992481, 'CLL': -0.199712, 'Precision': [0.121212, 0.5], 'Learning time': 4.9990000000000006, 'F1': 0.216039, 'Inference time': 4.556, 'AUC PR': 0.113781}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.099512
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 1.96 seconds
Total inference time: 3.981 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN-B), Time: 01:50:51
{'AUC ROC': 0.987268, 'Recall': 0.992481, 'CLL': -0.099512, 'Precision': [0.121212, 0.5], 'Learning time': 1.96, 'F1': 0.216039, 'Inference time': 3.981, 'AUC PR': 0.120766}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.140377
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.894 seconds
Total inference time: 2.975 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN), Time: 01:50:55
{'AUC ROC': 0.987268, 'Recall': 0.0, 'CLL': -0.140377, 'Precision': [nan, 0.5], 'Learning time': 0.894, 'F1': nan, 'Inference time': 2.975, 'AUC PR': 0.120766}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false,false,false;countryhascompanyoffice(H, A), acquired(A, I).;false;false
0;false,false;companyalsoknownas(A, G).;true;true
0;false;bankchiefexecutiveceo(A, D), companyceo(E, D).;true;true
0;false,true,false;bankchiefexecutiveceo(E, F).;false;false
0;false,true;economicsectorcompany(B, E).;false;true
0;false,false,true;companyalsoknownas(A, A).;false;false
1;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
1;false,false,false;acquired(A, L), cityhascompanyoffice(M, L).;false;false
1;true,true;companyalsoknownas(E, F).;false;true
1;false,false;acquired(I, A), cityhascompanyoffice(J, I).;true;true
1;false;acquired(A, H), economicsectorcompany(B, H).;false;true
1;true,true,false;countryhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
1;true;countryhascompanyoffice(D, A), acquired(C, E).;true;false
1;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
2;;companyeconomicsector(A, B) :- bankboughtbank(C, A), cityhascompanyoffice(D, C).;true;true
2;false,false,false;acquired(M, A), economicsectorcompany(B, M).;false;false
2;true;bankboughtbank(A, E).;false;false
2;false,false;countryhascompanyoffice(J, A), bankbankincountry(K, J).;true;true
2;false;companyceo(A, F).;true;true
2;false,true,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;false;false
2;false,true;acquired(A, G), cityhascompanyoffice(H, G).;false;true
2;false,false,true;countryhascompanyoffice(J, L), economicsectorcompany(B, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;false,false,false;companyceo(A, J).;false;false
3;true;acquired(D, C), cityhascompanyoffice(E, D).;false;false
3;false,false;companyalsoknownas(A, I).;true;true
3;false;acquired(A, F), cityhascompanyoffice(G, A).;true;true
3;false,true,false;companyalsoknownas(F, H).;false;false
3;false,true;economicsectorcompany(B, F).;false;true
3;false,false,true;economicsectorcompany(B, I).;false;false
4;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
4;false,false,false;acquired(J, A), economicsectorcompany(B, J).;false;false
4;true,true;economicsectorcompany(B, E).;false;false
4;true,false;countryhascompanyoffice(C, G), economicsectorcompany(B, G).;false;false
4;false;companyalsoknownas(A, A).;false;true
4;false,false;bankchiefexecutiveceo(A, H).;true;true
4;true;companyalsoknownas(A, E), countryhascompanyoffice(F, E).;true;true
4;false,false,true;companyceo(I, H), economicsectorcompany(B, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), economicsectorcompany(B, C).;false;true
5;false,false,false;companyalsoknownas(A, I).;false;false
5;false,false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
5;false;acquired(D, A).;true;true
5;false,true,false;economicsectorcompany(B, D).;false;false
5;false,true,true;economicsectorcompany(B, D).;false;false
5;false,true;acquired(E, D), companyceo(E, F).;true;true
5;false,false,true;economicsectorcompany(B, H).;false;false
6;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
6;false,false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;false;false
6;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
6;false,false;companyalsoknownas(A, H).;true;true
6;false;acquired(F, A).;true;true
6;false,true,false;companyceo(F, G).;false;false
6;false,true;economicsectorcompany(B, F).;false;true
6;false,false,true;economicsectorcompany(B, H).;false;false
7;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
7;false,false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;false
7;true;cityhascompanyoffice(E, A).;false;false
7;false,false;companyceo(A, H).;true;true
7;false;companyalsoknownas(A, F).;true;true
7;false,true,false;economicsectorcompany(B, F).;false;false
7;false,true;acquired(F, G), economicsectorcompany(B, G).;false;true
7;false,false,true;bankboughtbank(I, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
8;false,false,false;acquired(A, L), countryhascompanyoffice(M, A).;false;false
8;true;economicsectorcompany(B, C).;false;false
8;false,false;companyalsoknownas(A, J).;true;true
8;false;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(H, A), acquired(F, I).;false;false
8;false,true;companyceo(A, G).;true;false
8;false,false,true;companyalsoknownas(J, K), economicsectorcompany(B, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true,false,true;companyalsoknownas(E, G).;false;false
9;false,false,false;companyceo(A, K).;false;false
9;true;cityhascompanyoffice(D, A).;false;true
9;true,false;acquired(C, E), cityhascompanyoffice(F, C).;true;false
9;false;cityhascompanyoffice(H, A).;true;true
9;false,false;companyalsoknownas(A, J).;false;true
9;false,true;cityhascompanyoffice(H, I), economicsectorcompany(B, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( athleteplaysforteam(D, A), athleteledsportsteam(D, E) )
%   | then if ( athleteplaysforteam(F, E) )
%   | | then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.3581489350995122;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.30259337954395676;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamplaysagainstteam(C, A) )
%   | then if ( teamalsoknownas(E, F) )
%   | | then return 0.2595765145746127;  // std dev = 1,450, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.3448757365908018;  // std dev = 1,602, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.2544191045830481;  // std dev = 0,482, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.20493549079258414;  // std dev = 2,149, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(D, A), teamplaysagainstteam(E, D) )
%   | then return 0.5555003458912128;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(C, F) )
%   | | then return 0.07491606548256316;  // std dev = 1,363, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.18806910770039076;  // std dev = 0,478, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then return 0.12385337012650126;  // std dev = 0,474, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then return 0.07121776407766106;  // std dev = 1,404, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(E, F) )
%   | then return 0.11460439499362263;  // std dev = 1,584, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.054944668697193784;  // std dev = 1,404, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(E, A) )
%   | then return 0.42827168319995235;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteledsportsteam(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.06627015721267807;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.005158414215893374;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then return 0.05542794825303091;  // std dev = 0,467, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then return 0.0744038077446194;  // std dev = 1,615, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   else if ( teamplaysinleague(D, E) )
%   | then if ( teamalsoknownas(F, G) )
%   | | then return -0.017543679168337673;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.491397
   AUC PR    = 0.002423
   CLL	      = -0.663763
   Precision = 0.002444 at threshold = 0.5
   Recall    = 0.180451
   F1        = 0.004824


Total learning time: 2.868 seconds
Total inference time: 177.953 seconds
AUC ROC: 0.491397


Results scoring model
   AUC ROC   = 0.69
   AUC PR    = 0.753668
   CLL	      = -0.627598
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.3
   F1        = 0.461538


Total scoring time: 1.176 seconds
Parameter learned model CLL: -0.627598


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamplaysagainstteam(H, A)', 'false,false': 'teamalsoknownas(G, A)', 'false': 'athleteplaysforteam(D, A), athleteledsportsteam(D, E)', 'false,true': 'athleteplaysforteam(F, E)'}, {'false,false,false,false': [1.491, 5, 4], 'true': [2.11e-08, 0, 3], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [1.155, 4, 2], 'false,false,false,true': [0.707, 1, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)', 'true,true': 'teamalsoknownas(E, F)', 'true': 'teamplaysagainstteam(C, A)'}, {'true,true,true': [1.45, 5, 4], 'true,false': [1.602, 5, 6], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [0.482, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [2.149, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true,false': 'teamplaysagainstteam(C, F)', 'true': 'teamalsoknownas(D, A), teamplaysagainstteam(E, D)', 'false,false': 'athleteplaysforteam(G, A)', 'false': 'teamalsoknownas(A, A)'}, {'true,false,true': [1.363, 5, 3], 'false,false,false': [0.478, 5, 6], 'true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)'}, {'true': [0.474, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysagainstteam(C, D)', 'false': 'athleteledsportsteam(E, F)'}, {'false,false': [0.0, 0, 0], 'true,true': [1.404, 5, 4], 'false,true': [1.584, 5, 6], 'true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false,false': 'teamplaysinleague(A, G)', 'true': 'teamplaysinleague(A, D)', 'false,false': 'athleteledsportsteam(F, A)', 'false': 'teamalsoknownas(E, A)'}, {'false,false,false,false': [1.309, 4, 3], 'true,true': [1.404, 5, 4], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.0, 0, 2], 'false,false,false,true': [0.707, 1, 1]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)'}, {'true': [0.467, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false,true': 'teamalsoknownas(F, G)', 'false': 'teamplaysinleague(D, E)'}, {'false,true,true': [1.309, 4, 3], 'true': [1.615, 6, 7], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [1.4802973661668753e-16, 0.24221453287197234], 'false,false,false': [0.25, 0.2469135802469134], 'false,false': [nan, 0.24793388429752045], 'false': [0.22222222222222224, 0.24793388429752053], 'false,true': [0.22222222222222224, nan]}, {'': [0.23514299460176039, nan], 'true,true': [0.23351209781339932, nan], 'true': [0.23351209781339932, 0.23320318392687336]}, {'': [0.23241382030302696, nan]}, {'': [0.23085324391870676, nan]}, {'': [0.22937972876594115, 0.22866712162997424], 'false,false': [nan, 0.22866712162997424], 'true': [0.0, 0.2323898336865839], 'true,false': [0.2323898336865839, nan], 'false': [nan, 0.22866712162997424]}, {'': [0.22466102465790208, nan]}, {'': [0.21899214918334164, 0.2280015869843447], 'true': [0.21899214918334164, nan], 'false': [0.2280015869843447, nan]}, {'': [0.21892055410306216, 0.22795714825357544], 'false,false,false': [0.24999999999999997, 0.24489795918367346], 'true': [0.21892055410306216, nan], 'false,false': [nan, 0.2469135802469136], 'false': [0.0, 0.2469135802469136]}, {'': [0.21796196638696355, nan]}, {'': [0.20062184281351686, 0.24489795918367344], 'false,true': [0.24489795918367344, nan], 'false': [0.24489795918367344, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
4;true;teamalsoknownas(D, A), teamplaysagainstteam(E, D).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
7;false;teamalsoknownas(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109543;  // std dev = 5,16e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(D, A), teamplaysagainstteam(E, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( athleteplayssport(G, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( teamalsoknownas(E, A) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.990695
   AUC PR    = 0.12086
   CLL	      = -0.125946
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 2.827 seconds
Total inference time: 5.041 seconds
AUC ROC: 0.990695


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.83 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990695
   AUC PR    = 0.12086
   CLL	      = -0.125946
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 7.701 seconds
Total inference time: 5.041 seconds
AUC ROC: 0.990695
Total revision time: 7.701
Best scored revision CLL: -0.094637


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 01:54:07
{'AUC ROC': 0.990695, 'Recall': 0.992481, 'CLL': -0.125946, 'Precision': [0.121212, 0.5], 'Learning time': 7.701, 'parameter_10': {'AUC ROC': 0.491397, 'Recall': 0.180451, 'CLL': -0.663763, 'Precision': [0.002444, 0.5], 'Learning time': 2.868, 'F1': 0.004824, 'Inference time': 177.953, 'AUC PR': 0.002423}, 'F1': 0.216039, 'Inference time': 5.041, 'AUC PR': 0.12086}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.099512
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 2.449 seconds
Total inference time: 4.378 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN-B), Time: 01:54:14
{'AUC ROC': 0.987268, 'Recall': 0.992481, 'CLL': -0.099512, 'Precision': [0.121212, 0.5], 'Learning time': 2.449, 'F1': 0.216039, 'Inference time': 4.378, 'AUC PR': 0.120766}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.140377
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.052 seconds
Total inference time: 2.967 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN), Time: 01:54:18
{'AUC ROC': 0.987268, 'Recall': 0.0, 'CLL': -0.140377, 'Precision': [nan, 0.5], 'Learning time': 1.052, 'F1': nan, 'Inference time': 2.967, 'AUC PR': 0.120766}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false,false,false;countryhascompanyoffice(H, A), acquired(A, I).;false;false
0;false,false;companyalsoknownas(A, G).;true;true
0;false;bankchiefexecutiveceo(A, D), companyceo(E, D).;true;true
0;false,true,false;bankchiefexecutiveceo(E, F).;false;false
0;false,true;economicsectorcompany(B, E).;false;true
0;false,false,true;companyalsoknownas(A, A).;false;false
1;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
1;false,false,false;acquired(A, L), cityhascompanyoffice(M, L).;false;false
1;true,true;companyalsoknownas(E, F).;false;true
1;false,false;acquired(I, A), cityhascompanyoffice(J, I).;true;true
1;false;acquired(A, H), economicsectorcompany(B, H).;false;true
1;true,true,false;countryhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
1;true;countryhascompanyoffice(D, A), acquired(C, E).;true;false
1;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
2;;companyeconomicsector(A, B) :- bankboughtbank(C, A), cityhascompanyoffice(D, C).;true;true
2;false,false,false;acquired(M, A), economicsectorcompany(B, M).;false;false
2;true;bankboughtbank(A, E).;false;false
2;false,false;countryhascompanyoffice(J, A), bankbankincountry(K, J).;true;true
2;false;companyceo(A, F).;true;true
2;false,true,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;false;false
2;false,true;acquired(A, G), cityhascompanyoffice(H, G).;false;true
2;false,false,true;countryhascompanyoffice(J, L), economicsectorcompany(B, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;false,false,false;companyceo(A, J).;false;false
3;true;acquired(D, C), cityhascompanyoffice(E, D).;false;false
3;false,false;companyalsoknownas(A, I).;true;true
3;false;acquired(A, F), cityhascompanyoffice(G, A).;true;true
3;false,true,false;companyalsoknownas(F, H).;false;false
3;false,true;economicsectorcompany(B, F).;false;true
3;false,false,true;economicsectorcompany(B, I).;false;false
4;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
4;false,false,false;acquired(J, A), economicsectorcompany(B, J).;false;false
4;true,true;economicsectorcompany(B, E).;false;false
4;true,false;countryhascompanyoffice(C, G), economicsectorcompany(B, G).;false;false
4;false;companyalsoknownas(A, A).;false;true
4;false,false;bankchiefexecutiveceo(A, H).;true;true
4;true;companyalsoknownas(A, E), countryhascompanyoffice(F, E).;true;true
4;false,false,true;companyceo(I, H), economicsectorcompany(B, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), economicsectorcompany(B, C).;false;true
5;false,false,false;companyalsoknownas(A, I).;false;false
5;false,false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
5;false;acquired(D, A).;true;true
5;false,true,false;economicsectorcompany(B, D).;false;false
5;false,true,true;economicsectorcompany(B, D).;false;false
5;false,true;acquired(E, D), companyceo(E, F).;true;true
5;false,false,true;economicsectorcompany(B, H).;false;false
6;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
6;false,false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;false;false
6;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
6;false,false;companyalsoknownas(A, H).;true;true
6;false;acquired(F, A).;true;true
6;false,true,false;companyceo(F, G).;false;false
6;false,true;economicsectorcompany(B, F).;false;true
6;false,false,true;economicsectorcompany(B, H).;false;false
7;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
7;false,false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;false
7;true;cityhascompanyoffice(E, A).;false;false
7;false,false;companyceo(A, H).;true;true
7;false;companyalsoknownas(A, F).;true;true
7;false,true,false;economicsectorcompany(B, F).;false;false
7;false,true;acquired(F, G), economicsectorcompany(B, G).;false;true
7;false,false,true;bankboughtbank(I, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
8;false,false,false;acquired(A, L), countryhascompanyoffice(M, A).;false;false
8;true;economicsectorcompany(B, C).;false;false
8;false,false;companyalsoknownas(A, J).;true;true
8;false;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(H, A), acquired(F, I).;false;false
8;false,true;companyceo(A, G).;true;false
8;false,false,true;companyalsoknownas(J, K), economicsectorcompany(B, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true,false,true;companyalsoknownas(E, G).;false;false
9;false,false,false;companyceo(A, K).;false;false
9;true;cityhascompanyoffice(D, A).;false;true
9;true,false;acquired(C, E), cityhascompanyoffice(F, C).;true;false
9;false;cityhascompanyoffice(H, A).;true;true
9;false,false;companyalsoknownas(A, J).;false;true
9;false,true;cityhascompanyoffice(H, I), economicsectorcompany(B, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.25814893509951237;  // std dev = 1,897, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( teamplaysinleague(E, F) )
%   | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A), teamalsoknownas(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), athleteplaysforteam(D, C) )
%   then if ( athleteplaysforteam(D, A), teamalsoknownas(C, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.17626634551589418;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( teamalsoknownas(A, F) )
%   | then return 0.45441935428884467;  // std dev = 0,801, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamalsoknownas(G, A), athleteledsportsteam(H, G) )
%   | | then if ( athleteledsportsteam(H, I) )
%   | | | then return 0.49040032115077253;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, J), athleteledsportsteam(K, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3074478987668085;  // std dev = 2,336, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then return 0.25466492983175215;  // std dev = 0,490, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamalsoknownas(D, C), athleteledsportsteam(E, D) )
%   | then return 0.3625952587646141;  // std dev = 0,674, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3559531827365538;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(A, F), athleteledsportsteam(G, A) )
%   | then if ( teamplaysagainstteam(H, F) )
%   | | then return -0.18793984517125442;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return 0.12705627361415223;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.22372476184450493;  // std dev = 0,502, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), athleteplaysforteam(F, E) )
%   | then return 0.12321693190361369;  // std dev = 0,477, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, G) )
%   | | then return 0.1831917616445588;  // std dev = 0,466, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( teamalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.19750626247839353;  // std dev = 1,504, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.02443660428625961;  // std dev = 0,897, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( teamalsoknownas(D, A) )
%   | then if ( teamalsoknownas(E, D) )
%   | | then return 0.24540973681317682;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, F) )
%   | | then return 0.07409754960776138;  // std dev = 0,494, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( teamplaysagainstteam(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.224396620256742;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(C, E) )
%   | then return 0.07271373738077815;  // std dev = 1,767, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A) )
%   | then return 0.49896912381514236;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return -0.3553984885117012;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteledsportsteam(H, I) )
%   | | | then return 0.08806266711315693;  // std dev = 1,793, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, A) )
%   | then return 0.03637976564894861;  // std dev = 1,493, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else return 0.10622661698043288;  // std dev = 0,934, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamalsoknownas(F, G) )
%   | | then return -0.27872574517898424;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(H, A), athleteledsportsteam(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.10760300147835015;  // std dev = 1,839, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.1430052079883307;  // std dev = 0,396, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamplaysagainstteam(D, A), teamalsoknownas(D, E) )
%   | then if ( athleteplaysforteam(F, A), teamalsoknownas(E, G) )
%   | | then return 0.22403189361090378;  // std dev = 1,246, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.33570519158048684;  // std dev = 0,127, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, I), athleteplaysforteam(J, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.03931814632106245;  // std dev = 1,792, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return -0.28415570739833734;  // std dev = 0,067, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamalsoknownas(C, E), athleteledsportsteam(F, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.0463902759376279;  // std dev = 0,670, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( athleteledsportsteam(G, A) )
%   | then if ( athleteledsportsteam(G, H) )
%   | | then return 0.08053025655437594;  // std dev = 1,345, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return 0.016616925759760627;  // std dev = 0,907, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.07368717195910039;  // std dev = 0,492, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */


Results
   AUC ROC   = 0.49255
   AUC PR    = 0.002407
   CLL	      = -0.57704
   Precision = 0.002479 at threshold = 0.5
   Recall    = 0.458647
   F1        = 0.004931


Total learning time: 1.62 seconds
Total inference time: 19.009 seconds
AUC ROC: 0.49255


Results scoring model
   AUC ROC   = 0.751111
   AUC PR    = 0.755527
   CLL	      = -0.597241
   Precision = 0.611111 at threshold = 0.5
   Recall    = 0.733333
   F1        = 0.666667


Total scoring time: 0.905 seconds
Parameter learned model CLL: -0.597241


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false,false': 'athleteplaysforteam(H, A), teamalsoknownas(A, I)', 'false,false': 'teamplaysagainstteam(G, A)', 'false': 'teamplaysinleague(A, D)', 'false,true': 'teamplaysinleague(E, F)'}, {'false,false,false,false': [1.491, 4, 5], 'true': [1.897, 9, 6], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [1.155, 2, 4], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), athleteplaysforteam(D, C)', 'false,false,false': 'teamalsoknownas(A, J), athleteledsportsteam(K, J)', 'true': 'athleteplaysforteam(D, A), teamalsoknownas(C, E)', 'false,false': 'teamalsoknownas(G, A), athleteledsportsteam(H, G)', 'false': 'teamalsoknownas(A, F)', 'false,false,true': 'athleteledsportsteam(H, I)'}, {'false,false,true,true': [0.816, 1, 2], 'true,true': [0.0, 0, 0], 'true,false': [0.0, 2, 0], 'false,true': [0.801, 1, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,false': [2.336, 11, 11], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)'}, {'true': [0.49, 15, 15], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,true': 'teamplaysagainstteam(H, F)', 'true': 'teamalsoknownas(D, C), athleteledsportsteam(E, D)', 'false,false': 'teamplaysagainstteam(I, A)', 'false': 'teamalsoknownas(A, F), athleteledsportsteam(G, A)'}, {'false,false,false': [0.502, 6, 7], 'true,true': [0.674, 1, 2], 'true,false': [0.816, 1, 2], 'false,false,true': [0.49, 6, 4], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplaysinleague(C, D)', 'false,false,false': 'teamalsoknownas(H, A)', 'true': 'teamplaysagainstteam(E, A), athleteplaysforteam(F, E)', 'false,false': 'teamplaysinleague(A, G)', 'false': 'teamplaysagainstteam(A, A)'}, {'false,false,false,false': [1.504, 4, 5], 'true,true': [0.477, 8, 6], 'true,false': [0.0, 0, 0], 'false,false,true': [0.466, 3, 4], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false,false,false': 'teamplaysagainstteam(G, A)', 'false,false': 'teamplaysinleague(A, F)', 'false': 'teamalsoknownas(D, A)', 'false,true': 'teamalsoknownas(E, D)'}, {'false,false,false,false': [1.369, 3, 5], 'true': [0.897, 3, 2], 'false,false,true': [0.494, 8, 6], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.471, 1, 2], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplaysinleague(C, D)', 'false,false,false': 'athleteledsportsteam(H, I)', 'true': 'athleteplaysforteam(C, E)', 'false,false': 'teamplaysagainstteam(G, A)', 'false': 'teamalsoknownas(F, A)'}, {'false,false,false,false': [0.0, 0, 0], 'true,true': [1.767, 8, 6], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 1, 0], 'false,true': [0.0, 0, 2], 'false,false,false,true': [1.793, 6, 7]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplaysinleague(C, D)', 'false,true': 'teamalsoknownas(F, G)', 'true': 'athleteledsportsteam(E, A)', 'false,false': 'teamalsoknownas(H, A), athleteledsportsteam(I, A)', 'false': 'teamplaysagainstteam(F, A)'}, {'false,false,false': [1.839, 6, 9], 'true,true': [1.493, 6, 4], 'true,false': [0.934, 2, 2], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamalsoknownas(A, I), athleteplaysforteam(J, A)', 'false,false': 'teamplaysagainstteam(H, A)', 'false': 'teamplaysagainstteam(D, A), teamalsoknownas(D, E)', 'false,true': 'athleteplaysforteam(F, A), teamalsoknownas(E, G)'}, {'false,false,false,false': [1.792, 6, 7], 'true': [0.396, 2, 4], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.127, 4, 0], 'false,true,true': [1.246, 3, 4], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'athleteledsportsteam(D, A)', 'false,false': 'teamplaysagainstteam(I, A)', 'false': 'athleteledsportsteam(G, A)', 'true,false': 'teamalsoknownas(C, E), athleteledsportsteam(F, C)', 'false,true': 'athleteledsportsteam(G, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false': [0.492, 5, 7], 'true,true': [0.067, 2, 0], 'true,false,false': [0.67, 1, 2], 'false,true,false': [0.0, 0, 0], 'false,true,true': [1.345, 4, 4], 'false,false,true': [0.907, 3, 2]}]]
[{'': [0.24000000000000007, 0.2399999999999999], 'false,false,false': [nan, 0.2469135802469134], 'false,false': [nan, 0.2469135802469134], 'false': [0.22222222222222213, 0.2469135802469134], 'false,true': [0.22222222222222213, nan]}, {'': [0.0, 0.2463424303673077], 'false,false,false': [nan, 0.24810434268851253], 'true': [nan, 0.0], 'false,false': [0.22222222222222224, 0.24810434268851253], 'false': [0.21413222540666202, 0.24853308801576854], 'false,false,true': [0.22222222222222224, nan]}, {'': [0.239823806637735, nan]}, {'': [0.18689436557102113, 0.24410272537448371], 'false,true': [0.0, nan], 'true': [0.15154445033283878, 0.22222222222222218], 'false,false': [0.2399999999999999, 0.2519007691484764], 'false': [0.0, 0.24902297454739317]}, {'': [0.22730900416977998, 0.23629283971871223], 'false,false,false': [nan, 0.25126346074276046], 'true': [0.22730900416977998, nan], 'false,false': [0.21692963937663526, 0.25126346074276046], 'false': [nan, 0.23629283971871226]}, {'': [0.16082558954832693, 0.24413658936941304], 'false,false,false': [nan, 0.23437499999999994], 'false,false': [0.2436298152050691, 0.23437499999999994], 'false': [0.2222222222222222, 0.24549182205498202], 'false,true': [0.2222222222222222, nan]}, {'': [0.2230409155885487, 0.2336572862084426], 'false,false,false': [0.24716287913512264, nan], 'true': [0.2230409155885487, nan], 'false,false': [0.0, 0.24716287913512264], 'false': [0.0, 0.24255201713121463]}, {'': [0.22268110132368943, 0.22001043280480642], 'false,true': [0.0, nan], 'true': [0.22303199187618156, 0.21831917305608606], 'false,false': [nan, 0.22534967621092936], 'false': [0.0, 0.22534967621092936]}, {'': [0.15659829985737664, 0.2325732338232512], 'false,false,false': [nan, 0.24714902220260127], 'false,false': [nan, 0.24714902220260127], 'false': [0.21515530491708806, 0.24714902220260127], 'false,true': [0.22186504934800302, 0.004036958365725152]}, {'': [0.11696657542388258, 0.2221697324576513], 'true': [0.002247857812177373, 0.1497414616585366], 'false,false': [0.16453101294440037, 0.2423524085858084], 'false': [0.2261033539429155, 0.22013995927977212], 'true,false': [nan, 0.1497414616585366], 'false,true': [0.2261033539429155, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;teamplayssport(A, B) :- teamalsoknownas(A, C), athleteplaysforteam(D, C).;true;true
3;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
3;false;teamalsoknownas(A, F), athleteledsportsteam(G, A).;true;true
6;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplaysinleague(C, D).;true;true
6;false,false;teamplaysagainstteam(G, A).;true;true
6;false;teamalsoknownas(F, A).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplaysinleague(C, D).;true;true
7;false;teamplaysagainstteam(F, A).;true;true
9;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
9;true;athleteledsportsteam(D, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), athleteplaysforteam(D, C) )
%   then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.24447694627626118;  // std dev = 0,599, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamalsoknownas(A, D), athleteledsportsteam(E, A) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.1015963294878363;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.33105960453533306;  // std dev = 0,066, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09715687761746335;  // std dev = 0,044, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2623015156333215;  // std dev = 0,058, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08897293751437901;  // std dev = 0,041, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.21681880472700565;  // std dev = 0,034, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.08539666002556104;  // std dev = 0,035, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamalsoknownas(F, A) )
%   | then return 0.2367055596787475;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return -0.07817984794586301;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(H, B) )
%   | | | then return 0.20687542725113467;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.07817984794586301;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.18229380299542275;  // std dev = 0,030, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07897069280860979;  // std dev = 0,033, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysagainstteam(F, A) )
%   | then return -0.07272816273987727;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(G, B) )
%   | | then return 0.17978934483448616;  // std dev = 0,027, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.07272816273987727;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15555690121499113;  // std dev = 0,036, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.0708804278680907;  // std dev = 0,033, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return -0.07468521510206752;  // std dev = 0,017, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.07809243254358066;  // std dev = 0,174, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( athleteplayssport(E, B) )
%   | then return 0.13425137500335033;  // std dev = 0,026, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.06519685908136356;  // std dev = 0,022, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */


Results
   AUC ROC   = 0.989898
   AUC PR    = 0.121872
   CLL	      = -0.105677
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 3.315 seconds
Total inference time: 5.046 seconds
AUC ROC: 0.989898


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097628
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.878 seconds
Refined model CLL: -0.097628


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.989898
   AUC PR    = 0.121872
   CLL	      = -0.105677
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 6.718 seconds
Total inference time: 5.046 seconds
AUC ROC: 0.989898
Total revision time: 6.718
Best scored revision CLL: -0.097628


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 01:54:50
{'AUC ROC': 0.989898, 'Recall': 0.992481, 'CLL': -0.105677, 'Precision': [0.121212, 0.5], 'Learning time': 6.718, 'F1': 0.216039, 'Inference time': 5.046, 'parameter_15': {'AUC ROC': 0.49255, 'Recall': 0.458647, 'CLL': -0.57704, 'Precision': [0.002479, 0.5], 'Learning time': 1.62, 'F1': 0.004931, 'Inference time': 19.009, 'AUC PR': 0.002407}, 'AUC PR': 0.121872}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.099512
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 2.872 seconds
Total inference time: 4.206 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN-B), Time: 01:54:57
{'AUC ROC': 0.987268, 'Recall': 0.992481, 'CLL': -0.099512, 'Precision': [0.121212, 0.5], 'Learning time': 2.872, 'F1': 0.216039, 'Inference time': 4.206, 'AUC PR': 0.120766}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.140377
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.098 seconds
Total inference time: 2.956 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN), Time: 01:55:01
{'AUC ROC': 0.987268, 'Recall': 0.0, 'CLL': -0.140377, 'Precision': [nan, 0.5], 'Learning time': 1.098, 'F1': nan, 'Inference time': 2.956, 'AUC PR': 0.120766}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false,false,false;countryhascompanyoffice(H, A), acquired(A, I).;false;false
0;false,false;companyalsoknownas(A, G).;true;true
0;false;bankchiefexecutiveceo(A, D), companyceo(E, D).;true;true
0;false,true,false;bankchiefexecutiveceo(E, F).;false;false
0;false,true;economicsectorcompany(B, E).;false;true
0;false,false,true;companyalsoknownas(A, A).;false;false
1;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
1;false,false,false;acquired(A, L), cityhascompanyoffice(M, L).;false;false
1;true,true;companyalsoknownas(E, F).;false;true
1;false,false;acquired(I, A), cityhascompanyoffice(J, I).;true;true
1;false;acquired(A, H), economicsectorcompany(B, H).;false;true
1;true,true,false;countryhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
1;true;countryhascompanyoffice(D, A), acquired(C, E).;true;false
1;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
2;;companyeconomicsector(A, B) :- bankboughtbank(C, A), cityhascompanyoffice(D, C).;true;true
2;false,false,false;acquired(M, A), economicsectorcompany(B, M).;false;false
2;true;bankboughtbank(A, E).;false;false
2;false,false;countryhascompanyoffice(J, A), bankbankincountry(K, J).;true;true
2;false;companyceo(A, F).;true;true
2;false,true,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;false;false
2;false,true;acquired(A, G), cityhascompanyoffice(H, G).;false;true
2;false,false,true;countryhascompanyoffice(J, L), economicsectorcompany(B, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;false,false,false;companyceo(A, J).;false;false
3;true;acquired(D, C), cityhascompanyoffice(E, D).;false;false
3;false,false;companyalsoknownas(A, I).;true;true
3;false;acquired(A, F), cityhascompanyoffice(G, A).;true;true
3;false,true,false;companyalsoknownas(F, H).;false;false
3;false,true;economicsectorcompany(B, F).;false;true
3;false,false,true;economicsectorcompany(B, I).;false;false
4;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
4;false,false,false;acquired(J, A), economicsectorcompany(B, J).;false;false
4;true,true;economicsectorcompany(B, E).;false;false
4;true,false;countryhascompanyoffice(C, G), economicsectorcompany(B, G).;false;false
4;false;companyalsoknownas(A, A).;false;true
4;false,false;bankchiefexecutiveceo(A, H).;true;true
4;true;companyalsoknownas(A, E), countryhascompanyoffice(F, E).;true;true
4;false,false,true;companyceo(I, H), economicsectorcompany(B, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), economicsectorcompany(B, C).;false;true
5;false,false,false;companyalsoknownas(A, I).;false;false
5;false,false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
5;false;acquired(D, A).;true;true
5;false,true,false;economicsectorcompany(B, D).;false;false
5;false,true,true;economicsectorcompany(B, D).;false;false
5;false,true;acquired(E, D), companyceo(E, F).;true;true
5;false,false,true;economicsectorcompany(B, H).;false;false
6;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
6;false,false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;false;false
6;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
6;false,false;companyalsoknownas(A, H).;true;true
6;false;acquired(F, A).;true;true
6;false,true,false;companyceo(F, G).;false;false
6;false,true;economicsectorcompany(B, F).;false;true
6;false,false,true;economicsectorcompany(B, H).;false;false
7;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
7;false,false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;false
7;true;cityhascompanyoffice(E, A).;false;false
7;false,false;companyceo(A, H).;true;true
7;false;companyalsoknownas(A, F).;true;true
7;false,true,false;economicsectorcompany(B, F).;false;false
7;false,true;acquired(F, G), economicsectorcompany(B, G).;false;true
7;false,false,true;bankboughtbank(I, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
8;false,false,false;acquired(A, L), countryhascompanyoffice(M, A).;false;false
8;true;economicsectorcompany(B, C).;false;false
8;false,false;companyalsoknownas(A, J).;true;true
8;false;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(H, A), acquired(F, I).;false;false
8;false,true;companyceo(A, G).;true;false
8;false,false,true;companyalsoknownas(J, K), economicsectorcompany(B, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true,false,true;companyalsoknownas(E, G).;false;false
9;false,false,false;companyceo(A, K).;false;false
9;true;cityhascompanyoffice(D, A).;false;true
9;true,false;acquired(C, E), cityhascompanyoffice(F, C).;true;false
9;false;cityhascompanyoffice(H, A).;true;true
9;false,false;companyalsoknownas(A, J).;false;true
9;false,true;cityhascompanyoffice(H, I), economicsectorcompany(B, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.4831489350995123;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( teamplaysinleague(E, F) )
%   | | then return 0.26723984419042146;  // std dev = 2,306, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamplaysagainstteam(C, A) )
%   | then if ( teamalsoknownas(E, F) )
%   | | then return 0.3100598564096981;  // std dev = 2,319, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.3055795796689581;  // std dev = 2,109, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.25587221479421063;  // std dev = 0,495, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.20580718514160626;  // std dev = 3,127, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(D, A), teamplaysagainstteam(E, D) )
%   | then return 0.13300075140156054;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamplaysagainstteam(C, F) )
%   | | then return 0.17114621667864785;  // std dev = 2,081, 18,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, G) )
%   | | then return 0.1108226968102125;  // std dev = 0,490, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.20555494615878064;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then return 0.08524273205699742;  // std dev = 0,495, 29,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0.5924168565709496;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.19170430225536914;  // std dev = 1,526, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then return 0.09992326651981212;  // std dev = 2,282, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(E, A) )
%   | then return 0.25413918853514844;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.055250760938029525;  // std dev = 1,904, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.03463523464164816;  // std dev = 2,105, 18,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else return 0.26201528085893705;  // std dev = 0,778, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( teamalsoknownas(E, A) )
%   | then return 0.1914931009819282;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then return 0.6257870193916549;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 1.9687818899947037E-4;  // std dev = 1,805, 14,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.11011244531755038;  // std dev = 1,038, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.14365652320724934;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0.0421576463521465;  // std dev = 2,010, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else return 0.0316142838772254;  // std dev = 1,862, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then return 0.006263475729319326;  // std dev = 2,227, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   else if ( athleteplaysforteam(D, E) )
%   | then if ( teamalsoknownas(F, G) )
%   | | then return 0.07580351500789613;  // std dev = 2,067, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.466706
   AUC PR    = 0.002188
   CLL	      = -0.657092
   Precision = 0.00157 at threshold = 0.5
   Recall    = 0.112782
   F1        = 0.003097


Total learning time: 4.146 seconds
Total inference time: 193.608 seconds
AUC ROC: 0.466706


Results scoring model
   AUC ROC   = 0.68375
   AUC PR    = 0.713733
   CLL	      = -0.657259
   Precision = 0.833333 at threshold = 0.5
   Recall    = 0.25
   F1        = 0.384615


Total scoring time: 1.373 seconds
Parameter learned model CLL: -0.657259


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamplaysagainstteam(H, A)', 'false,false': 'teamalsoknownas(G, A)', 'false': 'teamplaysinleague(A, D)', 'false,true': 'teamplaysinleague(E, F)'}, {'false,false,false,false': [1.491, 4, 5], 'true': [1.369, 3, 5], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [2.306, 13, 9], 'false,false,false,true': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)', 'true,true': 'teamalsoknownas(E, F)', 'true': 'teamplaysagainstteam(C, A)'}, {'true,true,true': [2.319, 11, 11], 'true,false': [2.109, 9, 9], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [0.495, 20, 20], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [3.127, 20, 20], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true,false': 'teamplaysagainstteam(C, F)', 'true': 'teamalsoknownas(D, A), teamplaysagainstteam(E, D)', 'false,false': 'teamplaysinleague(A, G)', 'false': 'teamalsoknownas(A, A)'}, {'true,false,true': [2.081, 9, 9], 'false,false,false': [0.497, 4, 5], 'true,true': [0.5, 2, 2], 'false,false,true': [0.49, 5, 4], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false': 'teamalsoknownas(D, A)'}, {'false,true': [0.0, 0, 1], 'true': [0.495, 16, 13], 'false,false': [1.526, 4, 6]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysagainstteam(C, D)', 'false,false': 'athleteplaysforteam(F, G)', 'false': 'teamalsoknownas(E, A)'}, {'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [2.282, 11, 11], 'false,true': [0.471, 1, 2], 'false,false,true': [1.904, 8, 7]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(F, A)', 'false': 'teamalsoknownas(E, A)'}, {'false,false,false': [1.805, 8, 6], 'true,false': [0.778, 1, 3], 'true,true': [2.105, 10, 8], 'false,true': [0.471, 1, 2], 'false,false,true': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(F, A)', 'false': 'teamalsoknownas(E, A)'}, {'false,false,false': [1.862, 8, 7], 'true,false': [0.816, 1, 2], 'true,true': [1.038, 2, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [2.01, 9, 8]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false,true': 'teamalsoknownas(F, G)', 'false': 'athleteplaysforteam(D, E)'}, {'false,true,true': [2.067, 9, 11], 'true': [2.227, 11, 9], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.23437499999999983, 0.24902343749999953], 'false,false': [nan, 0.23999999999999994], 'false,false,false': [0.0, 0.2469135802469134], 'false,true': [0.24173553719008264, nan], 'false': [0.24173553719008264, 0.23999999999999994]}, {'': [0.24557807882726004, nan], 'true,true': [0.2443748965880529, nan], 'true': [0.2443748965880529, 0.24703759481358242]}, {'': [0.24488483738906214, nan]}, {'': [0.24438048465936485, nan]}, {'': [0.24258191572270438, 0.24582552136656766], 'true,false': [0.2406688931824801, nan], 'true': [0.24999999999999997, 0.2406688931824801], 'false,false': [0.24025036295290222, 0.24691358024691354], 'false': [nan, 0.24582552136656766]}, {'': [0.24480438830008527, 0.22487502604705634], 'false': [0.0, 0.23276520581666044]}, {'': [0.23666098432535562, 0.2439153751805851], 'true': [0.23666098432535562, nan], 'false,false': [0.24166123800024855, nan], 'false': [0.22222222222222218, 0.24166123800024855]}, {'': [0.2366129639474184, 0.2414830434931641], 'true': [0.24616826192402014, 0.15131274407452994], 'false,false': [0.0, 0.23277234856507686], 'false': [0.2222222222222222, 0.2416056690908692]}, {'': [0.21826374712149493, 0.2345997912894293], 'true': [0.2154667101255073, 0.22222222222222224], 'false,false': [0.23762269696946425, 0.23111477644470035], 'false': [nan, 0.2345997912894293]}, {'': [0.24792353502510936, 0.2136162881670119], 'false,true': [0.2136162881670119, nan], 'false': [0.2136162881670119, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
0;false,false;teamplaysagainstteam(H, A).;true;true
0;false;teamplaysinleague(A, D).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
5;false;teamalsoknownas(D, A).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
7;false,false;athleteplaysforteam(F, A).;true;true
7;false;teamalsoknownas(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(A, E) )
%   | then if ( athleteplayssport(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109542;  // std dev = 8,43e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamalsoknownas(E, A) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109177;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamalsoknownas(E, A) )
%   | then return 0.09364892324240588;  // std dev = 0,204, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(G, B) )
%   | | | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15385534296991546;  // std dev = 0,015, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06899877026297715;  // std dev = 0,011, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13487560704841467;  // std dev = 0,013, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06469648588321146;  // std dev = 0,011, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.989002
   AUC PR    = 0.121268
   CLL	      = -0.107632
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 3.561 seconds
Total inference time: 4.673 seconds
AUC ROC: 0.989002


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095275
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.87 seconds
Refined model CLL: -0.095275


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.989002
   AUC PR    = 0.121268
   CLL	      = -0.107632
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 9.95 seconds
Total inference time: 4.673 seconds
AUC ROC: 0.989002
Total revision time: 9.95
Best scored revision CLL: -0.095275


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 01:58:30
{'AUC ROC': 0.989002, 'Recall': 0.992481, 'CLL': -0.107632, 'Precision': [0.121212, 0.5], 'Learning time': 9.95, 'parameter_20': {'AUC ROC': 0.466706, 'Recall': 0.112782, 'CLL': -0.657092, 'Precision': [0.00157, 0.5], 'Learning time': 4.146, 'F1': 0.003097, 'Inference time': 193.608, 'AUC PR': 0.002188}, 'F1': 0.216039, 'Inference time': 4.673, 'AUC PR': 0.121268}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0641918400820262;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.099512
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 3.178 seconds
Total inference time: 4.139 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN-B), Time: 01:58:38
{'AUC ROC': 0.987268, 'Recall': 0.992481, 'CLL': -0.099512, 'Precision': [0.121212, 0.5], 'Learning time': 3.178, 'F1': 0.216039, 'Inference time': 4.139, 'AUC PR': 0.120766}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.140377
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.249 seconds
Total inference time: 2.875 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN), Time: 01:58:42
{'AUC ROC': 0.987268, 'Recall': 0.0, 'CLL': -0.140377, 'Precision': [nan, 0.5], 'Learning time': 1.249, 'F1': nan, 'Inference time': 2.875, 'AUC PR': 0.120766}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false,false,false;countryhascompanyoffice(H, A), acquired(A, I).;false;false
0;false,false;companyalsoknownas(A, G).;true;true
0;false;bankchiefexecutiveceo(A, D), companyceo(E, D).;true;true
0;false,true,false;bankchiefexecutiveceo(E, F).;false;false
0;false,true;economicsectorcompany(B, E).;false;true
0;false,false,true;companyalsoknownas(A, A).;false;false
1;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
1;false,false,false;acquired(A, L), cityhascompanyoffice(M, L).;false;false
1;true,true;companyalsoknownas(E, F).;false;true
1;false,false;acquired(I, A), cityhascompanyoffice(J, I).;true;true
1;false;acquired(A, H), economicsectorcompany(B, H).;false;true
1;true,true,false;countryhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
1;true;countryhascompanyoffice(D, A), acquired(C, E).;true;false
1;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
2;;companyeconomicsector(A, B) :- bankboughtbank(C, A), cityhascompanyoffice(D, C).;true;true
2;false,false,false;acquired(M, A), economicsectorcompany(B, M).;false;false
2;true;bankboughtbank(A, E).;false;false
2;false,false;countryhascompanyoffice(J, A), bankbankincountry(K, J).;true;true
2;false;companyceo(A, F).;true;true
2;false,true,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;false;false
2;false,true;acquired(A, G), cityhascompanyoffice(H, G).;false;true
2;false,false,true;countryhascompanyoffice(J, L), economicsectorcompany(B, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;false,false,false;companyceo(A, J).;false;false
3;true;acquired(D, C), cityhascompanyoffice(E, D).;false;false
3;false,false;companyalsoknownas(A, I).;true;true
3;false;acquired(A, F), cityhascompanyoffice(G, A).;true;true
3;false,true,false;companyalsoknownas(F, H).;false;false
3;false,true;economicsectorcompany(B, F).;false;true
3;false,false,true;economicsectorcompany(B, I).;false;false
4;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
4;false,false,false;acquired(J, A), economicsectorcompany(B, J).;false;false
4;true,true;economicsectorcompany(B, E).;false;false
4;true,false;countryhascompanyoffice(C, G), economicsectorcompany(B, G).;false;false
4;false;companyalsoknownas(A, A).;false;true
4;false,false;bankchiefexecutiveceo(A, H).;true;true
4;true;companyalsoknownas(A, E), countryhascompanyoffice(F, E).;true;true
4;false,false,true;companyceo(I, H), economicsectorcompany(B, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), economicsectorcompany(B, C).;false;true
5;false,false,false;companyalsoknownas(A, I).;false;false
5;false,false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
5;false;acquired(D, A).;true;true
5;false,true,false;economicsectorcompany(B, D).;false;false
5;false,true,true;economicsectorcompany(B, D).;false;false
5;false,true;acquired(E, D), companyceo(E, F).;true;true
5;false,false,true;economicsectorcompany(B, H).;false;false
6;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
6;false,false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;false;false
6;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
6;false,false;companyalsoknownas(A, H).;true;true
6;false;acquired(F, A).;true;true
6;false,true,false;companyceo(F, G).;false;false
6;false,true;economicsectorcompany(B, F).;false;true
6;false,false,true;economicsectorcompany(B, H).;false;false
7;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
7;false,false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;false
7;true;cityhascompanyoffice(E, A).;false;false
7;false,false;companyceo(A, H).;true;true
7;false;companyalsoknownas(A, F).;true;true
7;false,true,false;economicsectorcompany(B, F).;false;false
7;false,true;acquired(F, G), economicsectorcompany(B, G).;false;true
7;false,false,true;bankboughtbank(I, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
8;false,false,false;acquired(A, L), countryhascompanyoffice(M, A).;false;false
8;true;economicsectorcompany(B, C).;false;false
8;false,false;companyalsoknownas(A, J).;true;true
8;false;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(H, A), acquired(F, I).;false;false
8;false,true;companyceo(A, G).;true;false
8;false,false,true;companyalsoknownas(J, K), economicsectorcompany(B, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true,false,true;companyalsoknownas(E, G).;false;false
9;false,false,false;companyceo(A, K).;false;false
9;true;cityhascompanyoffice(D, A).;false;true
9;true,false;acquired(C, E), cityhascompanyoffice(F, C).;true;false
9;false;cityhascompanyoffice(H, A).;true;true
9;false,false;companyalsoknownas(A, J).;false;true
9;false,true;cityhascompanyoffice(H, I), economicsectorcompany(B, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.4831489350995123;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( teamplaysinleague(E, F) )
%   | | then return 0.2775037738091898;  // std dev = 2,747, 31,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.41370449065506787;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamplaysagainstteam(C, A) )
%   | then if ( teamalsoknownas(E, F) )
%   | | then return 0.3252894165265859;  // std dev = 2,746, 31,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.27959547469334883;  // std dev = 2,161, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.2557914915921533;  // std dev = 0,494, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.20576955402243283;  // std dev = 3,487, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(D, A), teamplaysagainstteam(E, D) )
%   | then return 0.12948325255142468;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamplaysagainstteam(C, F) )
%   | | then return 0.18266148470760105;  // std dev = 2,543, 27,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, G) )
%   | | then return 0.07220098173480775;  // std dev = 0,483, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.21146976598435188;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then return 0.08401126412869016;  // std dev = 0,495, 38,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0.5859721736047441;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.22244690681287393;  // std dev = 1,550, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then return 0.10946719255201061;  // std dev = 2,705, 31,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(E, A) )
%   | then return 0.2700260285298916;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.033323611775260595;  // std dev = 1,941, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return 0.06294557353529835;  // std dev = 2,498, 25,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | else return 0.1671217497649784;  // std dev = 1,013, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( teamalsoknownas(E, A) )
%   | then return 0.2039613385743452;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then return 0.6437789251240262;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.01587377887834914;  // std dev = 1,832, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(D, A) )
%   | then return 0.10356293757870776;  // std dev = 1,045, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.1530437719833362;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( teamalsoknownas(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, A) )
%   | | then return 0.055078843454063234;  // std dev = 2,489, 26,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return 0.019131455031714567;  // std dev = 1,895, 16,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then return 0.02713727209164212;  // std dev = 2,604, 27,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   else if ( athleteplaysforteam(D, E) )
%   | then if ( teamalsoknownas(F, G) )
%   | | then return 0.057245900299320376;  // std dev = 2,188, 23,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.474275
   AUC PR    = 0.002241
   CLL	      = -0.658576
   Precision = 0.001836 at threshold = 0.5
   Recall    = 0.142857
   F1        = 0.003625


Total learning time: 4.763 seconds
Total inference time: 194.448 seconds
AUC ROC: 0.474275


Results scoring model
   AUC ROC   = 0.6616
   AUC PR    = 0.697701
   CLL	      = -0.657246
   Precision = 0.857143 at threshold = 0.5
   Recall    = 0.24
   F1        = 0.375


Total scoring time: 1.455 seconds
Parameter learned model CLL: -0.657246


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamplaysagainstteam(H, A)', 'false,false': 'teamalsoknownas(G, A)', 'false': 'teamplaysinleague(A, D)', 'false,true': 'teamplaysinleague(E, F)'}, {'false,false,false,false': [1.491, 4, 5], 'true': [1.369, 3, 5], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [2.747, 18, 13], 'false,false,false,true': [0.0, 0, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)', 'true,true': 'teamalsoknownas(E, F)', 'true': 'teamplaysagainstteam(C, A)'}, {'true,true,true': [2.746, 15, 16], 'true,false': [2.161, 10, 9], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [0.494, 25, 25], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [3.487, 25, 25], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true,false': 'teamplaysagainstteam(C, F)', 'true': 'teamalsoknownas(D, A), teamplaysagainstteam(E, D)', 'false,false': 'teamplaysinleague(A, G)', 'false': 'teamalsoknownas(A, A)'}, {'true,false,true': [2.543, 13, 14], 'false,false,false': [0.497, 4, 5], 'true,true': [0.5, 2, 2], 'false,false,true': [0.483, 6, 4], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false': 'teamalsoknownas(D, A)'}, {'false,true': [0.0, 0, 1], 'true': [0.495, 21, 17], 'false,false': [1.55, 4, 7]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysagainstteam(C, D)', 'false,false': 'athleteplaysforteam(F, G)', 'false': 'teamalsoknownas(E, A)'}, {'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [2.705, 15, 16], 'false,true': [0.471, 1, 2], 'false,false,true': [1.941, 9, 7]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(F, A)', 'false': 'teamalsoknownas(E, A)'}, {'false,false,false': [1.832, 9, 6], 'true,false': [1.013, 2, 4], 'true,true': [2.498, 13, 12], 'false,true': [0.471, 1, 2], 'false,false,true': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamplaysagainstteam(D, A)', 'false,false': 'teamplaysagainstteam(F, A)', 'false': 'teamalsoknownas(E, A)'}, {'false,false,false': [1.895, 9, 7], 'true,false': [0.816, 1, 2], 'true,true': [1.045, 2, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [2.489, 13, 13]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false,true': 'teamalsoknownas(F, G)', 'false': 'athleteplaysforteam(D, E)'}, {'false,true,true': [2.188, 11, 12], 'true': [2.604, 14, 13], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.23437499999999983, 0.24943310657596351], 'false,false': [nan, 0.23140495867768587], 'false,false,false': [0.0, 0.2469135802469134], 'false,true': [0.24349635796045738, nan], 'false': [0.24349635796045738, 0.23140495867768587]}, {'': [0.24472277740562032, nan], 'true,true': [0.24322799984771548, nan], 'true': [0.24322799984771548, 0.24586710448153645]}, {'': [0.24374999530558725, nan]}, {'': [0.24316003484805176, nan]}, {'': [0.24120252270290884, 0.2444785088920133], 'true,false': [0.23953429926519423, nan], 'true': [0.25, 0.23953429926519423], 'false,false': [0.23309946317801827, 0.24691358024691365], 'false': [nan, 0.2444785088920133]}, {'': [0.24469809194744432, 0.21020032167417244], 'false': [0.0, 0.21829689019336157]}, {'': [0.2360817252517067, 0.24074906802395765], 'true': [0.2360817252517067, nan], 'false,false': [0.23537631991218055, nan], 'false': [0.2222222222222222, 0.23537631991218055]}, {'': [0.2360534353573919, 0.23749513916581275], 'true': [0.24954843348530567, 0.17107211867347352], 'false,false': [0.0, 0.22381367770690214], 'false': [0.2222222222222222, 0.23532190624266094]}, {'': [0.22033217699116237, 0.2333352333445531], 'true': [0.21828001748750964, 0.2222222222222222], 'false,false': [0.23830543861912007, 0.2244587073187613], 'false': [nan, 0.2333352333445531]}, {'': [0.2512284467609527, 0.20811657637389167], 'false,true': [0.20811657637389167, nan], 'false': [0.20811657637389167, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
0;false,false;teamplaysagainstteam(H, A).;true;true
0;false;teamplaysinleague(A, D).;true;true
5;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
5;false;teamalsoknownas(D, A).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
7;false,false;athleteplaysforteam(F, A).;true;true
7;false;teamalsoknownas(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( teamplaysinleague(A, E) )
%   | then if ( teamplaysagainstteam(F, A), teamalsoknownas(G, F) )
%   | | then if ( athleteplayssport(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1438632208137979;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( teamplaysagainstteam(J, A) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( athleteplayssport(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7290930376128699;  // std dev = 0,163, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.13241196487573353;  // std dev = 0,070, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5660686008073447;  // std dev = 0,222, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11794902878772047;  // std dev = 0,063, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.42671557619247474;  // std dev = 0,240, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10623658978541096;  // std dev = 0,058, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32785477482503006;  // std dev = 0,230, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.09657569299969197;  // std dev = 0,053, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.2664527450829984;  // std dev = 0,205, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.08942012160492535;  // std dev = 0,048, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( teamalsoknownas(E, A) )
%   | then return 0.24826616076814456;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.24826616076814462;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.08355290310007309;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.21396816359481705;  // std dev = 0,187, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08160448555399143;  // std dev = 0,046, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.1701061409058212;  // std dev = 0,004, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.07135567372999628;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamalsoknownas(E, A) )
%   | then return 0.08929674292873162;  // std dev = 0,197, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then return 0.2944193189061646;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(G, B) )
%   | | | then return 0.19256985541155433;  // std dev = 0,112, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.0834228527784478;  // std dev = 0,031, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1559604981936757;  // std dev = 0,135, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07097908351365509;  // std dev = 0,039, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13661098075618533;  // std dev = 0,122, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06644274669432666;  // std dev = 0,037, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.98656
   AUC PR    = 0.118932
   CLL	      = -0.106107
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 4.022 seconds
Total inference time: 5.256 seconds
AUC ROC: 0.98656


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097109
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.922 seconds
Refined model CLL: -0.097109


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.98656
   AUC PR    = 0.118932
   CLL	      = -0.106107
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 11.162 seconds
Total inference time: 5.256 seconds
AUC ROC: 0.98656
Total revision time: 11.162
Best scored revision CLL: -0.097109


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Transfer (trRDN-B), Time: 02:02:14
{'AUC ROC': 0.98656, 'Recall': 0.992481, 'CLL': -0.106107, 'Precision': [0.121212, 0.5], 'parameter_25': {'AUC ROC': 0.474275, 'Recall': 0.142857, 'CLL': -0.658576, 'Precision': [0.001836, 0.5], 'Learning time': 4.763, 'F1': 0.003625, 'Inference time': 194.448, 'AUC PR': 0.002241}, 'Learning time': 11.162, 'F1': 0.216039, 'Inference time': 5.256, 'AUC PR': 0.118932}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.099512
   Precision = 0.121212 at threshold = 0.5
   Recall    = 0.992481
   F1        = 0.216039


Total learning time: 3.377 seconds
Total inference time: 3.969 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN-B), Time: 02:02:22
{'AUC ROC': 0.987268, 'Recall': 0.992481, 'CLL': -0.099512, 'Precision': [0.121212, 0.5], 'Learning time': 3.377, 'F1': 0.216039, 'Inference time': 3.969, 'AUC PR': 0.120766}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.987268
   AUC PR    = 0.120766
   CLL	      = -0.140377
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.233 seconds
Total inference time: 2.983 seconds
AUC ROC: 0.987268


Dataset: 46_nell_finances_nell_sports, Fold: 1, Type: Scratch (RDN), Time: 02:02:26
{'AUC ROC': 0.987268, 'Recall': 0.0, 'CLL': -0.140377, 'Precision': [nan, 0.5], 'Learning time': 1.233, 'F1': nan, 'Inference time': 2.983, 'AUC PR': 0.120766}


Starting fold 2

Target train facts examples: 9690
Target train pos examples: 264
Target train neg examples: 106660

Target test facts examples: 9690
Target test pos	 examples: 133
Target test neg examples: 53331

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false,false,false;countryhascompanyoffice(H, A), acquired(A, I).;false;false
0;false,false;companyalsoknownas(A, G).;true;true
0;false;bankchiefexecutiveceo(A, D), companyceo(E, D).;true;true
0;false,true,false;bankchiefexecutiveceo(E, F).;false;false
0;false,true;economicsectorcompany(B, E).;false;true
0;false,false,true;companyalsoknownas(A, A).;false;false
1;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
1;false,false,false;acquired(A, L), cityhascompanyoffice(M, L).;false;false
1;true,true;companyalsoknownas(E, F).;false;true
1;false,false;acquired(I, A), cityhascompanyoffice(J, I).;true;true
1;false;acquired(A, H), economicsectorcompany(B, H).;false;true
1;true,true,false;countryhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
1;true;countryhascompanyoffice(D, A), acquired(C, E).;true;false
1;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
2;;companyeconomicsector(A, B) :- bankboughtbank(C, A), cityhascompanyoffice(D, C).;true;true
2;false,false,false;acquired(M, A), economicsectorcompany(B, M).;false;false
2;true;bankboughtbank(A, E).;false;false
2;false,false;countryhascompanyoffice(J, A), bankbankincountry(K, J).;true;true
2;false;companyceo(A, F).;true;true
2;false,true,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;false;false
2;false,true;acquired(A, G), cityhascompanyoffice(H, G).;false;true
2;false,false,true;countryhascompanyoffice(J, L), economicsectorcompany(B, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;false,false,false;companyceo(A, J).;false;false
3;true;acquired(D, C), cityhascompanyoffice(E, D).;false;false
3;false,false;companyalsoknownas(A, I).;true;true
3;false;acquired(A, F), cityhascompanyoffice(G, A).;true;true
3;false,true,false;companyalsoknownas(F, H).;false;false
3;false,true;economicsectorcompany(B, F).;false;true
3;false,false,true;economicsectorcompany(B, I).;false;false
4;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
4;false,false,false;acquired(J, A), economicsectorcompany(B, J).;false;false
4;true,true;economicsectorcompany(B, E).;false;false
4;true,false;countryhascompanyoffice(C, G), economicsectorcompany(B, G).;false;false
4;false;companyalsoknownas(A, A).;false;true
4;false,false;bankchiefexecutiveceo(A, H).;true;true
4;true;companyalsoknownas(A, E), countryhascompanyoffice(F, E).;true;true
4;false,false,true;companyceo(I, H), economicsectorcompany(B, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), economicsectorcompany(B, C).;false;true
5;false,false,false;companyalsoknownas(A, I).;false;false
5;false,false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
5;false;acquired(D, A).;true;true
5;false,true,false;economicsectorcompany(B, D).;false;false
5;false,true,true;economicsectorcompany(B, D).;false;false
5;false,true;acquired(E, D), companyceo(E, F).;true;true
5;false,false,true;economicsectorcompany(B, H).;false;false
6;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
6;false,false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;false;false
6;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
6;false,false;companyalsoknownas(A, H).;true;true
6;false;acquired(F, A).;true;true
6;false,true,false;companyceo(F, G).;false;false
6;false,true;economicsectorcompany(B, F).;false;true
6;false,false,true;economicsectorcompany(B, H).;false;false
7;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
7;false,false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;false
7;true;cityhascompanyoffice(E, A).;false;false
7;false,false;companyceo(A, H).;true;true
7;false;companyalsoknownas(A, F).;true;true
7;false,true,false;economicsectorcompany(B, F).;false;false
7;false,true;acquired(F, G), economicsectorcompany(B, G).;false;true
7;false,false,true;bankboughtbank(I, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
8;false,false,false;acquired(A, L), countryhascompanyoffice(M, A).;false;false
8;true;economicsectorcompany(B, C).;false;false
8;false,false;companyalsoknownas(A, J).;true;true
8;false;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(H, A), acquired(F, I).;false;false
8;false,true;companyceo(A, G).;true;false
8;false,false,true;companyalsoknownas(J, K), economicsectorcompany(B, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true,false,true;companyalsoknownas(E, G).;false;false
9;false,false,false;companyceo(A, K).;false;false
9;true;cityhascompanyoffice(D, A).;false;true
9;true,false;acquired(C, E), cityhascompanyoffice(F, C).;true;false
9;false;cityhascompanyoffice(H, A).;true;true
9;false,false;companyalsoknownas(A, J).;false;true
9;false,true;cityhascompanyoffice(H, I), economicsectorcompany(B, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( athleteplaysforteam(D, A), athleteledsportsteam(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(G, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then if ( teamalsoknownas(C, A) )
%   | then if ( teamplaysagainstteam(E, F) )
%   | | then return 0.27633945172125146;  // std dev = 0,627, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.31386428436045344;  // std dev = 1,398, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.2546525194028514;  // std dev = 0,482, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.20505634589776117;  // std dev = 1,519, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(E, D) )
%   | then return -0.2947407281259151;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( teamalsoknownas(C, F) )
%   | | then return 0.5512698543380125;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(G, A) )
%   | | then if ( athleteledsportsteam(G, H) )
%   | | | then return -0.052600580548792464;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.6973994194512075;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2895045724850213;  // std dev = 0,471, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then return 0.1203474165794253;  // std dev = 0,440, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamalsoknownas(C, D) )
%   | then return 0.06288968431760089;  // std dev = 0,456, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(E, F) )
%   | then return 0.10059101529607961;  // std dev = 1,310, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.04935750236045641;  // std dev = 0,455, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0.024427098137177205;  // std dev = 0,449, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( athleteledsportsteam(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.49779207540453196;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.502207924595468;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then return 0.05443165299518844;  // std dev = 0,402, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then return 0.090147895662189;  // std dev = 1,185, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else if ( teamplaysinleague(D, E) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return -0.3919924987247973;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.487534
   AUC PR    = 0.002462
   CLL	      = -0.682101
   Precision = 0.002406 at threshold = 0.5
   Recall    = 0.413534
   F1        = 0.004784


Total learning time: 1.687 seconds
Total inference time: 98.22999999999999 seconds
AUC ROC: 0.487534


Results scoring model
   AUC ROC   = 0.94
   AUC PR    = 0.9625
   CLL	      = -0.494325
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.926 seconds
Parameter learned model CLL: -0.494325


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'teamalsoknownas(G, A)', 'false,false': 'teamplaysagainstteam(A, F)', 'false': 'athleteplaysforteam(D, A), athleteledsportsteam(D, E)'}, {'false,false,false,false': [0.816, 1, 2], 'true': [1.155, 4, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)', 'true,true': 'teamplaysagainstteam(E, F)', 'true': 'teamalsoknownas(C, A)'}, {'true,true,true': [0.627, 1, 1], 'true,false': [1.398, 4, 4], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [0.482, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [1.519, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamplaysagainstteam(A, D), teamalsoknownas(E, D)', 'true,false': 'teamalsoknownas(C, F)', 'false': 'teamplaysagainstteam(A, A)', 'false,false': 'athleteplaysforteam(G, A)', 'false,false,true': 'athleteledsportsteam(G, H)'}, {'true,false,true': [0.0, 0, 1], 'false,false,false': [0.471, 1, 2], 'false,false,true,true': [0.866, 3, 1], 'true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)'}, {'true': [0.44, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamalsoknownas(C, D)', 'false': 'athleteledsportsteam(E, F)'}, {'false,false': [0.0, 0, 0], 'true,true': [0.456, 1, 1], 'false,true': [1.31, 4, 4], 'true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamplaysinleague(A, G)', 'true': 'teamplaysinleague(A, D)', 'false,false': 'athleteledsportsteam(F, A)', 'false': 'teamplaysagainstteam(A, E)'}, {'false,false,false,false': [0.0, 1, 0], 'true,true': [0.455, 1, 1], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.449, 3, 2], 'false,false,false,true': [0.0, 0, 2]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)'}, {'true': [0.402, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false,true': 'teamplaysagainstteam(F, G)', 'false': 'teamplaysinleague(D, E)'}, {'false,true,true': [0.0, 1, 0], 'true': [1.185, 4, 5], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.22222222222222224, 0.18750000000000006], 'false,false,false': [0.0, 0.22222222222222224], 'false,false': [nan, 0.18750000000000006], 'false': [nan, 0.18750000000000006]}, {'': [0.23483996069020946, nan], 'true,true': [0.1963677069392897, nan], 'true': [0.1963677069392897, 0.2441764015150193]}, {'': [0.2325467443952653, nan]}, {'': [0.23079956122346929, nan]}, {'': [0.17893347641023852, 0.2419827996978986], 'true': [0.0, 0.0], 'false,false': [0.24, 0.22222222222222218], 'false': [nan, 0.2419827996978986], 'true,false': [0.0, nan], 'false,false,true': [0.1875, 0.0]}, {'': [0.193694003338862, nan]}, {'': [0.10414670276460374, 0.21448394162462864], 'true': [0.10414670276460374, nan], 'false': [0.21448394162462864, nan]}, {'': [0.10333759846939054, 0.21398938341324958], 'false,false,false': [0.0, 0.0], 'true': [0.10333759846939054, nan], 'false,false': [nan, 0.2222222222222222], 'false': [0.20169635713929174, 0.2222222222222222]}, {'': [0.16151980187558246, nan]}, {'': [0.15602562450356747, 0.0], 'false,true': [0.0, nan], 'false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
0;false;teamalsoknownas(G, A).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
4;true;teamplaysagainstteam(A, D), teamalsoknownas(E, D).;true;true
4;false,true;athleteledsportsteam(G, H).;true;true
4;false;athleteplaysforteam(G, A).;true;true
7;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
7;false,false;teamplaysinleague(A, G).;true;true
7;false;teamplaysagainstteam(A, E).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.19148226843284552;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7898284547649284;  // std dev = 0,094, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1771098190997022;  // std dev = 0,046, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.6327744619350187;  // std dev = 0,130, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1528174554518015;  // std dev = 0,041, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4802378242211594;  // std dev = 0,138, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.1341087106953291;  // std dev = 0,037, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(E, D) )
%   | then return -0.11179321449464638;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.2766800890097728;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplaysforteam(F, A) )
%   | then if ( athleteledsportsteam(F, G) )
%   | | then return 0.02289155256576071;  // std dev = 0,467, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.426945853746982;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.18222410069026818;  // std dev = 0,406, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3178284330659533;  // std dev = 0,140, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12350052456614928;  // std dev = 0,058, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteledsportsteam(C, D) )
%   then return 0.009952101956518591;  // std dev = 0,388, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else return 0.11288021742682379;  // std dev = 0,418, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.029218576949881718;  // std dev = 0,183, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return 0.05498735823273666;  // std dev = 0,439, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return 0.2243334620621743;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.17255643117537892;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.21845303748813194;  // std dev = 0,138, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11541201395316163;  // std dev = 0,038, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.18413822054975754;  // std dev = 0,122, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09640984051145518;  // std dev = 0,004, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.13521848248802334;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.991394
   AUC PR    = 0.130034
   CLL	      = -0.169334
   Precision = 0.124883 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.222037


Total learning time: 1.905 seconds
Total inference time: 4.984 seconds
AUC ROC: 0.991394


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.13698
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.721 seconds
Refined model CLL: -0.13698


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991394
   AUC PR    = 0.130034
   CLL	      = -0.169334
   Precision = 0.124883 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.222037


Total learning time: 5.239 seconds
Total inference time: 4.984 seconds
AUC ROC: 0.991394
Total revision time: 5.239
Best scored revision CLL: -0.13698


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 02:04:16
{'AUC ROC': 0.991394, 'parameter_5': {'AUC ROC': 0.487534, 'Recall': 0.413534, 'CLL': -0.682101, 'Precision': [0.002406, 0.5], 'Learning time': 1.687, 'F1': 0.004784, 'Inference time': 98.22999999999999, 'AUC PR': 0.002462}, 'Recall': 1.0, 'CLL': -0.169334, 'Precision': [0.124883, 0.5], 'Learning time': 5.239, 'F1': 0.222037, 'Inference time': 4.984, 'AUC PR': 0.130034}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.991262
   AUC PR    = 0.124883
   CLL	      = -0.098497
   Precision = 0.124883 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.222037


Total learning time: 2.547 seconds
Total inference time: 4.181 seconds
AUC ROC: 0.991262


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN-B), Time: 02:04:23
{'AUC ROC': 0.991262, 'Recall': 1.0, 'CLL': -0.098497, 'Precision': [0.124883, 0.5], 'Learning time': 2.547, 'F1': 0.222037, 'Inference time': 4.181, 'AUC PR': 0.124883}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.991262
   AUC PR    = 0.124883
   CLL	      = -0.140271
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.11 seconds
Total inference time: 3.221 seconds
AUC ROC: 0.991262


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN), Time: 02:04:28
{'AUC ROC': 0.991262, 'Recall': 0.0, 'CLL': -0.140271, 'Precision': [nan, 0.5], 'Learning time': 1.11, 'F1': nan, 'Inference time': 3.221, 'AUC PR': 0.124883}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false,false,false;countryhascompanyoffice(H, A), acquired(A, I).;false;false
0;false,false;companyalsoknownas(A, G).;true;true
0;false;bankchiefexecutiveceo(A, D), companyceo(E, D).;true;true
0;false,true,false;bankchiefexecutiveceo(E, F).;false;false
0;false,true;economicsectorcompany(B, E).;false;true
0;false,false,true;companyalsoknownas(A, A).;false;false
1;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
1;false,false,false;acquired(A, L), cityhascompanyoffice(M, L).;false;false
1;true,true;companyalsoknownas(E, F).;false;true
1;false,false;acquired(I, A), cityhascompanyoffice(J, I).;true;true
1;false;acquired(A, H), economicsectorcompany(B, H).;false;true
1;true,true,false;countryhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
1;true;countryhascompanyoffice(D, A), acquired(C, E).;true;false
1;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
2;;companyeconomicsector(A, B) :- bankboughtbank(C, A), cityhascompanyoffice(D, C).;true;true
2;false,false,false;acquired(M, A), economicsectorcompany(B, M).;false;false
2;true;bankboughtbank(A, E).;false;false
2;false,false;countryhascompanyoffice(J, A), bankbankincountry(K, J).;true;true
2;false;companyceo(A, F).;true;true
2;false,true,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;false;false
2;false,true;acquired(A, G), cityhascompanyoffice(H, G).;false;true
2;false,false,true;countryhascompanyoffice(J, L), economicsectorcompany(B, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;false,false,false;companyceo(A, J).;false;false
3;true;acquired(D, C), cityhascompanyoffice(E, D).;false;false
3;false,false;companyalsoknownas(A, I).;true;true
3;false;acquired(A, F), cityhascompanyoffice(G, A).;true;true
3;false,true,false;companyalsoknownas(F, H).;false;false
3;false,true;economicsectorcompany(B, F).;false;true
3;false,false,true;economicsectorcompany(B, I).;false;false
4;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
4;false,false,false;acquired(J, A), economicsectorcompany(B, J).;false;false
4;true,true;economicsectorcompany(B, E).;false;false
4;true,false;countryhascompanyoffice(C, G), economicsectorcompany(B, G).;false;false
4;false;companyalsoknownas(A, A).;false;true
4;false,false;bankchiefexecutiveceo(A, H).;true;true
4;true;companyalsoknownas(A, E), countryhascompanyoffice(F, E).;true;true
4;false,false,true;companyceo(I, H), economicsectorcompany(B, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), economicsectorcompany(B, C).;false;true
5;false,false,false;companyalsoknownas(A, I).;false;false
5;false,false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
5;false;acquired(D, A).;true;true
5;false,true,false;economicsectorcompany(B, D).;false;false
5;false,true,true;economicsectorcompany(B, D).;false;false
5;false,true;acquired(E, D), companyceo(E, F).;true;true
5;false,false,true;economicsectorcompany(B, H).;false;false
6;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
6;false,false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;false;false
6;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
6;false,false;companyalsoknownas(A, H).;true;true
6;false;acquired(F, A).;true;true
6;false,true,false;companyceo(F, G).;false;false
6;false,true;economicsectorcompany(B, F).;false;true
6;false,false,true;economicsectorcompany(B, H).;false;false
7;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
7;false,false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;false
7;true;cityhascompanyoffice(E, A).;false;false
7;false,false;companyceo(A, H).;true;true
7;false;companyalsoknownas(A, F).;true;true
7;false,true,false;economicsectorcompany(B, F).;false;false
7;false,true;acquired(F, G), economicsectorcompany(B, G).;false;true
7;false,false,true;bankboughtbank(I, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
8;false,false,false;acquired(A, L), countryhascompanyoffice(M, A).;false;false
8;true;economicsectorcompany(B, C).;false;false
8;false,false;companyalsoknownas(A, J).;true;true
8;false;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(H, A), acquired(F, I).;false;false
8;false,true;companyceo(A, G).;true;false
8;false,false,true;companyalsoknownas(J, K), economicsectorcompany(B, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true,false,true;companyalsoknownas(E, G).;false;false
9;false,false,false;companyceo(A, K).;false;false
9;true;cityhascompanyoffice(D, A).;false;true
9;true,false;acquired(C, E), cityhascompanyoffice(F, C).;true;false
9;false;cityhascompanyoffice(H, A).;true;true
9;false,false;companyalsoknownas(A, J).;false;true
9;false,true;cityhascompanyoffice(H, I), economicsectorcompany(B, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.24276431971489695;  // std dev = 1,754, 13,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( teamplaysinleague(E, F) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A), teamalsoknownas(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), athleteplaysforteam(D, C) )
%   then if ( athleteplaysforteam(D, A), teamalsoknownas(C, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.15928966651712126;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamalsoknownas(A, F) )
%   | then return 0.42163438586856566;  // std dev = 0,730, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( teamalsoknownas(G, A), athleteledsportsteam(H, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, I), athleteledsportsteam(J, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3134317824291131;  // std dev = 1,845, 14,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then return 0.2538594717755312;  // std dev = 0,481, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamalsoknownas(D, C), athleteledsportsteam(E, D) )
%   | then return 0.13669071324297302;  // std dev = 0,607, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, F), athleteledsportsteam(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then return 0.15308166134352894;  // std dev = 0,492, 12,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return 0.3302555279698936;  // std dev = 0,445, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(A, E), athleteplaysforteam(F, E) )
%   | then return 0.13986790653223663;  // std dev = 0,493, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, G) )
%   | | then return 0.1882884591982628;  // std dev = 0,449, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( teamalsoknownas(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.1328131342899257;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.11012566139078873;  // std dev = 1,076, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( teamalsoknownas(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, E) )
%   | | then return 0.14175962122388638;  // std dev = 0,484, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( teamplaysagainstteam(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.10144537431645449;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(C, E) )
%   | then return 0.0818640417483431;  // std dev = 1,301, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A) )
%   | then return 0.033876134418935944;  // std dev = 0,424, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysagainstteam(A, G) )
%   | | then return 0.024059465773807444;  // std dev = 0,490, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( athleteledsportsteam(H, I) )
%   | | | then return 0.19117196907017828;  // std dev = 1,076, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, A) )
%   | then return 0.282848028748478;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.10165305295536047;  // std dev = 0,879, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then if ( teamalsoknownas(F, G) )
%   | | then return 0.11423612477346366;  // std dev = 1,008, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.38160173190660346;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamalsoknownas(H, A), athleteledsportsteam(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.188041106602217;  // std dev = 1,113, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return -0.011180453612675056;  // std dev = 0,415, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamplaysagainstteam(A, D), teamalsoknownas(D, E) )
%   | then if ( athleteplaysforteam(F, A), teamalsoknownas(E, G) )
%   | | then return 0.056574218680986346;  // std dev = 1,445, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.5911010908696082;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(A, H) )
%   | | then if ( teamplaysagainstteam(H, I) )
%   | | | then return -0.2964298583401924;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, J), athleteplaysforteam(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0988596508759;  // std dev = 1,078, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(C, E), athleteledsportsteam(F, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.048648414204723434;  // std dev = 1,043, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( athleteledsportsteam(G, A) )
%   | then if ( athleteledsportsteam(G, H) )
%   | | then return 0.04441792053583937;  // std dev = 0,979, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, I) )
%   | | then return 0.0343359162981093;  // std dev = 0,882, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.030037098488607538;  // std dev = 0,470, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.496501
   AUC PR    = 0.002504
   CLL	      = -0.742398
   Precision = 0.002518 at threshold = 0.5
   Recall    = 0.586466
   F1        = 0.005014


Total learning time: 1.428 seconds
Total inference time: 20.092 seconds
AUC ROC: 0.496501


Results scoring model
   AUC ROC   = 0.81
   AUC PR    = 0.839071
   CLL	      = -0.582207
   Precision = 0.75 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.666667


Total scoring time: 0.807 seconds
Parameter learned model CLL: -0.582207


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'athleteplaysforteam(H, A), teamalsoknownas(A, I)', 'false,false': 'teamplaysagainstteam(A, G)', 'false': 'teamplaysinleague(A, D)', 'false,true': 'teamplaysinleague(E, F)'}, {'false,false,false,false': [1.0, 2, 2], 'true': [1.754, 8, 5], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [2.11e-08, 0, 3], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), athleteplaysforteam(D, C)', 'false,false,false': 'teamalsoknownas(A, I), athleteledsportsteam(J, I)', 'true': 'athleteplaysforteam(D, A), teamalsoknownas(C, E)', 'false,false': 'teamalsoknownas(G, A), athleteledsportsteam(H, G)', 'false': 'teamalsoknownas(A, F)'}, {'false,false,false,false': [1.845, 7, 7], 'true,true': [0.0, 0, 0], 'true,false': [0.816, 2, 1], 'false,false,true': [0.0, 0, 0], 'false,true': [0.73, 1, 2], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)'}, {'true': [0.481, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamalsoknownas(D, C), athleteledsportsteam(E, D)', 'false,false': 'teamplaysagainstteam(A, H)', 'false': 'teamalsoknownas(A, F), athleteledsportsteam(G, A)'}, {'false,false,false': [0.445, 2, 4], 'true,false': [0.0, 0, 0], 'true,true': [0.607, 1, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.492, 7, 5]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplaysinleague(C, D)', 'false,false,false': 'teamalsoknownas(H, A)', 'true': 'teamplaysagainstteam(A, E), athleteplaysforteam(F, E)', 'false,false': 'teamplaysinleague(A, G)', 'false': 'teamplaysagainstteam(A, A)'}, {'false,false,false,false': [1.0, 2, 2], 'true,true': [0.493, 4, 3], 'true,false': [0.0, 0, 0], 'false,false,true': [0.449, 4, 5], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false,false,false': 'teamplaysagainstteam(A, F)', 'false,false': 'teamplaysinleague(A, E)', 'false': 'teamalsoknownas(D, A)'}, {'false,false,false,false': [1.0, 2, 2], 'true': [1.076, 3, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [0.484, 5, 5], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplaysinleague(C, D)', 'false,false,false': 'athleteledsportsteam(H, I)', 'true': 'athleteplaysforteam(C, E)', 'false,false': 'teamplaysagainstteam(A, G)', 'false': 'teamalsoknownas(F, A)'}, {'false,false,false,false': [0.0, 0, 0], 'true,true': [1.301, 4, 3], 'true,false': [0.0, 0, 0], 'false,false,true': [0.49, 3, 2], 'false,true': [0.424, 1, 1], 'false,false,false,true': [1.076, 2, 4]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplaysinleague(C, D)', 'false,true': 'teamalsoknownas(F, G)', 'true': 'athleteledsportsteam(E, A)', 'false,false': 'teamalsoknownas(H, A), athleteledsportsteam(I, A)', 'false': 'teamplaysagainstteam(A, F)'}, {'false,false,false': [1.113, 2, 5], 'true,true': [0.816, 1, 2], 'true,false': [0.879, 3, 1], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,true,true': [1.008, 2, 2]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamalsoknownas(A, J), athleteplaysforteam(K, A)', 'false,false': 'teamplaysagainstteam(A, H)', 'false': 'teamplaysagainstteam(A, D), teamalsoknownas(D, E)', 'false,true': 'athleteplaysforteam(F, A), teamalsoknownas(E, G)', 'false,false,true': 'teamplaysagainstteam(H, I)'}, {'false,false,true,true': [0.0, 2, 0], 'true': [0.415, 1, 1], 'false,true,false': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,true,true': [1.445, 5, 4], 'false,false,false,false': [1.078, 2, 4], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'athleteledsportsteam(D, A)', 'false,false': 'teamplaysagainstteam(A, I)', 'false': 'athleteledsportsteam(G, A)', 'true,false': 'teamalsoknownas(C, E), athleteledsportsteam(F, C)', 'false,true': 'athleteledsportsteam(G, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false': [0.47, 2, 3], 'true,true': [0.0, 0, 0], 'true,false,false': [1.043, 3, 3], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.979, 2, 2], 'false,false,true': [0.882, 3, 2]}]]
[{'': [0.2366863905325442, 0.20408163265306106], 'false,false,false': [nan, 0.25], 'false,false': [nan, 0.25], 'false': [1.4802973661668753e-16, 0.25], 'false,true': [1.4802973661668753e-16, nan]}, {'': [0.2222222222222222, 0.23323639513906086], 'false,false,false': [nan, 0.24313178874067237], 'true': [nan, 0.2222222222222222], 'false,false': [nan, 0.24313178874067237], 'false': [0.1774161712251644, 0.24313178874067237]}, {'': [0.2312721166374883, nan]}, {'': [0.18447684183485558, 0.23422371657585928], 'true': [0.18447684183485558, nan], 'false,false': [0.24199408823448965, 0.19775592058170677], 'false': [nan, 0.23422371657585922]}, {'': [0.24257070299720626, 0.21690765849274488], 'false,false,false': [nan, 0.24999999999999997], 'true': [0.24257070299720626, nan], 'false,false': [0.20125302448736065, 0.24999999999999997], 'false': [nan, 0.2169076584927448]}, {'': [0.192815186509208, 0.23909746664012219], 'false,false,false': [nan, 0.25], 'false,false': [0.23427209943796723, 0.25], 'false': [nan, 0.23909746664012219]}, {'': [0.2419094758207839, 0.21568106590663244], 'false,false,false': [0.1928134360939022, nan], 'true': [0.2419094758207839, nan], 'false,false': [0.24, 0.1928134360939022], 'false': [0.17980719365925668, 0.22118582185898286]}, {'': [0.241847392050196, 0.21287324009911263], 'false,false': [nan, 0.17685911899894738], 'true': [0.22222222222222224, 0.19320580577913835], 'false,true': [0.2542141136309799, 0.0], 'false': [0.22411056022444942, 0.1768591189989474]}, {'': [0.17200736911509693, 0.21090805134304696], 'false,false,false': [nan, 0.1936697560790577], 'false,false': [0.0, 0.19366975607905768], 'false': [0.2346178052579862, 0.17454990382734936], 'false,true': [0.23211455257747626, 0.0], 'false,false,true': [0.0, nan]}, {'': [0.1812476927999326, 0.2028357977894897], 'true': [nan, 0.1812476927999326], 'false,false': [0.15563615986498244, 0.22070449514545323], 'false': [0.23938106112681118, 0.18817494746385766], 'true,false': [nan, 0.18124769279993266], 'false,true': [0.23938106112681118, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
0;false;teamplaysinleague(A, D).;true;true
7;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplaysinleague(C, D).;true;true
7;false,true;teamalsoknownas(F, G).;true;true
7;false;teamplaysagainstteam(A, F).;true;true
8;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
8;false,false;teamplaysagainstteam(A, H).;true;true
8;false,true;athleteplaysforteam(F, A), teamalsoknownas(E, G).;true;true
8;false;teamplaysagainstteam(A, D), teamalsoknownas(D, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( teamplaysinleague(A, E) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7373269569258906;  // std dev = 0,113, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1386074836655861;  // std dev = 0,083, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5746008399181832;  // std dev = 0,150, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12295467459795657;  // std dev = 0,076, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.43330502527850445;  // std dev = 0,157, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11035952003067684;  // std dev = 0,069, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3323882733497934;  // std dev = 0,146, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10002752563568913;  // std dev = 0,063, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2637189387290889;  // std dev = 0,130, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09141201651372532;  // std dev = 0,059, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.21614887858689977;  // std dev = 0,115, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08412621919491785;  // std dev = 0,055, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.16580734318964696;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.06982773598868286;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamplaysagainstteam(A, F) )
%   | then if ( teamalsoknownas(F, G) )
%   | | then return 0.04798980360048205;  // std dev = 0,236, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.06982773598868286;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysinleague(A, H) )
%   | | then return 0.16580734318964718;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.06834196261474124;  // std dev = 0,357, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.035557466213159104;  // std dev = 0,154, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamplaysagainstteam(A, D), teamalsoknownas(D, E) )
%   | then if ( athleteplaysforteam(F, A), teamalsoknownas(E, G) )
%   | | then if ( athleteplayssport(H, B) )
%   | | | then return 0.1479124876763375;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06694300492092656;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.15927562873636414;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(A, I) )
%   | | then return -0.06542629576032225;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.08714871958860974;  // std dev = 0,365, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1505334212668294;  // std dev = 0,110, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07655865845283436;  // std dev = 0,080, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.99119
   AUC PR    = 0.123683
   CLL	      = -0.148183
   Precision = 0.124883 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.222037


Total learning time: 3.561 seconds
Total inference time: 6.731 seconds
AUC ROC: 0.99119


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108555
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.811 seconds
Refined model CLL: -0.108555


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.99119
   AUC PR    = 0.123683
   CLL	      = -0.148183
   Precision = 0.124883 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.222037


Total learning time: 6.606999999999999 seconds
Total inference time: 6.731 seconds
AUC ROC: 0.99119
Total revision time: 6.606999999999999
Best scored revision CLL: -0.108555


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 02:05:02
{'AUC ROC': 0.99119, 'Recall': 1.0, 'CLL': -0.148183, 'Precision': [0.124883, 0.5], 'Learning time': 6.606999999999999, 'parameter_10': {'AUC ROC': 0.496501, 'Recall': 0.586466, 'CLL': -0.742398, 'Precision': [0.002518, 0.5], 'Learning time': 1.428, 'F1': 0.005014, 'Inference time': 20.092, 'AUC PR': 0.002504}, 'F1': 0.222037, 'Inference time': 6.731, 'AUC PR': 0.123683}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.991262
   AUC PR    = 0.124883
   CLL	      = -0.098497
   Precision = 0.124883 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.222037


Total learning time: 2.941 seconds
Total inference time: 4.011 seconds
AUC ROC: 0.991262


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN-B), Time: 02:05:09
{'AUC ROC': 0.991262, 'Recall': 1.0, 'CLL': -0.098497, 'Precision': [0.124883, 0.5], 'Learning time': 2.941, 'F1': 0.222037, 'Inference time': 4.011, 'AUC PR': 0.124883}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.991262
   AUC PR    = 0.124883
   CLL	      = -0.140271
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.338 seconds
Total inference time: 3.105 seconds
AUC ROC: 0.991262


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN), Time: 02:05:14
{'AUC ROC': 0.991262, 'Recall': 0.0, 'CLL': -0.140271, 'Precision': [nan, 0.5], 'Learning time': 1.338, 'F1': nan, 'Inference time': 3.105, 'AUC PR': 0.124883}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false,false,false;countryhascompanyoffice(H, A), acquired(A, I).;false;false
0;false,false;companyalsoknownas(A, G).;true;true
0;false;bankchiefexecutiveceo(A, D), companyceo(E, D).;true;true
0;false,true,false;bankchiefexecutiveceo(E, F).;false;false
0;false,true;economicsectorcompany(B, E).;false;true
0;false,false,true;companyalsoknownas(A, A).;false;false
1;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
1;false,false,false;acquired(A, L), cityhascompanyoffice(M, L).;false;false
1;true,true;companyalsoknownas(E, F).;false;true
1;false,false;acquired(I, A), cityhascompanyoffice(J, I).;true;true
1;false;acquired(A, H), economicsectorcompany(B, H).;false;true
1;true,true,false;countryhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
1;true;countryhascompanyoffice(D, A), acquired(C, E).;true;false
1;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
2;;companyeconomicsector(A, B) :- bankboughtbank(C, A), cityhascompanyoffice(D, C).;true;true
2;false,false,false;acquired(M, A), economicsectorcompany(B, M).;false;false
2;true;bankboughtbank(A, E).;false;false
2;false,false;countryhascompanyoffice(J, A), bankbankincountry(K, J).;true;true
2;false;companyceo(A, F).;true;true
2;false,true,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;false;false
2;false,true;acquired(A, G), cityhascompanyoffice(H, G).;false;true
2;false,false,true;countryhascompanyoffice(J, L), economicsectorcompany(B, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;false,false,false;companyceo(A, J).;false;false
3;true;acquired(D, C), cityhascompanyoffice(E, D).;false;false
3;false,false;companyalsoknownas(A, I).;true;true
3;false;acquired(A, F), cityhascompanyoffice(G, A).;true;true
3;false,true,false;companyalsoknownas(F, H).;false;false
3;false,true;economicsectorcompany(B, F).;false;true
3;false,false,true;economicsectorcompany(B, I).;false;false
4;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
4;false,false,false;acquired(J, A), economicsectorcompany(B, J).;false;false
4;true,true;economicsectorcompany(B, E).;false;false
4;true,false;countryhascompanyoffice(C, G), economicsectorcompany(B, G).;false;false
4;false;companyalsoknownas(A, A).;false;true
4;false,false;bankchiefexecutiveceo(A, H).;true;true
4;true;companyalsoknownas(A, E), countryhascompanyoffice(F, E).;true;true
4;false,false,true;companyceo(I, H), economicsectorcompany(B, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), economicsectorcompany(B, C).;false;true
5;false,false,false;companyalsoknownas(A, I).;false;false
5;false,false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
5;false;acquired(D, A).;true;true
5;false,true,false;economicsectorcompany(B, D).;false;false
5;false,true,true;economicsectorcompany(B, D).;false;false
5;false,true;acquired(E, D), companyceo(E, F).;true;true
5;false,false,true;economicsectorcompany(B, H).;false;false
6;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
6;false,false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;false;false
6;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
6;false,false;companyalsoknownas(A, H).;true;true
6;false;acquired(F, A).;true;true
6;false,true,false;companyceo(F, G).;false;false
6;false,true;economicsectorcompany(B, F).;false;true
6;false,false,true;economicsectorcompany(B, H).;false;false
7;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
7;false,false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;false
7;true;cityhascompanyoffice(E, A).;false;false
7;false,false;companyceo(A, H).;true;true
7;false;companyalsoknownas(A, F).;true;true
7;false,true,false;economicsectorcompany(B, F).;false;false
7;false,true;acquired(F, G), economicsectorcompany(B, G).;false;true
7;false,false,true;bankboughtbank(I, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
8;false,false,false;acquired(A, L), countryhascompanyoffice(M, A).;false;false
8;true;economicsectorcompany(B, C).;false;false
8;false,false;companyalsoknownas(A, J).;true;true
8;false;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(H, A), acquired(F, I).;false;false
8;false,true;companyceo(A, G).;true;false
8;false,false,true;companyalsoknownas(J, K), economicsectorcompany(B, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true,false,true;companyalsoknownas(E, G).;false;false
9;false,false,false;companyceo(A, K).;false;false
9;true;cityhascompanyoffice(D, A).;false;true
9;true,false;acquired(C, E), cityhascompanyoffice(F, C).;true;false
9;false;cityhascompanyoffice(H, A).;true;true
9;false,false;companyalsoknownas(A, J).;false;true
9;false,true;cityhascompanyoffice(H, I), economicsectorcompany(B, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.3126943896449669;  // std dev = 2,335, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( teamplaysinleague(E, F) )
%   | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A), teamalsoknownas(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), athleteplaysforteam(D, C) )
%   then if ( athleteplaysforteam(D, A), teamalsoknownas(C, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1490068483161879;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamalsoknownas(A, F) )
%   | then return 0.37880550177434474;  // std dev = 1,024, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( teamalsoknownas(G, A), athleteledsportsteam(H, G) )
%   | | then if ( athleteledsportsteam(H, I) )
%   | | | then return 0.8156735149828546;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, J), athleteledsportsteam(K, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.28881829856538355;  // std dev = 2,269, 21,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then return 0.2546492434749578;  // std dev = 0,485, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamalsoknownas(D, C), athleteledsportsteam(E, D) )
%   | then return 0.13893404882254212;  // std dev = 0,619, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.15771646798457212;  // std dev = 0,629, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamalsoknownas(A, F), athleteledsportsteam(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0.17304573773667062;  // std dev = 0,496, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else return 0.3496259266678104;  // std dev = 0,442, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), athleteplaysforteam(F, E) )
%   | then return 0.1354248092928546;  // std dev = 0,485, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, G) )
%   | | then return 0.21662721156919723;  // std dev = 0,467, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( teamalsoknownas(H, A) )
%   | | | then return -0.32067318259866884;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.15673043522577246;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.119867283062602;  // std dev = 1,251, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( teamalsoknownas(D, A) )
%   | then if ( teamalsoknownas(E, D) )
%   | | then return 0.5309208849662993;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, F) )
%   | | then return 0.10294012413479849;  // std dev = 0,489, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( teamplaysagainstteam(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12058386325650994;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(C, E) )
%   | then return 0.07132505195106721;  // std dev = 1,584, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A) )
%   | then return -0.07558494439208648;  // std dev = 0,381, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0.10836112772318776;  // std dev = 0,497, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( athleteledsportsteam(H, I) )
%   | | | then return 0.20110249748718156;  // std dev = 1,069, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, A) )
%   | then return 0.3671463168809366;  // std dev = 0,866, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.2057034008367313;  // std dev = 0,929, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamalsoknownas(F, G) )
%   | | then return 0.2516418152557785;  // std dev = 1,132, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.21511397766124274;  // std dev = 0,400, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( teamalsoknownas(H, A), athleteledsportsteam(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.1408497728121244;  // std dev = 1,193, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 2.7040657326272977E-4;  // std dev = 0,379, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( teamplaysagainstteam(D, A), teamalsoknownas(D, E) )
%   | then if ( athleteplaysforteam(F, A), teamalsoknownas(E, G) )
%   | | then return 0.08365710249864629;  // std dev = 1,510, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.17804174828770764;  // std dev = 0,920, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then if ( teamplaysagainstteam(I, H) )
%   | | | then return -0.16401547638944097;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, J), athleteplaysforteam(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11806375768073767;  // std dev = 1,071, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(C, E), athleteledsportsteam(F, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.05520226672092223;  // std dev = 1,198, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( athleteledsportsteam(G, A) )
%   | then if ( athleteledsportsteam(G, H) )
%   | | then return 0.1448239868872371;  // std dev = 1,317, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return -0.06877283933065828;  // std dev = 1,178, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.04729973485983803;  // std dev = 0,468, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */


Results
   AUC ROC   = 0.498436
   AUC PR    = 0.002449
   CLL	      = -0.743797
   Precision = 0.002481 at threshold = 0.5
   Recall    = 0.631579
   F1        = 0.004943


Total learning time: 1.568 seconds
Total inference time: 18.007 seconds
AUC ROC: 0.498436


Results scoring model
   AUC ROC   = 0.811111
   AUC PR    = 0.809127
   CLL	      = -0.57586
   Precision = 0.75 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.774194


Total scoring time: 0.877 seconds
Parameter learned model CLL: -0.57586


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false,false': 'athleteplaysforteam(H, A), teamalsoknownas(A, I)', 'false,false': 'teamplaysagainstteam(G, A)', 'false': 'teamplaysinleague(A, D)', 'false,true': 'teamplaysinleague(E, F)'}, {'false,false,false,false': [1.095, 3, 2], 'true': [2.335, 12, 10], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [2.11e-08, 0, 3], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), athleteplaysforteam(D, C)', 'false,false,false': 'teamalsoknownas(A, J), athleteledsportsteam(K, J)', 'true': 'athleteplaysforteam(D, A), teamalsoknownas(C, E)', 'false,false': 'teamalsoknownas(G, A), athleteledsportsteam(H, G)', 'false': 'teamalsoknownas(A, F)', 'false,false,true': 'athleteledsportsteam(H, I)'}, {'false,false,true,true': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'true,false': [0.816, 2, 1], 'false,true': [1.024, 2, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,false': [2.269, 11, 10], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)'}, {'true': [0.485, 15, 15], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamalsoknownas(D, C), athleteledsportsteam(E, D)', 'false,false': 'teamplaysagainstteam(H, A)', 'false': 'teamalsoknownas(A, F), athleteledsportsteam(G, A)'}, {'false,false,false': [0.442, 2, 4], 'true,false': [0.629, 1, 1], 'true,true': [0.619, 1, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.496, 11, 9]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplaysinleague(C, D)', 'false,false,false': 'teamalsoknownas(H, A)', 'true': 'teamplaysagainstteam(E, A), athleteplaysforteam(F, E)', 'false,false': 'teamplaysinleague(A, G)', 'false': 'teamplaysagainstteam(A, A)'}, {'false,false,false,false': [1.0, 2, 2], 'true,true': [0.485, 6, 5], 'true,false': [0.0, 0, 0], 'false,false,true': [0.467, 6, 8], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false,false,false': 'teamplaysagainstteam(G, A)', 'false,false': 'teamplaysinleague(A, F)', 'false': 'teamalsoknownas(D, A)', 'false,true': 'teamalsoknownas(E, D)'}, {'false,false,false,false': [1.0, 2, 2], 'true': [1.251, 4, 4], 'false,false,true': [0.489, 9, 8], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplaysinleague(C, D)', 'false,false,false': 'athleteledsportsteam(H, I)', 'true': 'athleteplaysforteam(C, E)', 'false,false': 'teamplaysagainstteam(G, A)', 'false': 'teamalsoknownas(F, A)'}, {'false,false,false,false': [0.0, 0, 0], 'true,true': [1.584, 6, 5], 'true,false': [0.0, 0, 0], 'false,false,true': [0.497, 5, 5], 'false,true': [0.381, 2, 1], 'false,false,false,true': [1.069, 2, 4]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplaysinleague(C, D)', 'false,true': 'teamalsoknownas(F, G)', 'true': 'athleteledsportsteam(E, A)', 'false,false': 'teamalsoknownas(H, A), athleteledsportsteam(I, A)', 'false': 'teamplaysagainstteam(F, A)'}, {'false,false,false': [1.193, 3, 5], 'true,true': [0.866, 1, 4], 'true,false': [0.929, 5, 1], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.4, 4, 1], 'false,true,true': [1.132, 2, 4]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamalsoknownas(A, J), athleteplaysforteam(K, A)', 'false,false': 'teamplaysagainstteam(H, A)', 'false': 'teamplaysagainstteam(D, A), teamalsoknownas(D, E)', 'false,true': 'athleteplaysforteam(F, A), teamalsoknownas(E, G)', 'false,false,true': 'teamplaysagainstteam(I, H)'}, {'false,false,true,true': [0.894, 4, 1], 'true': [0.379, 2, 2], 'false,true,false': [0.92, 2, 3], 'false,false,true,false': [0.0, 0, 0], 'false,true,true': [1.51, 5, 5], 'false,false,false,false': [1.071, 2, 4], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'athleteledsportsteam(D, A)', 'false,false': 'teamplaysagainstteam(I, A)', 'false': 'athleteledsportsteam(G, A)', 'true,false': 'teamalsoknownas(C, E), athleteledsportsteam(F, C)', 'false,true': 'athleteledsportsteam(G, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false': [0.468, 2, 3], 'true,true': [0.0, 0, 0], 'true,false,false': [1.198, 4, 4], 'false,true,false': [0.0, 0, 0], 'false,true,true': [1.317, 3, 5], 'false,false,true': [1.178, 6, 3]}]]
[{'': [0.2479338842975207, 0.23437499999999983], 'false,false,false': [nan, 0.24000000000000005], 'false,false': [nan, 0.24000000000000005], 'false': [1.4802973661668753e-16, 0.24000000000000005], 'false,true': [1.4802973661668753e-16, nan]}, {'': [0.2222222222222222, 0.2399659759317531], 'false,false,false': [nan, 0.24515090308433926], 'true': [nan, 0.2222222222222222], 'false,false': [0.0, 0.24515090308433926], 'false': [0.20963706031383444, 0.2460512851763575], 'false,false,true': [0.0, nan]}, {'': [0.23527658651077868, nan]}, {'': [0.194849789873251, 0.23948709069243576], 'true': [0.19145851201544778, 0.19806467809626505], 'false,false': [0.24564558973989356, 0.19497371197812216], 'false': [nan, 0.23948709069243568]}, {'': [0.23568372293779472, 0.2278516748636407], 'false,false,false': [0.0, 0.25], 'true': [0.23568372293779472, nan], 'false,false': [0.21842183024357478, 0.23646627428989841], 'false': [nan, 0.2278516748636407]}, {'': [0.19574788337325014, 0.2383498845446381], 'false,false,false': [nan, 0.25], 'false,false': [0.23944604730507085, 0.25], 'false': [0.0, 0.24150432515184472], 'false,true': [0.0, nan]}, {'': [0.22808654909145265, 0.22144688870278711], 'false,false,false': [0.19061385294403907, nan], 'true': [0.22808654909145265, nan], 'false,false': [0.2474900924300945, 0.19061385294403907], 'false': [0.14526457319543887, 0.22817735301322256]}, {'': [0.22805008177078054, 0.21819700192136296], 'false,false': [nan, 0.177788341668508], 'true': [0.1500599282341602, 0.14387969498044373], 'false,true': [0.213612797431615, 0.16000000000000003], 'false': [0.24325846063747528, 0.17778834166850804]}, {'': [0.14326768063662504, 0.20850865962508244], 'false,false,false': [nan, 0.19121975927635934], 'false,false': [0.16, 0.19121975927635929], 'false': [0.21048728312152687, 0.19675673504998573], 'false,true': [0.22808422102319495, 0.16935443307770653], 'false,false,true': [0.16, nan]}, {'': [0.17936541216462912, 0.20067695156023435], 'true': [nan, 0.17936541216462912], 'false,false': [0.15430555884696293, 0.2192812400286301], 'false': [0.21694653919963178, 0.18060441391982548], 'true,false': [nan, 0.1793654121646291], 'false,true': [0.21694653919963178, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
0;false;teamplaysinleague(A, D).;true;true
1;;teamplayssport(A, B) :- teamalsoknownas(A, C), athleteplaysforteam(D, C).;true;true
1;false,false;teamalsoknownas(G, A), athleteledsportsteam(H, G).;true;true
1;false;teamalsoknownas(A, F).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplaysinleague(C, D).;true;true
4;false,false;teamalsoknownas(H, A).;true;true
4;false;teamplaysinleague(A, G).;true;true
5;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
5;false;teamalsoknownas(D, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1418510649004878;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( teamplaysinleague(A, E) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), athleteplaysforteam(D, C) )
%   then return 0.15619471171805724;  // std dev = 0,690, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0.3713418505177156;  // std dev = 0,954, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( teamalsoknownas(F, A), athleteledsportsteam(G, F) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(H, B) )
%   | | | then return 0.7403254606655848;  // std dev = 0,132, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.13468494888975552;  // std dev = 0,065, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.5659717120099508;  // std dev = 0,128, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6412425055297365;  // std dev = 0,115, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.13425426456413478;  // std dev = 0,134, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( teamalsoknownas(A, D) )
%   | then return 0.5004183698113768;  // std dev = 0,063, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( teamplaysagainstteam(A, E) )
%   | | then return 0.4105153395334278;  // std dev = 0,005, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.4905929476279569;  // std dev = 0,121, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( teamalsoknownas(A, F), teamalsoknownas(F, G) )
%   | then return -0.16502670253830387;  // std dev = 0,062, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10816900560820307;  // std dev = 0,057, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.33928418354612694;  // std dev = 0,102, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09751919060557968;  // std dev = 0,028, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( teamplaysinleague(A, F) )
%   | then if ( athleteplayssport(G, B) )
%   | | then if ( teamalsoknownas(A, H) )
%   | | | then return 0.36097112758523336;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3088978307181428;  // std dev = 0,029, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.09689840554029165;  // std dev = 0,040, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( teamalsoknownas(I, A) )
%   | | then return -0.18697450744334257;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.14509378471361073;  // std dev = 0,546, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.29931502834008916;  // std dev = 0,058, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.12272808069468055;  // std dev = 0,046, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamalsoknownas(E, A) )
%   | then return 0.2509797835021612;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then if ( teamplaysagainstteam(A, G) )
%   | | | then return 0.25033516776747466;  // std dev = 0,007, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3304166942450356;  // std dev = 0,130, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return -0.08194808218183103;  // std dev = 6,60e-05, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.1240319944236457;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return 0.20514972287760885;  // std dev = 0,005, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamplaysagainstteam(E, A) )
%   | | then return 0.22728458164042156;  // std dev = 0,066, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.24833868782245122;  // std dev = 0,119, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysagainstteam(F, A) )
%   | then return -0.0814457968164808;  // std dev = 0,038, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.13501967381775543;  // std dev = 0,011, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return 0.1737100454936496;  // std dev = 0,004, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamplaysagainstteam(E, A) )
%   | | then return 0.19001476267601905;  // std dev = 0,059, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.20549106781487153;  // std dev = 0,104, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( teamplaysagainstteam(F, A) )
%   | then return -0.07556532368528032;  // std dev = 0,035, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.12001819688308495;  // std dev = 0,010, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), teamalsoknownas(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then if ( athleteledsportsteam(E, A) )
%   | | then return 0.14952113028283265;  // std dev = 0,002, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.16956376659098538;  // std dev = 0,047, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.07167107801948802;  // std dev = 0,032, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( athleteplayssport(F, B) )
%   | then if ( teamplaysinleague(A, G), athleteplaysinleague(H, G) )
%   | | then return 0.15334917163948172;  // std dev = 0,012, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17880744546255087;  // std dev = 0,089, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09051008957273582;  // std dev = 0,049, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return 0.13160665013709918;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( teamplaysinleague(A, E), athleteplaysinleague(F, E) )
%   | | then return 0.1411969693957741;  // std dev = 0,046, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.1543362525393711;  // std dev = 0,079, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( teamplaysagainstteam(G, A) )
%   | then return -0.06573781922314174;  // std dev = 0,031, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.09950646943387831;  // std dev = 0,009, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.991085
   AUC PR    = 0.125336
   CLL	      = -0.130258
   Precision = 0.124883 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.222037


Total learning time: 45.705 seconds
Total inference time: 7.758 seconds
AUC ROC: 0.991085


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102123
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.893 seconds
Refined model CLL: -0.102123


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991085
   AUC PR    = 0.125336
   CLL	      = -0.130258
   Precision = 0.124883 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.222037


Total learning time: 49.043 seconds
Total inference time: 7.758 seconds
AUC ROC: 0.991085
Total revision time: 49.043
Best scored revision CLL: -0.102123


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 02:06:29
{'AUC ROC': 0.991085, 'Recall': 1.0, 'CLL': -0.130258, 'Precision': [0.124883, 0.5], 'Learning time': 49.043, 'F1': 0.222037, 'Inference time': 7.758, 'parameter_15': {'AUC ROC': 0.498436, 'Recall': 0.631579, 'CLL': -0.743797, 'Precision': [0.002481, 0.5], 'Learning time': 1.568, 'F1': 0.004943, 'Inference time': 18.007, 'AUC PR': 0.002449}, 'AUC PR': 0.125336}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.991262
   AUC PR    = 0.124883
   CLL	      = -0.098497
   Precision = 0.124883 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.222037


Total learning time: 3.049 seconds
Total inference time: 4.09 seconds
AUC ROC: 0.991262


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN-B), Time: 02:06:37
{'AUC ROC': 0.991262, 'Recall': 1.0, 'CLL': -0.098497, 'Precision': [0.124883, 0.5], 'Learning time': 3.049, 'F1': 0.222037, 'Inference time': 4.09, 'AUC PR': 0.124883}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.991262
   AUC PR    = 0.124883
   CLL	      = -0.140271
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.242 seconds
Total inference time: 2.968 seconds
AUC ROC: 0.991262


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN), Time: 02:06:41
{'AUC ROC': 0.991262, 'Recall': 0.0, 'CLL': -0.140271, 'Precision': [nan, 0.5], 'Learning time': 1.242, 'F1': nan, 'Inference time': 2.968, 'AUC PR': 0.124883}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false,false,false;countryhascompanyoffice(H, A), acquired(A, I).;false;false
0;false,false;companyalsoknownas(A, G).;true;true
0;false;bankchiefexecutiveceo(A, D), companyceo(E, D).;true;true
0;false,true,false;bankchiefexecutiveceo(E, F).;false;false
0;false,true;economicsectorcompany(B, E).;false;true
0;false,false,true;companyalsoknownas(A, A).;false;false
1;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
1;false,false,false;acquired(A, L), cityhascompanyoffice(M, L).;false;false
1;true,true;companyalsoknownas(E, F).;false;true
1;false,false;acquired(I, A), cityhascompanyoffice(J, I).;true;true
1;false;acquired(A, H), economicsectorcompany(B, H).;false;true
1;true,true,false;countryhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
1;true;countryhascompanyoffice(D, A), acquired(C, E).;true;false
1;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
2;;companyeconomicsector(A, B) :- bankboughtbank(C, A), cityhascompanyoffice(D, C).;true;true
2;false,false,false;acquired(M, A), economicsectorcompany(B, M).;false;false
2;true;bankboughtbank(A, E).;false;false
2;false,false;countryhascompanyoffice(J, A), bankbankincountry(K, J).;true;true
2;false;companyceo(A, F).;true;true
2;false,true,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;false;false
2;false,true;acquired(A, G), cityhascompanyoffice(H, G).;false;true
2;false,false,true;countryhascompanyoffice(J, L), economicsectorcompany(B, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;false,false,false;companyceo(A, J).;false;false
3;true;acquired(D, C), cityhascompanyoffice(E, D).;false;false
3;false,false;companyalsoknownas(A, I).;true;true
3;false;acquired(A, F), cityhascompanyoffice(G, A).;true;true
3;false,true,false;companyalsoknownas(F, H).;false;false
3;false,true;economicsectorcompany(B, F).;false;true
3;false,false,true;economicsectorcompany(B, I).;false;false
4;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
4;false,false,false;acquired(J, A), economicsectorcompany(B, J).;false;false
4;true,true;economicsectorcompany(B, E).;false;false
4;true,false;countryhascompanyoffice(C, G), economicsectorcompany(B, G).;false;false
4;false;companyalsoknownas(A, A).;false;true
4;false,false;bankchiefexecutiveceo(A, H).;true;true
4;true;companyalsoknownas(A, E), countryhascompanyoffice(F, E).;true;true
4;false,false,true;companyceo(I, H), economicsectorcompany(B, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), economicsectorcompany(B, C).;false;true
5;false,false,false;companyalsoknownas(A, I).;false;false
5;false,false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
5;false;acquired(D, A).;true;true
5;false,true,false;economicsectorcompany(B, D).;false;false
5;false,true,true;economicsectorcompany(B, D).;false;false
5;false,true;acquired(E, D), companyceo(E, F).;true;true
5;false,false,true;economicsectorcompany(B, H).;false;false
6;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
6;false,false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;false;false
6;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
6;false,false;companyalsoknownas(A, H).;true;true
6;false;acquired(F, A).;true;true
6;false,true,false;companyceo(F, G).;false;false
6;false,true;economicsectorcompany(B, F).;false;true
6;false,false,true;economicsectorcompany(B, H).;false;false
7;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
7;false,false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;false
7;true;cityhascompanyoffice(E, A).;false;false
7;false,false;companyceo(A, H).;true;true
7;false;companyalsoknownas(A, F).;true;true
7;false,true,false;economicsectorcompany(B, F).;false;false
7;false,true;acquired(F, G), economicsectorcompany(B, G).;false;true
7;false,false,true;bankboughtbank(I, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
8;false,false,false;acquired(A, L), countryhascompanyoffice(M, A).;false;false
8;true;economicsectorcompany(B, C).;false;false
8;false,false;companyalsoknownas(A, J).;true;true
8;false;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(H, A), acquired(F, I).;false;false
8;false,true;companyceo(A, G).;true;false
8;false,false,true;companyalsoknownas(J, K), economicsectorcompany(B, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true,false,true;companyalsoknownas(E, G).;false;false
9;false,false,false;companyceo(A, K).;false;false
9;true;cityhascompanyoffice(D, A).;false;true
9;true,false;acquired(C, E), cityhascompanyoffice(F, C).;true;false
9;false;cityhascompanyoffice(H, A).;true;true
9;false,false;companyalsoknownas(A, J).;false;true
9;false,true;cityhascompanyoffice(H, I), economicsectorcompany(B, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.30259337954395676;  // std dev = 2,582, 27,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   else if ( teamplaysinleague(A, D) )
%   | then if ( teamplaysinleague(E, F) )
%   | | then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( athleteplaysforteam(H, A), teamalsoknownas(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.28672036367094084;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), athleteplaysforteam(D, C) )
%   then if ( athleteplaysforteam(D, A), teamalsoknownas(C, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1505206975641012;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamalsoknownas(A, F) )
%   | then return 0.4944760198323331;  // std dev = 1,133, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( teamalsoknownas(G, A), athleteledsportsteam(H, G) )
%   | | then if ( athleteledsportsteam(H, I) )
%   | | | then return 0.8171873642307679;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, J), athleteledsportsteam(K, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.2614455319153942;  // std dev = 2,677, 29,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then return 0.25439443731973654;  // std dev = 0,487, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamalsoknownas(D, C), athleteledsportsteam(E, D) )
%   | then return 0.28558991526093463;  // std dev = 0,743, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.14359324109575763;  // std dev = 0,652, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamalsoknownas(A, F), athleteledsportsteam(G, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0.16804838680734982;  // std dev = 0,494, 25,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | else return 0.2849198051621459;  // std dev = 0,474, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then if ( teamplaysagainstteam(E, A), athleteplaysforteam(F, E) )
%   | then return 0.08929191957266891;  // std dev = 0,480, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, G) )
%   | | then return 0.21868558320481196;  // std dev = 0,468, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( teamalsoknownas(H, A) )
%   | | | then return -0.34959590180122846;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.2455150036299634;  // std dev = 1,317, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.18237272768047136;  // std dev = 1,347, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else if ( teamalsoknownas(D, A) )
%   | then if ( teamalsoknownas(E, D) )
%   | | then return 0.5480858378978228;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, F) )
%   | | then return 0.056985127266210564;  // std dev = 0,490, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( teamplaysagainstteam(G, A) )
%   | | | then return 0.63830231045475;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11467460197275625;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteplaysforteam(C, E) )
%   | then return 0.04365203861543222;  // std dev = 1,833, 15,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A) )
%   | then return 0.01020455382114313;  // std dev = 0,413, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0.1553612667488715;  // std dev = 0,480, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( athleteledsportsteam(H, I) )
%   | | | then return 0.1377404826878105;  // std dev = 1,486, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteledsportsteam(E, A) )
%   | then return 0.24485524860306432;  // std dev = 1,320, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return -0.20751969427656985;  // std dev = 0,924, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( teamalsoknownas(F, G) )
%   | | then return 0.2629497625203329;  // std dev = 1,196, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return -0.20552737506120958;  // std dev = 0,400, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( teamalsoknownas(H, A), athleteledsportsteam(I, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.11985450733292041;  // std dev = 1,605, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.04519472198346993;  // std dev = 0,408, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( teamplaysagainstteam(D, A), teamalsoknownas(D, E) )
%   | then if ( athleteplaysforteam(F, A), teamalsoknownas(E, G) )
%   | | then return 0.07343293548167161;  // std dev = 1,609, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0.12345160368864029;  // std dev = 1,070, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then if ( teamplaysagainstteam(I, H) )
%   | | | then return -0.07075666574565075;  // std dev = 1,154, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(A, J), athleteplaysforteam(K, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07457777788935772;  // std dev = 1,487, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteledsportsteam(D, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(C, E), athleteledsportsteam(F, C) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.09534515647724455;  // std dev = 1,308, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else if ( athleteledsportsteam(G, A) )
%   | then if ( athleteledsportsteam(G, H) )
%   | | then return 0.11058773940485969;  // std dev = 1,638, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return -0.038088947247823426;  // std dev = 1,270, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return -0.014836454654829113;  // std dev = 0,501, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */


Results
   AUC ROC   = 0.511145
   AUC PR    = 0.002531
   CLL	      = -0.69428
   Precision = 0.002451 at threshold = 0.5
   Recall    = 0.37594
   F1        = 0.00487


Total learning time: 1.756 seconds
Total inference time: 19.401 seconds
AUC ROC: 0.511145


Results scoring model
   AUC ROC   = 0.7925
   AUC PR    = 0.804059
   CLL	      = -0.597705
   Precision = 0.727273 at threshold = 0.5
   Recall    = 0.4
   F1        = 0.516129


Total scoring time: 0.877 seconds
Parameter learned model CLL: -0.597705


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false,false': 'athleteplaysforteam(H, A), teamalsoknownas(A, I)', 'false,false': 'teamplaysagainstteam(G, A)', 'false': 'teamplaysinleague(A, D)', 'false,true': 'teamplaysinleague(E, F)'}, {'false,false,false,false': [1.309, 4, 3], 'true': [2.582, 15, 12], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.913, 1, 5], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C), athleteplaysforteam(D, C)', 'false,false,false': 'teamalsoknownas(A, J), athleteledsportsteam(K, J)', 'true': 'athleteplaysforteam(D, A), teamalsoknownas(C, E)', 'false,false': 'teamalsoknownas(G, A), athleteledsportsteam(H, G)', 'false': 'teamalsoknownas(A, F)', 'false,false,true': 'athleteledsportsteam(H, I)'}, {'false,false,true,true': [0.0, 0, 1], 'true,true': [0.0, 0, 0], 'true,false': [0.816, 2, 1], 'false,true': [1.133, 2, 5], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,false': [2.677, 16, 13], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)'}, {'true': [0.487, 20, 20], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamalsoknownas(D, C), athleteledsportsteam(E, D)', 'false,false': 'teamplaysagainstteam(H, A)', 'false': 'teamalsoknownas(A, F), athleteledsportsteam(G, A)'}, {'false,false,false': [0.474, 4, 6], 'true,false': [0.652, 1, 1], 'true,true': [0.743, 1, 2], 'false,true': [0.0, 0, 0], 'false,false,true': [0.494, 14, 11]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplaysinleague(C, D)', 'false,false,false': 'teamalsoknownas(H, A)', 'true': 'teamplaysagainstteam(E, A), athleteplaysforteam(F, E)', 'false,false': 'teamplaysinleague(A, G)', 'false': 'teamplaysagainstteam(A, A)'}, {'false,false,false,false': [1.317, 3, 4], 'true,true': [0.48, 9, 6], 'true,false': [0.0, 0, 0], 'false,false,true': [0.468, 7, 10], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 1, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false,false,false': 'teamplaysagainstteam(G, A)', 'false,false': 'teamplaysinleague(A, F)', 'false': 'teamalsoknownas(D, A)', 'false,true': 'teamalsoknownas(E, D)'}, {'false,false,false,false': [1.225, 3, 3], 'true': [1.347, 4, 6], 'false,false,true': [0.49, 13, 9], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,false,false,true': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplaysinleague(C, D)', 'false,false,false': 'athleteledsportsteam(H, I)', 'true': 'athleteplaysforteam(C, E)', 'false,false': 'teamplaysagainstteam(G, A)', 'false': 'teamalsoknownas(F, A)'}, {'false,false,false,false': [0.0, 0, 0], 'true,true': [1.833, 9, 6], 'true,false': [0.0, 0, 0], 'false,false,true': [0.48, 5, 6], 'false,true': [0.413, 2, 2], 'false,false,false,true': [1.486, 4, 6]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A), athleteplaysinleague(C, D)', 'false,true': 'teamalsoknownas(F, G)', 'true': 'athleteledsportsteam(E, A)', 'false,false': 'teamalsoknownas(H, A), athleteledsportsteam(I, A)', 'false': 'teamplaysagainstteam(F, A)'}, {'false,false,false': [1.605, 5, 8], 'true,true': [1.32, 3, 5], 'true,false': [0.924, 6, 1], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.4, 4, 1], 'false,true,true': [1.196, 2, 5]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamalsoknownas(A, J), athleteplaysforteam(K, A)', 'false,false': 'teamplaysagainstteam(H, A)', 'false': 'teamplaysagainstteam(D, A), teamalsoknownas(D, E)', 'false,true': 'athleteplaysforteam(F, A), teamalsoknownas(E, G)', 'false,false,true': 'teamplaysagainstteam(I, H)'}, {'false,false,true,true': [1.154, 5, 2], 'true': [0.408, 2, 3], 'false,true,false': [1.07, 3, 4], 'false,false,true,false': [0.0, 0, 0], 'false,true,true': [1.609, 6, 5], 'false,false,false,false': [1.487, 4, 6], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'true': 'athleteledsportsteam(D, A)', 'false,false': 'teamplaysagainstteam(I, A)', 'false': 'athleteledsportsteam(G, A)', 'true,false': 'teamalsoknownas(C, E), athleteledsportsteam(F, C)', 'false,true': 'athleteledsportsteam(G, H)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false': [0.501, 4, 4], 'true,true': [0.0, 0, 0], 'true,false,false': [1.308, 4, 6], 'false,true,false': [0.0, 0, 0], 'false,true,true': [1.638, 5, 6], 'false,false,true': [1.27, 7, 4]}]]
[{'': [0.2469135802469131, 0.23668639053254428], 'false,false,false': [nan, 0.24489795918367335], 'false,false': [nan, 0.24489795918367335], 'false': [0.1388888888888887, 0.24489795918367335], 'false,true': [0.1388888888888887, nan]}, {'': [0.2222222222222222, 0.24355496117416803], 'false,false,false': [nan, 0.247188387617019], 'true': [nan, 0.2222222222222222], 'false,false': [0.0, 0.247188387617019], 'false': [0.18333757461668188, 0.24890057529797632], 'false,false,true': [0.0, nan]}, {'': [0.23707629640762065, nan]}, {'': [0.2003884166272088, 0.24101496328868527], 'true': [0.18406080565504704, 0.2127819998010687], 'false,false': [0.24382493500426425, 0.22423365655098007], 'false': [nan, 0.2410149632886855]}, {'': [0.23066173124868575, 0.23129119225537362], 'false,false,false': [0.0, 0.2476384474110349], 'true': [0.23066173124868575, nan], 'false,false': [0.21921285701337057, 0.25541956223999823], 'false': [nan, 0.23129119225537365]}, {'': [0.18139796111217138, 0.24385285141704865], 'false,false,false': [0.0, 0.25], 'false,false': [0.24016291360518788, 0.24785950739878818], 'false': [0.0, 0.24523521211882193], 'false,true': [0.0, nan]}, {'': [0.2240168660936894, 0.21971260607414436], 'false,false,false': [0.2207355086629268, nan], 'true': [0.2240168660936894, nan], 'false,false': [0.23071314082501473, 0.2207355086629268], 'false': [0.17078516516700992, 0.22603933440633772]}, {'': [0.22398425733680538, 0.21855257418919583], 'false,false': [nan, 0.19814019595700977], 'true': [0.21779560952229188, 0.12191401692539476], 'false,true': [0.20441833279637178, 0.15999999999999998], 'false': [0.23925429826511158, 0.19814019595700977]}, {'': [0.16616262032451518, 0.21221916720421202], 'false,false,false': [nan, 0.2210415907458146], 'false,false': [0.19038894482708438, 0.2210415907458146], 'false': [0.2080090016588224, 0.2135359927220773], 'false,true': [0.23534789882869359, 0.16351895870911756], 'false,false,true': [0.19038894482708438, nan]}, {'': [0.17100454195052803, 0.21475699400608345], 'true': [nan, 0.17100454195052803], 'false,false': [0.1465685087326958, 0.2511851251199781], 'false': [0.24400804022706363, 0.19074941009309523], 'true,false': [nan, 0.17100454195052803], 'false,true': [0.24400804022706363, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;teamplayssport(A, B) :- teamalsoknownas(A, C), athleteplaysforteam(D, C).;true;true
1;false,false;teamalsoknownas(G, A), athleteledsportsteam(H, G).;true;true
1;false;teamalsoknownas(A, F).;true;true
4;;teamplayssport(A, B) :- athleteplaysforteam(C, A), athleteplaysinleague(C, D).;true;true
4;false,false;teamalsoknownas(H, A).;true;true
4;false;teamplaysinleague(A, G).;true;true
5;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
5;false,false,false;teamplaysagainstteam(G, A).;true;true
5;false,false;teamplaysinleague(A, F).;true;true
5;false;teamalsoknownas(D, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C), athleteplaysforteam(D, C) )
%   then return 0.15619471171805724;  // std dev = 0,690, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( teamalsoknownas(A, E) )
%   | then if ( teamalsoknownas(F, A) )
%   | | then return 0.29701438684128156;  // std dev = 0,845, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( teamalsoknownas(G, A), athleteledsportsteam(H, G) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.7194734122109543;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.12544463852839138;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5719909643409372;  // std dev = 0,179, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12039451278355451;  // std dev = 0,075, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.43093580646959345;  // std dev = 0,188, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10824525153414506;  // std dev = 0,068, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A), athleteplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.33615047051213015;  // std dev = 0,120, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.09729346150184541;  // std dev = 0,033, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( teamplaysinleague(A, F) )
%   | then if ( athleteplayssport(G, B) )
%   | | then return 0.33364563630753974;  // std dev = 0,123, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.09741440624032369;  // std dev = 0,039, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( teamalsoknownas(H, A) )
%   | | then return -0.13313998139959032;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.31420155060294797;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09146014371377924;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.29560571327191726;  // std dev = 0,122, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.11418853947039993;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( teamalsoknownas(E, A) )
%   | then return 0.24662398902547;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysinleague(A, F) )
%   | | then if ( athleteplayssport(G, B) )
%   | | | then return 0.24688270847410465;  // std dev = 0,000694, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.08368620342724226;  // std dev = 1,67e-05, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.25072475251859383;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08329292242430719;  // std dev = 0,410, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2191396947421187;  // std dev = 0,130, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08461332316885538;  // std dev = 0,048, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.18410074711403865;  // std dev = 0,115, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07829455266114625;  // std dev = 0,045, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15813873553570762;  // std dev = 0,102, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07283479687178504;  // std dev = 0,042, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13827535774109073;  // std dev = 0,092, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0680725037898975;  // std dev = 0,039, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.990864
   AUC PR    = 0.117908
   CLL	      = -0.112674
   Precision = 0.124883 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.222037


Total learning time: 3.568 seconds
Total inference time: 5.059 seconds
AUC ROC: 0.990864


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098573
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.895 seconds
Refined model CLL: -0.098573


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990864
   AUC PR    = 0.117908
   CLL	      = -0.112674
   Precision = 0.124883 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.222037


Total learning time: 7.096 seconds
Total inference time: 5.059 seconds
AUC ROC: 0.990864
Total revision time: 7.096
Best scored revision CLL: -0.098573


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 02:07:14
{'AUC ROC': 0.990864, 'Recall': 1.0, 'CLL': -0.112674, 'Precision': [0.124883, 0.5], 'Learning time': 7.096, 'parameter_20': {'AUC ROC': 0.511145, 'Recall': 0.37594, 'CLL': -0.69428, 'Precision': [0.002451, 0.5], 'Learning time': 1.756, 'F1': 0.00487, 'Inference time': 19.401, 'AUC PR': 0.002531}, 'F1': 0.222037, 'Inference time': 5.059, 'AUC PR': 0.117908}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0641918400820262;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.991262
   AUC PR    = 0.124883
   CLL	      = -0.098497
   Precision = 0.124883 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.222037


Total learning time: 3.288 seconds
Total inference time: 3.884 seconds
AUC ROC: 0.991262


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN-B), Time: 02:07:21
{'AUC ROC': 0.991262, 'Recall': 1.0, 'CLL': -0.098497, 'Precision': [0.124883, 0.5], 'Learning time': 3.288, 'F1': 0.222037, 'Inference time': 3.884, 'AUC PR': 0.124883}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.991262
   AUC PR    = 0.124883
   CLL	      = -0.140271
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.241 seconds
Total inference time: 2.888 seconds
AUC ROC: 0.991262


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN), Time: 02:07:25
{'AUC ROC': 0.991262, 'Recall': 0.0, 'CLL': -0.140271, 'Precision': [nan, 0.5], 'Learning time': 1.241, 'F1': nan, 'Inference time': 2.888, 'AUC PR': 0.124883}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false,false,false;countryhascompanyoffice(H, A), acquired(A, I).;false;false
0;false,false;companyalsoknownas(A, G).;true;true
0;false;bankchiefexecutiveceo(A, D), companyceo(E, D).;true;true
0;false,true,false;bankchiefexecutiveceo(E, F).;false;false
0;false,true;economicsectorcompany(B, E).;false;true
0;false,false,true;companyalsoknownas(A, A).;false;false
1;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
1;false,false,false;acquired(A, L), cityhascompanyoffice(M, L).;false;false
1;true,true;companyalsoknownas(E, F).;false;true
1;false,false;acquired(I, A), cityhascompanyoffice(J, I).;true;true
1;false;acquired(A, H), economicsectorcompany(B, H).;false;true
1;true,true,false;countryhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
1;true;countryhascompanyoffice(D, A), acquired(C, E).;true;false
1;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
2;;companyeconomicsector(A, B) :- bankboughtbank(C, A), cityhascompanyoffice(D, C).;true;true
2;false,false,false;acquired(M, A), economicsectorcompany(B, M).;false;false
2;true;bankboughtbank(A, E).;false;false
2;false,false;countryhascompanyoffice(J, A), bankbankincountry(K, J).;true;true
2;false;companyceo(A, F).;true;true
2;false,true,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;false;false
2;false,true;acquired(A, G), cityhascompanyoffice(H, G).;false;true
2;false,false,true;countryhascompanyoffice(J, L), economicsectorcompany(B, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;false,false,false;companyceo(A, J).;false;false
3;true;acquired(D, C), cityhascompanyoffice(E, D).;false;false
3;false,false;companyalsoknownas(A, I).;true;true
3;false;acquired(A, F), cityhascompanyoffice(G, A).;true;true
3;false,true,false;companyalsoknownas(F, H).;false;false
3;false,true;economicsectorcompany(B, F).;false;true
3;false,false,true;economicsectorcompany(B, I).;false;false
4;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
4;false,false,false;acquired(J, A), economicsectorcompany(B, J).;false;false
4;true,true;economicsectorcompany(B, E).;false;false
4;true,false;countryhascompanyoffice(C, G), economicsectorcompany(B, G).;false;false
4;false;companyalsoknownas(A, A).;false;true
4;false,false;bankchiefexecutiveceo(A, H).;true;true
4;true;companyalsoknownas(A, E), countryhascompanyoffice(F, E).;true;true
4;false,false,true;companyceo(I, H), economicsectorcompany(B, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), economicsectorcompany(B, C).;false;true
5;false,false,false;companyalsoknownas(A, I).;false;false
5;false,false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
5;false;acquired(D, A).;true;true
5;false,true,false;economicsectorcompany(B, D).;false;false
5;false,true,true;economicsectorcompany(B, D).;false;false
5;false,true;acquired(E, D), companyceo(E, F).;true;true
5;false,false,true;economicsectorcompany(B, H).;false;false
6;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
6;false,false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;false;false
6;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
6;false,false;companyalsoknownas(A, H).;true;true
6;false;acquired(F, A).;true;true
6;false,true,false;companyceo(F, G).;false;false
6;false,true;economicsectorcompany(B, F).;false;true
6;false,false,true;economicsectorcompany(B, H).;false;false
7;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
7;false,false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;false
7;true;cityhascompanyoffice(E, A).;false;false
7;false,false;companyceo(A, H).;true;true
7;false;companyalsoknownas(A, F).;true;true
7;false,true,false;economicsectorcompany(B, F).;false;false
7;false,true;acquired(F, G), economicsectorcompany(B, G).;false;true
7;false,false,true;bankboughtbank(I, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
8;false,false,false;acquired(A, L), countryhascompanyoffice(M, A).;false;false
8;true;economicsectorcompany(B, C).;false;false
8;false,false;companyalsoknownas(A, J).;true;true
8;false;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(H, A), acquired(F, I).;false;false
8;false,true;companyceo(A, G).;true;false
8;false,false,true;companyalsoknownas(J, K), economicsectorcompany(B, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true,false,true;companyalsoknownas(E, G).;false;false
9;false,false,false;companyceo(A, K).;false;false
9;true;cityhascompanyoffice(D, A).;false;true
9;true,false;acquired(C, E), cityhascompanyoffice(F, C).;true;false
9;false;cityhascompanyoffice(H, A).;true;true
9;false,false;companyalsoknownas(A, J).;false;true
9;false,true;cityhascompanyoffice(H, I), economicsectorcompany(B, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then return 0.26439893509951234;  // std dev = 2,778, 32,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   else if ( teamalsoknownas(A, D) )
%   | then if ( teamalsoknownas(E, F) )
%   | | then return 0.7152917922423694;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4295775065280837;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( teamplaysagainstteam(E, F) )
%   | | then return 0.2982151869143681;  // std dev = 3,132, 41,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.35026078988857756;  // std dev = 1,518, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.255418748720863;  // std dev = 0,491, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.20552391052861074;  // std dev = 3,468, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamplaysagainstteam(D, A), teamplaysinleague(D, E) )
%   | then return 0.0720098145512287;  // std dev = 0,487, 31,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | else if ( teamplaysinleague(F, C) )
%   | | then return 0.41414160366729125;  // std dev = 1,190, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, G) )
%   | | then return -0.43204688505712613;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.2659346783379854;  // std dev = 0,488, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.19627979682283433;  // std dev = 0,422, 13,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then return 0.09007303857408132;  // std dev = 2,507, 26,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | else return 0.11604993103722837;  // std dev = 1,652, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( teamplaysinleague(D, C) )
%   | then return 0.09017996031519773;  // std dev = 3,030, 41,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.5910698640142594;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplaysforteam(F, G) )
%   | | then return 0.05424833362007361;  // std dev = 1,388, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplaysforteam(D, A) )
%   | then return -0.002109924233071591;  // std dev = 2,381, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else return 0.1692926431972863;  // std dev = 1,793, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.44455891310663864;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.040848469481180774;  // std dev = 1,387, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.0016101342728474038;  // std dev = 2,713, 31,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | else return 0.3391153775757152;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysinleague(A, F) )
%   | | then return 0.20961972883309218;  // std dev = 1,171, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.030718581134802678;  // std dev = 1,387, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then return -0.001992583801606882;  // std dev = 2,381, 24,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   else if ( athleteplaysforteam(D, E) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return 0.0824642188338013;  // std dev = 2,269, 26,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.532722
   AUC PR    = 0.00285
   CLL	      = -0.694233
   Precision = 0.002827 at threshold = 0.5
   Recall    = 0.496241
   F1        = 0.005622


Total learning time: 3.83 seconds
Total inference time: 156.99099999999999 seconds
AUC ROC: 0.532722


Results scoring model
   AUC ROC   = 0.6752
   AUC PR    = 0.747787
   CLL	      = -0.627807
   Precision = 0.722222 at threshold = 0.5
   Recall    = 0.52
   F1        = 0.604651


Total scoring time: 1.319 seconds
Parameter learned model CLL: -0.627807


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false,false': 'teamplaysinleague(A, H)', 'false,false': 'teamplaysagainstteam(G, A)', 'false': 'teamalsoknownas(A, D)', 'false,true': 'teamalsoknownas(E, F)'}, {'false,false,false,false': [1.309, 3, 4], 'true': [2.778, 19, 13], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.926, 1, 6], 'false,false,false,true': [1.0, 2, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)', 'true,true': 'teamplaysagainstteam(E, F)', 'true': 'teamplaysinleague(A, D)'}, {'true,true,true': [3.132, 21, 20], 'true,false': [1.518, 4, 5], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [0.491, 25, 25], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [3.468, 25, 25], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true,false': 'teamplaysinleague(F, C)', 'true': 'teamplaysagainstteam(D, A), teamplaysinleague(D, E)', 'false,false': 'teamalsoknownas(A, G)', 'false': 'teamplaysagainstteam(A, A)'}, {'true,false,true': [1.19, 2, 8], 'false,false,false': [0.488, 3, 5], 'true,true': [0.487, 19, 12], 'false,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false': 'teamplaysagainstteam(D, A)'}, {'false,true': [2.507, 15, 11], 'true': [0.422, 5, 8], 'false,false': [1.652, 5, 6]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'teamplaysinleague(D, C)', 'false,false': 'athleteplaysforteam(F, G)', 'false': 'teamplaysagainstteam(E, A)'}, {'false,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true': [3.03, 21, 20], 'false,true': [0.0, 0, 1], 'false,false,true': [1.388, 4, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'true': 'athleteplaysforteam(D, A)', 'false,false': 'athleteplaysforteam(F, A)', 'false': 'teamplaysagainstteam(E, A)'}, {'false,false,false': [1.387, 4, 4], 'true,false': [1.793, 6, 11], 'true,true': [2.381, 15, 9], 'false,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysinleague(A, D)', 'false,false': 'teamplaysinleague(A, F)', 'false': 'teamplaysagainstteam(E, A)'}, {'false,false,false': [1.387, 4, 4], 'true,false': [0.0, 0, 1], 'true,true': [2.713, 19, 12], 'false,true': [0.0, 0, 0], 'false,false,true': [1.171, 2, 8]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'false,true': 'teamplaysagainstteam(F, G)', 'false': 'athleteplaysforteam(D, E)'}, {'false,true,true': [2.269, 10, 16], 'true': [2.381, 15, 9], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.2412109374999995, 0.22222222222222188], 'false,false,false': [0.25, 0.24489795918367332], 'false,false': [nan, 0.2479338842975207], 'false': [0.12244897959183662, 0.2479338842975207], 'false,true': [0.12244897959183662, nan]}, {'': [0.24261894829142605, nan], 'true,true': [0.2392065466980856, nan], 'true': [0.2392065466980856, 0.25594316260081607]}, {'': [0.24142563538560366, nan]}, {'': [0.240578670572582, nan]}, {'': [0.23550950093520667, 0.2596935601493132], 'true,false': [0.14160071713888434, nan], 'true': [0.2372528616024974, 0.14160071713888434], 'false,false': [0.0, 0.23802433707470133], 'false': [nan, 0.2596935601493132]}, {'': [0.17784308877447286, 0.24375125696990668], 'false': [0.2416926762082669, 0.24814281027524696]}, {'': [0.22394824599312096, 0.24237522591898417], 'true': [0.22394824599312096, nan], 'false,false': [0.24065242299277323, nan], 'false': [0.0, 0.24065242299277323]}, {'': [0.2238754154569504, 0.22994516648350785], 'true': [0.23631126839596314, 0.1891215473627615], 'false,false': [nan, 0.24057918759480593], 'false': [0.0, 0.24057918759480593]}, {'': [0.23337834751825515, 0.19104837062164776], 'true': [0.2373470003948876, 0.0], 'false,false': [0.13723678092544342, 0.24053195738203353], 'false': [nan, 0.19104837062164776]}, {'': [0.23631103259827468, 0.19800999153760415], 'false,true': [0.19800999153760415, nan], 'false': [0.19800999153760415, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
4;false;teamalsoknownas(A, G).;true;true
6;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
6;false;teamplaysagainstteam(E, A).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
7;false;teamplaysagainstteam(E, A).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
8;true;teamplaysinleague(A, D).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926093;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( teamalsoknownas(A, E) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109179;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( teamplaysagainstteam(E, A) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.15274385809367086;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 3,73e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.991038
   AUC PR    = 0.121367
   CLL	      = -0.102824
   Precision = 0.124883 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.222037


Total learning time: 4.204 seconds
Total inference time: 5.053 seconds
AUC ROC: 0.991038


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.929 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991038
   AUC PR    = 0.121367
   CLL	      = -0.102824
   Precision = 0.124883 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.222037


Total learning time: 10.282 seconds
Total inference time: 5.053 seconds
AUC ROC: 0.991038
Total revision time: 10.282
Best scored revision CLL: -0.094637


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Transfer (trRDN-B), Time: 02:10:18
{'AUC ROC': 0.991038, 'Recall': 1.0, 'CLL': -0.102824, 'Precision': [0.124883, 0.5], 'parameter_25': {'AUC ROC': 0.532722, 'Recall': 0.496241, 'CLL': -0.694233, 'Precision': [0.002827, 0.5], 'Learning time': 3.83, 'F1': 0.005622, 'Inference time': 156.99099999999999, 'AUC PR': 0.00285}, 'Learning time': 10.282, 'F1': 0.222037, 'Inference time': 5.053, 'AUC PR': 0.121367}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.991262
   AUC PR    = 0.124883
   CLL	      = -0.098497
   Precision = 0.124883 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.222037


Total learning time: 3.153 seconds
Total inference time: 4.192 seconds
AUC ROC: 0.991262


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN-B), Time: 02:10:26
{'AUC ROC': 0.991262, 'Recall': 1.0, 'CLL': -0.098497, 'Precision': [0.124883, 0.5], 'Learning time': 3.153, 'F1': 0.222037, 'Inference time': 4.192, 'AUC PR': 0.124883}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.991262
   AUC PR    = 0.124883
   CLL	      = -0.140271
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.245 seconds
Total inference time: 3.061 seconds
AUC ROC: 0.991262


Dataset: 46_nell_finances_nell_sports, Fold: 2, Type: Scratch (RDN), Time: 02:10:31
{'AUC ROC': 0.991262, 'Recall': 0.0, 'CLL': -0.140271, 'Precision': [nan, 0.5], 'Learning time': 1.245, 'F1': nan, 'Inference time': 3.061, 'AUC PR': 0.124883}


Starting fold 3

Target train facts examples: 9690
Target train pos examples: 266
Target train neg examples: 106662

Target test facts examples: 9690
Target test pos	 examples: 131
Target test neg examples: 53329

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false,false,false;countryhascompanyoffice(H, A), acquired(A, I).;false;false
0;false,false;companyalsoknownas(A, G).;true;true
0;false;bankchiefexecutiveceo(A, D), companyceo(E, D).;true;true
0;false,true,false;bankchiefexecutiveceo(E, F).;false;false
0;false,true;economicsectorcompany(B, E).;false;true
0;false,false,true;companyalsoknownas(A, A).;false;false
1;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
1;false,false,false;acquired(A, L), cityhascompanyoffice(M, L).;false;false
1;true,true;companyalsoknownas(E, F).;false;true
1;false,false;acquired(I, A), cityhascompanyoffice(J, I).;true;true
1;false;acquired(A, H), economicsectorcompany(B, H).;false;true
1;true,true,false;countryhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
1;true;countryhascompanyoffice(D, A), acquired(C, E).;true;false
1;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
2;;companyeconomicsector(A, B) :- bankboughtbank(C, A), cityhascompanyoffice(D, C).;true;true
2;false,false,false;acquired(M, A), economicsectorcompany(B, M).;false;false
2;true;bankboughtbank(A, E).;false;false
2;false,false;countryhascompanyoffice(J, A), bankbankincountry(K, J).;true;true
2;false;companyceo(A, F).;true;true
2;false,true,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;false;false
2;false,true;acquired(A, G), cityhascompanyoffice(H, G).;false;true
2;false,false,true;countryhascompanyoffice(J, L), economicsectorcompany(B, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;false,false,false;companyceo(A, J).;false;false
3;true;acquired(D, C), cityhascompanyoffice(E, D).;false;false
3;false,false;companyalsoknownas(A, I).;true;true
3;false;acquired(A, F), cityhascompanyoffice(G, A).;true;true
3;false,true,false;companyalsoknownas(F, H).;false;false
3;false,true;economicsectorcompany(B, F).;false;true
3;false,false,true;economicsectorcompany(B, I).;false;false
4;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
4;false,false,false;acquired(J, A), economicsectorcompany(B, J).;false;false
4;true,true;economicsectorcompany(B, E).;false;false
4;true,false;countryhascompanyoffice(C, G), economicsectorcompany(B, G).;false;false
4;false;companyalsoknownas(A, A).;false;true
4;false,false;bankchiefexecutiveceo(A, H).;true;true
4;true;companyalsoknownas(A, E), countryhascompanyoffice(F, E).;true;true
4;false,false,true;companyceo(I, H), economicsectorcompany(B, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), economicsectorcompany(B, C).;false;true
5;false,false,false;companyalsoknownas(A, I).;false;false
5;false,false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
5;false;acquired(D, A).;true;true
5;false,true,false;economicsectorcompany(B, D).;false;false
5;false,true,true;economicsectorcompany(B, D).;false;false
5;false,true;acquired(E, D), companyceo(E, F).;true;true
5;false,false,true;economicsectorcompany(B, H).;false;false
6;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
6;false,false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;false;false
6;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
6;false,false;companyalsoknownas(A, H).;true;true
6;false;acquired(F, A).;true;true
6;false,true,false;companyceo(F, G).;false;false
6;false,true;economicsectorcompany(B, F).;false;true
6;false,false,true;economicsectorcompany(B, H).;false;false
7;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
7;false,false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;false
7;true;cityhascompanyoffice(E, A).;false;false
7;false,false;companyceo(A, H).;true;true
7;false;companyalsoknownas(A, F).;true;true
7;false,true,false;economicsectorcompany(B, F).;false;false
7;false,true;acquired(F, G), economicsectorcompany(B, G).;false;true
7;false,false,true;bankboughtbank(I, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
8;false,false,false;acquired(A, L), countryhascompanyoffice(M, A).;false;false
8;true;economicsectorcompany(B, C).;false;false
8;false,false;companyalsoknownas(A, J).;true;true
8;false;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(H, A), acquired(F, I).;false;false
8;false,true;companyceo(A, G).;true;false
8;false,false,true;companyalsoknownas(J, K), economicsectorcompany(B, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true,false,true;companyalsoknownas(E, G).;false;false
9;false,false,false;companyceo(A, K).;false;false
9;true;cityhascompanyoffice(D, A).;false;true
9;true,false;acquired(C, E), cityhascompanyoffice(F, C).;true;false
9;false;cityhascompanyoffice(H, A).;true;true
9;false,false;companyalsoknownas(A, J).;false;true
9;false,true;cityhascompanyoffice(H, I), economicsectorcompany(B, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( athleteplaysforteam(D, A), athleteledsportsteam(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, D) )
%   then if ( teamalsoknownas(C, A) )
%   | then if ( teamplaysagainstteam(E, F) )
%   | | then return -0.1490779674864458;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.3548649781292767;  // std dev = 1,419, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.25052231289937127;  // std dev = 0,462, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.20206565341184649;  // std dev = 1,448, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysagainstteam(A, D), teamalsoknownas(E, D) )
%   | then return -0.19180237544524922;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteplaysforteam(F, A) )
%   | | then if ( athleteledsportsteam(F, G) )
%   | | | then return -0.28203328372170994;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.4386853868035856;  // std dev = 0,386, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then return 0.11417043031785554;  // std dev = 0,402, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamalsoknownas(C, D) )
%   | then return -0.18005527960082598;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteledsportsteam(E, F) )
%   | then return 0.11936714114482916;  // std dev = 1,230, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then if ( teamplaysinleague(A, D) )
%   | then return -0.15498470530779077;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, E) )
%   | then return -0.06294574127001676;  // std dev = 0,363, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( athleteledsportsteam(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.4163379465365725;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.5836620534634275;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteledsportsteam(C, D) )
%   then return 0.05055546395582833;  // std dev = 0,337, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then return 0.09476418642311593;  // std dev = 0,929, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   else if ( teamplaysinleague(D, E) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return -0.4513341198269932;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.504117
   AUC PR    = 0.002465
   CLL	      = -0.529866
   Precision = 0.002373 at threshold = 0.5
   Recall    = 0.19084
   F1        = 0.004687


Total learning time: 1.76 seconds
Total inference time: 95.523 seconds
AUC ROC: 0.504117


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.376343
   Precision = 1.0 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.888889


Total scoring time: 0.871 seconds
Parameter learned model CLL: -0.376343


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'teamalsoknownas(G, A)', 'false,false': 'teamplaysagainstteam(A, F)', 'false': 'athleteplaysforteam(D, A), athleteledsportsteam(D, E)'}, {'false,false,false,false': [0.894, 1, 4], 'true': [0.894, 4, 1], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, D)', 'true,true': 'teamplaysagainstteam(E, F)', 'true': 'teamalsoknownas(C, A)'}, {'true,true,true': [0.0, 1, 0], 'true,false': [1.419, 4, 5], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [0.462, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [1.448, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamplaysagainstteam(A, D), teamalsoknownas(E, D)', 'false,false': 'athleteplaysforteam(F, A)', 'false': 'teamplaysagainstteam(A, A)', 'false,false,true': 'athleteledsportsteam(F, G)'}, {'false,false,false': [0.386, 1, 5], 'false,false,true,true': [0.0, 3, 0], 'true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)'}, {'true': [0.402, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'true': 'teamalsoknownas(C, D)', 'false': 'athleteledsportsteam(E, F)'}, {'false,false': [0.0, 0, 0], 'true,true': [0.0, 1, 0], 'false,true': [1.23, 4, 5], 'true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamplaysinleague(A, G)', 'true': 'teamplaysinleague(A, D)', 'false,false': 'athleteledsportsteam(F, A)', 'false': 'teamplaysagainstteam(A, E)'}, {'false,false,false,false': [0.0, 1, 0], 'true,true': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,true': [0.363, 3, 1], 'false,false,false,true': [0.0, 0, 4]}], ['teamplayssport(A, B)', {'': 'athleteledsportsteam(C, D)'}, {'true': [0.337, 5, 5], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false,true': 'teamplaysagainstteam(F, G)', 'false': 'teamplaysinleague(D, E)'}, {'false,true,true': [0.0, 1, 0], 'true': [0.929, 4, 5], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.16000000000000003, 0.15999999999999986], 'false,false,false': [nan, 0.15999999999999986], 'false,false': [nan, 0.15999999999999986], 'false': [nan, 0.15999999999999986]}, {'': [0.22428691845137924, nan], 'true,true': [0.0, nan], 'true': [0.0, 0.22381183792461407]}, {'': [0.21363677112595508, nan]}, {'': [0.20970287036675087, nan]}, {'': [0.0, 0.21471871969769885], 'true': [0.0, nan], 'false,false': [0.0, 0.14893294553196512], 'false': [nan, 0.21471871969769885], 'false,false,true': [0.0, nan]}, {'': [0.16146606488899728, nan]}, {'': [0.0, 0.16810752900551684], 'true': [0.0, nan], 'false': [0.16810752900551684, nan]}, {'': [0.0, 0.16659696345104727], 'false,false,false': [0.0, 0.0], 'true': [0.0, nan], 'false,false': [nan, 0.16], 'false': [0.13151017983438493, 0.16]}, {'': [0.11347430022255822, nan]}, {'': [0.09584503789874924, 0.0], 'false,true': [0.0, nan], 'false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
4;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
4;false;athleteplaysforteam(F, A).;true;true
6;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
7;;teamplayssport(A, B) :- teamalsoknownas(C, A).;true;true
7;false,false;teamplaysinleague(A, G).;true;true
7;false;teamplaysagainstteam(A, E).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return -0.09269127618926098;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplaysforteam(D, A) )
%   | then return -0.09269127618926098;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2518113266019146;  // std dev = 0,377, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2684867646209801;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0913779616959631;  // std dev = 0,028, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return -0.07832847826678026;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( athleteplayssport(D, B) )
%   | then return 0.21912025742526567;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08551984226452246;  // std dev = 0,025, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return -0.07285720748245597;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( teamplaysagainstteam(A, D) )
%   | then return -0.008296288670303152;  // std dev = 0,222, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( teamplaysinleague(A, E) )
%   | | then return 0.18393362768251786;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09918662858713989;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.16336521364753243;  // std dev = 0,024, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07484202755848222;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.14226182282132585;  // std dev = 0,022, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.06611162554999561;  // std dev = 0,003, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08468548317114055;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */


Results
   AUC ROC   = 0.981353
   AUC PR    = 0.123243
   CLL	      = -0.104086
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 1.721 seconds
Total inference time: 4.505 seconds
AUC ROC: 0.981353


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101061
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.808 seconds
Refined model CLL: -0.101061


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.981353
   AUC PR    = 0.123243
   CLL	      = -0.104086
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 5.16 seconds
Total inference time: 4.505 seconds
AUC ROC: 0.981353
Total revision time: 5.16
Best scored revision CLL: -0.101061


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 02:12:17
{'AUC ROC': 0.981353, 'parameter_5': {'AUC ROC': 0.504117, 'Recall': 0.19084, 'CLL': -0.529866, 'Precision': [0.002373, 0.5], 'Learning time': 1.76, 'F1': 0.004687, 'Inference time': 95.523, 'AUC PR': 0.002465}, 'Recall': 0.984733, 'CLL': -0.104086, 'Precision': [0.126223, 0.5], 'Learning time': 5.16, 'F1': 0.223764, 'Inference time': 4.505, 'AUC PR': 0.123243}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.097091
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 1.875 seconds
Total inference time: 4.194 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN-B), Time: 02:12:23
{'AUC ROC': 0.983994, 'Recall': 0.984733, 'CLL': -0.097091, 'Precision': [0.126223, 0.5], 'Learning time': 1.875, 'F1': 0.223764, 'Inference time': 4.194, 'AUC PR': 0.124824}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.140117
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.933 seconds
Total inference time: 2.787 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN), Time: 02:12:27
{'AUC ROC': 0.983994, 'Recall': 0.0, 'CLL': -0.140117, 'Precision': [nan, 0.5], 'Learning time': 0.933, 'F1': nan, 'Inference time': 2.787, 'AUC PR': 0.124824}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false,false,false;countryhascompanyoffice(H, A), acquired(A, I).;false;false
0;false,false;companyalsoknownas(A, G).;true;true
0;false;bankchiefexecutiveceo(A, D), companyceo(E, D).;true;true
0;false,true,false;bankchiefexecutiveceo(E, F).;false;false
0;false,true;economicsectorcompany(B, E).;false;true
0;false,false,true;companyalsoknownas(A, A).;false;false
1;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
1;false,false,false;acquired(A, L), cityhascompanyoffice(M, L).;false;false
1;true,true;companyalsoknownas(E, F).;false;true
1;false,false;acquired(I, A), cityhascompanyoffice(J, I).;true;true
1;false;acquired(A, H), economicsectorcompany(B, H).;false;true
1;true,true,false;countryhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
1;true;countryhascompanyoffice(D, A), acquired(C, E).;true;false
1;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
2;;companyeconomicsector(A, B) :- bankboughtbank(C, A), cityhascompanyoffice(D, C).;true;true
2;false,false,false;acquired(M, A), economicsectorcompany(B, M).;false;false
2;true;bankboughtbank(A, E).;false;false
2;false,false;countryhascompanyoffice(J, A), bankbankincountry(K, J).;true;true
2;false;companyceo(A, F).;true;true
2;false,true,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;false;false
2;false,true;acquired(A, G), cityhascompanyoffice(H, G).;false;true
2;false,false,true;countryhascompanyoffice(J, L), economicsectorcompany(B, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;false,false,false;companyceo(A, J).;false;false
3;true;acquired(D, C), cityhascompanyoffice(E, D).;false;false
3;false,false;companyalsoknownas(A, I).;true;true
3;false;acquired(A, F), cityhascompanyoffice(G, A).;true;true
3;false,true,false;companyalsoknownas(F, H).;false;false
3;false,true;economicsectorcompany(B, F).;false;true
3;false,false,true;economicsectorcompany(B, I).;false;false
4;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
4;false,false,false;acquired(J, A), economicsectorcompany(B, J).;false;false
4;true,true;economicsectorcompany(B, E).;false;false
4;true,false;countryhascompanyoffice(C, G), economicsectorcompany(B, G).;false;false
4;false;companyalsoknownas(A, A).;false;true
4;false,false;bankchiefexecutiveceo(A, H).;true;true
4;true;companyalsoknownas(A, E), countryhascompanyoffice(F, E).;true;true
4;false,false,true;companyceo(I, H), economicsectorcompany(B, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), economicsectorcompany(B, C).;false;true
5;false,false,false;companyalsoknownas(A, I).;false;false
5;false,false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
5;false;acquired(D, A).;true;true
5;false,true,false;economicsectorcompany(B, D).;false;false
5;false,true,true;economicsectorcompany(B, D).;false;false
5;false,true;acquired(E, D), companyceo(E, F).;true;true
5;false,false,true;economicsectorcompany(B, H).;false;false
6;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
6;false,false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;false;false
6;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
6;false,false;companyalsoknownas(A, H).;true;true
6;false;acquired(F, A).;true;true
6;false,true,false;companyceo(F, G).;false;false
6;false,true;economicsectorcompany(B, F).;false;true
6;false,false,true;economicsectorcompany(B, H).;false;false
7;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
7;false,false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;false
7;true;cityhascompanyoffice(E, A).;false;false
7;false,false;companyceo(A, H).;true;true
7;false;companyalsoknownas(A, F).;true;true
7;false,true,false;economicsectorcompany(B, F).;false;false
7;false,true;acquired(F, G), economicsectorcompany(B, G).;false;true
7;false,false,true;bankboughtbank(I, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
8;false,false,false;acquired(A, L), countryhascompanyoffice(M, A).;false;false
8;true;economicsectorcompany(B, C).;false;false
8;false,false;companyalsoknownas(A, J).;true;true
8;false;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(H, A), acquired(F, I).;false;false
8;false,true;companyceo(A, G).;true;false
8;false,false,true;companyalsoknownas(J, K), economicsectorcompany(B, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true,false,true;companyalsoknownas(E, G).;false;false
9;false,false,false;companyceo(A, K).;false;false
9;true;cityhascompanyoffice(D, A).;false;true
9;true,false;acquired(C, E), cityhascompanyoffice(F, C).;true;false
9;false;cityhascompanyoffice(H, A).;true;true
9;false,false;companyalsoknownas(A, J).;false;true
9;false,true;cityhascompanyoffice(H, I), economicsectorcompany(B, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.10814893509951219;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( athleteledsportsteam(D, A), athleteplaysforteam(D, E) )
%   | then if ( athleteledsportsteam(F, E) )
%   | | then return 0.0581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamplaysagainstteam(C, A) )
%   | then if ( teamalsoknownas(E, F) )
%   | | then return 0.3111368092790463;  // std dev = 1,657, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2973385641404104;  // std dev = 1,371, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.2539255357803046;  // std dev = 0,478, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.20451874790415997;  // std dev = 2,125, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(D, A), teamplaysagainstteam(E, D) )
%   | then return 0.7155044022658122;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamplaysagainstteam(C, F) )
%   | | then return 0.11849089550369292;  // std dev = 1,524, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.14983205656781892;  // std dev = 0,478, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.12433969098711013;  // std dev = 0,465, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then return 0.10159943871016634;  // std dev = 1,578, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, F) )
%   | then return 0.08567310382401244;  // std dev = 1,348, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.03851024634407536;  // std dev = 1,511, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return 0.5069595371833733;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamalsoknownas(E, A) )
%   | then return -0.35980205935190607;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.33980476363257955;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.4601952363674204;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.05335691719100151;  // std dev = 0,435, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then return 0.064616767809415;  // std dev = 1,840, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   else if ( teamplaysinleague(D, E) )
%   | then if ( teamalsoknownas(F, G) )
%   | | then return -0.09491823582603692;  // std dev = 0,571, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.483577
   AUC PR    = 0.002363
   CLL	      = -0.644314
   Precision = 0.002336 at threshold = 0.5
   Recall    = 0.51145
   F1        = 0.004651


Total learning time: 3.183 seconds
Total inference time: 211.25900000000001 seconds
AUC ROC: 0.483577


Results scoring model
   AUC ROC   = 0.875
   AUC PR    = 0.852441
   CLL	      = -0.566757
   Precision = 0.818182 at threshold = 0.5
   Recall    = 0.9
   F1        = 0.857143


Total scoring time: 1.162 seconds
Parameter learned model CLL: -0.566757


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamplaysagainstteam(H, A)', 'false,false': 'teamalsoknownas(G, A)', 'false': 'athleteledsportsteam(D, A), athleteplaysforteam(D, E)', 'false,true': 'athleteledsportsteam(F, E)'}, {'false,false,false,false': [1.155, 2, 4], 'true': [0.866, 3, 1], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.894, 4, 1], 'false,false,false,true': [0.894, 1, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)', 'true,true': 'teamalsoknownas(E, F)', 'true': 'teamplaysagainstteam(C, A)'}, {'true,true,true': [1.657, 6, 6], 'true,false': [1.371, 4, 4], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [0.478, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [2.125, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true,false': 'teamplaysagainstteam(C, F)', 'true': 'teamalsoknownas(D, A), teamplaysagainstteam(E, D)', 'false,false': 'athleteledsportsteam(G, A)', 'false': 'teamalsoknownas(A, A)'}, {'true,false,true': [1.524, 6, 5], 'false,false,false': [0.478, 4, 4], 'true,true': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [0.465, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'true': 'teamplaysagainstteam(C, D)', 'false': 'athleteplaysforteam(E, F)'}, {'false,false': [0.0, 0, 0], 'true,true': [1.578, 6, 6], 'false,true': [1.348, 4, 4], 'true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false,false': 'teamplaysinleague(A, G)', 'true': 'teamplaysinleague(A, D)', 'false,false': 'athleteplaysforteam(F, A)', 'false': 'teamalsoknownas(E, A)'}, {'false,false,false,false': [0.0, 1, 0], 'true,true': [1.511, 6, 5], 'true,false': [0.0, 0, 1], 'false,false,true': [0.0, 0, 0], 'false,true': [0.0, 2, 0], 'false,false,false,true': [0.894, 1, 4]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [0.435, 10, 10], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false,true': 'teamalsoknownas(F, G)', 'false': 'teamplaysinleague(D, E)'}, {'false,true,true': [0.571, 2, 1], 'true': [1.84, 8, 9], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.18750000000000003, 0.24609374999999992], 'false,false,false': [0.15999999999999986, 0.22222222222222213], 'false,false': [nan, 0.19834710743801634], 'false': [0.16000000000000003, 0.19834710743801634], 'false,true': [0.16000000000000003, nan]}, {'': [0.2313347658369514, nan], 'true,true': [0.2287946182028131, nan], 'true': [0.2287946182028131, 0.23503075234681559]}, {'': [0.2281410610280828, nan]}, {'': [0.2257179074050648, nan]}, {'': [0.2207722080262435, 0.2287385991504498], 'true,false': [0.21114031481786844, nan], 'true': [0.0, 0.21114031481786844], 'false,false': [nan, 0.2287385991504498], 'false': [nan, 0.2287385991504498]}, {'': [0.2163572438703857, nan]}, {'': [0.20758279861769113, 0.22715492603572057], 'true': [0.20758279861769113, nan], 'false': [0.22715492603572057, nan]}, {'': [0.20690810606111007, 0.2267914788694842], 'false,false,false': [0.15999999999999998, 0.0], 'true': [0.20743087237752722, 0.0], 'false,false': [nan, 0.2222222222222222], 'false': [0.0, 0.2222222222222222]}, {'': [0.18923943931885606, nan]}, {'': [0.19925020145718086, 0.10885008621863317], 'false,true': [0.10885008621863317, nan], 'false': [0.10885008621863317, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
4;true;teamalsoknownas(D, A), teamplaysagainstteam(E, D).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
7;true;teamplaysinleague(A, D).;true;true
7;false,false;teamplaysinleague(A, G).;true;true
7;false;teamalsoknownas(E, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamalsoknownas(D, A), teamplaysagainstteam(E, D) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( athleteplayssport(G, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamalsoknownas(F, A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( teamplaysinleague(A, G) )
%   | | then return 0.12702795304355446;  // std dev = 0,224, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.07324622576333704;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1553809693075412;  // std dev = 0,010, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06981931298733524;  // std dev = 0,013, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13606380668870025;  // std dev = 0,009, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06541999506888811;  // std dev = 0,012, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.985848
   AUC PR    = 0.126191
   CLL	      = -0.101759
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 2.345 seconds
Total inference time: 5.31 seconds
AUC ROC: 0.985848


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096158
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.788 seconds
Refined model CLL: -0.096158


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.985848
   AUC PR    = 0.126191
   CLL	      = -0.101759
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 7.478 seconds
Total inference time: 5.31 seconds
AUC ROC: 0.985848
Total revision time: 7.478
Best scored revision CLL: -0.096158


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 02:16:12
{'AUC ROC': 0.985848, 'Recall': 0.984733, 'CLL': -0.101759, 'Precision': [0.126223, 0.5], 'Learning time': 7.478, 'parameter_10': {'AUC ROC': 0.483577, 'Recall': 0.51145, 'CLL': -0.644314, 'Precision': [0.002336, 0.5], 'Learning time': 3.183, 'F1': 0.004651, 'Inference time': 211.25900000000001, 'AUC PR': 0.002363}, 'F1': 0.223764, 'Inference time': 5.31, 'AUC PR': 0.126191}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.097091
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 2.189 seconds
Total inference time: 4.162 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN-B), Time: 02:16:19
{'AUC ROC': 0.983994, 'Recall': 0.984733, 'CLL': -0.097091, 'Precision': [0.126223, 0.5], 'Learning time': 2.189, 'F1': 0.223764, 'Inference time': 4.162, 'AUC PR': 0.124824}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.140117
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.983 seconds
Total inference time: 2.92 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN), Time: 02:16:23
{'AUC ROC': 0.983994, 'Recall': 0.0, 'CLL': -0.140117, 'Precision': [nan, 0.5], 'Learning time': 0.983, 'F1': nan, 'Inference time': 2.92, 'AUC PR': 0.124824}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false,false,false;countryhascompanyoffice(H, A), acquired(A, I).;false;false
0;false,false;companyalsoknownas(A, G).;true;true
0;false;bankchiefexecutiveceo(A, D), companyceo(E, D).;true;true
0;false,true,false;bankchiefexecutiveceo(E, F).;false;false
0;false,true;economicsectorcompany(B, E).;false;true
0;false,false,true;companyalsoknownas(A, A).;false;false
1;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
1;false,false,false;acquired(A, L), cityhascompanyoffice(M, L).;false;false
1;true,true;companyalsoknownas(E, F).;false;true
1;false,false;acquired(I, A), cityhascompanyoffice(J, I).;true;true
1;false;acquired(A, H), economicsectorcompany(B, H).;false;true
1;true,true,false;countryhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
1;true;countryhascompanyoffice(D, A), acquired(C, E).;true;false
1;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
2;;companyeconomicsector(A, B) :- bankboughtbank(C, A), cityhascompanyoffice(D, C).;true;true
2;false,false,false;acquired(M, A), economicsectorcompany(B, M).;false;false
2;true;bankboughtbank(A, E).;false;false
2;false,false;countryhascompanyoffice(J, A), bankbankincountry(K, J).;true;true
2;false;companyceo(A, F).;true;true
2;false,true,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;false;false
2;false,true;acquired(A, G), cityhascompanyoffice(H, G).;false;true
2;false,false,true;countryhascompanyoffice(J, L), economicsectorcompany(B, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;false,false,false;companyceo(A, J).;false;false
3;true;acquired(D, C), cityhascompanyoffice(E, D).;false;false
3;false,false;companyalsoknownas(A, I).;true;true
3;false;acquired(A, F), cityhascompanyoffice(G, A).;true;true
3;false,true,false;companyalsoknownas(F, H).;false;false
3;false,true;economicsectorcompany(B, F).;false;true
3;false,false,true;economicsectorcompany(B, I).;false;false
4;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
4;false,false,false;acquired(J, A), economicsectorcompany(B, J).;false;false
4;true,true;economicsectorcompany(B, E).;false;false
4;true,false;countryhascompanyoffice(C, G), economicsectorcompany(B, G).;false;false
4;false;companyalsoknownas(A, A).;false;true
4;false,false;bankchiefexecutiveceo(A, H).;true;true
4;true;companyalsoknownas(A, E), countryhascompanyoffice(F, E).;true;true
4;false,false,true;companyceo(I, H), economicsectorcompany(B, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), economicsectorcompany(B, C).;false;true
5;false,false,false;companyalsoknownas(A, I).;false;false
5;false,false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
5;false;acquired(D, A).;true;true
5;false,true,false;economicsectorcompany(B, D).;false;false
5;false,true,true;economicsectorcompany(B, D).;false;false
5;false,true;acquired(E, D), companyceo(E, F).;true;true
5;false,false,true;economicsectorcompany(B, H).;false;false
6;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
6;false,false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;false;false
6;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
6;false,false;companyalsoknownas(A, H).;true;true
6;false;acquired(F, A).;true;true
6;false,true,false;companyceo(F, G).;false;false
6;false,true;economicsectorcompany(B, F).;false;true
6;false,false,true;economicsectorcompany(B, H).;false;false
7;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
7;false,false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;false
7;true;cityhascompanyoffice(E, A).;false;false
7;false,false;companyceo(A, H).;true;true
7;false;companyalsoknownas(A, F).;true;true
7;false,true,false;economicsectorcompany(B, F).;false;false
7;false,true;acquired(F, G), economicsectorcompany(B, G).;false;true
7;false,false,true;bankboughtbank(I, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
8;false,false,false;acquired(A, L), countryhascompanyoffice(M, A).;false;false
8;true;economicsectorcompany(B, C).;false;false
8;false,false;companyalsoknownas(A, J).;true;true
8;false;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(H, A), acquired(F, I).;false;false
8;false,true;companyceo(A, G).;true;false
8;false,false,true;companyalsoknownas(J, K), economicsectorcompany(B, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true,false,true;companyalsoknownas(E, G).;false;false
9;false,false,false;companyceo(A, K).;false;false
9;true;cityhascompanyoffice(D, A).;false;true
9;true,false;acquired(C, E), cityhascompanyoffice(F, C).;true;false
9;false;cityhascompanyoffice(H, A).;true;true
9;false,false;companyalsoknownas(A, J).;false;true
9;false,true;cityhascompanyoffice(H, I), economicsectorcompany(B, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( athleteledsportsteam(D, A), athleteplaysforteam(D, E) )
%   | then if ( athleteledsportsteam(F, E) )
%   | | then return 0.23314893509951226;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, H) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3966104735610508;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( teamalsoknownas(E, F) )
%   | | then return 0.2700534936289121;  // std dev = 1,762, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.3370770749686072;  // std dev = 2,057, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.2557724821847356;  // std dev = 0,495, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then return 0.20572021050727882;  // std dev = 2,706, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(A, D), teamplaysagainstteam(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, C) )
%   | | then return 0.13264031193495562;  // std dev = 1,749, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.18345345139681168;  // std dev = 0,499, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.12444634362692225;  // std dev = 0,493, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return 0.0740509370993325;  // std dev = 1,747, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(E, F) )
%   | then return 0.11097612952733131;  // std dev = 2,057, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then return 0.060868225848850654;  // std dev = 1,596, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return 0.03224699935913633;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamalsoknownas(A, E) )
%   | then return 0.0803974984467144;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, G) )
%   | | | then return 0.10190803749801196;  // std dev = 1,491, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.04635248194245645;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then return 0.054304409527781816;  // std dev = 0,492, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then return 0.07045259058627809;  // std dev = 2,238, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( teamplaysinleague(D, E) )
%   | then if ( teamalsoknownas(F, G) )
%   | | then return -0.027956395273700172;  // std dev = 1,485, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.503086
   AUC PR    = 0.00245
   CLL	      = -0.634246
   Precision = 0.002505 at threshold = 0.5
   Recall    = 0.366412
   F1        = 0.004976


Total learning time: 4.026 seconds
Total inference time: 231.13400000000001 seconds
AUC ROC: 0.503086


Results scoring model
   AUC ROC   = 0.648889
   AUC PR    = 0.682024
   CLL	      = -0.678156
   Precision = 0.636364 at threshold = 0.5
   Recall    = 0.466667
   F1        = 0.538462


Total scoring time: 1.273 seconds
Parameter learned model CLL: -0.678156


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(A, C)', 'false,false,false': 'teamplaysagainstteam(A, H)', 'false,false': 'teamalsoknownas(A, G)', 'false': 'athleteledsportsteam(D, A), athleteplaysforteam(D, E)', 'false,true': 'athleteledsportsteam(F, E)'}, {'false,false,false,false': [1.797, 6, 7], 'true': [1.095, 3, 2], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [1.369, 5, 3], 'false,false,false,true': [0.866, 1, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, D)', 'true,true': 'teamalsoknownas(E, F)', 'true': 'teamplaysagainstteam(A, D)'}, {'true,true,true': [1.762, 7, 6], 'true,false': [2.057, 8, 9], 'false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [0.495, 15, 15], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(C, D)'}, {'true': [2.706, 15, 15], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true,false': 'teamplaysagainstteam(F, C)', 'true': 'teamalsoknownas(A, D), teamplaysagainstteam(D, E)', 'false,false': 'athleteledsportsteam(G, A)', 'false': 'teamalsoknownas(A, A)'}, {'true,false,true': [1.749, 7, 6], 'false,false,false': [0.499, 8, 9], 'true,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [0.493, 15, 15], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true': 'teamplaysagainstteam(D, C)', 'false': 'athleteplaysforteam(E, F)'}, {'false,false': [0.0, 0, 0], 'true,true': [1.747, 7, 6], 'false,true': [2.057, 8, 9], 'true,false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'teamplaysinleague(A, G)', 'true': 'teamplaysinleague(A, D)', 'false,false': 'athleteplaysforteam(F, A)', 'false': 'teamalsoknownas(A, E)'}, {'false,false,false,false': [1.0, 2, 2], 'true,true': [1.596, 6, 5], 'true,false': [0.707, 1, 1], 'false,false,true': [0.0, 0, 0], 'false,true': [0.5, 2, 2], 'false,false,false,true': [1.491, 4, 5]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, D)'}, {'true': [0.492, 15, 15], 'false': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C)', 'false,true': 'teamalsoknownas(F, G)', 'false': 'teamplaysinleague(D, E)'}, {'false,true,true': [1.485, 5, 4], 'true': [2.238, 10, 11], 'false,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}]]
[{'': [0.24000000000000005, 0.24959999999999957], 'false,false,false': [0.18750000000000006, 0.24852071005917156], 'false,false': [nan, 0.24221453287197228], 'false': [0.2343749999999999, 0.24221453287197228], 'false,true': [0.2343749999999999, nan]}, {'': [0.24565846250134987, nan], 'true,true': [0.23884315949932905, nan], 'true': [0.23884315949932905, 0.24892356193292045]}, {'': [0.244659097173055, nan]}, {'': [0.2440761087901097, nan]}, {'': [0.23541464820760064, 0.2488789177095183], 'true,false': [0.23541464820760064, nan], 'true': [nan, 0.23541464820760064], 'false,false': [nan, 0.2488789177095183], 'false': [nan, 0.2488789177095183]}, {'': [0.24320790272387155, nan]}, {'': [0.23465392425639456, 0.2488732638852431], 'true': [0.23465392425639456, nan], 'false': [0.2488732638852431, nan]}, {'': [0.23449940496097912, 0.2488722879505858], 'false,false,false': [0.2469135802469136, 0.25], 'true': [0.23155508809145733, 0.24999999999999997], 'false,false': [nan, 0.24852071005917167], 'false': [0.25, 0.24852071005917167]}, {'': [0.24255219064504968, nan]}, {'': [0.23857330975205668, 0.24493693246463444], 'false,true': [0.24493693246463444, nan], 'false': [0.24493693246463444, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;teamplayssport(A, B) :- teamalsoknownas(A, C).;true;true
0;false,false;teamalsoknownas(A, G).;true;true
0;false,false,false;teamplaysagainstteam(A, H).;true;true
0;false,true;athleteledsportsteam(F, E).;true;true
0;false;athleteledsportsteam(D, A), athleteplaysforteam(D, E).;true;true
1;;teamplayssport(A, B) :- teamplaysagainstteam(C, D).;true;true
1;true,true;teamalsoknownas(E, F).;true;true
1;true;teamplaysagainstteam(A, D).;true;true
2;;teamplayssport(A, B) :- teamplaysinleague(C, D).;true;true
3;;teamplayssport(A, B) :- teamplaysinleague(C, D).;true;true
4;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
4;false,false;athleteledsportsteam(G, A).;true;true
4;true;teamalsoknownas(A, D), teamplaysagainstteam(D, E).;true;true
4;true,false;teamplaysagainstteam(F, C).;true;true
4;false;teamalsoknownas(A, A).;true;true
5;;teamplayssport(A, B) :- athleteplaysforteam(C, D).;true;true
6;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
6;true;teamplaysagainstteam(D, C).;true;true
6;false;athleteplaysforteam(E, F).;true;true
7;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
7;false,false,false;teamplaysinleague(A, G).;true;true
7;true;teamplaysinleague(A, D).;true;true
7;false,false;athleteplaysforteam(F, A).;true;true
7;false;teamalsoknownas(A, E).;true;true
8;;teamplayssport(A, B) :- athleteplaysforteam(C, D).;true;true
9;;teamplayssport(A, B) :- teamplaysinleague(A, C).;true;true
9;false,true;teamalsoknownas(F, G).;true;true
9;false;teamplaysinleague(D, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(A, C) )
%   then return 0.2581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( athleteledsportsteam(D, A), athleteplaysforteam(D, E) )
%   | then if ( athleteledsportsteam(F, E) )
%   | | then if ( athleteplayssport(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, I) )
%   | | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3966104735610508;  // std dev = 1,797, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, D) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( teamalsoknownas(E, F) )
%   | | then if ( athleteplayssport(G, B) )
%   | | | then return 0.7432726872238383;  // std dev = 0,058, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1480596537030185;  // std dev = 0,103, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.8073906377119321;  // std dev = 0,026, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.19202568311763318;  // std dev = 0,026, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.6229399425505284;  // std dev = 0,160, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14837626268464116;  // std dev = 0,116, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.4709692184851887;  // std dev = 0,166, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1307005701038552;  // std dev = 0,104, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamalsoknownas(A, D), teamplaysagainstteam(D, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(F, C) )
%   | | then if ( athleteplayssport(G, B) )
%   | | | then return 0.31702673588860814;  // std dev = 0,066, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.10224055073685422;  // std dev = 0,076, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.38537880595469587;  // std dev = 0,041, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.12922950158992053;  // std dev = 0,019, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.28056315185481534;  // std dev = 0,111, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10507614235828898;  // std dev = 0,084, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.2037058825769017;  // std dev = 0,050, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.08485332326170678;  // std dev = 0,065, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( athleteplaysforteam(F, G) )
%   | then if ( athleteplayssport(H, B) )
%   | | then return 0.2437481686601215;  // std dev = 0,032, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.10508003678848156;  // std dev = 0,016, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysinleague(A, D) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.16915233646384192;  // std dev = 0,039, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07015242860723643;  // std dev = 0,027, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.03083521220444034;  // std dev = 0,226, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamalsoknownas(A, F) )
%   | then return 0.06626234282021412;  // std dev = 0,306, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( athleteplaysforteam(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H) )
%   | | | then return 0.06544659852647516;  // std dev = 0,440, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.04905082179584244;  // std dev = 0,295, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, D) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.17642492613926913;  // std dev = 0,092, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08900359103400145;  // std dev = 0,084, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.1469730014554983;  // std dev = 0,073, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.07485735627203119;  // std dev = 0,060, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamplaysinleague(E, F) )
%   | then if ( teamalsoknownas(G, H) )
%   | | then if ( athleteplayssport(I, B) )
%   | | | then return 0.16701786337541358;  // std dev = 0,016, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09653719832861793;  // std dev = 0,031, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.983382
   AUC PR    = 0.125195
   CLL	      = -0.119249
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 102.33 seconds
Total inference time: 3886.541 seconds
AUC ROC: 0.983382


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.11152
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 3.1 seconds
Refined model CLL: -0.11152


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983382
   AUC PR    = 0.125195
   CLL	      = -0.119249
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 110.72899999999998 seconds
Total inference time: 3886.541 seconds
AUC ROC: 0.983382
Total revision time: 110.72899999999998
Best scored revision CLL: -0.11152


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 03:26:52
{'AUC ROC': 0.983382, 'Recall': 0.984733, 'CLL': -0.119249, 'Precision': [0.126223, 0.5], 'Learning time': 110.72899999999998, 'F1': 0.223764, 'Inference time': 3886.541, 'parameter_15': {'AUC ROC': 0.503086, 'Recall': 0.366412, 'CLL': -0.634246, 'Precision': [0.002505, 0.5], 'Learning time': 4.026, 'F1': 0.004976, 'Inference time': 231.13400000000001, 'AUC PR': 0.00245}, 'AUC PR': 0.125195}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.097091
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 2.335 seconds
Total inference time: 4.104 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN-B), Time: 03:26:59
{'AUC ROC': 0.983994, 'Recall': 0.984733, 'CLL': -0.097091, 'Precision': [0.126223, 0.5], 'Learning time': 2.335, 'F1': 0.223764, 'Inference time': 4.104, 'AUC PR': 0.124824}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.140117
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.029 seconds
Total inference time: 3.237 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN), Time: 03:27:04
{'AUC ROC': 0.983994, 'Recall': 0.0, 'CLL': -0.140117, 'Precision': [nan, 0.5], 'Learning time': 1.029, 'F1': nan, 'Inference time': 3.237, 'AUC PR': 0.124824}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false,false,false;countryhascompanyoffice(H, A), acquired(A, I).;false;false
0;false,false;companyalsoknownas(A, G).;true;true
0;false;bankchiefexecutiveceo(A, D), companyceo(E, D).;true;true
0;false,true,false;bankchiefexecutiveceo(E, F).;false;false
0;false,true;economicsectorcompany(B, E).;false;true
0;false,false,true;companyalsoknownas(A, A).;false;false
1;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
1;false,false,false;acquired(A, L), cityhascompanyoffice(M, L).;false;false
1;true,true;companyalsoknownas(E, F).;false;true
1;false,false;acquired(I, A), cityhascompanyoffice(J, I).;true;true
1;false;acquired(A, H), economicsectorcompany(B, H).;false;true
1;true,true,false;countryhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
1;true;countryhascompanyoffice(D, A), acquired(C, E).;true;false
1;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
2;;companyeconomicsector(A, B) :- bankboughtbank(C, A), cityhascompanyoffice(D, C).;true;true
2;false,false,false;acquired(M, A), economicsectorcompany(B, M).;false;false
2;true;bankboughtbank(A, E).;false;false
2;false,false;countryhascompanyoffice(J, A), bankbankincountry(K, J).;true;true
2;false;companyceo(A, F).;true;true
2;false,true,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;false;false
2;false,true;acquired(A, G), cityhascompanyoffice(H, G).;false;true
2;false,false,true;countryhascompanyoffice(J, L), economicsectorcompany(B, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;false,false,false;companyceo(A, J).;false;false
3;true;acquired(D, C), cityhascompanyoffice(E, D).;false;false
3;false,false;companyalsoknownas(A, I).;true;true
3;false;acquired(A, F), cityhascompanyoffice(G, A).;true;true
3;false,true,false;companyalsoknownas(F, H).;false;false
3;false,true;economicsectorcompany(B, F).;false;true
3;false,false,true;economicsectorcompany(B, I).;false;false
4;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
4;false,false,false;acquired(J, A), economicsectorcompany(B, J).;false;false
4;true,true;economicsectorcompany(B, E).;false;false
4;true,false;countryhascompanyoffice(C, G), economicsectorcompany(B, G).;false;false
4;false;companyalsoknownas(A, A).;false;true
4;false,false;bankchiefexecutiveceo(A, H).;true;true
4;true;companyalsoknownas(A, E), countryhascompanyoffice(F, E).;true;true
4;false,false,true;companyceo(I, H), economicsectorcompany(B, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), economicsectorcompany(B, C).;false;true
5;false,false,false;companyalsoknownas(A, I).;false;false
5;false,false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
5;false;acquired(D, A).;true;true
5;false,true,false;economicsectorcompany(B, D).;false;false
5;false,true,true;economicsectorcompany(B, D).;false;false
5;false,true;acquired(E, D), companyceo(E, F).;true;true
5;false,false,true;economicsectorcompany(B, H).;false;false
6;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
6;false,false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;false;false
6;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
6;false,false;companyalsoknownas(A, H).;true;true
6;false;acquired(F, A).;true;true
6;false,true,false;companyceo(F, G).;false;false
6;false,true;economicsectorcompany(B, F).;false;true
6;false,false,true;economicsectorcompany(B, H).;false;false
7;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
7;false,false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;false
7;true;cityhascompanyoffice(E, A).;false;false
7;false,false;companyceo(A, H).;true;true
7;false;companyalsoknownas(A, F).;true;true
7;false,true,false;economicsectorcompany(B, F).;false;false
7;false,true;acquired(F, G), economicsectorcompany(B, G).;false;true
7;false,false,true;bankboughtbank(I, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
8;false,false,false;acquired(A, L), countryhascompanyoffice(M, A).;false;false
8;true;economicsectorcompany(B, C).;false;false
8;false,false;companyalsoknownas(A, J).;true;true
8;false;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(H, A), acquired(F, I).;false;false
8;false,true;companyceo(A, G).;true;false
8;false,false,true;companyalsoknownas(J, K), economicsectorcompany(B, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true,false,true;companyalsoknownas(E, G).;false;false
9;false,false,false;companyceo(A, K).;false;false
9;true;cityhascompanyoffice(D, A).;false;true
9;true,false;acquired(C, E), cityhascompanyoffice(F, C).;true;false
9;false;cityhascompanyoffice(H, A).;true;true
9;false,false;companyalsoknownas(A, J).;false;true
9;false,true;cityhascompanyoffice(H, I), economicsectorcompany(B, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else if ( athleteledsportsteam(D, A), athleteplaysforteam(D, E) )
%   | then if ( athleteledsportsteam(F, E) )
%   | | then return 0.19148226843284558;  // std dev = 1,414, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H), teamplaysagainstteam(A, I) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.44638422921715937;  // std dev = 2,029, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D), teamplaysagainstteam(C, E) )
%   | then if ( teamalsoknownas(F, E) )
%   | | then return 0.28168015105222666;  // std dev = 2,002, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.29472013382236173;  // std dev = 0,707, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0.29472013382236173;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( teamplaysagainstteam(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3377149658491336;  // std dev = 2,037, 17,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.23747467763847585;  // std dev = 2,003, 17,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7424794435333044;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | then if ( teamplaysinleague(H, F) )
%   | | then return 0.33583457450693494;  // std dev = 1,091, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return 0.23253367312722228;  // std dev = 0,981, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2172687941474847;  // std dev = 1,779, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return 0.18554108758331733;  // std dev = 2,316, 23,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(F, A) )
%   | | then return 0.07478627441135675;  // std dev = 0,471, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( athleteplaysforteam(G, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.316616942671627;  // std dev = 1,589, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then if ( teamalsoknownas(E, A), teamplaysinleague(E, F) )
%   | then return 0.21173425321335923;  // std dev = 0,500, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysinleague(G, C) )
%   | | then return 0.17680737682948497;  // std dev = 2,078, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return 0.15652185675816185;  // std dev = 1,184, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1299017772034465;  // std dev = 1,761, 13,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.11289255421042921;  // std dev = 2,101, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( teamplaysagainstteam(E, D), athleteplaysforteam(F, E) )
%   | | then return 0.0788142236528991;  // std dev = 0,477, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(G, A), athleteplaysforteam(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(I, A) )
%   | | | then return 0.0336583251564809;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.20872833181621486;  // std dev = 1,585, 11,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then if ( teamplaysinleague(E, C) )
%   | then return 0.10884081468214328;  // std dev = 2,183, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( athleteplaysforteam(G, F) )
%   | | then return 0.09649408411918879;  // std dev = 1,181, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(H, A) )
%   | | then return 0.026547179592875985;  // std dev = 0,471, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.10721352289674194;  // std dev = 0,495, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then return 0.0827202198995961;  // std dev = 0,476, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   else if ( teamalsoknownas(E, A) )
%   | then if ( teamplaysagainstteam(E, F) )
%   | | then return 0.6875393268388172;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.15516274939104927;  // std dev = 0,377, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( athleteplaysforteam(G, A) )
%   | | then return 0.5670858779614872;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.06015349166284269;  // std dev = 0,976, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08047044465453637;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then return 0.058179696307199276;  // std dev = 0,471, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else if ( teamalsoknownas(E, A), teamplaysagainstteam(E, F) )
%   | then if ( athleteplaysforteam(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5252537649561435;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamalsoknownas(H, A) )
%   | | then if ( teamalsoknownas(I, H) )
%   | | | then return -0.08013276158622062;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, J), teamplaysinleague(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.061018326397438157;  // std dev = 1,682, 12,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then if ( teamalsoknownas(E, D) )
%   | | then return 0.024536323585939344;  // std dev = 2,061, 19,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A) )
%   | then return 0.01236938055920008;  // std dev = 0,988, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( athleteplaysforteam(G, A) )
%   | | then return 0.40745719629875543;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.046091653540792685;  // std dev = 1,824, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */


Results
   AUC ROC   = 0.481266
   AUC PR    = 0.002272
   CLL	      = -0.676694
   Precision = 0.002393 at threshold = 0.5
   Recall    = 0.541985
   F1        = 0.004765


Total learning time: 1.596 seconds
Total inference time: 16.603 seconds
AUC ROC: 0.481266


Results scoring model
   AUC ROC   = 0.75
   AUC PR    = 0.765781
   CLL	      = -0.624898
   Precision = 0.7 at threshold = 0.5
   Recall    = 0.7
   F1        = 0.7


Total scoring time: 0.894 seconds
Parameter learned model CLL: -0.624898


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamplaysinleague(A, H), teamplaysagainstteam(A, I)', 'false,false': 'teamalsoknownas(G, A)', 'false': 'athleteledsportsteam(D, A), athleteplaysforteam(D, E)', 'false,true': 'athleteledsportsteam(F, E)'}, {'false,false,false,false': [2.029, 7, 10], 'true': [1.414, 6, 3], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [1.414, 6, 3], 'false,false,false,true': [0.894, 1, 4]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamplaysinleague(C, D)', 'false,false,false': 'teamplaysagainstteam(A, I)', 'true,true': 'teamalsoknownas(F, E)', 'false,false': 'teamplaysagainstteam(H, A)', 'false': 'teamplaysagainstteam(A, G)', 'true': 'teamplaysinleague(A, D), teamplaysagainstteam(C, E)'}, {'false,false,false,false': [2.037, 8, 9], 'false,false,false,true': [0.0, 0, 0], 'true,false': [0.707, 1, 1], 'false,false,true': [0.5, 2, 2], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.002, 9, 8], 'false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysagainstteam(A, D)', 'false,false': 'teamplaysagainstteam(I, A)', 'false': 'teamplaysinleague(A, F), athleteplaysinleague(G, F)', 'true,false': 'teamalsoknownas(E, A)', 'false,true': 'teamplaysinleague(H, F)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false': [1.779, 7, 6], 'true,true': [2.003, 9, 8], 'true,false,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,true,true': [1.091, 2, 3], 'false,false,true': [0.981, 2, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false,false': 'athleteplaysforteam(G, A)', 'true': 'teamplaysagainstteam(D, C)', 'false,false': 'teamalsoknownas(F, A)', 'false': 'teamplaysagainstteam(A, E)'}, {'false,false,false,false': [1.589, 4, 7], 'true,true': [2.316, 12, 11], 'true,false': [0.0, 0, 0], 'false,false,true': [0.471, 4, 2], 'false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteplaysinleague(D, C)', 'false,false,false': 'teamplaysagainstteam(I, A)', 'true': 'teamalsoknownas(E, A), teamplaysinleague(E, F)', 'false,false': 'athleteledsportsteam(H, A)', 'false': 'teamalsoknownas(A, A)', 'true,false': 'teamplaysinleague(G, C)'}, {'true,false,true': [2.078, 9, 10], 'false,false,false,false': [1.761, 7, 6], 'true,true': [0.5, 1, 1], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [1.184, 3, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'teamalsoknownas(I, A)', 'false,false': 'athleteledsportsteam(G, A), athleteplaysforteam(G, H)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'teamplaysagainstteam(E, D), athleteplaysforteam(F, E)'}, {'false,false,false,false': [1.585, 4, 7], 'true': [2.101, 10, 9], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.477, 2, 2], 'false,false,false,true': [1.155, 4, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteplaysinleague(D, C)', 'false,true': 'athleteplaysforteam(G, F)', 'true': 'teamplaysinleague(E, C)', 'false,false': 'teamalsoknownas(H, A)', 'false': 'teamplaysagainstteam(F, A)'}, {'false,false,false': [0.495, 3, 4], 'true,true': [2.183, 10, 11], 'true,false': [0.0, 0, 0], 'false,false,true': [0.471, 4, 2], 'false,true,false': [0.0, 0, 0], 'false,true,true': [1.181, 3, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteplaysinleague(D, C)', 'false,false,false': 'teamplaysagainstteam(H, A)', 'false,false': 'athleteplaysforteam(G, A)', 'false': 'teamalsoknownas(E, A)', 'false,true': 'teamplaysagainstteam(E, F)'}, {'false,false,false,false': [1.309, 3, 4], 'true': [0.476, 10, 11], 'false,false,true': [0.0, 0, 1], 'false,true,false': [0.377, 5, 1], 'false,true,true': [0.0, 0, 1], 'false,false,false,true': [0.976, 2, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteplaysforteam(D, C)', 'false,false,false': 'teamplaysagainstteam(A, J), teamplaysinleague(A, K)', 'false,false': 'teamalsoknownas(H, A)', 'false': 'teamalsoknownas(E, A), teamplaysagainstteam(E, F)', 'false,true': 'athleteplaysforteam(G, A)', 'false,false,true': 'teamalsoknownas(I, H)'}, {'false,false,true,true': [0.894, 4, 1], 'true': [0.471, 11, 11], 'false,true,false': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false,false,false': [1.682, 5, 7], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true,true': 'teamalsoknownas(E, D)', 'false,false': 'athleteplaysforteam(G, A)', 'true': 'teamplaysagainstteam(C, D)', 'false': 'teamalsoknownas(F, A)'}, {'false,false,false': [1.824, 6, 8], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.061, 10, 9], 'false,true': [0.988, 4, 2]}]]
[{'': [0.2222222222222221, 0.2476586888657644], 'false,false,false': [0.15999999999999986, 0.2422145328719722], 'false,false': [nan, 0.23140495867768554], 'false': [0.2222222222222221, 0.23140495867768554], 'false,true': [0.2222222222222221, nan]}, {'': [0.23725673544704234, 0.24554649408276893], 'false,false,false': [nan, 0.24414650451258377], 'true,true': [0.23573962878408777, nan], 'true': [0.23573962878408777, 0.25], 'false,false': [0.25000000000000006, 0.24414650451258377], 'false': [nan, 0.24554649408276893]}, {'': [0.23629506097348837, 0.2440563071398425], 'true': [0.23602644746604545, 0.0], 'false,false': [0.24035098464082935, 0.24353543419773993], 'false': [0.23801757786318353, 0.24282807879879154], 'true,false': [nan, 0.0], 'false,true': [0.23801757786318353, nan]}, {'': [0.23327779606293525, 0.24023388186532268], 'false,false,false': [nan, 0.22941769215546418], 'true': [0.23327779606293525, nan], 'false,false': [0.2222222222222223, 0.22941769215546418], 'false': [nan, 0.24023388186532268]}, {'': [0.22951310100883293, 0.23715400059588856], 'false,false,false': [0.23354186851006306, 0.23859736101781237], 'true': [0.25000000000000006, 0.22724040564041553], 'false,false': [nan, 0.23715400059588865], 'false': [nan, 0.23715400059588865], 'true,false': [0.22724040564041553, nan]}, {'': [0.23241917581944005, 0.23289765387093433], 'false,false,false': [0.2222222222222222, 0.22843074087084603], 'false,false': [nan, 0.23323904043881066], 'false': [0.22768978205433926, 0.23323904043881066], 'false,true': [0.22768978205433926, nan]}, {'': [0.22697968674260474, 0.2350575218052827], 'false,true': [0.23242761775118878, nan], 'true': [0.22697968674260474, nan], 'false,false': [0.22222222222222218, 0.24489795918367346], 'false': [0.23242761775118878, 0.23604937334090145]}, {'': [0.226767554551696, 0.23440348958732285], 'false,false,false': [0.23825990105167968, 0.24489795918367344], 'false,false': [0.0, 0.24257963887293404], 'false': [0.20905732391233559, 0.2410065656858249], 'false,true': [0.0, 0.14245066990504002]}, {'': [0.22223350311285708, 0.21888026157383872], 'false,false,false': [nan, 0.23566272328715202], 'false,false': [0.15999999999999998, 0.23566272328715202], 'false': [0.0, 0.2175453748405441], 'false,true': [nan, 0.0], 'false,false,true': [0.15999999999999998, nan]}, {'': [0.22357989576406856, 0.2114552112447037], 'true,true': [0.22357989576406856, nan], 'true': [0.22357989576406856, nan], 'false,false': [0.0, 0.23772764961975254], 'false': [0.1626947460202347, 0.2300044319868739]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
2;true;teamplaysagainstteam(A, D).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteplaysinleague(D, C).;true;true
7;false,false;athleteplaysforteam(G, A).;true;true
7;false,true;teamplaysagainstteam(E, F).;true;true
7;false;teamalsoknownas(E, A).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), athleteplaysforteam(D, C).;true;true
8;false;teamalsoknownas(E, A), teamplaysagainstteam(E, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
9;false,false;athleteplaysforteam(G, A).;true;true
9;false;teamalsoknownas(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.11231637819360638;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamalsoknownas(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.03152243851190131;  // std dev = 0,229, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( athleteplaysforteam(H, A) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.15274385809367094;  // std dev = 7,45e-09, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.06867316347062567;  // std dev = 0,003, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( teamalsoknownas(F, A), teamplaysagainstteam(F, G) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(H, B) )
%   | | then return 0.15636802831931718;  // std dev = 0,027, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.06963055201782607;  // std dev = 0,004, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.06443224260447562;  // std dev = 0,002, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( teamalsoknownas(E, A) )
%   | then return 0.004493133731363452;  // std dev = 0,247, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(G, B) )
%   | | | then return 0.1336395087711794;  // std dev = 0,000393, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.06412915699175435;  // std dev = 5,25e-05, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.983951
   AUC PR    = 0.127079
   CLL	      = -0.100313
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 11.068 seconds
Total inference time: 12.284 seconds
AUC ROC: 0.983951


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096879
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.865 seconds
Refined model CLL: -0.096879


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983951
   AUC PR    = 0.127079
   CLL	      = -0.100313
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 14.423 seconds
Total inference time: 12.284 seconds
AUC ROC: 0.983951
Total revision time: 14.423
Best scored revision CLL: -0.096879


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 03:27:48
{'AUC ROC': 0.983951, 'Recall': 0.984733, 'CLL': -0.100313, 'Precision': [0.126223, 0.5], 'Learning time': 14.423, 'parameter_20': {'AUC ROC': 0.481266, 'Recall': 0.541985, 'CLL': -0.676694, 'Precision': [0.002393, 0.5], 'Learning time': 1.596, 'F1': 0.004765, 'Inference time': 16.603, 'AUC PR': 0.002272}, 'F1': 0.223764, 'Inference time': 12.284, 'AUC PR': 0.127079}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0641918400820262;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.097091
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 2.693 seconds
Total inference time: 4.113 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN-B), Time: 03:27:55
{'AUC ROC': 0.983994, 'Recall': 0.984733, 'CLL': -0.097091, 'Precision': [0.126223, 0.5], 'Learning time': 2.693, 'F1': 0.223764, 'Inference time': 4.113, 'AUC PR': 0.124824}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.140117
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.256 seconds
Total inference time: 2.973 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN), Time: 03:27:59
{'AUC ROC': 0.983994, 'Recall': 0.0, 'CLL': -0.140117, 'Precision': [nan, 0.5], 'Learning time': 1.256, 'F1': nan, 'Inference time': 2.973, 'AUC PR': 0.124824}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;companyeconomicsector(A, B) :- companyalsoknownas(A, C), economicsectorcompany(B, C).;false;true
0;false,false,false;countryhascompanyoffice(H, A), acquired(A, I).;false;false
0;false,false;companyalsoknownas(A, G).;true;true
0;false;bankchiefexecutiveceo(A, D), companyceo(E, D).;true;true
0;false,true,false;bankchiefexecutiveceo(E, F).;false;false
0;false,true;economicsectorcompany(B, E).;false;true
0;false,false,true;companyalsoknownas(A, A).;false;false
1;;companyeconomicsector(A, B) :- acquired(A, C), countryhascompanyoffice(D, C).;true;true
1;false,false,false;acquired(A, L), cityhascompanyoffice(M, L).;false;false
1;true,true;companyalsoknownas(E, F).;false;true
1;false,false;acquired(I, A), cityhascompanyoffice(J, I).;true;true
1;false;acquired(A, H), economicsectorcompany(B, H).;false;true
1;true,true,false;countryhascompanyoffice(D, G), economicsectorcompany(B, G).;false;false
1;true;countryhascompanyoffice(D, A), acquired(C, E).;true;false
1;false,false,true;cityhascompanyoffice(J, K), economicsectorcompany(B, K).;false;false
2;;companyeconomicsector(A, B) :- bankboughtbank(C, A), cityhascompanyoffice(D, C).;true;true
2;false,false,false;acquired(M, A), economicsectorcompany(B, M).;false;false
2;true;bankboughtbank(A, E).;false;false
2;false,false;countryhascompanyoffice(J, A), bankbankincountry(K, J).;true;true
2;false;companyceo(A, F).;true;true
2;false,true,false;companyalsoknownas(A, I), economicsectorcompany(B, I).;false;false
2;false,true;acquired(A, G), cityhascompanyoffice(H, G).;false;true
2;false,false,true;countryhascompanyoffice(J, L), economicsectorcompany(B, L).;false;false
3;;companyeconomicsector(A, B) :- acquired(C, A).;true;true
3;false,false,false;companyceo(A, J).;false;false
3;true;acquired(D, C), cityhascompanyoffice(E, D).;false;false
3;false,false;companyalsoknownas(A, I).;true;true
3;false;acquired(A, F), cityhascompanyoffice(G, A).;true;true
3;false,true,false;companyalsoknownas(F, H).;false;false
3;false,true;economicsectorcompany(B, F).;false;true
3;false,false,true;economicsectorcompany(B, I).;false;false
4;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
4;false,false,false;acquired(J, A), economicsectorcompany(B, J).;false;false
4;true,true;economicsectorcompany(B, E).;false;false
4;true,false;countryhascompanyoffice(C, G), economicsectorcompany(B, G).;false;false
4;false;companyalsoknownas(A, A).;false;true
4;false,false;bankchiefexecutiveceo(A, H).;true;true
4;true;companyalsoknownas(A, E), countryhascompanyoffice(F, E).;true;true
4;false,false,true;companyceo(I, H), economicsectorcompany(B, I).;false;false
5;;companyeconomicsector(A, B) :- acquired(A, C), economicsectorcompany(B, C).;false;true
5;false,false,false;companyalsoknownas(A, I).;false;false
5;false,false;bankchiefexecutiveceo(A, G), companyceo(H, G).;true;true
5;false;acquired(D, A).;true;true
5;false,true,false;economicsectorcompany(B, D).;false;false
5;false,true,true;economicsectorcompany(B, D).;false;false
5;false,true;acquired(E, D), companyceo(E, F).;true;true
5;false,false,true;economicsectorcompany(B, H).;false;false
6;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
6;false,false,false;bankboughtbank(I, A), cityhascompanyoffice(J, I).;false;false
6;true;countryhascompanyoffice(C, E), economicsectorcompany(B, E).;false;false
6;false,false;companyalsoknownas(A, H).;true;true
6;false;acquired(F, A).;true;true
6;false,true,false;companyceo(F, G).;false;false
6;false,true;economicsectorcompany(B, F).;false;true
6;false,false,true;economicsectorcompany(B, H).;false;false
7;;companyeconomicsector(A, B) :- countryhascompanyoffice(C, A), bankbankincountry(D, C).;true;true
7;false,false,false;acquired(J, A), cityhascompanyoffice(K, A).;false;false
7;true;cityhascompanyoffice(E, A).;false;false
7;false,false;companyceo(A, H).;true;true
7;false;companyalsoknownas(A, F).;true;true
7;false,true,false;economicsectorcompany(B, F).;false;false
7;false,true;acquired(F, G), economicsectorcompany(B, G).;false;true
7;false,false,true;bankboughtbank(I, A).;false;false
8;;companyeconomicsector(A, B) :- acquired(C, A), companyceo(C, D).;true;true
8;false,false,false;acquired(A, L), countryhascompanyoffice(M, A).;false;false
8;true;economicsectorcompany(B, C).;false;false
8;false,false;companyalsoknownas(A, J).;true;true
8;false;companyalsoknownas(A, E), acquired(E, F).;true;true
8;false,true,true;countryhascompanyoffice(H, A), acquired(F, I).;false;false
8;false,true;companyceo(A, G).;true;false
8;false,false,true;companyalsoknownas(J, K), economicsectorcompany(B, K).;false;false
9;;companyeconomicsector(A, B) :- acquired(A, C).;true;true
9;true,false,true;companyalsoknownas(E, G).;false;false
9;false,false,false;companyceo(A, K).;false;false
9;true;cityhascompanyoffice(D, A).;false;true
9;true,false;acquired(C, E), cityhascompanyoffice(F, C).;true;false
9;false;cityhascompanyoffice(H, A).;true;true
9;false,false;companyalsoknownas(A, J).;false;true
9;false,true;cityhascompanyoffice(H, I), economicsectorcompany(B, I).;false;false


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( teamalsoknownas(C, A) )
%   then return 0.15814893509951225;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( athleteledsportsteam(D, A), athleteplaysforteam(D, E) )
%   | then if ( athleteledsportsteam(F, E) )
%   | | then return 0.13087620782678497;  // std dev = 1,477, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysinleague(A, H), teamplaysagainstteam(A, I) )
%   | | | then return 0.6359267128772901;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.4581489350995123;  // std dev = 2,191, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C), teamplaysinleague(C, D) )
%   then if ( teamplaysinleague(A, D), teamplaysagainstteam(C, E) )
%   | then if ( teamalsoknownas(F, E) )
%   | | then return 0.26663568604828125;  // std dev = 2,261, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.28511365375688413;  // std dev = 0,985, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( teamplaysagainstteam(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(H, A) )
%   | | then return 0.29279418357704884;  // std dev = 0,500, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( teamplaysagainstteam(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.35854154849912445;  // std dev = 2,189, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then return 0.22445691222854086;  // std dev = 2,257, 22,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else if ( teamalsoknownas(E, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.7405937533885709;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( teamplaysinleague(A, F), athleteplaysinleague(G, F) )
%   | then if ( teamplaysinleague(H, F) )
%   | | then return 0.44086033617795345;  // std dev = 1,183, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamplaysagainstteam(I, A) )
%   | | then return 0.13514865695591027;  // std dev = 1,078, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.2202135628274202;  // std dev = 1,899, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( teamplaysagainstteam(D, C) )
%   | then return 0.16502505732732758;  // std dev = 2,585, 29,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(A, E) )
%   | then if ( teamalsoknownas(F, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.6078060382390589;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamalsoknownas(G, A) )
%   | | then return 0.028996027094771226;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( athleteplaysforteam(H, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3552395419529707;  // std dev = 1,650, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then if ( teamalsoknownas(E, A), teamplaysinleague(E, F) )
%   | then return 0.2282443675670297;  // std dev = 0,500, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( teamplaysinleague(G, C) )
%   | | then return 0.18368448687482872;  // std dev = 2,364, 26,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(A, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(H, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(I, A) )
%   | | | then return 0.10760682818693991;  // std dev = 1,270, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.13123733736941148;  // std dev = 1,859, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then return 0.10659378103294362;  // std dev = 2,404, 26,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   else if ( teamplaysagainstteam(D, A) )
%   | then if ( teamplaysagainstteam(E, D), athleteplaysforteam(F, E) )
%   | | then return 0.0911334445997539;  // std dev = 0,486, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( athleteledsportsteam(G, A), athleteplaysforteam(G, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamalsoknownas(I, A) )
%   | | | then return -0.0027483041351897513;  // std dev = 1,195, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.23493412623584592;  // std dev = 1,646, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then if ( teamplaysinleague(E, C) )
%   | then return 0.1145481416704325;  // std dev = 2,450, 28,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamplaysagainstteam(F, A) )
%   | then if ( athleteplaysforteam(G, F) )
%   | | then return 0.06041297145484149;  // std dev = 1,268, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( teamalsoknownas(H, A) )
%   | | then return -0.0021845375347667568;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.13541972824067727;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then return 0.0874750821904814;  // std dev = 0,463, 28,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   else if ( teamalsoknownas(E, A) )
%   | then if ( teamplaysagainstteam(E, F) )
%   | | then return 0.7125488279488998;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.15057978264879693;  // std dev = 0,353, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( athleteplaysforteam(G, A) )
%   | | then return 0.5969185114296334;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( teamplaysagainstteam(H, A) )
%   | | | then return 0.011294430160328795;  // std dev = 1,075, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.10158344766054801;  // std dev = 1,369, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then return 0.04504146058159925;  // std dev = 0,468, 28,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   else if ( teamalsoknownas(E, A), teamplaysagainstteam(E, F) )
%   | then if ( athleteplaysforteam(G, A) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.5486571761859493;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamalsoknownas(H, A) )
%   | | then if ( teamalsoknownas(I, H) )
%   | | | then return -0.09095340927135294;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( teamplaysagainstteam(A, J), teamplaysinleague(A, K) )
%   | | | then return 0.3402886342909862;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07633709566673383;  // std dev = 1,757, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( teamplaysagainstteam(C, D) )
%   | then if ( teamalsoknownas(E, D) )
%   | | then return 0.023369031725280178;  // std dev = 2,354, 26,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( teamalsoknownas(F, A) )
%   | then return -0.004444970620940252;  // std dev = 1,018, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( athleteplaysforteam(G, A) )
%   | | then return 0.4065021085346989;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.06388361408208346;  // std dev = 1,895, 16,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */


Results
   AUC ROC   = 0.488148
   AUC PR    = 0.002362
   CLL	      = -0.691896
   Precision = 0.002366 at threshold = 0.5
   Recall    = 0.534351
   F1        = 0.004712


Total learning time: 1.729 seconds
Total inference time: 15.658 seconds
AUC ROC: 0.488148


Results scoring model
   AUC ROC   = 0.776
   AUC PR    = 0.772784
   CLL	      = -0.602094
   Precision = 0.72 at threshold = 0.5
   Recall    = 0.72
   F1        = 0.72


Total scoring time: 0.969 seconds
Parameter learned model CLL: -0.602094


Structure after Parameter Learning
[['teamplayssport(A, B)', {'': 'teamalsoknownas(C, A)', 'false,false,false': 'teamplaysinleague(A, H), teamplaysagainstteam(A, I)', 'false,false': 'teamalsoknownas(G, A)', 'false': 'athleteledsportsteam(D, A), athleteplaysforteam(D, E)', 'false,true': 'athleteledsportsteam(F, E)'}, {'false,false,false,false': [2.191, 8, 12], 'true': [1.449, 7, 3], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [1.477, 8, 3], 'false,false,false,true': [1.247, 2, 7]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C), teamplaysinleague(C, D)', 'false,false,false': 'teamplaysagainstteam(A, I)', 'true,true': 'teamalsoknownas(F, E)', 'false,false': 'teamplaysagainstteam(H, A)', 'false': 'teamplaysagainstteam(A, G)', 'true': 'teamplaysinleague(A, D), teamplaysagainstteam(C, E)'}, {'false,false,false,false': [2.189, 9, 11], 'false,false,false,true': [0.0, 0, 0], 'true,false': [0.985, 2, 2], 'false,false,true': [0.5, 2, 2], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.261, 12, 10], 'false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'athleteplaysforteam(C, A)', 'true': 'teamplaysagainstteam(A, D)', 'false,false': 'teamplaysagainstteam(I, A)', 'false': 'teamplaysinleague(A, F), athleteplaysinleague(G, F)', 'true,false': 'teamalsoknownas(E, A)', 'false,true': 'teamplaysinleague(H, F)'}, {'true,false,true': [0.0, 0, 0], 'false,false,false': [1.899, 8, 7], 'true,true': [2.257, 12, 10], 'true,false,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,true,true': [1.183, 2, 5], 'false,false,true': [1.078, 3, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A)', 'false,false,false': 'athleteplaysforteam(H, A)', 'true': 'teamplaysagainstteam(D, C)', 'false,false': 'teamalsoknownas(G, A)', 'false': 'teamplaysagainstteam(A, E)', 'false,true': 'teamalsoknownas(F, E)'}, {'false,false,false,false': [1.65, 4, 9], 'true,true': [2.585, 16, 13], 'true,false': [0.0, 0, 0], 'false,false,true': [0.452, 5, 2], 'false,true,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteplaysinleague(D, C)', 'false,false,false': 'teamplaysagainstteam(I, A)', 'true': 'teamalsoknownas(E, A), teamplaysinleague(E, F)', 'false,false': 'athleteledsportsteam(H, A)', 'false': 'teamalsoknownas(A, A)', 'true,false': 'teamplaysinleague(G, C)'}, {'true,false,true': [2.364, 12, 14], 'false,false,false,false': [1.859, 8, 7], 'true,true': [0.5, 1, 1], 'false,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,false,true': [1.27, 4, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'false,false,false': 'teamalsoknownas(I, A)', 'false,false': 'athleteledsportsteam(G, A), athleteplaysforteam(G, H)', 'false': 'teamplaysagainstteam(D, A)', 'false,true': 'teamplaysagainstteam(E, D), athleteplaysforteam(F, E)'}, {'false,false,false,false': [1.646, 4, 9], 'true': [2.404, 14, 12], 'false,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'false,true,true': [0.486, 2, 2], 'false,false,false,true': [1.195, 5, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteplaysinleague(D, C)', 'false,true': 'athleteplaysforteam(G, F)', 'true': 'teamplaysinleague(E, C)', 'false,false': 'teamalsoknownas(H, A)', 'false': 'teamplaysagainstteam(F, A)'}, {'false,false,false': [0.484, 3, 5], 'true,true': [2.45, 13, 15], 'true,false': [0.0, 0, 0], 'false,false,true': [0.452, 5, 2], 'false,true,false': [0.0, 0, 0], 'false,true,true': [1.268, 4, 3]}], ['teamplayssport(A, B)', {'': 'teamplaysinleague(A, C), athleteplaysinleague(D, C)', 'false,false,false': 'teamplaysagainstteam(H, A)', 'false,false': 'athleteplaysforteam(G, A)', 'false': 'teamalsoknownas(E, A)', 'false,true': 'teamplaysagainstteam(E, F)'}, {'false,false,false,false': [1.369, 3, 5], 'true': [0.463, 13, 15], 'false,false,true': [0.0, 0, 1], 'false,true,false': [0.353, 6, 1], 'false,true,true': [0.0, 0, 1], 'false,false,false,true': [1.075, 3, 2]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(C, A), athleteplaysforteam(D, C)', 'false,false,false': 'teamplaysagainstteam(A, J), teamplaysinleague(A, K)', 'false,false': 'teamalsoknownas(H, A)', 'false': 'teamalsoknownas(E, A), teamplaysagainstteam(E, F)', 'false,true': 'athleteplaysforteam(G, A)', 'false,false,true': 'teamalsoknownas(I, H)'}, {'false,false,true,true': [0.913, 5, 1], 'true': [0.468, 15, 13], 'false,true,false': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,false,false,false': [1.757, 5, 9], 'false,false,false,true': [0.0, 0, 1]}], ['teamplayssport(A, B)', {'': 'teamplaysagainstteam(A, C)', 'true,true': 'teamalsoknownas(E, D)', 'false,false': 'athleteplaysforteam(G, A)', 'true': 'teamplaysagainstteam(C, D)', 'false': 'teamalsoknownas(F, A)'}, {'false,false,false': [1.895, 6, 10], 'true,false': [0.0, 0, 0], 'false,false,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.354, 14, 12], 'false,true': [1.018, 5, 2]}]]
[{'': [0.20999999999999988, 0.2475000000000011], 'false,false,false': [0.17283950617283939, 0.23999999999999985], 'false,false': [nan, 0.22592152199762158], 'false': [0.1983471074380164, 0.22592152199762142], 'false,true': [0.1983471074380164, nan]}, {'': [0.23402143430861566, 0.2419644823778655], 'false,false,false': [nan, 0.2396369261877397], 'true,true': [0.23242799535033143, nan], 'true': [0.23242799535033143, 0.24249644179479055], 'false,false': [0.24999999999999997, 0.2396369261877397], 'false': [nan, 0.2419644823778655]}, {'': [0.23265628870465133, 0.24060404606779995], 'true': [0.2316490859112691, 0.0], 'false,false': [0.23244091129540972, 0.24031778119575736], 'false': [0.19982227713252693, 0.2397053208852195], 'true,false': [nan, 0.0], 'false,true': [0.19982227713252693, nan]}, {'': [0.23038409391435502, 0.22687157909234454], 'false,false,false': [nan, 0.20948857766042872], 'true': [0.23038409391435502, nan], 'false,false': [0.20408163265306128, 0.20948857766042872], 'false': [0.0, 0.23181007095739997], 'false,true': [nan, 0.0]}, {'': [0.2175068650344407, 0.23056772456236863], 'false,false,false': [0.23052755693957802, 0.23040879641893336], 'true': [0.25, 0.21486556575920576], 'false,false': [nan, 0.23056772456236868], 'false': [nan, 0.23056772456236868], 'true,false': [0.21486556575920576, nan]}, {'': [0.22231129579355435, 0.2230309686967976], 'false,false': [nan, 0.21979750738373988], 'false,false,false': [0.20408163265306126, 0.2084873732720112], 'false,true': [0.23613678021381299, nan], 'false': [0.23613678021381299, 0.21979750738373988]}, {'': [0.21431442062715836, 0.22649397592178078], 'false,false': [0.2040816326530612, 0.234375], 'true': [0.21431442062715836, nan], 'false,true': [0.22972140193390742, nan], 'false': [0.22972140193390742, 0.22495078991248438]}, {'': [0.21401940665555558, 0.22500743584411048], 'false,false,false': [0.23121556288074077, 0.23437499999999997], 'false,false': [0.0, 0.23508932458280676], 'false': [0.1903107894933172, 0.23693268415767152], 'false,true': [0.0, 0.12437417033118085]}, {'': [0.2193436651011629, 0.19891370857556], 'false,false,false': [0.0, 0.2203819118200622], 'false,false': [0.13888888888888884, 0.21002483239378936], 'false': [0.0, 0.196676461627818], 'false,true': [nan, 0.0], 'false,false,true': [0.13888888888888884, nan]}, {'': [0.21311452683727794, 0.19900872904204936], 'true,true': [0.21311452683727794, nan], 'true': [0.21311452683727794, nan], 'false,false': [0.0, 0.2244189474351094], 'false': [0.1480291998905647, 0.21771679109413627]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;teamplayssport(A, B) :- athleteplaysforteam(C, A).;true;true
2;true;teamplaysagainstteam(A, D).;true;true
3;;teamplayssport(A, B) :- teamplaysagainstteam(C, A).;true;true
3;false;teamplaysagainstteam(A, E).;true;true
7;;teamplayssport(A, B) :- teamplaysinleague(A, C), athleteplaysinleague(D, C).;true;true
7;false,false;athleteplaysforteam(G, A).;true;true
7;false,true;teamplaysagainstteam(E, F).;true;true
7;false;teamalsoknownas(E, A).;true;true
8;;teamplayssport(A, B) :- teamplaysagainstteam(C, A), athleteplaysforteam(D, C).;true;true
8;false,false,false;teamplaysagainstteam(A, J), teamplaysinleague(A, K).;true;true
8;false,false;teamalsoknownas(H, A).;true;true
8;false;teamalsoknownas(E, A), teamplaysagainstteam(E, F).;true;true
9;;teamplayssport(A, B) :- teamplaysagainstteam(A, C).;true;true
9;false,false;athleteplaysforteam(G, A).;true;true
9;false;teamalsoknownas(F, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplaysforteam(C, A) )
%   then if ( teamplaysagainstteam(A, D) )
%   | then if ( athleteplayssport(E, B) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.11231637819360636;  // std dev = 9,13e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( athleteplayssport(F, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( teamplaysagainstteam(A, E) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( athleteplayssport(F, B) )
%   | | then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.10159632948783634;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.09269127618926104;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109177;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( teamplaysinleague(A, C), athleteplaysinleague(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( teamalsoknownas(F, A) )
%   | then if ( teamplaysagainstteam(F, G) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.037482979547820705;  // std dev = 0,088, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( athleteplaysforteam(H, A) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(I, B) )
%   | | | then return 0.17709649774527736;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(C, A), athleteplaysforteam(D, C) )
%   then if ( athleteplayssport(E, B) )
%   | then return 0.15274385809367086;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.0685813248789069;  // std dev = 0,002, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( teamalsoknownas(F, A), teamplaysagainstteam(F, G) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( teamalsoknownas(H, A) )
%   | | then return -0.02851427165890062;  // std dev = 0,231, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( teamplaysagainstteam(A, I), teamplaysinleague(A, J) )
%   | | | then return 0.15274385809367075;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07375427383014455;  // std dev = 0,397, 14,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( teamplaysagainstteam(A, C) )
%   then if ( athleteplayssport(D, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.06433841372828655;  // std dev = 0,002, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( teamalsoknownas(E, A) )
%   | then return -0.0033607479658177325;  // std dev = 0,105, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( athleteplaysforteam(F, A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( athleteplayssport(G, B) )
%   | | | then return 0.14249809556600823;  // std dev = 0,009, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.07176436161614043;  // std dev = 0,008, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.985365
   AUC PR    = 0.128405
   CLL	      = -0.103522
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 8.478 seconds
Total inference time: 13.337 seconds
AUC ROC: 0.985365


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099915
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.904 seconds
Refined model CLL: -0.099915


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.985365
   AUC PR    = 0.128405
   CLL	      = -0.103522
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 12.08 seconds
Total inference time: 13.337 seconds
AUC ROC: 0.985365
Total revision time: 12.08
Best scored revision CLL: -0.099915


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Transfer (trRDN-B), Time: 03:28:42
{'AUC ROC': 0.985365, 'Recall': 0.984733, 'CLL': -0.103522, 'Precision': [0.126223, 0.5], 'parameter_25': {'AUC ROC': 0.488148, 'Recall': 0.534351, 'CLL': -0.691896, 'Precision': [0.002366, 0.5], 'Learning time': 1.729, 'F1': 0.004712, 'Inference time': 15.658, 'AUC PR': 0.002362}, 'Learning time': 12.08, 'F1': 0.223764, 'Inference time': 13.337, 'AUC PR': 0.128405}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.097091
   Precision = 0.126223 at threshold = 0.5
   Recall    = 0.984733
   F1        = 0.223764


Total learning time: 2.951 seconds
Total inference time: 4.282 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN-B), Time: 03:28:49
{'AUC ROC': 0.983994, 'Recall': 0.984733, 'CLL': -0.097091, 'Precision': [0.126223, 0.5], 'Learning time': 2.951, 'F1': 0.223764, 'Inference time': 4.282, 'AUC PR': 0.124824}


WILL Produced-Tree #1
% FOR teamplayssport(A, B):
%   if ( athleteplayssport(C, B) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.983994
   AUC PR    = 0.124824
   CLL	      = -0.140117
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 1.362 seconds
Total inference time: 2.856 seconds
AUC ROC: 0.983994


Dataset: 46_nell_finances_nell_sports, Fold: 3, Type: Scratch (RDN), Time: 03:28:54
{'AUC ROC': 0.983994, 'Recall': 0.0, 'CLL': -0.140117, 'Precision': [nan, 0.5], 'Learning time': 1.362, 'F1': nan, 'Inference time': 2.856, 'AUC PR': 0.124824}


