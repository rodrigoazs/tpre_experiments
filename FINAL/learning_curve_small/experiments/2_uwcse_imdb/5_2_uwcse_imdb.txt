Starting experiment #5 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.8581489350995117;  // std dev = 1,79e-07, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( publication(C, E), ta(F, E, G) )
%   | | | then return 0.4581489350995122;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(H, A), publication(I, B) )
%   | | then if ( ta(J, A, K) )
%   | | | then return 0.5581489350995124;  // std dev = 1,449, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.06867525088898598;  // std dev = 1,777, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then return 0.478838590271925;  // std dev = 3,695, 58,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=36 */
%   | | | else return 0.6157246926752692;  // std dev = 2,462, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   else return -0.14185106490048818;  // std dev = 0,000, 188,000 (wgt'ed) examples reached here.  /* #neg=188 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(E, D) )
%   | | then if ( publication(C, F), publication(E, F) )
%   | | | then return 0.29090198363952596;  // std dev = 1,309, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.7194734122109546;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7268054893475637;  // std dev = 0,120, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( publication(G, A), publication(H, B) )
%   | | then if ( publication(G, I), professor(I) )
%   | | | then return 0.07378828373630983;  // std dev = 1,895, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.5443099888505298;  // std dev = 1,258, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( publication(J, B), ta(K, A, L) )
%   | | | then return 0.5686503031013076;  // std dev = 2,334, 33,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return 0.428322208182086;  // std dev = 3,508, 54,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=35 */
%   else return -0.12544463852839133;  // std dev = 4,21e-08, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.6572243040848603;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.4942567069145947;  // std dev = 0,891, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.561335629271852;  // std dev = 0,135, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | then if ( publication(H, I), tempadvisedby(J, I) )
%   | | | then return 0.22500698348042494;  // std dev = 1,333, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.3004409722635666;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( publication(K, A) )
%   | | | then return 0.2917410270423815;  // std dev = 2,695, 31,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=17 */
%   | | | else return 0.49354626801461415;  // std dev = 3,089, 63,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=51 */
%   else return -0.11231637819360628;  // std dev = 8,94e-08, 179,000 (wgt'ed) examples reached here.  /* #neg=179 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( ta(F, A, G), publication(H, B) )
%   | | then if ( tempadvisedby(I, B) )
%   | | | then return 0.39347905990635895;  // std dev = 1,967, 34,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=29 */
%   | | | else return 0.4814912735668923;  // std dev = 1,003, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( publication(J, B), publication(J, A) )
%   | | | then return 0.4263654936563503;  // std dev = 0,158, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.2682534786255058;  // std dev = 3,373, 57,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=35 */
%   | else if ( publication(K, B), publication(K, A) )
%   | | then return 0.4142823615520726;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(L, B), ta(M, A, N) )
%   | | | then return 0.22641143395445207;  // std dev = 1,215, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.08739297692224508;  // std dev = 1,404, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   else if ( professor(B), publication(P, A) )
%   | then return -0.12055571286745957;  // std dev = 0,071, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.09757931634699818;  // std dev = 0,052, 166,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=1 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then if ( ta(C, I, H), publication(E, I) )
%   | | | then return 0.1929229949881109;  // std dev = 0,796, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.3865740842259987;  // std dev = 0,821, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( ta(J, K, D), publication(E, K) )
%   | | | then return 0.2502749549084439;  // std dev = 1,602, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.056590105265358015;  // std dev = 2,565, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( projectmember(L, B) )
%   | | then return 0.5540294839088583;  // std dev = 0,065, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.32141519851883565;  // std dev = 2,266, 61,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=52 */
%   | | | else return 0.14977545398795503;  // std dev = 1,839, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   else return -0.09290538491217232;  // std dev = 0,006, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | then if ( publication(G, B), publication(H, A) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.2686561337714888;  // std dev = 0,098, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.2794946329785767;  // std dev = 0,071, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( ta(I, A, J), ta(I, K, F) )
%   | | | then return 0.17905762781565318;  // std dev = 1,277, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4404011368970678;  // std dev = 0,183, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( tempadvisedby(L, B) )
%   | | then if ( projectmember(M, B), publication(N, A) )
%   | | | then return 0.4449281421810416;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05292230880939313;  // std dev = 2,898, 43,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   | | else if ( ta(P, A, Q), publication(R, A) )
%   | | | then return 0.08858090377364677;  // std dev = 1,455, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.26524961475347336;  // std dev = 2,244, 44,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   else return -0.08379336957495664;  // std dev = 0,055, 177,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=1 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( publication(E, D), publication(E, B) )
%   | | | then return -0.025286944928932742;  // std dev = 1,177, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.2272098731126983;  // std dev = 0,112, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( ta(F, D, G) )
%   | | | then return -0.29694035804975416;  // std dev = 0,895, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.049887512739188074;  // std dev = 1,737, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( publication(H, A), publication(H, B) )
%   | | then if ( publication(H, I), ta(J, I, K) )
%   | | | then return 0.3136115460439635;  // std dev = 0,045, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20456985418807813;  // std dev = 0,002, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( publication(L, A), publication(M, B) )
%   | | | then return -0.007964817419374593;  // std dev = 1,873, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.08749088073853803;  // std dev = 4,060, 81,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=57 */
%   else return -0.07896587693468111;  // std dev = 0,008, 211,000 (wgt'ed) examples reached here.  /* #neg=211 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( student(A), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.20776596752497267;  // std dev = 0,049, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( ta(E, A, F) )
%   | | | then return -0.06697336104558001;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08648940081155136;  // std dev = 0,959, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( publication(G, A), tempadvisedby(H, B) )
%   | | then if ( ta(I, H, J), student(A) )
%   | | | then return -0.24652669113823933;  // std dev = 0,220, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.03808985977094415;  // std dev = 1,373, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( publication(C, K), tempadvisedby(K, L) )
%   | | | then return -0.03883786455083019;  // std dev = 2,179, 22,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.1291052781684476;  // std dev = 3,026, 61,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=43 */
%   else if ( professor(B), ta(M, A, N) )
%   | then return -0.19634842562554755;  // std dev = 0,456, 9,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else return -0.07507718593437465;  // std dev = 0,171, 190,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=11 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), tempadvisedby(D, B) )
%   | then if ( publication(E, A), publication(C, D) )
%   | | then return 0.2762585959700599;  // std dev = 0,053, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( ta(F, D, G) )
%   | | | then return 0.09774495305768047;  // std dev = 2,159, 42,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   | | | else return -0.02301604804357032;  // std dev = 2,650, 35,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( ta(H, A, I), tempadvisedby(J, B) )
%   | | then return 0.4881873236846859;  // std dev = 0,118, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(K, A), tempadvisedby(L, B) )
%   | | | then return -0.051719728728814446;  // std dev = 0,839, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.13905752608340835;  // std dev = 2,973, 62,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=48 */
%   else return -0.069256481792577;  // std dev = 0,037, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), student(D) )
%   | | then if ( ta(E, A, F), ta(G, D, H) )
%   | | | then return 0.14536675736889276;  // std dev = 1,952, 37,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=31 */
%   | | | else return 0.010945403097961767;  // std dev = 3,556, 82,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=58 */
%   | | else if ( tempadvisedby(I, B) )
%   | | | then return 0.44788091267807695;  // std dev = 0,111, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07722603780416618;  // std dev = 1,162, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( ta(J, A, K), projectmember(L, B) )
%   | | then return -0.3409091539726621;  // std dev = 0,774, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( projectmember(M, B) )
%   | | | then return 0.16472053469093553;  // std dev = 0,902, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.03986945169326953;  // std dev = 1,966, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   else return -0.06505533646326431;  // std dev = 0,039, 191,000 (wgt'ed) examples reached here.  /* #neg=191 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.028458585728749153;  // std dev = 0,311, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.2199299011816711;  // std dev = 0,045, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08299304306763039;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.18459753771656687;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07689150892339651;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.15846058704164617;  // std dev = 0,036, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07160829469438955;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.1384887234538719;  // std dev = 0,014, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06699134035447409;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076377
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.067 seconds
Total inference time: 1.536 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098062
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.556 seconds
Parameter learned model CLL: -0.098062


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 4], 'false,true': [0.0, 0, 1], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 4], 'false': [0.311, 5, 1], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.045, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'false': 'director(B)'}, {'true,true': [0.018, 0, 5], 'false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.036, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.014, 0, 5], 'false': [1.86e-09, 5, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, nan]}, {'': [0.0, 0.0374270975619041], 'true,true': [0.0, nan], 'true': [0.0, nan], 'false': [0.0, 0.0]}, {'': [-2.2204460492503132e-17, 0.0], 'true,true': [-2.2204460492503132e-17, nan], 'true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.016089289352228985], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0004138934353841828, 0.0], 'true,true': [0.0004138934353841828, nan], 'true,true,true': [0.0004138934353841828, nan], 'true': [0.0004138934353841828, nan]}, {'': [0.0003224610634621483, 0.0], 'false': [nan, 0.0], 'true': [0.0003224610634621483, nan]}, {'': [0.00025535192390369055, -6.938893903907229e-19], 'true,true': [0.00025535192390369055, nan], 'true': [0.00025535192390369055, nan]}, {'': [0.00020580293114823845, 6.938893903907229e-19], 'true,true': [0.00020580293114823845, nan], 'true': [0.00020580293114823845, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.028458585728749153;  // std dev = 0,311, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2199299011816711;  // std dev = 0,045, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08299304306763039;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then return 0.18459753771656687;  // std dev = 0,040, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07689150892339651;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15846058704164617;  // std dev = 0,036, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07160829469438955;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1384887234538719;  // std dev = 0,032, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06699134035447409;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.133766
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 0.629 seconds
Total inference time: 1.032 seconds
AUC ROC: 0.983525


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098062
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.461 seconds
Refined model CLL: -0.098062


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076377
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.7129999999999996 seconds
Total inference time: 1.536 seconds
AUC ROC: 1.0
Total revision time: 2.7129999999999996
Best scored revision CLL: -0.098062


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:21
{'Inference time': 1.536, 'AUC ROC': 1.0, 'parameter_5': {'Inference time': 1.536, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.067, 'Precision': [1.0, 0.5], 'CLL': -0.076377, 'AUC PR': 1.0, 'Recall': 1.0}, 'F1': 1.0, 'Learning time': 2.7129999999999996, 'Precision': [1.0, 0.5], 'CLL': -0.076377, 'AUC PR': 1.0, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.982164
   AUC PR    = 0.321839
   CLL	      = -0.13584
   Precision = 0.321839 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.486957


Total learning time: 1.007 seconds
Total inference time: 1.134 seconds
AUC ROC: 0.982164


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:06:24
{'Inference time': 1.134, 'AUC ROC': 0.982164, 'F1': 0.486957, 'Learning time': 1.007, 'Precision': [0.321839, 0.5], 'CLL': -0.13584, 'AUC PR': 0.321839, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.982164
   AUC PR    = 0.321839
   CLL	      = -0.159815
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.494 seconds
Total inference time: 0.822 seconds
AUC ROC: 0.982164


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:06:25
{'Inference time': 0.822, 'AUC ROC': 0.982164, 'F1': nan, 'Learning time': 0.494, 'Precision': [nan, 0.5], 'CLL': -0.159815, 'AUC PR': 0.321839, 'Recall': 0.0}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.41751358415830986;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05424320648313448;  // std dev = 0,325, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.21534372717508238;  // std dev = 0,053, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08105168119477504;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.18123316273164222;  // std dev = 0,015, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07521611459578792;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.1559083797107362;  // std dev = 0,042, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07014848583491276;  // std dev = 4,56e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.13649606243329881;  // std dev = 0,012, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06570856259145662;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0752
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.187 seconds
Total inference time: 1.462 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096532
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.655 seconds
Parameter learned model CLL: -0.096532


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 10], 'false': [0.0, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [2.98e-08, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 10], 'false': [0.0, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [1.05e-08, 0, 9], 'false,true': [0.0, 0, 1], 'false,false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 10], 'false': [0.0, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [1.83e-08, 0, 9], 'false': [0.325, 10, 1], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.053, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'false': 'director(B)'}, {'true,true': [0.015, 0, 10], 'false,false': [0.0, 10, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.042, 0, 10], 'false': [4.56e-09, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.012, 0, 10], 'false': [0.0, 10, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true,true': [8.881784197001253e-17, nan], 'true,true,true': [8.881784197001253e-17, nan], 'true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true,true': [-1.7763568394002506e-16, nan], 'true': [-1.7763568394002506e-16, nan]}, {'': [1.2335811384723962e-16, 0.022270669623612346], 'true,true': [1.2335811384723962e-16, nan], 'true': [1.2335811384723962e-16, nan], 'false': [0.0, 1.3877787807814458e-18]}, {'': [-4.4408920985006264e-17, 0.0], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, nan]}, {'': [3.700743415417188e-17, 0.009573792011243695], 'true,true': [3.700743415417188e-17, nan], 'true': [3.700743415417188e-17, nan]}, {'': [0.00028083172458117647, 1.3877787807814458e-18], 'true,true': [0.00028083172458117647, nan], 'true,true,true': [0.00028083172458117647, nan], 'true': [0.00028083172458117647, nan]}, {'': [0.00022045703465127796, 0.0], 'false': [nan, 0.0], 'true': [0.00022045703465127796, nan]}, {'': [0.00017570989661177538, 2.0816681711721684e-18], 'true,true': [0.00017570989661177538, nan], 'true': [0.00017570989661177538, nan]}, {'': [0.00014238737959473003, -2.0816681711721684e-18], 'true,true': [0.00014238737959473003, nan], 'true': [0.00014238737959473003, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( movie(D, A), movie(D, B) )
%   | then return -0.01711335259681961;  // std dev = 0,304, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.21462578411755162;  // std dev = 0,046, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08081028054944447;  // std dev = 0,008, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then return 0.1806968861807281;  // std dev = 0,041, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07500787564071205;  // std dev = 0,007, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15549506336866947;  // std dev = 0,036, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06996713360528439;  // std dev = 0,007, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13616883196541027;  // std dev = 0,033, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06554929141538404;  // std dev = 0,006, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.131657
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 0.766 seconds
Total inference time: 1.119 seconds
AUC ROC: 0.983525


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096298
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.497 seconds
Refined model CLL: -0.096298


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.131657
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 3.105 seconds
Total inference time: 1.119 seconds
AUC ROC: 0.983525
Total revision time: 3.105
Best scored revision CLL: -0.096298


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:31
{'Inference time': 1.119, 'AUC ROC': 0.983525, 'F1': 0.506787, 'Learning time': 3.105, 'parameter_10': {'Inference time': 1.462, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.187, 'Precision': [1.0, 0.5], 'CLL': -0.0752, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [0.339394, 0.5], 'CLL': -0.131657, 'AUC PR': 0.339394, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.982164
   AUC PR    = 0.321839
   CLL	      = -0.13584
   Precision = 0.321839 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.486957


Total learning time: 1.107 seconds
Total inference time: 1.077 seconds
AUC ROC: 0.982164


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:06:34
{'Inference time': 1.077, 'AUC ROC': 0.982164, 'F1': 0.486957, 'Learning time': 1.107, 'Precision': [0.321839, 0.5], 'CLL': -0.13584, 'AUC PR': 0.321839, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.982164
   AUC PR    = 0.321839
   CLL	      = -0.159815
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.515 seconds
Total inference time: 0.82 seconds
AUC ROC: 0.982164


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:06:35
{'Inference time': 0.82, 'AUC ROC': 0.982164, 'F1': nan, 'Learning time': 0.515, 'Precision': [nan, 0.5], 'CLL': -0.159815, 'AUC PR': 0.321839, 'Recall': 0.0}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.3829062565819001;  // std dev = 0,129, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2984140742567513;  // std dev = 0,455, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.2661373972583054;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.18268044134604433;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.062210219436951195;  // std dev = 0,333, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.2210801551852749;  // std dev = 0,052, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.15696677753511407;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08046025686142265;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.18539093870659593;  // std dev = 0,012, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.1372952293872336;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07470468325203285;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.14147600626897208;  // std dev = 0,275, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06970207173775486;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.12359620046564834;  // std dev = 0,068, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0653156676713538;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068024
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.515 seconds
Total inference time: 1.667 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102904
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.687 seconds
Parameter learned model CLL: -0.102904


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 15], 'true,false,true': [0.0, 1, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,true,true,true': [5.16e-08, 0, 15], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, G)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.18e-08, 14, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.129, 1, 14], 'false,true': [0.0, 0, 1], 'false,false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.455, 1, 15], 'false': [0.0, 14, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true': [0.0, 0, 14], 'false': [0.333, 14, 1], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true,true': [0.052, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 14, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false,true': 'actor(A)', 'false': 'director(B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.012, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'false,false': [0.0, 14, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.275, 1, 15], 'false': [0.0, 14, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.068, 1, 15], 'false': [3.73e-09, 14, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true,true': [-2.3684757858670006e-16, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.041829287839756535, 3.96508223080413e-18], 'true,true': [1.7763568394002506e-16, nan], 'true,true,true': [1.7763568394002506e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true': [1.7763568394002506e-16, 0.0]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true,true': [-2.3684757858670006e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.016767339707733163, 0.01676733970773303], 'true,true': [0.016767339707733163, nan], 'false': [0.0, -3.96508223080413e-18], 'true': [0.016767339707733163, nan]}, {'': [0.012949160769091222, 0.0], 'true,true': [0.012949160769091222, nan], 'true': [0.012949160769091222, nan]}, {'': [0.012533885917745409, 0.007389607657431979], 'true,true': [-3.172065784643304e-17, 0.0], 'true': [0.012533885917745409, nan]}, {'': [0.008544849159672276, -9.912705577010326e-19], 'true,true': [0.0001820380616111968, 0.0], 'true,true,true': [0.0001820380616111968, nan], 'true': [0.008544849159672276, nan]}, {'': [0.006234966858211264, -1.982541115402065e-18], 'false': [nan, -1.982541115402065e-18], 'true,false,true': [0.0, nan], 'true': [0.0001427336229829009, 0.0], 'true,false': [0.0, nan]}, {'': [0.004728381110609081, -1.982541115402065e-18], 'true,true': [0.004728381110609081, nan], 'true': [0.004728381110609081, nan]}, {'': [0.004643089151250765, 9.912705577010326e-19], 'true,true': [0.004643089151250765, nan], 'true': [0.004643089151250765, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;actor(A), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3598347048642936;  // std dev = 0,163, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2808646179312751;  // std dev = 0,149, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.09269127618926097;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.22405273070816964;  // std dev = 0,142, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return 0.028267579930898568;  // std dev = 0,278, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2154833281060875;  // std dev = 0,037, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.18259378886828978;  // std dev = 0,139, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08001058728030734;  // std dev = 0,011, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.19179207002389445;  // std dev = 0,050, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.24374311700188725;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07431617024828556;  // std dev = 0,011, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15459122827458932;  // std dev = 0,029, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.13040630286761482;  // std dev = 0,117, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.06936324065862108;  // std dev = 0,010, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13546339290059053;  // std dev = 0,026, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.11217951589418743;  // std dev = 0,119, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else return -0.06501771056120208;  // std dev = 0,009, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071676
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.074 seconds
Total inference time: 1.293 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108945
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.506 seconds
Refined model CLL: -0.108945


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068024
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.782 seconds
Total inference time: 1.667 seconds
AUC ROC: 1.0
Total revision time: 3.782
Best scored revision CLL: -0.102904


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:43
{'parameter_15': {'Inference time': 1.667, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.515, 'Precision': [1.0, 0.5], 'CLL': -0.068024, 'AUC PR': 1.0, 'Recall': 1.0}, 'Inference time': 1.667, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 3.782, 'Precision': [1.0, 0.5], 'CLL': -0.068024, 'AUC PR': 1.0, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6302322013528495;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4930252128087158;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3713223124091624;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2802444957903803;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2934713555956871;  // std dev = 0,139, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.28112880776106125;  // std dev = 0,480, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.23679053026367336;  // std dev = 0,121, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.24659774863970596;  // std dev = 0,443, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.19687262757018786;  // std dev = 0,105, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.21750949161531472;  // std dev = 0,405, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1677075799679291;  // std dev = 0,093, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.19293544825598163;  // std dev = 0,369, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.14566473702644825;  // std dev = 0,083, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A), actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.17215043062980254;  // std dev = 0,336, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.999765
   AUC PR    = 0.983476
   CLL	      = -0.082139
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.562 seconds
Total inference time: 1.404 seconds
AUC ROC: 0.999765


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:06:46
{'Inference time': 1.404, 'AUC ROC': 0.999765, 'F1': 0.973913, 'Learning time': 1.562, 'Precision': [0.949153, 0.5], 'CLL': -0.082139, 'AUC PR': 0.983476, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */


Results
   AUC ROC   = 0.983055
   AUC PR    = 0.338212
   CLL	      = -0.159918
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.651 seconds
Total inference time: 0.842 seconds
AUC ROC: 0.983055


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:06:47
{'Inference time': 0.842, 'AUC ROC': 0.983055, 'F1': nan, 'Learning time': 0.651, 'Precision': [nan, 0.5], 'CLL': -0.159918, 'AUC PR': 0.338212, 'Recall': 0.0}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.3901920097558811;  // std dev = 0,116, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.30375012819820846;  // std dev = 0,458, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 9,13e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.2636795414335441;  // std dev = 3,33e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.18457253487255693;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.052461504469000504;  // std dev = 0,462, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.22103349500053993;  // std dev = 0,071, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.15839185283864488;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0811844855651996;  // std dev = 9,13e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.18536973527395526;  // std dev = 0,014, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.1384010435534186;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07533089005664245;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.14560632974802779;  // std dev = 0,281, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07024861907194548;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.12719831225398004;  // std dev = 0,061, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06579665137527212;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0685
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.56 seconds
Total inference time: 1.545 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.676 seconds
Parameter learned model CLL: -0.101847


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 20], 'true,false,true': [0.0, 1, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,true,true,true': [7.3e-08, 0, 20], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 19, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, G)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-08, 19, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.116, 1, 18], 'false,true': [0.0, 0, 2], 'false,false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.458, 1, 20], 'false': [9.13e-09, 19, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true': [3.33e-08, 0, 18], 'false': [0.462, 19, 2], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true,true': [0.071, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'false': [9.13e-09, 19, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false,true': 'actor(A)', 'false': 'director(B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.014, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'false,false': [0.0, 19, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.281, 1, 20], 'false': [0.0, 19, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.061, 1, 20], 'false': [0.0, 19, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.04535147392290242, 0.0], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.03237580555397633, 0.0], 'true,true': [2.6645352591003756e-16, nan], 'true,true,true': [2.6645352591003756e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true': [2.6645352591003756e-16, 0.0]}, {'': [0.02021770255628346, 1.460819769243627e-17], 'true,true': [-2.6645352591003756e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.01343643170089424, 0.023220076854732343], 'true,true': [0.01343643170089424, nan], 'true': [0.01343643170089424, nan], 'false': [0.0, -5.843279076974508e-18]}, {'': [0.009988777192338764, 4.382459307730881e-18], 'true,true': [0.009988777192338764, nan], 'true': [0.009988777192338764, nan]}, {'': [0.010018666566285793, 0.010172703445003943], 'true,true': [6.167905692361981e-17, 0.0], 'true': [0.010018666566285793, nan]}, {'': [0.006768280527718215, 4.382459307730881e-18], 'true,true': [0.0002512852882523897, 0.0], 'true,true,true': [0.0002512852882523897, nan], 'true': [0.006768280527718215, nan]}, {'': [0.0049413721777804565, -3.652049423109067e-18], 'false': [nan, -3.652049423109067e-18], 'true,false,true': [0.0, nan], 'true': [0.00019665425226546572, 0.0], 'true,false': [0.0, nan]}, {'': [0.0037484059392188956, -2.921639538487254e-18], 'true,true': [0.0037484059392188956, nan], 'true': [0.0037484059392188956, nan]}, {'': [0.0036725159496744215, -7.304098846218135e-19], 'true,true': [0.0036725159496744215, nan], 'true': [0.0036725159496744215, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;actor(A), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.37032177382684206;  // std dev = 0,149, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.288187501476636;  // std dev = 0,136, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.09269127618926094;  // std dev = 9,13e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.2297148783164822;  // std dev = 0,129, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0.08499374559054629;  // std dev = 0,340, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.21567757272306126;  // std dev = 0,037, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.18741933480793405;  // std dev = 0,127, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08017351143284804;  // std dev = 0,018, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.1889506446600095;  // std dev = 0,047, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.2489970383412158;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07445774947763778;  // std dev = 0,017, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15507160885019622;  // std dev = 0,029, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.13434646515120172;  // std dev = 0,107, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.06948737936361364;  // std dev = 0,016, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13583288609545557;  // std dev = 0,026, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.11593000240710155;  // std dev = 0,109, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.06512742326354397;  // std dev = 0,015, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071924
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.137 seconds
Total inference time: 1.371 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105944
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.552 seconds
Refined model CLL: -0.105944


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0685
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.9250000000000003 seconds
Total inference time: 1.545 seconds
AUC ROC: 1.0
Total revision time: 3.9250000000000003
Best scored revision CLL: -0.101847


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:55
{'Inference time': 1.545, 'AUC ROC': 1.0, 'parameter_20': {'Inference time': 1.545, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.56, 'Precision': [1.0, 0.5], 'CLL': -0.0685, 'AUC PR': 1.0, 'Recall': 1.0}, 'F1': 1.0, 'Learning time': 3.9250000000000003, 'Precision': [1.0, 0.5], 'CLL': -0.0685, 'AUC PR': 1.0, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.6465415686654066;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5044629797645588;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.37956420580342304;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2871467034260754;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.28421256577897663;  // std dev = 0,130, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.2857055379294433;  // std dev = 0,491, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.2302729702523323;  // std dev = 0,113, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.2510273081526577;  // std dev = 0,455, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.19212445515105334;  // std dev = 0,099, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.22166661603476304;  // std dev = 0,417, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16412945510685378;  // std dev = 0,087, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.19674247956320956;  // std dev = 0,380, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.14288707796398453;  // std dev = 0,078, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.17557739025834873;  // std dev = 0,345, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.999765
   AUC PR    = 0.983476
   CLL	      = -0.082307
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.75 seconds
Total inference time: 1.441 seconds
AUC ROC: 0.999765


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:06:58
{'Inference time': 1.441, 'AUC ROC': 0.999765, 'F1': 0.973913, 'Learning time': 1.75, 'Precision': [0.949153, 0.5], 'CLL': -0.082307, 'AUC PR': 0.983476, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */


Results
   AUC ROC   = 0.983055
   AUC PR    = 0.338212
   CLL	      = -0.159894
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.655 seconds
Total inference time: 0.808 seconds
AUC ROC: 0.983055


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:07:00
{'Inference time': 0.808, 'AUC ROC': 0.983055, 'F1': nan, 'Learning time': 0.655, 'Precision': [nan, 0.5], 'CLL': -0.159894, 'AUC PR': 0.338212, 'Recall': 0.0}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.3958840044230538;  // std dev = 0,104, 24,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.24447694627626124;  // std dev = 0,424, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2938583070125102;  // std dev = 0,632, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926092;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.2644957577422531;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.18394127500612364;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.058907036037772705;  // std dev = 0,526, 26,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.22360681430974644;  // std dev = 0,124, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.15617899082523212;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08070498645047429;  // std dev = 5,27e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.1873034887804872;  // std dev = 0,022, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.1366835072483794;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0749163706742107;  // std dev = 1,39e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.13964155017148408;  // std dev = 0,396, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06988689285649922;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.12191397999446829;  // std dev = 0,075, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06547836634571678;  // std dev = 6,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068134
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.929 seconds
Total inference time: 1.381 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104642
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.721 seconds
Parameter learned model CLL: -0.104642


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [1.33e-07, 0, 25], 'true,false,true': [0.0, 2, 0], 'false': [1.49e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,true,true,true': [0.0, 0, 25], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 23, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, G)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 23, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.104, 1, 23], 'false,true': [0.424, 1, 2], 'false,false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.632, 2, 25], 'false': [1.49e-08, 23, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true': [1.49e-08, 0, 23], 'false': [0.526, 24, 2], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.002, 2, 0], 'true,true,true,true': [0.124, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'false': [5.27e-09, 23, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false,true': 'actor(A)', 'false': 'director(B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.022, 0, 25], 'true,false,true,true': [0.002, 2, 0], 'false,false': [1.39e-08, 23, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.396, 2, 25], 'false': [0.0, 23, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.075, 2, 25], 'false': [6.45e-09, 23, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.06858710562414343, 9.654113257610057e-18], 'true,true': [7.105427357601002e-16, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.04896340963409988, -2.413528314402514e-18], 'true,true': [-7.105427357601002e-17, nan], 'true,true,true': [-7.105427357601002e-17, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.030576155100552255, 4.827056628805028e-18], 'true,true': [-2.842170943040401e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.010760290549047499, 0.019134326800878784], 'true,true': [0.010760290549047499, nan], 'true': [0.010760290549047499, nan], 'false': [0.05988335609904653, -2.413528314402514e-18]}, {'': [0.01479936866866186, 9.654113257610057e-18], 'true,true': [0.01479936866866186, nan], 'true': [0.01479936866866186, nan]}, {'': [0.008029865909416465, 0.010655412304877753], 'true,true': [9.654113257610057e-18, 0.0], 'true': [0.008029865909416465, nan]}, {'': [0.010458033597210648, 1.206764157201257e-18], 'true,true': [0.0006101933891432409, 3.0197332164944024e-06], 'true,true,true': [0.0006101933891432409, nan], 'true': [0.010458033597210648, nan]}, {'': [0.007647855398803329, 8.4473491004088e-18], 'false': [nan, 8.4473491004088e-18], 'true,false,true': [2.420989495856285e-06, nan], 'true': [0.0004841143296361627, 2.420989495856285e-06], 'true,false': [2.420989495856285e-06, nan]}, {'': [0.005808704190101015, -4.827056628805028e-18], 'true,true': [0.005808704190101015, nan], 'true': [0.005808704190101015, nan]}, {'': [0.005665320948431466, 1.8101462358018856e-18], 'true,true': [0.005665320948431466, nan], 'true': [0.005665320948431466, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;actor(A), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3829062565819001;  // std dev = 0,129, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.24447694627626124;  // std dev = 0,424, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2899379343478954;  // std dev = 0,126, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.29692755606319143;  // std dev = 0,117, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.09269127618926092;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.2610650461742128;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.23650206588525452;  // std dev = 0,112, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 1,58e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.14327684875459668;  // std dev = 0,374, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.18973000900447337;  // std dev = 0,114, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.1932685653532487;  // std dev = 0,111, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.19169796455501953;  // std dev = 0,061, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.2337610914746952;  // std dev = 0,031, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1360698251248835;  // std dev = 0,095, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.13812503937804593;  // std dev = 0,094, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11802081638403517;  // std dev = 0,096, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.11971640989968696;  // std dev = 0,096, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.06419184008202622;  // std dev = 3,73e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071597
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.292 seconds
Total inference time: 1.343 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.11016
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.532 seconds
Refined model CLL: -0.11016


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068134
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.474 seconds
Total inference time: 1.381 seconds
AUC ROC: 1.0
Total revision time: 4.474
Best scored revision CLL: -0.104642


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:07:08
{'Inference time': 1.381, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 4.474, 'Precision': [1.0, 0.5], 'CLL': -0.068134, 'AUC PR': 1.0, 'parameter_25': {'Inference time': 1.381, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.929, 'Precision': [1.0, 0.5], 'CLL': -0.068134, 'AUC PR': 1.0, 'Recall': 1.0}, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.7914822684328456;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.6526478931012827;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.6660633000779167;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.508738411682717;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5181199435476403;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.38266873164552506;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.38952954024068537;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.36708511209336414;  // std dev = 0,027, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.36247997979506075;  // std dev = 0,540, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.2866347688550672;  // std dev = 0,024, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.30557057037322083;  // std dev = 0,478, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.23176168098006553;  // std dev = 0,020, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.2591564746560647;  // std dev = 0,419, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.19307818763694257;  // std dev = 0,018, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.22187105590032094;  // std dev = 0,366, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.16476475072369823;  // std dev = 0,016, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.19205688929475723;  // std dev = 0,321, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.14332447800538783;  // std dev = 0,014, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.16813200591581484;  // std dev = 0,284, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.999328
   AUC PR    = 0.918673
   CLL	      = -0.072982
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.971 seconds
Total inference time: 1.492 seconds
AUC ROC: 0.999328


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:07:12
{'Inference time': 1.492, 'AUC ROC': 0.999328, 'F1': 0.973913, 'Learning time': 1.971, 'Precision': [0.949153, 0.5], 'CLL': -0.072982, 'AUC PR': 0.918673, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.7914822684328456;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */


Results
   AUC ROC   = 0.981274
   AUC PR    = 0.307778
   CLL	      = -0.160011
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.707 seconds
Total inference time: 0.796 seconds
AUC ROC: 0.981274


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:07:13
{'Inference time': 0.796, 'AUC ROC': 0.981274, 'F1': nan, 'Learning time': 0.707, 'Precision': [nan, 0.5], 'CLL': -0.160011, 'AUC PR': 0.307778, 'Recall': 0.0}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.028458585728749153;  // std dev = 0,311, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.2199299011816711;  // std dev = 0,045, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08299304306763039;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.18459753771656687;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07689150892339651;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.15846058704164617;  // std dev = 0,036, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07160829469438955;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.1384887234538719;  // std dev = 0,014, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06699134035447409;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080957
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.002 seconds
Total inference time: 1.463 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098062
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.565 seconds
Parameter learned model CLL: -0.098062


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 4], 'false,true': [0.0, 0, 1], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 4], 'false': [0.311, 5, 1], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.045, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'false': 'director(B)'}, {'true,true': [0.018, 0, 5], 'false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.036, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.014, 0, 5], 'false': [1.86e-09, 5, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, nan]}, {'': [0.0, 0.0374270975619041], 'true,true': [0.0, nan], 'true': [0.0, nan], 'false': [0.0, 0.0]}, {'': [-2.2204460492503132e-17, 0.0], 'true,true': [-2.2204460492503132e-17, nan], 'true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.016089289352228985], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0004138934353841828, 0.0], 'true,true': [0.0004138934353841828, nan], 'true,true,true': [0.0004138934353841828, nan], 'true': [0.0004138934353841828, nan]}, {'': [0.0003224610634621428, 0.0], 'false': [nan, 0.0], 'true': [0.0003224610634621428, nan]}, {'': [0.00025535192390369055, -6.938893903907229e-19], 'true,true': [0.00025535192390369055, nan], 'true': [0.00025535192390369055, nan]}, {'': [0.00020580293114823845, 6.938893903907229e-19], 'true,true': [0.00020580293114823845, nan], 'true': [0.00020580293114823845, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.028458585728749153;  // std dev = 0,311, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2199299011816711;  // std dev = 0,045, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08299304306763039;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then return 0.18459753771656687;  // std dev = 0,040, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07689150892339651;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15846058704164617;  // std dev = 0,036, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07160829469438955;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1384887234538719;  // std dev = 0,032, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06699134035447409;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.163401
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.632 seconds
Total inference time: 1.221 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098062
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.468 seconds
Refined model CLL: -0.098062


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080957
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.667 seconds
Total inference time: 1.463 seconds
AUC ROC: 1.0
Total revision time: 2.667
Best scored revision CLL: -0.098062


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:19
{'Inference time': 1.463, 'AUC ROC': 1.0, 'parameter_5': {'Inference time': 1.463, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.002, 'Precision': [1.0, 0.5], 'CLL': -0.080957, 'AUC PR': 1.0, 'Recall': 1.0}, 'F1': 1.0, 'Learning time': 2.667, 'Precision': [1.0, 0.5], 'CLL': -0.080957, 'AUC PR': 1.0, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.168993
   Precision = 0.245763 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.394558


Total learning time: 1.013 seconds
Total inference time: 1.094 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:22
{'Inference time': 1.094, 'AUC ROC': 0.973999, 'F1': 0.394558, 'Learning time': 1.013, 'Precision': [0.245763, 0.5], 'CLL': -0.168993, 'AUC PR': 0.245763, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.162966
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.489 seconds
Total inference time: 0.82 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:07:23
{'Inference time': 0.82, 'AUC ROC': 0.973999, 'F1': nan, 'Learning time': 0.489, 'Precision': [nan, 0.5], 'CLL': -0.162966, 'AUC PR': 0.245763, 'Recall': 0.0}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.3526248449525416;  // std dev = 0,172, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.2877361057467734;  // std dev = 0,450, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.26035736597902687;  // std dev = 0,613, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.27969580882165146;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.1726973611704342;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.0028133527663120397;  // std dev = 0,585, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.24656986450974264;  // std dev = 0,095, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1567031069861774;  // std dev = 0,007, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08540424722517065;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.20384458551474843;  // std dev = 0,026, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.13709750814907173;  // std dev = 0,009, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07896519925181679;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.12377472865863066;  // std dev = 0,387, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0734096757887668;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.10735852696698091;  // std dev = 0,110, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06857002947587748;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071864
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.256 seconds
Total inference time: 2.081 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.119609
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.641 seconds
Parameter learned model CLL: -0.119609


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 10], 'true,false,true': [0.0, 2, 0], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,true,true,true': [2.98e-08, 0, 10], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, G)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 8, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.172, 1, 7], 'false,true': [0.45, 1, 3], 'false,false': [3.73e-09, 8, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.613, 2, 10], 'false': [0.0, 8, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true': [0.0, 0, 7], 'false': [0.585, 9, 3], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.007, 2, 0], 'true,true,true,true': [0.095, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'false': [2.63e-09, 8, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false,true': 'actor(A)', 'false': 'director(B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.026, 0, 10], 'true,false,true,true': [0.009, 2, 0], 'false,false': [2.63e-09, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.387, 2, 10], 'false': [0.0, 8, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.11, 2, 10], 'false': [0.0, 8, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.1388888888888887, -6.938893903907228e-18], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.09915090450905217, 0.0], 'true,true': [8.881784197001253e-17, nan], 'true,true,true': [8.881784197001253e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true': [8.881784197001253e-17, 0.0]}, {'': [0.0619167140786188, -1.734723475976807e-18], 'true,true': [-1.7763568394002506e-16, nan], 'true,false,true': [0.0, nan], 'true': [-1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02947383932999953, 0.05052658170857052], 'true,true': [0.02947383932999953, nan], 'true': [0.02947383932999953, nan], 'false': [0.05052658170857051, 1.734723475976807e-18]}, {'': [0.031271829390340455, 0.0], 'true,true': [0.031271829390340455, nan], 'true': [0.031271829390340455, nan]}, {'': [0.022384641590444003, 0.02851618496111952], 'true,true': [0.0, 0.0], 'true': [0.022384641590444003, nan]}, {'': [0.02334546630560407, 8.673617379884035e-19], 'true,true': [0.0008990395869319156, 5.3358616340516696e-05], 'true,true,true': [0.0008990395869319156, nan], 'true': [0.02334546630560407, nan]}, {'': [0.016729817776594796, 8.673617379884035e-19], 'false': [nan, 8.673617379884035e-19], 'true,false,true': [4.275965122125733e-05, nan], 'true': [0.0006936441963579787, 4.275965122125733e-05], 'true,false': [4.275965122125733e-05, nan]}, {'': [0.012507151342879485, 0.0], 'true,true': [0.012507151342879485, nan], 'true': [0.012507151342879485, nan]}, {'': [0.012190712776377323, 0.0], 'true,true': [0.012190712776377323, nan], 'true': [0.012190712776377323, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;actor(A), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.2877361057467734;  // std dev = 0,450, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.2877361057467734;  // std dev = 0,450, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.26950871712909025;  // std dev = 0,439, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.2502388788923267;  // std dev = 0,418, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.17707655239406717;  // std dev = 0,395, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2687957083063691;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), movie(E, B) )
%   | then return 0.19799807325180635;  // std dev = 0,327, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.09481696066438099;  // std dev = 0,072, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.18015338237801748;  // std dev = 0,406, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.16386379663468154;  // std dev = 0,345, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0810624328851194;  // std dev = 0,022, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.21044509163969422;  // std dev = 0,046, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.19596912066283034;  // std dev = 0,034, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07522996864139721;  // std dev = 0,021, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12487873627603158;  // std dev = 0,343, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.11551459017091677;  // std dev = 0,287, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07016429757060677;  // std dev = 0,020, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.10633332130061879;  // std dev = 0,344, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.10010083151356107;  // std dev = 0,287, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06572555138177034;  // std dev = 0,018, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078563
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.004 seconds
Total inference time: 1.449 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.127657
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.498 seconds
Refined model CLL: -0.127657


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071864
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.399 seconds
Total inference time: 2.081 seconds
AUC ROC: 1.0
Total revision time: 3.399
Best scored revision CLL: -0.119609


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:31
{'Inference time': 2.081, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 3.399, 'parameter_10': {'Inference time': 2.081, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.256, 'Precision': [1.0, 0.5], 'CLL': -0.071864, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'CLL': -0.071864, 'AUC PR': 1.0, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.46125983910675533;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14945766425666812;  // std dev = 0,127, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return 0.33099526521728556;  // std dev = 0,474, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.41266143871995137;  // std dev = 0,563, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1335651194079704;  // std dev = 0,119, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return 0.26053178561396195;  // std dev = 0,434, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.3200458945752207;  // std dev = 0,510, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2840386560434398;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2128667323487374;  // std dev = 0,687, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.10108536094240768;  // std dev = 0,128, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12094525795434066;  // std dev = 0,131, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return 0.16564993540624687;  // std dev = 0,352, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.214481015622772;  // std dev = 0,427, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11052908807630604;  // std dev = 0,123, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return 0.13846055627273468;  // std dev = 0,348, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.17366839345109897;  // std dev = 0,419, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.18054417864376182;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.11413494239793492;  // std dev = 0,574, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.0575844052257289;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.13851565733440252;  // std dev = 0,164, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10145542357929137;  // std dev = 0,127, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return 0.09963929126161623;  // std dev = 0,305, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.13099409352179858;  // std dev = 0,378, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */


Results
   AUC ROC   = 0.999617
   AUC PR    = 0.971227
   CLL	      = -0.210685
   Precision = 0.165242 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.283619


Total learning time: 1.528 seconds
Total inference time: 1.42 seconds
AUC ROC: 0.999617


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:34
{'Inference time': 1.42, 'AUC ROC': 0.999617, 'F1': 0.283619, 'Learning time': 1.528, 'Precision': [0.165242, 0.5], 'CLL': -0.210685, 'AUC PR': 0.971227, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.871367
   AUC PR    = 0.062774
   CLL	      = -0.197195
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.643 seconds
Total inference time: 0.978 seconds
AUC ROC: 0.871367


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:07:36
{'Inference time': 0.978, 'AUC ROC': 0.871367, 'F1': nan, 'Learning time': 0.643, 'Precision': [nan, 0.5], 'CLL': -0.197195, 'AUC PR': 0.062774, 'Recall': 0.0}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.37758205233937553;  // std dev = 0,138, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.2877361057467734;  // std dev = 0,450, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2782286814813393;  // std dev = 0,625, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.271149260548118;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.1789024335305442;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.023863991740638836;  // std dev = 0,603, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.23562544210151853;  // std dev = 0,113, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.15845822617070157;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08334338618549376;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.19601675497355017;  // std dev = 0,026, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.13845503504888867;  // std dev = 0,005, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07719330397910963;  // std dev = 6,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.13296462749869775;  // std dev = 0,395, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0718708343800312;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.11563716028031817;  // std dev = 0,095, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06722171482160165;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070943
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.339 seconds
Total inference time: 1.42 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112112
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.678 seconds
Parameter learned model CLL: -0.112112


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 15], 'true,false,true': [0.0, 2, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,true,true,true': [5.16e-08, 0, 15], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [7.45e-09, 13, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, G)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 13, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.138, 1, 12], 'false,true': [0.45, 1, 3], 'false,false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.625, 2, 15], 'false': [0.0, 13, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true': [0.0, 0, 12], 'false': [0.603, 14, 3], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.004, 2, 0], 'true,true,true,true': [0.113, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 13, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false,true': 'actor(A)', 'false': 'director(B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.026, 0, 15], 'true,false,true,true': [0.005, 2, 0], 'false,false': [6.45e-09, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.395, 2, 15], 'false': [7.45e-09, 13, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.095, 2, 15], 'false': [0.0, 13, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.10380622837370206, -1.2810265668751807e-17], 'true,true': [-2.3684757858670006e-16, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.0741058663458661, 4.270088556250602e-18], 'true,true': [1.7763568394002506e-16, nan], 'true,true,true': [1.7763568394002506e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true': [1.7763568394002506e-16, 0.0]}, {'': [0.04627685204491911, 8.540177112501205e-18], 'true,true': [-2.3684757858670006e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.019134326800878874, 0.03916247163570865], 'true,true': [0.019134326800878874, nan], 'true': [0.019134326800878874, nan], 'false': [0.05052658170857051, -2.135044278125301e-18]}, {'': [0.022973704122000733, -2.135044278125301e-18], 'true,true': [0.022973704122000733, nan], 'true': [0.022973704122000733, nan]}, {'': [0.01438200194152001, 0.021368215524399582], 'true,true': [-1.850371707708594e-17, 0.0], 'true': [0.01438200194152001, nan]}, {'': [0.016880270032435876, 0.0], 'true,true': [0.0008576384305728342, 1.8885635624136393e-05], 'true,true,true': [0.0008576384305728342, nan], 'true': [0.016880270032435876, nan]}, {'': [0.012204807557604757, 3.2025664171879517e-18], 'false': [nan, 3.2025664171879517e-18], 'true,false,true': [1.5111622558645205e-05, nan], 'true': [0.0006687617229660751, 1.5111622558645205e-05], 'true,false': [1.5111622558645205e-05, nan]}, {'': [0.00918651262355958, 4.270088556250602e-18], 'true,true': [0.00918651262355958, nan], 'true': [0.00918651262355958, nan]}, {'': [0.008958068145789862, -1.6012832085939759e-18], 'true,true': [0.008958068145789862, nan], 'true': [0.008958068145789862, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;actor(A), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.3136916014290807;  // std dev = 0,464, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.2877361057467734;  // std dev = 0,450, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.27716724616424343;  // std dev = 0,168, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.2784280661994559;  // std dev = 0,137, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.09269127618926097;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.19342777344558956;  // std dev = 0,406, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.263291514301999;  // std dev = 1,83e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.17552046067547436;  // std dev = 0,394, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.18528834589480625;  // std dev = 0,157, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.1786464529001776;  // std dev = 0,124, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.2009294579376802;  // std dev = 0,059, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.2253960867855963;  // std dev = 0,006, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13034494142521727;  // std dev = 0,132, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.12701034363920294;  // std dev = 0,104, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11124083155388953;  // std dev = 0,133, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.11019670036395315;  // std dev = 0,105, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074663
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.151 seconds
Total inference time: 1.361 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.119386
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.54 seconds
Refined model CLL: -0.119386


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070943
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.708 seconds
Total inference time: 1.42 seconds
AUC ROC: 1.0
Total revision time: 3.708
Best scored revision CLL: -0.112112


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:43
{'parameter_15': {'Inference time': 1.42, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.339, 'Precision': [1.0, 0.5], 'CLL': -0.070943, 'AUC PR': 1.0, 'Recall': 1.0}, 'Inference time': 1.42, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 3.708, 'Precision': [1.0, 0.5], 'CLL': -0.070943, 'AUC PR': 1.0, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.6392070123615109;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.6067099387829186;  // std dev = 0,035, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), actor(B) )
%   | then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.2518798218647617;  // std dev = 0,279, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.4568599015350026;  // std dev = 0,037, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A), actor(B) )
%   | then return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.21145197332753166;  // std dev = 0,244, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.3475803224177277;  // std dev = 0,033, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.18094028064922613;  // std dev = 0,215, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.27345467283763997;  // std dev = 0,029, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.15739807176511753;  // std dev = 0,190, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.22260568378814735;  // std dev = 0,026, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.13884055509999216;  // std dev = 0,171, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.18647206599899077;  // std dev = 0,022, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.12392343531056657;  // std dev = 0,154, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.15982482293671663;  // std dev = 0,020, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.11172172771976574;  // std dev = 0,140, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.13951461537458795;  // std dev = 0,018, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A), actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.10158640413792014;  // std dev = 0,128, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.999214
   AUC PR    = 0.910741
   CLL	      = -0.069831
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.8 seconds
Total inference time: 1.574 seconds
AUC ROC: 0.999214


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:46
{'Inference time': 1.574, 'AUC ROC': 0.999214, 'F1': 0.966667, 'Learning time': 1.8, 'Precision': [0.935484, 0.5], 'CLL': -0.069831, 'AUC PR': 0.910741, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */


Results
   AUC ROC   = 0.972045
   AUC PR    = 0.229945
   CLL	      = -0.162829
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.659 seconds
Total inference time: 0.827 seconds
AUC ROC: 0.972045


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:07:48
{'Inference time': 0.827, 'AUC ROC': 0.972045, 'F1': nan, 'Learning time': 0.659, 'Precision': [nan, 0.5], 'CLL': -0.162829, 'AUC PR': 0.229945, 'Recall': 0.0}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.3869777068850071;  // std dev = 0,122, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.3136916014290807;  // std dev = 0,464, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2880269663384315;  // std dev = 0,633, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.2673727179611336;  // std dev = 1,49e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.1817393504099466;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.025066819897004128;  // std dev = 0,681, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.23208670853637345;  // std dev = 0,123, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1619125776163919;  // std dev = 0,006, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0832515394442473;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.19345394171298788;  // std dev = 0,024, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.14112924615447703;  // std dev = 0,007, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07711420094117509;  // std dev = 3,73e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.13877327929744196;  // std dev = 0,403, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07180203290305555;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.12077760593176817;  // std dev = 0,085, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06716135221694565;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071006
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.578 seconds
Total inference time: 1.625 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108974
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.707 seconds
Parameter learned model CLL: -0.108974


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 20], 'true,false,true': [0.0, 2, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,true,true,true': [7.3e-08, 0, 20], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 18, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, G)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-08, 18, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.122, 1, 16], 'false,true': [0.464, 1, 4], 'false,false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.633, 2, 20], 'false': [7.45e-09, 18, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true': [1.49e-08, 0, 16], 'false': [0.681, 19, 4], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.006, 2, 0], 'true,true,true,true': [0.123, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'false': [6.45e-09, 18, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false,true': 'actor(A)', 'false': 'director(B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.024, 0, 20], 'true,false,true,true': [0.007, 2, 0], 'false,false': [3.73e-09, 18, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.403, 2, 20], 'false': [0.0, 18, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.085, 2, 20], 'false': [0.0, 18, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.08264462809917356, -3.0839528461809902e-18], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.05899888532770057, 0.0], 'true,true': [2.6645352591003756e-16, nan], 'true,true,true': [2.6645352591003756e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true': [2.6645352591003756e-16, 0.0]}, {'': [0.03684300341868208, 1.5419764230904953e-17], 'true,true': [-2.6645352591003756e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.014919036813603417, 0.03871475951961044], 'true,true': [0.014919036813603417, nan], 'true': [0.014919036813603417, nan], 'false': [0.0431160163913135, -4.625929269271485e-18]}, {'': [0.01822304111967937, 3.0839528461809902e-18], 'true,true': [0.01822304111967937, nan], 'true': [0.01822304111967937, nan]}, {'': [0.011166873353995865, 0.02015073955309966], 'true,true': [1.3877787807814457e-17, 0.0], 'true': [0.011166873353995865, nan]}, {'': [0.01351945025516989, 2.3129646346357427e-18], 'true,true': [0.0007558840915793174, 3.1986901176821875e-05], 'true,true,true': [0.0007558840915793174, nan], 'true': [0.01351945025516989, nan]}, {'': [0.009789740860182578, 7.709882115452476e-19], 'false': [nan, 7.709882115452476e-19], 'true,false,true': [2.5521145369147846e-05, nan], 'true': [0.0005892619586134407, 2.5521145369147846e-05], 'true,false': [2.5521145369147846e-05, nan]}, {'': [0.0073764523125006394, -7.709882115452476e-19], 'true,true': [0.0073764523125006394, nan], 'true': [0.0073764523125006394, nan]}, {'': [0.007199752003859482, -7.709882115452476e-19], 'true,true': [0.007199752003859482, nan], 'true': [0.007199752003859482, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;actor(A), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.3433550250660033;  // std dev = 0,182, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.3136916014290807;  // std dev = 0,464, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.29161863038341435;  // std dev = 0,143, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.284736833570949;  // std dev = 0,126, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.09269127618926094;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.21083698704801584;  // std dev = 0,158, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.2620696371474141;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A), director(B) )
%   | then return 0.2812440614676579;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return -0.011620345118615228;  // std dev = 0,329, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.09088096223659611;  // std dev = 0,083, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.18871281407868448;  // std dev = 0,132, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.18941941758042283;  // std dev = 0,107, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07967974039805216;  // std dev = 0,010, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.1949905220062944;  // std dev = 0,066, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.21320775998614538;  // std dev = 0,040, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07402942983997429;  // std dev = 0,010, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13377946553166728;  // std dev = 0,113, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.1355941902082661;  // std dev = 0,089, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.06911244817530762;  // std dev = 0,009, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11516394670266664;  // std dev = 0,114, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.11796106045237281;  // std dev = 0,089, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.06479658210754419;  // std dev = 0,009, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075944
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.234 seconds
Total inference time: 1.585 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112873
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.542 seconds
Refined model CLL: -0.112873


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071006
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.061 seconds
Total inference time: 1.625 seconds
AUC ROC: 1.0
Total revision time: 4.061
Best scored revision CLL: -0.108974


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:56
{'Inference time': 1.625, 'AUC ROC': 1.0, 'parameter_20': {'Inference time': 1.625, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.578, 'Precision': [1.0, 0.5], 'CLL': -0.071006, 'AUC PR': 1.0, 'Recall': 1.0}, 'F1': 1.0, 'Learning time': 4.061, 'Precision': [1.0, 0.5], 'CLL': -0.071006, 'AUC PR': 1.0, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.6392070123615109;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.6526478931012827;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.49932275605826126;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.508738411682717;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.47043324524836194;  // std dev = 0,022, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.3153353654380982;  // std dev = 0,428, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3569115032025315;  // std dev = 0,020, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.26332872101364313;  // std dev = 0,374, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2797552208363879;  // std dev = 0,018, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.22304493409431503;  // std dev = 0,327, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.22698563539524344;  // std dev = 0,015, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.19168881862657713;  // std dev = 0,287, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1896352355291106;  // std dev = 0,014, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.16700974576725205;  // std dev = 0,254, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.16219220116833213;  // std dev = 0,012, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.1473133790968244;  // std dev = 0,226, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14134168966893923;  // std dev = 0,011, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.13136170142724357;  // std dev = 0,203, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.999214
   AUC PR    = 0.910741
   CLL	      = -0.072975
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.933 seconds
Total inference time: 1.659 seconds
AUC ROC: 0.999214


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:08:00
{'Inference time': 1.659, 'AUC ROC': 0.999214, 'F1': 0.966667, 'Learning time': 1.933, 'Precision': [0.935484, 0.5], 'CLL': -0.072975, 'AUC PR': 0.910741, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */


Results
   AUC ROC   = 0.972045
   AUC PR    = 0.229945
   CLL	      = -0.162827
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.711 seconds
Total inference time: 0.827 seconds
AUC ROC: 0.972045


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:08:01
{'Inference time': 0.827, 'AUC ROC': 0.972045, 'F1': nan, 'Learning time': 0.711, 'Precision': [nan, 0.5], 'CLL': -0.162827, 'AUC PR': 0.229945, 'Recall': 0.0}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.3901920097558811;  // std dev = 0,116, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.3526248449525416;  // std dev = 0,486, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.29421475169801664;  // std dev = 0,640, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.26553502706353344;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.18314172245268484;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.007301832778336052;  // std dev = 0,847, 31,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.23310290188161467;  // std dev = 0,129, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.16691947159736925;  // std dev = 0,010, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.084617452721631;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.19416645354772982;  // std dev = 0,023, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.14499183137598898;  // std dev = 0,012, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0782894073275579;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.14390926617784752;  // std dev = 0,412, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07282328806378537;  // std dev = 3,73e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.12515949276696026;  // std dev = 0,078, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0680566445961641;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07184
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.711 seconds
Total inference time: 1.761 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108149
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.744 seconds
Parameter learned model CLL: -0.108149


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [1.33e-07, 0, 25], 'true,false,true': [0.0, 2, 0], 'false': [1.49e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,true,true,true': [0.0, 0, 25], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 23, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, G)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 23, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.116, 1, 18], 'false,true': [0.486, 1, 7], 'false,false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.64, 2, 25], 'false': [1.18e-08, 23, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true': [0.0, 0, 18], 'false': [0.847, 24, 7], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.01, 2, 0], 'true,true,true,true': [0.129, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'false': [7.45e-09, 23, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false,true': 'actor(A)', 'false': 'director(B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.023, 0, 25], 'true,false,true,true': [0.012, 2, 0], 'false,false': [0.0, 23, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.412, 2, 25], 'false': [3.73e-09, 23, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.078, 2, 25], 'false': [0.0, 23, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.06858710562414343, 9.654113257610057e-18], 'true,true': [7.105427357601002e-16, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.04896340963409988, -2.413528314402514e-18], 'true,true': [-7.105427357601002e-17, nan], 'true,true,true': [-7.105427357601002e-17, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.030576155100552255, 4.827056628805028e-18], 'true,true': [-2.842170943040401e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.01343643170089424, 0.047109070979062556], 'true,true': [0.01343643170089424, nan], 'true': [0.01343643170089424, nan], 'false': [0.02947383932999953, -2.413528314402514e-18]}, {'': [0.015157242110632116, 6.033820786006285e-18], 'true,true': [0.015157242110632116, nan], 'true': [0.015157242110632116, nan]}, {'': [0.010037658892010826, 0.02316782498778807], 'true,true': [0.0, 0.0], 'true': [0.010037658892010826, nan]}, {'': [0.011595422743488813, 2.413528314402514e-18], 'true,true': [0.0006624983565098841, 9.225602168867406e-05], 'true,true,true': [0.0006624983565098841, nan], 'true': [0.011595422743488813, nan]}, {'': [0.008369599231677346, -1.206764157201257e-18], 'false': [nan, -1.206764157201257e-18], 'true,false,true': [7.331144692611369e-05, nan], 'true': [0.0005126843113168223, 7.331144692611369e-05], 'true,false': [7.331144692611369e-05, nan]}, {'': [0.0062894861646506615, 6.033820786006285e-19], 'true,true': [0.0062894861646506615, nan], 'true': [0.0062894861646506615, nan]}, {'': [0.006145954391648175, -2.413528314402514e-18], 'true,true': [0.006145954391648175, nan], 'true': [0.006145954391648175, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;actor(A), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.3433550250660033;  // std dev = 0,182, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.3526248449525416;  // std dev = 0,172, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.29961766436029474;  // std dev = 0,126, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.2889252963005183;  // std dev = 0,119, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then return 0.24211916104173895;  // std dev = 0,099, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A), director(B) )
%   | then return 0.2718550148263954;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( female(A) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.034535740124782145;  // std dev = 0,293, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.09027544232553554;  // std dev = 0,089, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.19103176576238795;  // std dev = 0,117, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0.19361051036042703;  // std dev = 0,100, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07929889956404292;  // std dev = 0,013, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.19139642005994476;  // std dev = 0,045, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.22072504144551533;  // std dev = 0,040, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07369950270036817;  // std dev = 0,012, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13634859700970214;  // std dev = 0,100, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.13892812916822855;  // std dev = 0,084, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.06882400855040309;  // std dev = 0,011, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11796326899930591;  // std dev = 0,102, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.12084289914616735;  // std dev = 0,084, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.0645423699172295;  // std dev = 0,011, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07621
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.423 seconds
Total inference time: 1.392 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109567
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.53 seconds
Refined model CLL: -0.109567


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07184
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.408 seconds
Total inference time: 1.761 seconds
AUC ROC: 1.0
Total revision time: 4.408
Best scored revision CLL: -0.108149


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:08:10
{'Inference time': 1.761, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 4.408, 'Precision': [1.0, 0.5], 'CLL': -0.07184, 'AUC PR': 1.0, 'parameter_25': {'Inference time': 1.761, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.711, 'Precision': [1.0, 0.5], 'CLL': -0.07184, 'AUC PR': 1.0, 'Recall': 1.0}, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6622329172201352;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.5154428111118985;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.3875647182006322;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.36711286229599494;  // std dev = 0,009, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.30874123318690155;  // std dev = 0,592, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.2866457602237288;  // std dev = 0,008, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.2653225234820444;  // std dev = 0,535, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.23176468404847855;  // std dev = 0,007, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.22967205404588925;  // std dev = 0,480, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.19307750184291855;  // std dev = 0,006, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.20044334640984113;  // std dev = 0,429, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16476239886813066;  // std dev = 0,005, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.17645434083584782;  // std dev = 0,384, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.14332142464115377;  // std dev = 0,005, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202619;  // std dev = 6,97e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.15668401223431966;  // std dev = 0,346, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.999214
   AUC PR    = 0.910741
   CLL	      = -0.079795
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.898 seconds
Total inference time: 1.366 seconds
AUC ROC: 0.999214


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:08:13
{'Inference time': 1.366, 'AUC ROC': 0.999214, 'F1': 0.966667, 'Learning time': 1.898, 'Precision': [0.935484, 0.5], 'CLL': -0.079795, 'AUC PR': 0.910741, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */


Results
   AUC ROC   = 0.972045
   AUC PR    = 0.229945
   CLL	      = -0.162836
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.69 seconds
Total inference time: 0.826 seconds
AUC ROC: 0.972045


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:08:15
{'Inference time': 0.826, 'AUC ROC': 0.972045, 'F1': nan, 'Learning time': 0.69, 'Precision': [nan, 0.5], 'CLL': -0.162836, 'AUC PR': 0.229945, 'Recall': 0.0}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.4175135841583099;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109796
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.086 seconds
Total inference time: 1.531 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.571 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [5.27e-09, 0, 5], 'false,true': [0.0, 0, 0], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'false': 'director(B)'}, {'true,true': [0.0, 0, 5], 'false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [1.86e-09, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true,true': [4.4408920985006264e-17, nan], 'false': [nan, 0.0], 'true': [4.4408920985006264e-17, nan]}, {'': [-2.2204460492503132e-17, 0.0], 'true,true': [-2.2204460492503132e-17, nan], 'true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true,true': [-5.551115123125783e-18, nan], 'true,true,true': [-5.551115123125783e-18, nan], 'true': [-5.551115123125783e-18, nan]}, {'': [0.0, -6.938893903907229e-19], 'false': [nan, -6.938893903907229e-19], 'true': [0.0, nan]}, {'': [0.0, 6.938893903907229e-19], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true,true': [0.0, nan], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.9283
   AUC PR    = 0.265885
   CLL	      = -0.35157
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 0.614 seconds
Total inference time: 1.192 seconds
AUC ROC: 0.9283


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.483 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109796
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.754 seconds
Total inference time: 1.531 seconds
AUC ROC: 1.0
Total revision time: 2.754
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:21
{'Inference time': 1.531, 'AUC ROC': 1.0, 'parameter_5': {'Inference time': 1.531, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.086, 'Precision': [1.0, 0.5], 'CLL': -0.109796, 'AUC PR': 1.0, 'Recall': 1.0}, 'F1': 1.0, 'Learning time': 2.754, 'Precision': [1.0, 0.5], 'CLL': -0.109796, 'AUC PR': 1.0, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.575892
   Precision = 0.162113 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.278997


Total learning time: 0.973 seconds
Total inference time: 1.148 seconds
AUC ROC: 0.870167


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:23
{'Inference time': 1.148, 'AUC ROC': 0.870167, 'F1': 0.278997, 'Learning time': 0.973, 'Precision': [0.162113, 0.5], 'CLL': -0.575892, 'AUC PR': 0.162113, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.236693
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.477 seconds
Total inference time: 0.884 seconds
AUC ROC: 0.870167


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:08:25
{'Inference time': 0.884, 'AUC ROC': 0.870167, 'F1': nan, 'Learning time': 0.477, 'Precision': [nan, 0.5], 'CLL': -0.236693, 'AUC PR': 0.162113, 'Recall': 0.0}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.41751358415830986;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05424320648313448;  // std dev = 0,325, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.21534372717508238;  // std dev = 0,053, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08105168119477504;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.18123316273164222;  // std dev = 0,015, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07521611459578792;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.1559083797107362;  // std dev = 0,042, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07014848583491276;  // std dev = 4,56e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.13649606243329881;  // std dev = 0,012, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06570856259145662;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.121144
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.368 seconds
Total inference time: 1.362 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096532
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.665 seconds
Parameter learned model CLL: -0.096532


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 10], 'false': [0.0, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [2.98e-08, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 10], 'false': [0.0, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [1.05e-08, 0, 9], 'false,true': [0.0, 0, 1], 'false,false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 10], 'false': [0.0, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [1.83e-08, 0, 9], 'false': [0.325, 10, 1], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.053, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'false': 'director(B)'}, {'true,true': [0.015, 0, 10], 'false,false': [0.0, 10, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.042, 0, 10], 'false': [4.56e-09, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.012, 0, 10], 'false': [0.0, 10, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true,true': [8.881784197001253e-17, nan], 'true,true,true': [8.881784197001253e-17, nan], 'true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true,true': [-1.7763568394002506e-16, nan], 'true': [-1.7763568394002506e-16, nan]}, {'': [1.2335811384723962e-16, 0.022270669623612346], 'true,true': [1.2335811384723962e-16, nan], 'true': [1.2335811384723962e-16, nan], 'false': [0.0, 1.3877787807814458e-18]}, {'': [-4.4408920985006264e-17, 0.0], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, nan]}, {'': [3.700743415417188e-17, 0.009573792011243695], 'true,true': [3.700743415417188e-17, nan], 'true': [3.700743415417188e-17, nan]}, {'': [0.00028083172458117647, 1.3877787807814458e-18], 'true,true': [0.00028083172458117647, nan], 'true,true,true': [0.00028083172458117647, nan], 'true': [0.00028083172458117647, nan]}, {'': [0.00022045703465127796, 0.0], 'false': [nan, 0.0], 'true': [0.00022045703465127796, nan]}, {'': [0.00017570989661177538, 2.0816681711721684e-18], 'true,true': [0.00017570989661177538, nan], 'true': [0.00017570989661177538, nan]}, {'': [0.00014238737959473003, -2.0816681711721684e-18], 'true,true': [0.00014238737959473003, nan], 'true': [0.00014238737959473003, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( female(A) )
%   | then return -9.550289892529262E-5;  // std dev = 0,295, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2143009834907439;  // std dev = 0,043, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08069692110289253;  // std dev = 0,009, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then return 0.1804547352955012;  // std dev = 0,038, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07491002267127793;  // std dev = 0,009, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1553087413291266;  // std dev = 0,034, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06988186266937266;  // std dev = 0,008, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13602153056261126;  // std dev = 0,031, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06547436089580586;  // std dev = 0,008, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.93234
   AUC PR    = 0.271829
   CLL	      = -0.387529
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 0.767 seconds
Total inference time: 1.164 seconds
AUC ROC: 0.93234


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096191
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.492 seconds
Refined model CLL: -0.096191


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.93234
   AUC PR    = 0.271829
   CLL	      = -0.387529
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 3.2920000000000003 seconds
Total inference time: 1.164 seconds
AUC ROC: 0.93234
Total revision time: 3.2920000000000003
Best scored revision CLL: -0.096191


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:31
{'Inference time': 1.164, 'AUC ROC': 0.93234, 'F1': 0.37395, 'Learning time': 3.2920000000000003, 'parameter_10': {'Inference time': 1.362, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.368, 'Precision': [1.0, 0.5], 'CLL': -0.121144, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [0.229974, 0.5], 'CLL': -0.387529, 'AUC PR': 0.271829, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.575892
   Precision = 0.162113 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.278997


Total learning time: 1.083 seconds
Total inference time: 1.115 seconds
AUC ROC: 0.870167


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:34
{'Inference time': 1.115, 'AUC ROC': 0.870167, 'F1': 0.278997, 'Learning time': 1.083, 'Precision': [0.162113, 0.5], 'CLL': -0.575892, 'AUC PR': 0.162113, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.236693
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.507 seconds
Total inference time: 0.863 seconds
AUC ROC: 0.870167


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:08:35
{'Inference time': 0.863, 'AUC ROC': 0.870167, 'F1': nan, 'Learning time': 0.507, 'Precision': [nan, 0.5], 'CLL': -0.236693, 'AUC PR': 0.162113, 'Recall': 0.0}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.4175135841583098;  // std dev = 1,29e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06391243926602898;  // std dev = 0,330, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.21360774988459025;  // std dev = 0,056, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0803344056444683;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.17995213770577057;  // std dev = 0,013, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07459579154185704;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.15493149743342774;  // std dev = 0,044, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06960697518214011;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.13572984409531194;  // std dev = 0,010, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06523193445892075;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.120517
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.35 seconds
Total inference time: 1.382 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095947
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.701 seconds
Parameter learned model CLL: -0.095947


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 15], 'false': [0.0, 15, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [5.16e-08, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'false': [7.45e-09, 15, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 15], 'false': [1.39e-08, 15, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [1.29e-08, 0, 14], 'false,true': [0.0, 0, 1], 'false,false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 15], 'false': [7.45e-09, 15, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [2.11e-08, 0, 14], 'false': [0.33, 15, 1], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.056, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'false': [3.73e-09, 15, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'false': 'director(B)'}, {'true,true': [0.013, 0, 15], 'false,false': [0.0, 15, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.044, 0, 15], 'false': [7.45e-09, 15, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.01, 0, 15], 'false': [5.27e-09, 15, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [-2.3684757858670006e-16, -1.4802973661668754e-17], 'true,true': [-2.3684757858670006e-16, nan], 'true': [-2.3684757858670006e-16, nan]}, {'': [1.7763568394002506e-16, 3.7007434154171884e-18], 'true,true': [1.7763568394002506e-16, nan], 'true,true,true': [1.7763568394002506e-16, nan], 'true': [1.7763568394002506e-16, nan]}, {'': [-2.3684757858670006e-16, 1.295260195396016e-17], 'true,true': [-2.3684757858670006e-16, nan], 'true': [-2.3684757858670006e-16, nan]}, {'': [1.2688263138573217e-16, 0.01578955678392829], 'true,true': [1.2688263138573217e-16, nan], 'true': [1.2688263138573217e-16, nan], 'false': [0.0, -5.551115123125783e-18]}, {'': [-1.4802973661668754e-17, 3.7007434154171884e-18], 'true,true': [-1.4802973661668754e-17, nan], 'true': [-1.4802973661668754e-17, nan]}, {'': [3.172065784643304e-17, 0.006787668945471605], 'true,true': [3.172065784643304e-17, nan], 'true': [3.172065784643304e-17, nan]}, {'': [0.0002075186923878869, 9.251858538542971e-19], 'true,true': [0.0002075186923878869, nan], 'true,true,true': [0.0002075186923878869, nan], 'true': [0.0002075186923878869, nan]}, {'': [0.00016336878437978042, -9.251858538542971e-19], 'false': [nan, -9.251858538542971e-19], 'true': [0.00016336878437978042, nan]}, {'': [0.00013052745522343923, 3.7007434154171884e-18], 'true,true': [0.00013052745522343923, nan], 'true': [0.00013052745522343923, nan]}, {'': [0.00010599210494149913, 1.8503717077085942e-18], 'true,true': [0.00010599210494149913, nan], 'true': [0.00010599210494149913, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( female(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.028267579930898568;  // std dev = 0,278, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.21242966812019318;  // std dev = 0,039, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07992833177702632;  // std dev = 0,011, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then return 0.17907142257189565;  // std dev = 0,034, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07424491276870952;  // std dev = 0,011, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.154252179980659;  // std dev = 0,031, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06930094227937472;  // std dev = 0,010, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13519164233216316;  // std dev = 0,027, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06496280173591365;  // std dev = 0,009, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.936691
   AUC PR    = 0.279983
   CLL	      = -0.383864
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 0.844 seconds
Total inference time: 1.422 seconds
AUC ROC: 0.936691


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095558
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.531 seconds
Refined model CLL: -0.095558


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.936691
   AUC PR    = 0.279983
   CLL	      = -0.383864
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 3.426 seconds
Total inference time: 1.422 seconds
AUC ROC: 0.936691
Total revision time: 3.426
Best scored revision CLL: -0.095558


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:42
{'parameter_15': {'Inference time': 1.382, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.35, 'Precision': [1.0, 0.5], 'CLL': -0.120517, 'AUC PR': 1.0, 'Recall': 1.0}, 'Inference time': 1.422, 'AUC ROC': 0.936691, 'F1': 0.37395, 'Learning time': 3.426, 'Precision': [0.229974, 0.5], 'CLL': -0.383864, 'AUC PR': 0.279983, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.575892
   Precision = 0.162113 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.278997


Total learning time: 2.097 seconds
Total inference time: 1.865 seconds
AUC ROC: 0.870167


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:46
{'Inference time': 1.865, 'AUC ROC': 0.870167, 'F1': 0.278997, 'Learning time': 2.097, 'Precision': [0.162113, 0.5], 'CLL': -0.575892, 'AUC PR': 0.162113, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.236693
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.524 seconds
Total inference time: 1.078 seconds
AUC ROC: 0.870167


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:08:48
{'Inference time': 1.078, 'AUC ROC': 0.870167, 'F1': nan, 'Learning time': 0.524, 'Precision': [nan, 0.5], 'CLL': -0.236693, 'AUC PR': 0.162113, 'Recall': 0.0}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.4175135841583098;  // std dev = 1,29e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.25517224256948945;  // std dev = 1,49e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05424320648313447;  // std dev = 0,459, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.21534372717508238;  // std dev = 0,075, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08105168119477504;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.18123316273164228;  // std dev = 0,015, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07521611459578792;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.15590837971073626;  // std dev = 0,059, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07014848583491277;  // std dev = 5,27e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.1364960624332988;  // std dev = 0,012, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06570856259145663;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.121144
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.874 seconds
Total inference time: 1.49 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096532
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.739 seconds
Parameter learned model CLL: -0.096532


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 20], 'false': [7.45e-09, 20, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [7.3e-08, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 20, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 20], 'false': [1.49e-08, 20, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [1.29e-08, 0, 18], 'false,true': [0.0, 0, 2], 'false,false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [2.11e-08, 0, 20], 'false': [1.18e-08, 20, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [1.49e-08, 0, 18], 'false': [0.459, 20, 2], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.075, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 20, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'false': 'director(B)'}, {'true,true': [0.015, 0, 20], 'false,false': [0.0, 20, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.059, 0, 20], 'false': [5.27e-09, 20, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.012, 0, 20], 'false': [0.0, 20, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [-8.881784197001253e-17, 2.7755575615628915e-18], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, nan]}, {'': [2.6645352591003756e-16, 0.0], 'true,true': [2.6645352591003756e-16, nan], 'true,true,true': [2.6645352591003756e-16, nan], 'true': [2.6645352591003756e-16, nan]}, {'': [-2.6645352591003756e-16, 1.1102230246251566e-17], 'true,true': [-2.6645352591003756e-16, nan], 'true': [-2.6645352591003756e-16, nan]}, {'': [1.7270135938613546e-16, 0.02227066962361236], 'true,true': [1.7270135938613546e-16, nan], 'true': [1.7270135938613546e-16, nan], 'false': [0.0, -1.3877787807814458e-18]}, {'': [2.2204460492503132e-17, 6.938893903907228e-18], 'true,true': [2.2204460492503132e-17, nan], 'true': [2.2204460492503132e-17, nan]}, {'': [1.2335811384723961e-17, 0.009573792011243691], 'true,true': [1.2335811384723961e-17, nan], 'true': [1.2335811384723961e-17, nan]}, {'': [0.00028083172458117647, 0.0], 'true,true': [0.00028083172458117647, nan], 'true,true,true': [0.00028083172458117647, nan], 'true': [0.00028083172458117647, nan]}, {'': [0.00022045703465127243, -2.7755575615628915e-18], 'false': [nan, -2.7755575615628915e-18], 'true': [0.00022045703465127243, nan]}, {'': [0.00017570989661176982, 1.3877787807814458e-18], 'true,true': [0.00017570989661176982, nan], 'true': [0.00017570989661176982, nan]}, {'': [0.00014238737959472724, 0.0], 'true,true': [0.00014238737959472724, nan], 'true': [0.00014238737959472724, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.4175135841583098;  // std dev = 5,58e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.028267579930898568;  // std dev = 0,278, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.0365623236801274;  // std dev = 0,119, 7,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.21438295583728464;  // std dev = 0,063, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08072092718653315;  // std dev = 0,012, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then return 0.1805165125477795;  // std dev = 0,055, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0749307083554025;  // std dev = 0,011, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15535672369623493;  // std dev = 0,049, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0698998586800342;  // std dev = 0,011, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13605977690497445;  // std dev = 0,045, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06549014990285427;  // std dev = 0,010, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.93809
   AUC PR    = 0.282432
   CLL	      = -0.384973
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 1.006 seconds
Total inference time: 1.279 seconds
AUC ROC: 0.93809


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096217
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.533 seconds
Refined model CLL: -0.096217


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.93809
   AUC PR    = 0.282432
   CLL	      = -0.384973
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 4.152 seconds
Total inference time: 1.279 seconds
AUC ROC: 0.93809
Total revision time: 4.152
Best scored revision CLL: -0.096217


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:56
{'Inference time': 1.279, 'AUC ROC': 0.93809, 'parameter_20': {'Inference time': 1.49, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.874, 'Precision': [1.0, 0.5], 'CLL': -0.121144, 'AUC PR': 1.0, 'Recall': 1.0}, 'F1': 0.37395, 'Learning time': 4.152, 'Precision': [0.229974, 0.5], 'CLL': -0.384973, 'AUC PR': 0.282432, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.575892
   Precision = 0.162113 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.278997


Total learning time: 1.188 seconds
Total inference time: 1.199 seconds
AUC ROC: 0.870167


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:58
{'Inference time': 1.199, 'AUC ROC': 0.870167, 'F1': 0.278997, 'Learning time': 1.188, 'Precision': [0.162113, 0.5], 'CLL': -0.575892, 'AUC PR': 0.162113, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.236693
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.566 seconds
Total inference time: 0.823 seconds
AUC ROC: 0.870167


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:09:00
{'Inference time': 0.823, 'AUC ROC': 0.870167, 'F1': nan, 'Learning time': 0.566, 'Precision': [nan, 0.5], 'CLL': -0.236693, 'AUC PR': 0.162113, 'Recall': 0.0}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.4175135841583099;  // std dev = 9,13e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.2551722425694895;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04871793060719476;  // std dev = 0,557, 28,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.2163317625348677;  // std dev = 0,089, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08146417026662939;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.18196042177272403;  // std dev = 0,016, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07557252643653038;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.1564617260824073;  // std dev = 0,070, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0704593681425214;  // std dev = 7,45e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.13692922306815272;  // std dev = 0,013, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06598200306184804;  // std dev = 3,73e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.121505
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.673 seconds
Total inference time: 1.371 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096863
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.779 seconds
Parameter learned model CLL: -0.096863


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [1.33e-07, 0, 25], 'false': [1.83e-08, 25, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 25, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 25], 'false': [0.0, 25, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [9.13e-09, 0, 22], 'false,true': [0.0, 0, 3], 'false,false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [2.11e-08, 0, 25], 'false': [9.13e-09, 25, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 22], 'false': [0.557, 25, 3], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.089, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 25, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'false': 'director(B)'}, {'true,true': [0.016, 0, 25], 'false,false': [9.13e-09, 25, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.07, 0, 25], 'false': [7.45e-09, 25, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.013, 0, 25], 'false': [3.73e-09, 25, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [7.105427357601002e-16, 1.3322676295501878e-17], 'true,true': [7.105427357601002e-16, nan], 'true': [7.105427357601002e-16, nan]}, {'': [-7.105427357601002e-17, -4.440892098500626e-18], 'true,true': [-7.105427357601002e-17, nan], 'true,true,true': [-7.105427357601002e-17, nan], 'true': [-7.105427357601002e-17, nan]}, {'': [-2.842170943040401e-16, 0.0], 'true,true': [-2.842170943040401e-16, nan], 'true': [-2.842170943040401e-16, nan]}, {'': [6.055761952500853e-17, 0.025778868218658435], 'true,true': [6.055761952500853e-17, nan], 'true': [6.055761952500853e-17, nan], 'false': [-3.700743415417188e-17, -2.220446049250313e-18]}, {'': [1.7763568394002505e-17, 3.3306690738754695e-18], 'true,true': [1.7763568394002505e-17, nan], 'true': [1.7763568394002505e-17, nan]}, {'': [0.0, 0.011081908482402602], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.00031693267960975825, -6.661338147750939e-18], 'true,true': [0.00031693267960975825, nan], 'true,true,true': [0.00031693267960975825, nan], 'true': [0.00031693267960975825, nan]}, {'': [0.0002483932369493402, 3.3306690738754695e-18], 'false': [nan, 3.3306690738754695e-18], 'true': [0.0002483932369493402, nan]}, {'': [0.000197700424522842, 2.220446049250313e-18], 'true,true': [0.000197700424522842, nan], 'true': [0.000197700424522842, nan]}, {'': [0.00016001959490063777, 5.551115123125783e-19], 'true,true': [0.00016001959490063777, nan], 'true': [0.00016001959490063777, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.4175135841583099;  // std dev = 3,65e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.2551722425694895;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253576;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1527438580936709;  // std dev = 2,79e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.91589
   AUC PR    = 0.229974
   CLL	      = -0.406217
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 0.811 seconds
Total inference time: 1.254 seconds
AUC ROC: 0.91589


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.549 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.91589
   AUC PR    = 0.229974
   CLL	      = -0.406217
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 3.812 seconds
Total inference time: 1.254 seconds
AUC ROC: 0.91589
Total revision time: 3.812
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:09:07
{'Inference time': 1.254, 'AUC ROC': 0.91589, 'F1': 0.37395, 'Learning time': 3.812, 'Precision': [0.229974, 0.5], 'CLL': -0.406217, 'AUC PR': 0.229974, 'parameter_25': {'Inference time': 1.371, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.673, 'Precision': [1.0, 0.5], 'CLL': -0.121505, 'AUC PR': 1.0, 'Recall': 1.0}, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B) )
%   then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.575892
   Precision = 0.162113 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.278997


Total learning time: 1.245 seconds
Total inference time: 1.206 seconds
AUC ROC: 0.870167


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:09:10
{'Inference time': 1.206, 'AUC ROC': 0.870167, 'F1': 0.278997, 'Learning time': 1.245, 'Precision': [0.162113, 0.5], 'CLL': -0.575892, 'AUC PR': 0.162113, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.236693
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.582 seconds
Total inference time: 0.838 seconds
AUC ROC: 0.870167


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:09:11
{'Inference time': 0.838, 'AUC ROC': 0.870167, 'F1': nan, 'Learning time': 0.582, 'Precision': [nan, 0.5], 'CLL': -0.236693, 'AUC PR': 0.162113, 'Recall': 0.0}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.4175135841583099;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2518113266019146;  // std dev = 0,377, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.2684867646209801;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0913779616959631;  // std dev = 0,028, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.21912025742526567;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.10709393425774907;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07832847826678022;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.18393362768251786;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.09727561181664848;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07285720748245594;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.11674884308720795;  // std dev = 0,225, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06808635462542037;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.10266580944099095;  // std dev = 0,090, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06389122290381148;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072246
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.149 seconds
Total inference time: 1.441 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106447
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.609 seconds
Parameter learned model CLL: -0.106447


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'true,false,true': [0.0, 1, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,true,true,true': [0.0, 0, 5], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, G)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [5.27e-09, 0, 5], 'false,true': [0.0, 1, 0], 'false,false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.377, 1, 5], 'false': [0.0, 4, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.028, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false,true': 'actor(A)', 'false': 'director(B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'false,false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.225, 1, 5], 'false': [0.0, 4, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.09, 1, 5], 'false': [0.0, 4, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.09915090450905224, 0.0], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true': [0.0, 0.0]}, {'': [0.061916714078618984, 0.0], 'true,true': [-4.4408920985006264e-17, nan], 'true,false,true': [0.0, nan], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true,true': [4.4408920985006264e-17, nan], 'false': [0.0, 0.0], 'true': [4.4408920985006264e-17, nan]}, {'': [0.02373640866597888, 0.0], 'true,true': [0.02373640866597888, nan], 'true': [0.02373640866597888, nan]}, {'': [0.0, 0.00015342341565497823], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.014779958174361474, 0.0], 'true,true': [-5.551115123125783e-18, 0.0], 'true,true,true': [-5.551115123125783e-18, nan], 'true': [0.014779958174361474, nan]}, {'': [0.010983143941624925, 0.0], 'true,false,true': [0.0, nan], 'false': [nan, 0.0], 'true': [-5.551115123125783e-18, 0.0], 'true,false': [0.0, nan]}, {'': [0.008471603856740008, 0.0], 'true,true': [0.008471603856740008, nan], 'true': [0.008471603856740008, nan]}, {'': [0.008133745327641544, 0.0], 'true,true': [0.008133745327641544, nan], 'true': [0.008133745327641544, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;actor(A), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( director(B), movie(D, A) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2518113266019146;  // std dev = 0,377, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.2684867646209801;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0913779616959631;  // std dev = 0,028, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.16475122547809654;  // std dev = 0,298, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07832847826678022;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.19223514096130456;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1238980060062569;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07285720748245594;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.11826752718283572;  // std dev = 0,251, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06808635462542037;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.10323993804117138;  // std dev = 0,248, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06389122290381148;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079243
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.744 seconds
Total inference time: 0.984 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.11238
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.469 seconds
Refined model CLL: -0.11238


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072246
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.9709999999999996 seconds
Total inference time: 1.441 seconds
AUC ROC: 1.0
Total revision time: 2.9709999999999996
Best scored revision CLL: -0.106447


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:17
{'Inference time': 1.441, 'AUC ROC': 1.0, 'parameter_5': {'Inference time': 1.441, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.149, 'Precision': [1.0, 0.5], 'CLL': -0.072246, 'AUC PR': 1.0, 'Recall': 1.0}, 'F1': 1.0, 'Learning time': 2.9709999999999996, 'Precision': [1.0, 0.5], 'CLL': -0.072246, 'AUC PR': 1.0, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.41642853892569953;  // std dev = 0,334, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.19890208353793024;  // std dev = 0,212, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12747659482650647;  // std dev = 0,067, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.3844334334677746;  // std dev = 0,779, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.26661161944434675;  // std dev = 0,260, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.19455218326305354;  // std dev = 0,272, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12529111250474018;  // std dev = 0,111, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.24435911290272652;  // std dev = 0,673, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.17667315962243427;  // std dev = 0,215, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.18428532830377678;  // std dev = 0,299, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.14319852135366565;  // std dev = 0,210, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.1628671932017418;  // std dev = 0,271, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12802581381259773;  // std dev = 0,167, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.14908789676106404;  // std dev = 0,543, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.10365242961323504;  // std dev = 0,186, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.1533364308462902;  // std dev = 0,279, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.998942
   AUC PR    = 0.918367
   CLL	      = -0.123781
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 1.243 seconds
Total inference time: 1.225 seconds
AUC ROC: 0.998942


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:20
{'Inference time': 1.225, 'AUC ROC': 0.998942, 'F1': 0.957447, 'Learning time': 1.243, 'Precision': [0.918367, 0.5], 'CLL': -0.123781, 'AUC PR': 0.918367, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */


Results
   AUC ROC   = 0.965362
   AUC PR    = 0.255682
   CLL	      = -0.173549
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.859 seconds
Total inference time: 1.195 seconds
AUC ROC: 0.965362


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:09:22
{'Inference time': 1.195, 'AUC ROC': 0.965362, 'F1': nan, 'Learning time': 0.859, 'Precision': [nan, 0.5], 'CLL': -0.173549, 'AUC PR': 0.255682, 'Recall': 0.0}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.41751358415830986;  // std dev = 1,18e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.283129745037476;  // std dev = 0,394, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.2623805494389356;  // std dev = 2,11e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0886067559893122;  // std dev = 0,032, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.21483684410213538;  // std dev = 1,67e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11039767903901428;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0785287741997396;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.18081293041295368;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.10001273358173267;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07303106077669612;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.13310996517892057;  // std dev = 0,235, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06823860686141751;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.11687186938046192;  // std dev = 0,070, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0640256142126354;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07284
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.872 seconds
Total inference time: 2.412 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101089
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.788 seconds
Parameter learned model CLL: -0.101089


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 10], 'true,false,true': [0.0, 1, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,true,true,true': [2.98e-08, 0, 10], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, G)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [1.18e-08, 0, 10], 'false,true': [0.0, 1, 0], 'false,false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.394, 1, 10], 'false': [0.0, 9, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [2.11e-08, 0, 10], 'false': [0.032, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true,true': [1.67e-08, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false,true': 'actor(A)', 'false': 'director(B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'false,false': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.235, 1, 10], 'false': [2.63e-09, 9, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.07, 1, 10], 'false': [0.0, 9, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.058998885327700486, 0.0], 'true,true': [8.881784197001253e-17, nan], 'true,true,true': [8.881784197001253e-17, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true': [8.881784197001253e-17, 0.0]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true,true': [-1.7763568394002506e-16, nan], 'true,false,true': [0.0, nan], 'true': [-1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true,true': [1.3322676295501878e-16, nan], 'false': [0.0, 3.0839528461809902e-18], 'true': [1.3322676295501878e-16, nan]}, {'': [0.014124143999590711, 0.0], 'true,true': [0.014124143999590711, nan], 'true': [0.014124143999590711, nan]}, {'': [4.4408920985006264e-17, 0.00010539103939817413], 'true,true': [4.4408920985006264e-17, nan], 'true': [4.4408920985006264e-17, nan]}, {'': [0.008741941739078617, 3.0839528461809902e-18], 'true,true': [2.7755575615628914e-17, 0.0], 'true,true,true': [2.7755575615628914e-17, nan], 'true': [0.008741941739078617, nan]}, {'': [0.006517607732070774, 0.0], 'true,false,true': [0.0, nan], 'false': [nan, 0.0], 'true': [-1.1102230246251566e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.0050388457114292524, 7.709882115452476e-19], 'true,true': [0.0050388457114292524, nan], 'true': [0.0050388457114292524, nan]}, {'': [0.004835749626122551, 0.0], 'true,true': [0.004835749626122551, nan], 'true': [0.004835749626122551, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;actor(A), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( director(B), movie(D, A) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2616542581102339;  // std dev = 0,145, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.2665580076724336;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( female(A) )
%   | then return -0.09158082116609766;  // std dev = 0,029, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17122790605095872;  // std dev = 0,114, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A) )
%   | then return -0.07831383445981802;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.19001040931512836;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.17709649774527736;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.12565806641132007;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( female(A) )
%   | then return -0.07284449471815412;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12319139358217356;  // std dev = 0,096, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( female(A) )
%   | then return -0.06807521970474836;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.10757064481759993;  // std dev = 0,095, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.13400703000801117;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( female(A) )
%   | then return -0.06388139290194882;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081382
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.297 seconds
Total inference time: 1.108 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103762
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.517 seconds
Refined model CLL: -0.103762


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07284
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.474 seconds
Total inference time: 2.412 seconds
AUC ROC: 1.0
Total revision time: 4.474
Best scored revision CLL: -0.101089


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:31
{'Inference time': 2.412, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 4.474, 'parameter_10': {'Inference time': 2.412, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.872, 'Precision': [1.0, 0.5], 'CLL': -0.07284, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [1.0, 0.5], 'CLL': -0.07284, 'AUC PR': 1.0, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.3584548159137827;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.3758477125459624;  // std dev = 0,142, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( female(A), actor(B) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.2575925320806725;  // std dev = 0,404, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2931754469744774;  // std dev = 0,125, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( female(A), actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.2234167783233243;  // std dev = 0,368, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.23665032642175374;  // std dev = 0,108, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( female(A), actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.19563116837870667;  // std dev = 0,334, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1968104100190319;  // std dev = 0,094, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.17285764086581842;  // std dev = 0,302, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1676854312847627;  // std dev = 0,083, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.15404306015675734;  // std dev = 0,275, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14566367993035953;  // std dev = 0,074, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A), actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.13837013563252845;  // std dev = 0,251, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.998684
   AUC PR    = 0.897867
   CLL	      = -0.080989
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 1.798 seconds
Total inference time: 1.193 seconds
AUC ROC: 0.998684


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:34
{'Inference time': 1.193, 'AUC ROC': 0.998684, 'F1': 0.957447, 'Learning time': 1.798, 'Precision': [0.918367, 0.5], 'CLL': -0.080989, 'AUC PR': 0.897867, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */


Results
   AUC ROC   = 0.963505
   AUC PR    = 0.244543
   CLL	      = -0.173781
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.626 seconds
Total inference time: 0.745 seconds
AUC ROC: 0.963505


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:09:36
{'Inference time': 0.745, 'AUC ROC': 0.963505, 'F1': nan, 'Learning time': 0.626, 'Precision': [nan, 0.5], 'CLL': -0.173781, 'AUC PR': 0.244543, 'Recall': 0.0}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.4175135841583098;  // std dev = 1,18e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2948741519508115;  // std dev = 0,400, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.2601139237211473;  // std dev = 2,58e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08754878264534591;  // std dev = 0,034, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.21324243442461552;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.11166128661726744;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07860536541830355;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.17964818530751447;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.10105614480866851;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.07309752576240772;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0730975257624077;  // std dev = 6,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.13924459912189763;  // std dev = 0,239, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06829680219853743;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.12221291153170993;  // std dev = 0,059, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06407697359036058;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073034
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.886 seconds
Total inference time: 1.466 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099077
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.708 seconds
Parameter learned model CLL: -0.099077


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 15], 'true,false,true': [0.0, 1, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,true,true,true': [5.16e-08, 0, 15], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, G)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.18e-08, 14, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [1.18e-08, 0, 15], 'false,true': [0.0, 2, 0], 'false,false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.4, 1, 15], 'false': [0.0, 14, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [2.58e-08, 0, 15], 'false': [0.034, 15, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true,true': [0.0, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 14, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false,true': 'actor(A)', 'false': 'director(B)', 'true,false': 'movie(D, A)'}, {'true,true': [3.73e-09, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'false,false': [6.45e-09, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.239, 1, 15], 'false': [5.27e-09, 14, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.059, 1, 15], 'false': [3.73e-09, 14, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true,true': [-2.3684757858670006e-16, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.041829287839756535, 3.96508223080413e-18], 'true,true': [1.7763568394002506e-16, nan], 'true,true,true': [1.7763568394002506e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true': [1.7763568394002506e-16, 0.0]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true,true': [-2.3684757858670006e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [1.4802973661668753e-16, -5.551115123125783e-18], 'true,true': [1.4802973661668753e-16, nan], 'false': [0.0, -2.135044278125301e-18], 'true': [1.4802973661668753e-16, nan]}, {'': [0.010013797405959826, 0.0], 'true,true': [0.010013797405959826, nan], 'true': [0.010013797405959826, nan]}, {'': [4.4408920985006264e-17, 7.824101297365198e-05], 'true,true': [4.4408920985006264e-17, nan], 'true': [4.4408920985006264e-17, nan]}, {'': [0.0061852985125114, 0.0], 'true,true': [-3.700743415417188e-17, 0.0], 'true,true,true': [-3.700743415417188e-17, nan], 'true': [0.0061852985125114, nan]}, {'': [0.007407997977620102, 3.2025664171879517e-18], 'false': [nan, 3.2025664171879517e-18], 'true,false,true': [0.0, 0.0], 'true': [1.1102230246251566e-17, 0.0001954210947434842], 'true,false': [0.0001954210947434842, nan]}, {'': [0.003572304294141005, 1.982541115402065e-18], 'true,true': [0.003572304294141005, nan], 'true': [0.003572304294141005, nan]}, {'': [0.0034289582645636012, 9.912705577010326e-19], 'true,true': [0.0034289582645636012, nan], 'true': [0.0034289582645636012, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;actor(A), movie(C, A).;true;true
7;true,false;actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( director(B), movie(D, A) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2616542581102339;  // std dev = 0,145, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( female(A) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.2665580076724336;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2551722425694894;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( actor(B), actor(A) )
%   | then if ( female(A) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( female(B) )
%   | | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09584486768456485;  // std dev = 0,026, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1712865002517374;  // std dev = 0,114, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( female(B) )
%   | | then return -0.07858421733752895;  // std dev = 0,000667, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0786227248162415;  // std dev = 0,000689, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.18225845522847858;  // std dev = 0,006, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( actor(A) )
%   | | then return -0.12519674820767118;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.07253624955983397;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( female(B) )
%   | then if ( female(A) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07307918242807053;  // std dev = 0,000624, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07325459090354287;  // std dev = 9,35e-06, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13985648862088784;  // std dev = 0,065, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( female(A) )
%   | then return -0.06842687119787275;  // std dev = 4,77e-07, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return -0.06821981710531823;  // std dev = 0,000547, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06833562637501198;  // std dev = 0,000581, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.12243874511815907;  // std dev = 0,065, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( female(A) )
%   | then return -0.06419174598787969;  // std dev = 4,49e-07, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06407717093560149;  // std dev = 0,000255, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081223
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.362 seconds
Total inference time: 1.249 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100922
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.67 seconds
Refined model CLL: -0.100922


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073034
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.626 seconds
Total inference time: 1.466 seconds
AUC ROC: 1.0
Total revision time: 4.626
Best scored revision CLL: -0.099077


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:44
{'parameter_15': {'Inference time': 1.466, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.886, 'Precision': [1.0, 0.5], 'CLL': -0.073034, 'AUC PR': 1.0, 'Recall': 1.0}, 'Inference time': 1.466, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 4.626, 'Precision': [1.0, 0.5], 'CLL': -0.073034, 'AUC PR': 1.0, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3584548159137827;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2697478132793615;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2927472379484854;  // std dev = 0,178, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return -0.19832585490732163;  // std dev = 0,506, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.23649210843608723;  // std dev = 0,156, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return -0.1776760516028472;  // std dev = 0,477, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1967863576426767;  // std dev = 0,137, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A) )
%   | then return -0.16035903805422358;  // std dev = 0,448, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1677272678907885;  // std dev = 0,121, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(B) )
%   | then return -0.05835999190362495;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14116525354390927;  // std dev = 0,417, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14573702559433693;  // std dev = 0,108, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return -0.1356215716206282;  // std dev = 0,392, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.061572029659944884;  // std dev = 0,006, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.113344
   Precision = 0.333333 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.5


Total learning time: 1.775 seconds
Total inference time: 1.169 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:47
{'Inference time': 1.169, 'AUC ROC': 1.0, 'F1': 0.5, 'Learning time': 1.775, 'Precision': [0.333333, 0.5], 'CLL': -0.113344, 'AUC PR': 1.0, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.96877
   AUC PR    = 0.275129
   CLL	      = -0.172168
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.629 seconds
Total inference time: 0.781 seconds
AUC ROC: 0.96877


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:09:49
{'Inference time': 0.781, 'AUC ROC': 0.96877, 'F1': nan, 'Learning time': 0.629, 'Precision': [nan, 0.5], 'CLL': -0.172168, 'AUC PR': 0.275129, 'Recall': 0.0}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,58e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.4175135841583098;  // std dev = 1,29e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.10604763597062224;  // std dev = 0,569, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3069076926595008;  // std dev = 0,439, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0946914463850832;  // std dev = 0,025, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.2578047064445884;  // std dev = 3,33e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05242343138428181;  // std dev = 0,558, 22,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.22377901371000147;  // std dev = 0,163, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.13954428014974588;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0828140925241203;  // std dev = 0,023, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.18756427925595265;  // std dev = 0,033, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.12361598917088158;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09083405078565482;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07508108707921723;  // std dev = 6,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.1478730947722581;  // std dev = 0,296, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0714596727713157;  // std dev = 0,018, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.12917725833590937;  // std dev = 0,063, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0668620148542873;  // std dev = 0,017, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073929
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.691 seconds
Total inference time: 1.239 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102748
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.735 seconds
Parameter learned model CLL: -0.102748


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 20], 'true,false,true': [0.0, 1, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,true,true,true': [7.3e-08, 0, 20], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [7.45e-09, 19, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, G)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.58e-08, 19, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [1.29e-08, 0, 18], 'false,true': [0.569, 3, 2], 'false,false': [0.0, 17, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.439, 1, 20], 'false': [0.025, 19, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [3.33e-08, 0, 18], 'false': [0.558, 20, 2], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true,true': [0.163, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'false': [0.023, 19, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false,true': 'actor(A)', 'false': 'director(B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.033, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'false,false': [6.45e-09, 17, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.296, 1, 20], 'false': [0.018, 19, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.063, 1, 20], 'false': [0.017, 19, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.04535147392290242, -5.843279076974508e-18], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.03237580555397633, 2.921639538487254e-18], 'true,true': [2.6645352591003756e-16, nan], 'true,true,true': [2.6645352591003756e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true': [2.6645352591003756e-16, 0.0]}, {'': [0.02021770255628346, 1.3147377923192643e-17], 'true,true': [-2.6645352591003756e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [1.7270135938613546e-16, 0.022270669623612363], 'true,true': [1.7270135938613546e-16, nan], 'true': [1.7270135938613546e-16, nan], 'false': [0.06467402458697027, -8.163404592832034e-18]}, {'': [0.0091965633016451, 3.400578690417848e-05], 'true,true': [0.0091965633016451, nan], 'true': [0.0091965633016451, nan]}, {'': [6.167905692361981e-17, 0.014173184600722423], 'true,true': [6.167905692361981e-17, nan], 'true': [6.167905692361981e-17, nan]}, {'': [0.007254712683151133, 2.6805863442106915e-05], 'true,true': [0.0013315523239231463, 0.0], 'true,true,true': [0.0013315523239231463, nan], 'true': [0.007254712683151133, nan]}, {'': [0.010452456305990999, 2.44902137784961e-18], 'false': [nan, 2.44902137784961e-18], 'true,false,true': [0.0, 0.0], 'true': [0.0010658949542141083, 0.00023881232984284662], 'true,false': [0.00023881232984284662, nan]}, {'': [0.0041663580295065155, 1.7357653654910177e-05], 'true,true': [0.0041663580295065155, nan], 'true': [0.0041663580295065155, nan]}, {'': [0.003944562945195235, 1.536915345439877e-05], 'true,true': [0.003944562945195235, nan], 'true': [0.003944562945195235, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;actor(A), movie(C, A).;true;true
7;true,false;actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1,58e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.4175135841583098;  // std dev = 5,58e-08, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.10604763597062224;  // std dev = 0,569, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.29435846129527465;  // std dev = 0,131, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.0946914463850832;  // std dev = 0,025, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.25741266057112466;  // std dev = 0,011, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( female(A), director(B) )
%   | then return 0.16816638888188637;  // std dev = 0,383, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.08688254226163568;  // std dev = 0,024, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.192843301934862;  // std dev = 0,117, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.20938658673918287;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08023494954969594;  // std dev = 0,022, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.18675308654778272;  // std dev = 0,096, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( actor(A) )
%   | | then return -0.19494450359914386;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.08823541736434636;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07289698886862925;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13848524046019256;  // std dev = 0,099, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.15125822028505764;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06951791662366703;  // std dev = 0,018, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.12603765234241693;  // std dev = 0,072, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else return -0.06515456003577862;  // std dev = 0,017, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080095
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.073 seconds
Total inference time: 1.13 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103847
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.541 seconds
Refined model CLL: -0.103847


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073929
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.04 seconds
Total inference time: 1.239 seconds
AUC ROC: 1.0
Total revision time: 4.04
Best scored revision CLL: -0.102748


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:56
{'Inference time': 1.239, 'AUC ROC': 1.0, 'parameter_20': {'Inference time': 1.239, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.691, 'Precision': [1.0, 0.5], 'CLL': -0.073929, 'AUC PR': 1.0, 'Recall': 1.0}, 'F1': 1.0, 'Learning time': 4.04, 'Precision': [1.0, 0.5], 'CLL': -0.073929, 'AUC PR': 1.0, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6465415686654066;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5044629797645588;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360635;  // std dev = 1,58e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.37956420580342304;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783631;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2871467034260754;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926094;  // std dev = 9,13e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2842125657789766;  // std dev = 0,130, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.2857055379294433;  // std dev = 0,491, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2302729702523323;  // std dev = 0,113, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.2510273081526578;  // std dev = 0,455, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.19212445515105334;  // std dev = 0,099, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.22166661603476304;  // std dev = 0,417, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16412945510685378;  // std dev = 0,087, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.19674247956320953;  // std dev = 0,380, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.14288707796398453;  // std dev = 0,078, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(B) )
%   | then return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.17557739025834873;  // std dev = 0,345, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098032
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.932 seconds
Total inference time: 1.106 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:59
{'Inference time': 1.106, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.932, 'Precision': [1.0, 0.5], 'CLL': -0.098032, 'AUC PR': 1.0, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.96877
   AUC PR    = 0.275129
   CLL	      = -0.172121
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.664 seconds
Total inference time: 0.736 seconds
AUC ROC: 0.96877


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:10:01
{'Inference time': 0.736, 'AUC ROC': 0.96877, 'F1': nan, 'Learning time': 0.664, 'Precision': [nan, 0.5], 'CLL': -0.172121, 'AUC PR': 0.275129, 'Recall': 0.0}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,29e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.41751358415830986;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.1950379068813901;  // std dev = 0,680, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3114625273930013;  // std dev = 0,450, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09503634252554226;  // std dev = 0,038, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.2569341396878431;  // std dev = 2,98e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.035988866256365826;  // std dev = 0,731, 29,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.2267256411250916;  // std dev = 0,180, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.15328041968175332;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08435667432212318;  // std dev = 0,034, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.1896904904135931;  // std dev = 0,032, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.1344257760883463;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09975443520905398;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0760975590268575;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.15155209355604682;  // std dev = 0,311, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07260283115938831;  // std dev = 0,027, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.13218243361711987;  // std dev = 0,059, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06786557586291048;  // std dev = 0,026, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074436
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.832 seconds
Total inference time: 1.17 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103338
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.776 seconds
Parameter learned model CLL: -0.103338


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [1.33e-07, 0, 25], 'true,false,true': [0.0, 1, 0], 'false': [1.29e-08, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,true,true,true': [0.0, 0, 25], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 24, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, G)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 24, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [1.05e-08, 0, 21], 'false,true': [0.68, 3, 4], 'false,false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.45, 1, 25], 'false': [0.038, 24, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [2.98e-08, 0, 21], 'false': [0.731, 25, 4], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true,true': [0.18, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'false': [0.034, 24, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false,true': 'actor(A)', 'false': 'director(B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.032, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'false,false': [0.0, 22, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.311, 1, 25], 'false': [0.027, 24, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.059, 1, 25], 'false': [0.026, 24, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.03698224852071082, 6.938893903907228e-18], 'true,true': [7.105427357601002e-16, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.026401128419570055, -2.3129646346357427e-18], 'true,true': [-7.105427357601002e-17, nan], 'true,true,true': [-7.105427357601002e-17, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.016486699015016572, 9.25185853854297e-18], 'true,true': [-2.842170943040401e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan]}, {'': [1.0573552615477681e-16, 0.03204222383421041], 'true,true': [1.0573552615477681e-16, nan], 'true': [1.0573552615477681e-16, nan], 'false': [0.0659939026397656, -1.261617073437678e-18]}, {'': [0.007801660662348758, 6.049269733714747e-05], 'true,true': [0.007801660662348758, nan], 'true': [0.007801660662348758, nan]}, {'': [4.229421046191072e-17, 0.018448307251651953], 'true,true': [4.229421046191072e-17, nan], 'true': [4.229421046191072e-17, nan]}, {'': [0.006588533307402679, 4.907100712132096e-05], 'true,true': [0.001298051322393583, 0.0], 'true,true,true': [0.001298051322393583, nan], 'true': [0.006588533307402679, nan]}, {'': [0.009610925314279924, -3.784851220313033e-18], 'false': [nan, -3.784851220313033e-18], 'true,false,true': [0.0, 0.0], 'true': [0.0010247987698926231, 0.0002671337507484638], 'true,false': [0.0002671337507484638, nan]}, {'': [0.0037266971445330402, 3.126218167264517e-05], 'true,true': [0.0037266971445330402, nan], 'true': [0.0037266971445330402, nan]}, {'': [0.0035335600035410796, 2.765945864724566e-05], 'true,true': [0.0035335600035410796, nan], 'true': [0.0035335600035410796, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;actor(A), movie(C, A).;true;true
7;true,false;actor(A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048774;  // std dev = 1,29e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.41751358415830986;  // std dev = 4,71e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.1950379068813901;  // std dev = 0,257, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3035345390211598;  // std dev = 0,120, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.09503634252554226;  // std dev = 0,038, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.2565772775925913;  // std dev = 0,007, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( female(A), director(B) )
%   | then return 0.21126047542562193;  // std dev = 0,412, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.08717653545183358;  // std dev = 0,035, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.19763601739543193;  // std dev = 0,109, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.20952491282255178;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08048845996527725;  // std dev = 0,033, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.18605273440642958;  // std dev = 0,084, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( actor(A) )
%   | | then return -0.2188906021083924;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.09558473280382919;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07283670078322178;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.141978749393326;  // std dev = 0,092, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.15143770593924555;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.06969893973288983;  // std dev = 0,026, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12293767053170691;  // std dev = 0,093, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.13298650947164403;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.06531477468631326;  // std dev = 0,025, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079787
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.095 seconds
Total inference time: 1.024 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103096
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.528 seconds
Refined model CLL: -0.103096


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079787
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.231 seconds
Total inference time: 1.024 seconds
AUC ROC: 1.0
Total revision time: 4.231
Best scored revision CLL: -0.103096


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:10:08
{'Inference time': 1.024, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 4.231, 'Precision': [1.0, 0.5], 'CLL': -0.079787, 'AUC PR': 1.0, 'parameter_25': {'Inference time': 1.17, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.832, 'Precision': [1.0, 0.5], 'CLL': -0.074436, 'AUC PR': 1.0, 'Recall': 1.0}, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.14185106490048774;  // std dev = 1,29e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6622329172201352;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5154428111118985;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3875647182006322;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.29398103437200096;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.09269127618926103;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.27863079350710374;  // std dev = 0,113, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.29002822075011786;  // std dev = 0,502, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2263152694135307;  // std dev = 0,098, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.2552593298837515;  // std dev = 0,466, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.18922031336765344;  // std dev = 0,086, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.22567627149616376;  // std dev = 0,427, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16192667698777768;  // std dev = 0,076, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.2004413417282999;  // std dev = 0,390, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.141167318651081;  // std dev = 0,068, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then return -0.06419184008202619;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.178924583086796;  // std dev = 0,355, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097803
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.851 seconds
Total inference time: 1.083 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:10:11
{'Inference time': 1.083, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.851, 'Precision': [1.0, 0.5], 'CLL': -0.097803, 'AUC PR': 1.0, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.14185106490048774;  // std dev = 1,29e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.96877
   AUC PR    = 0.275129
   CLL	      = -0.172106
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.664 seconds
Total inference time: 0.752 seconds
AUC ROC: 0.96877


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:10:12
{'Inference time': 0.752, 'AUC ROC': 0.96877, 'F1': nan, 'Learning time': 0.664, 'Precision': [nan, 0.5], 'CLL': -0.172106, 'AUC PR': 0.275129, 'Recall': 0.0}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.012060104028142076;  // std dev = 0,407, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.227009382327486;  // std dev = 0,047, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08612928871076996;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.18973355638862258;  // std dev = 0,019, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07958720858375008;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.16231870737663406;  // std dev = 0,037, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07394883302697886;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.141475327117122;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06904162944250068;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08111
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.239 seconds
Total inference time: 1.125 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100384
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.613 seconds
Parameter learned model CLL: -0.100384


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 3], 'false,true': [0.0, 0, 2], 'false,false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 3], 'false': [0.407, 5, 2], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.047, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'false': 'director(B)'}, {'true,true': [0.019, 0, 5], 'false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.037, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.015, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, nan]}, {'': [-3.700743415417188e-17, 0.05499491886647133], 'true,true': [-3.700743415417188e-17, nan], 'true': [-3.700743415417188e-17, nan], 'false': [0.0, 0.0]}, {'': [-2.2204460492503132e-17, 0.0], 'true,true': [-2.2204460492503132e-17, nan], 'true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.023641404762458913], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0004464300056304826, -1.3877787807814458e-18], 'true,true': [0.0004464300056304826, nan], 'true,true,true': [0.0004464300056304826, nan], 'true': [0.0004464300056304826, nan]}, {'': [0.00034370278193671664, 0.0], 'false': [nan, 0.0], 'true': [0.00034370278193671664, nan]}, {'': [0.00026945370983429416, -6.938893903907229e-19], 'true,true': [0.00026945370983429416, nan], 'true': [0.00026945370983429416, nan]}, {'': [0.00021536071586904514, 0.0], 'true,true': [0.00021536071586904514, nan], 'true': [0.00021536071586904514, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( female(A) )
%   | then return 0.141719911250194;  // std dev = 0,278, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.217527550515688;  // std dev = 0,021, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08240094863604117;  // std dev = 0,016, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then return 0.18279091189272445;  // std dev = 0,019, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07638498687598042;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1570607347737746;  // std dev = 0,017, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07117054618659262;  // std dev = 0,014, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1373755119990625;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06660961860159635;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.983438
   AUC PR    = 0.401547
   CLL	      = -0.14935
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.719 seconds
Total inference time: 0.934 seconds
AUC ROC: 0.983438


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097333
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.482 seconds
Refined model CLL: -0.097333


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983438
   AUC PR    = 0.401547
   CLL	      = -0.14935
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 3.053 seconds
Total inference time: 0.934 seconds
AUC ROC: 0.983438
Total revision time: 3.053
Best scored revision CLL: -0.097333


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:10:18
{'Inference time': 0.934, 'AUC ROC': 0.983438, 'parameter_5': {'Inference time': 1.125, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.239, 'Precision': [1.0, 0.5], 'CLL': -0.08111, 'AUC PR': 1.0, 'Recall': 1.0}, 'F1': 0.517241, 'Learning time': 3.053, 'Precision': [0.348837, 0.5], 'CLL': -0.14935, 'AUC PR': 0.401547, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.154459
   Precision = 0.326087 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.491803


Total learning time: 1.229 seconds
Total inference time: 0.966 seconds
AUC ROC: 0.977547


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:10:21
{'Inference time': 0.966, 'AUC ROC': 0.977547, 'F1': 0.491803, 'Learning time': 1.229, 'Precision': [0.326087, 0.5], 'CLL': -0.154459, 'AUC PR': 0.326087, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.1668
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.49 seconds
Total inference time: 0.731 seconds
AUC ROC: 0.977547


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:10:22
{'Inference time': 0.731, 'AUC ROC': 0.977547, 'F1': nan, 'Learning time': 0.49, 'Precision': [nan, 0.5], 'CLL': -0.1668, 'AUC PR': 0.326087, 'Recall': 0.0}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.4175135841583099;  // std dev = 9,13e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.012060104028142076;  // std dev = 0,575, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.227009382327486;  // std dev = 0,067, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08612928871076996;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.1897335563886226;  // std dev = 0,019, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0795872085837501;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.16231870737663406;  // std dev = 0,052, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07394883302697886;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.141475327117122;  // std dev = 0,015, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06904162944250068;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.08111
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.737 seconds
Total inference time: 1.212 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100384
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.679 seconds
Parameter learned model CLL: -0.100384


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 10], 'false': [0.0, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [2.98e-08, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 10], 'false': [0.0, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [9.13e-09, 0, 6], 'false,true': [0.0, 0, 4], 'false,false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 10], 'false': [0.0, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [7.45e-09, 0, 6], 'false': [0.575, 10, 4], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true,true': [0.067, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'false': 'director(B)'}, {'true,true': [0.019, 0, 10], 'false,false': [0.0, 10, 0], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.052, 0, 10], 'false': [2.63e-09, 10, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.015, 0, 10], 'false': [2.63e-09, 10, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true,true': [8.881784197001253e-17, nan], 'true,true,true': [8.881784197001253e-17, nan], 'true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true,true': [-1.7763568394002506e-16, nan], 'true': [-1.7763568394002506e-16, nan]}, {'': [7.401486830834377e-17, 0.05499491886647132], 'true,true': [7.401486830834377e-17, nan], 'true': [7.401486830834377e-17, nan], 'false': [0.0, 1.3877787807814458e-18]}, {'': [-4.4408920985006264e-17, 0.0], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, nan]}, {'': [9.25185853854297e-18, 0.023641404762458896], 'true,true': [9.25185853854297e-18, nan], 'true': [9.25185853854297e-18, nan]}, {'': [0.0004464300056304826, -1.3877787807814458e-18], 'true,true': [0.0004464300056304826, nan], 'true,true,true': [0.0004464300056304826, nan], 'true': [0.0004464300056304826, nan]}, {'': [0.00034370278193669447, -1.3877787807814458e-18], 'false': [nan, -1.3877787807814458e-18], 'true': [0.00034370278193669447, nan]}, {'': [0.00026945370983429416, 6.938893903907229e-19], 'true,true': [0.00026945370983429416, nan], 'true': [0.00026945370983429416, nan]}, {'': [0.00021536071586904514, 6.938893903907229e-19], 'true,true': [0.00021536071586904514, nan], 'true': [0.00021536071586904514, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926096;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.146171
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.754 seconds
Total inference time: 0.936 seconds
AUC ROC: 0.97972


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.467 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.146171
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 3.6370000000000005 seconds
Total inference time: 0.936 seconds
AUC ROC: 0.97972
Total revision time: 3.6370000000000005
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:10:28
{'Inference time': 0.936, 'AUC ROC': 0.97972, 'F1': 0.517241, 'Learning time': 3.6370000000000005, 'parameter_10': {'Inference time': 1.212, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.737, 'Precision': [1.0, 0.5], 'CLL': -0.08111, 'AUC PR': 1.0, 'Recall': 1.0}, 'Precision': [0.348837, 0.5], 'CLL': -0.146171, 'AUC PR': 0.348837, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.154459
   Precision = 0.326087 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.491803


Total learning time: 1.142 seconds
Total inference time: 0.965 seconds
AUC ROC: 0.977547


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:10:31
{'Inference time': 0.965, 'AUC ROC': 0.977547, 'F1': 0.491803, 'Learning time': 1.142, 'Precision': [0.326087, 0.5], 'CLL': -0.154459, 'AUC PR': 0.326087, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.1668
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.521 seconds
Total inference time: 0.729 seconds
AUC ROC: 0.977547


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:10:32
{'Inference time': 0.729, 'AUC ROC': 0.977547, 'F1': nan, 'Learning time': 0.521, 'Precision': [nan, 0.5], 'CLL': -0.1668, 'AUC PR': 0.326087, 'Recall': 0.0}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.37032177382684206;  // std dev = 0,149, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.298351359502734;  // std dev = 0,454, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.26861479407992667;  // std dev = 1,05e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.18079968275075775;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.005507361424869254;  // std dev = 0,661, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.2322694354709065;  // std dev = 0,072, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.15554733004452675;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08561491238580944;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.19350527986525284;  // std dev = 0,016, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.13619187129304228;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0791460010195889;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.14724391906073722;  // std dev = 0,283, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07356645019933408;  // std dev = 6,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.12812944206071888;  // std dev = 0,070, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06870720266564648;  // std dev = 6,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072905
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.67 seconds
Total inference time: 1.321 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106663
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.716 seconds
Parameter learned model CLL: -0.106663


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 15], 'true,false,true': [0.0, 1, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,true,true,true': [5.16e-08, 0, 15], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, G)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.18e-08, 14, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.149, 1, 10], 'false,true': [1.49e-08, 0, 5], 'false,false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.454, 1, 15], 'false': [0.0, 14, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true': [1.05e-08, 0, 10], 'false': [0.661, 14, 5], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 1, 0], 'true,true,true,true': [0.072, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'false': [8.33e-09, 14, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false,true': 'actor(A)', 'false': 'director(B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.016, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'false,false': [0.0, 14, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.283, 1, 15], 'false': [6.45e-09, 14, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.07, 1, 15], 'false': [6.45e-09, 14, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true,true': [-2.3684757858670006e-16, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.041829287839756535, 3.96508223080413e-18], 'true,true': [1.7763568394002506e-16, nan], 'true,true,true': [1.7763568394002506e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true': [1.7763568394002506e-16, 0.0]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true,true': [-2.3684757858670006e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02227066962361243, 0.0522527899479215], 'true,true': [0.02227066962361243, nan], 'true': [0.02227066962361243, nan], 'false': [4.4408920985006264e-17, -3.96508223080413e-18]}, {'': [0.012874863105308873, 0.0], 'true,true': [0.012874863105308873, nan], 'true': [0.012874863105308873, nan]}, {'': [0.016692014213636197, 0.023030166114295713], 'true,true': [1.1102230246251566e-17, 0.0], 'true': [0.016692014213636197, nan]}, {'': [0.009132392645000091, 4.956352788505163e-18], 'true,true': [0.0003411035954051493, 0.0], 'true,true,true': [0.0003411035954051493, nan], 'true': [0.009132392645000091, nan]}, {'': [0.006615365294155837, 0.0], 'true,false,true': [0.0, nan], 'false': [nan, 0.0], 'true': [0.00026262642948107946, 0.0], 'true,false': [0.0, nan]}, {'': [0.0049880010943290295, 2.9738116731030977e-18], 'true,true': [0.0049880010943290295, nan], 'true': [0.0049880010943290295, nan]}, {'': [0.00486170665184512, 2.9738116731030977e-18], 'true,true': [0.00486170665184512, nan], 'true': [0.00486170665184512, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;actor(A), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3433550250660033;  // std dev = 0,182, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.27571052101563376;  // std dev = 0,156, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.09269127618926097;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.21389470959949683;  // std dev = 0,158, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.2569015886651146;  // std dev = 0,008, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.2096144598727577;  // std dev = 0,000405, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.1795162761408662;  // std dev = 0,146, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.18957820180679097;  // std dev = 0,055, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.2373731373233768;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.15104305654240718;  // std dev = 0,000314, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.12840634285009708;  // std dev = 0,123, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1326778376024435;  // std dev = 0,000281, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.110226172287528;  // std dev = 0,124, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.06419184008202619;  // std dev = 6,97e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07394
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.082 seconds
Total inference time: 1.134 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.1077
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.5 seconds
Refined model CLL: -0.1077


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072905
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.968 seconds
Total inference time: 1.321 seconds
AUC ROC: 1.0
Total revision time: 3.968
Best scored revision CLL: -0.106663


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:10:39
{'parameter_15': {'Inference time': 1.321, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.67, 'Precision': [1.0, 0.5], 'CLL': -0.072905, 'AUC PR': 1.0, 'Recall': 1.0}, 'Inference time': 1.321, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 3.968, 'Precision': [1.0, 0.5], 'CLL': -0.072905, 'AUC PR': 1.0, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.6255936287954715;  // std dev = 0,266, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.7439976143448207;  // std dev = 2,98e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.13477019189459052;  // std dev = 0,126, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.5784118908548868;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4810868602556034;  // std dev = 0,262, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.1199468895689177;  // std dev = 0,115, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.13380806031669623;  // std dev = 0,185, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.10005909430191015;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return 0.434834169445009;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.37663879277006806;  // std dev = 0,222, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.264973075887887;  // std dev = 0,191, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.3693812428476149;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09014612743231666;  // std dev = 0,005, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.15423702209259413;  // std dev = 0,154, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.12317170144963709;  // std dev = 0,228, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08298399497752572;  // std dev = 0,006, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return 0.276485601800093;  // std dev = 1,05e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.22091803282187536;  // std dev = 0,178, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.11141643364352811;  // std dev = 0,211, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07688403690055327;  // std dev = 0,005, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return 0.22470637094681484;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.17772901483238474;  // std dev = 0,178, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.13585545855016062;  // std dev = 0,147, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.2136772734516459;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06948075376938465;  // std dev = 0,012, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.15619962801169862;  // std dev = 0,215, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.10285483531072288;  // std dev = 0,226, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06586537729909425;  // std dev = 0,011, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return 0.16812014798594255;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.12021709875036796;  // std dev = 0,158, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.09769945320254128;  // std dev = 0,136, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.1629016577631551;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06032386295762731;  // std dev = 0,014, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.14497478084198875;  // std dev = 0,219, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.999646
   AUC PR    = 0.98105
   CLL	      = -0.186429
   Precision = 0.9375 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.967742


Total learning time: 1.711 seconds
Total inference time: 1.099 seconds
AUC ROC: 0.999646


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:10:42
{'Inference time': 1.099, 'AUC ROC': 0.999646, 'F1': 0.967742, 'Learning time': 1.711, 'Precision': [0.9375, 0.5], 'CLL': -0.186429, 'AUC PR': 0.98105, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */


Results
   AUC ROC   = 0.979366
   AUC PR    = 0.353112
   CLL	      = -0.166911
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.625 seconds
Total inference time: 0.733 seconds
AUC ROC: 0.979366


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:10:44
{'Inference time': 0.733, 'AUC ROC': 0.979366, 'F1': nan, 'Learning time': 0.625, 'Precision': [nan, 0.5], 'CLL': -0.166911, 'AUC PR': 0.353112, 'Recall': 0.0}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.35644182961170445;  // std dev = 0,167, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.28808398415242525;  // std dev = 0,634, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.27338522004605986;  // std dev = 2,11e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.1772507225356752;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.009835272768197695;  // std dev = 0,686, 23,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.232739887451255;  // std dev = 0,079, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.15286084301194885;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08442142559380404;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.19383805381081926;  // std dev = 0,016, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.13409835169719778;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07812090537505785;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.1394911991345996;  // std dev = 0,389, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07267697869021846;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.12141145618191575;  // std dev = 0,082, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06792847324021743;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072097
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.89 seconds
Total inference time: 1.216 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108832
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.739 seconds
Parameter learned model CLL: -0.108832


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 20], 'true,false,true': [0.0, 2, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,true,true,true': [7.3e-08, 0, 20], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 18, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, G)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.67e-08, 18, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.167, 2, 15], 'false,true': [1.49e-08, 0, 5], 'false,false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.634, 2, 20], 'false': [7.45e-09, 18, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 2, 0], 'true,true,true': [2.11e-08, 0, 15], 'false': [0.686, 18, 5], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 2, 0], 'true,true,true,true': [0.079, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 18, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false,true': 'actor(A)', 'false': 'director(B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.016, 0, 20], 'true,false,true,true': [0.0, 2, 0], 'false,false': [1.18e-08, 18, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.389, 2, 20], 'false': [5.27e-09, 18, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.082, 2, 20], 'false': [0.0, 18, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.08264462809917356, -3.0839528461809902e-18], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.05899888532770057, 0.0], 'true,true': [2.6645352591003756e-16, nan], 'true,true,true': [2.6645352591003756e-16, nan], 'true,false,true': [0.0, nan], 'true,false': [0.0, nan], 'true': [2.6645352591003756e-16, 0.0]}, {'': [0.03684300341868208, 1.5419764230904953e-17], 'true,true': [-2.6645352591003756e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.027973194025506288, 0.04584642574690707], 'true,true': [0.027973194025506288, nan], 'true': [0.027973194025506288, nan], 'false': [4.4408920985006264e-17, -4.625929269271485e-18]}, {'': [0.01827550345262564, 3.0839528461809902e-18], 'true,true': [0.01827550345262564, nan], 'true': [0.01827550345262564, nan]}, {'': [0.02108021654808261, 0.020439158142009042], 'true,true': [2.960594732333751e-17, 0.0], 'true': [0.02108021654808261, nan]}, {'': [0.012571751745766519, -1.5419764230904951e-18], 'true,true': [0.0003118429809107814, 0.0], 'true,true,true': [0.0003118429809107814, nan], 'true': [0.012571751745766519, nan]}, {'': [0.009106730382283086, 7.709882115452476e-18], 'true,false,true': [0.0, nan], 'false': [nan, 7.709882115452476e-18], 'true': [0.00024083196073697576, 0.0], 'true,false': [0.0, nan]}, {'': [0.006867951385324589, 1.5419764230904951e-18], 'true,true': [0.006867951385324589, nan], 'true': [0.006867951385324589, nan]}, {'': [0.006703080977580527, -7.709882115452476e-19], 'true,true': [0.006703080977580527, nan], 'true': [0.006703080977580527, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;actor(A), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.3526248449525416;  // std dev = 0,172, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.3598347048642936;  // std dev = 0,163, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.29077639055374743;  // std dev = 0,130, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.2848493408541625;  // std dev = 0,141, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.09269127618926094;  // std dev = 7,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.2172717382505306;  // std dev = 0,149, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.2232840570460719;  // std dev = 0,142, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.2611322415450723;  // std dev = 0,001, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.18935633132125707;  // std dev = 0,121, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.18529857631738775;  // std dev = 0,133, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109175;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.19617537933591694;  // std dev = 0,032, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.2445371402948148;  // std dev = 0,000423, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13488328933074242;  // std dev = 0,102, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.1318500696542053;  // std dev = 0,112, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11668845129736417;  // std dev = 0,103, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.11369311793445606;  // std dev = 0,113, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.06419184008202619;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07347
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.214 seconds
Total inference time: 1.126 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.114797
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.542 seconds
Refined model CLL: -0.114797


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072097
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.385 seconds
Total inference time: 1.216 seconds
AUC ROC: 1.0
Total revision time: 4.385
Best scored revision CLL: -0.108832


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:10:51
{'Inference time': 1.216, 'AUC ROC': 1.0, 'parameter_20': {'Inference time': 1.216, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 1.89, 'Precision': [1.0, 0.5], 'CLL': -0.072097, 'AUC PR': 1.0, 'Recall': 1.0}, 'F1': 1.0, 'Learning time': 4.385, 'Precision': [1.0, 0.5], 'CLL': -0.072097, 'AUC PR': 1.0, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.637784545556834;  // std dev = 0,271, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.7392070123615109;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.5754363090526633;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4775463040511311;  // std dev = 0,293, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.17105722211743887;  // std dev = 0,380, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( female(A) )
%   | then return 0.3880569134379777;  // std dev = 0,148, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.4005873745094126;  // std dev = 0,167, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.1517813190728163;  // std dev = 0,355, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( female(A) )
%   | then return 0.30055585918790545;  // std dev = 0,134, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.30953162021399633;  // std dev = 0,151, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.21730976757634216;  // std dev = 0,198, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.29213833497210207;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else return -0.09323375151311841;  // std dev = 0,139, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.13984530946237803;  // std dev = 0,386, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07819460779199659;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( female(A) )
%   | then return 0.20172804137527156;  // std dev = 0,112, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.1946813946861083;  // std dev = 0,123, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return -0.0693604422632618;  // std dev = 0,014, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( female(A) )
%   | | then return -0.1599648072244091;  // std dev = 0,343, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07274097900826758;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then return 0.16768526495556146;  // std dev = 0,111, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.16179673292503233;  // std dev = 0,122, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.1755625860485075;  // std dev = 1,05e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.1179370276904053;  // std dev = 0,179, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06315604644607707;  // std dev = 0,025, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.1326336926149327;  // std dev = 0,177, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.11703702607321698;  // std dev = 0,361, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.0631641231020005;  // std dev = 0,006, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( female(A) )
%   | then return 0.12175704570903334;  // std dev = 0,099, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.12403721900411875;  // std dev = 0,111, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */


Results
   AUC ROC   = 0.999646
   AUC PR    = 0.98105
   CLL	      = -0.2354
   Precision = 0.12605 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.223881


Total learning time: 1.896 seconds
Total inference time: 1.198 seconds
AUC ROC: 0.999646


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:10:54
{'Inference time': 1.198, 'AUC ROC': 0.999646, 'F1': 0.223881, 'Learning time': 1.896, 'Precision': [0.12605, 0.5], 'CLL': -0.2354, 'AUC PR': 0.98105, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.933548
   AUC PR    = 0.591942
   CLL	      = -0.203715
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.721 seconds
Total inference time: 0.797 seconds
AUC ROC: 0.933548


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:10:56
{'Inference time': 0.797, 'AUC ROC': 0.933548, 'F1': nan, 'Learning time': 0.721, 'Precision': [nan, 0.5], 'CLL': -0.203715, 'AUC PR': 0.591942, 'Recall': 0.0}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,true;tempadvisedby(D, B).;false;true
0;true,false,true;ta(J, A, K).;false;false
0;true,false;publication(H, A), publication(I, B).;true;true
0;true,true,false;publication(C, E), ta(F, E, G).;false;false
0;true,false,false;tempadvisedby(L, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true;tempadvisedby(D, B), publication(E, D).;true;false
1;true,true,true;publication(C, F), publication(E, F).;false;false
1;true,false,true;publication(G, I), professor(I).;false;false
1;true,false;publication(G, A), publication(H, B).;true;true
1;true,false,false;publication(J, B), ta(K, A, L).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(D, B), publication(C, D).;false;true
2;true,false,true;publication(H, I), tempadvisedby(J, I).;false;false
2;true,false;tempadvisedby(G, B), publication(H, G).;true;true
2;true,true,false;ta(E, A, F).;false;false
2;true,false,false;publication(K, A).;false;false
2;true;publication(C, A), publication(C, B).;true;true
3;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
3;true,true;ta(F, A, G), publication(H, B).;true;true
3;true,true,true;tempadvisedby(I, B).;false;false
3;false;professor(B), publication(P, A).;false;false
3;true,false;publication(K, B), publication(K, A).;false;true
3;true,true,false;publication(J, B), publication(J, A).;false;false
3;true,false,false;publication(L, B), ta(M, A, N).;false;false
3;true;hasposition(D, C), projectmember(E, D).;true;true
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
4;true,true,true;ta(C, I, H), publication(E, I).;false;false
4;true,false;projectmember(L, B).;false;true
4;true,true,false;ta(J, K, D), publication(E, K).;false;false
4;true,false,false;publication(M, B).;false;false
4;true;ta(C, A, D), publication(E, B).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;false
5;true,true;publication(G, B), publication(H, A).;true;true
5;true,true,true;publication(G, A).;false;false
5;true,false,true;projectmember(M, B), publication(N, A).;false;false
5;true,false;tempadvisedby(L, B).;true;true
5;true,true,false;ta(I, A, J), ta(I, K, F).;false;false
5;true,false,false;ta(P, A, Q), publication(R, A).;false;false
5;true;tempadvisedby(D, B), ta(E, D, F).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true;publication(C, B).;true;true
6;true,true,true;publication(E, D), publication(E, B).;false;false
6;true,false,true;publication(H, I), ta(J, I, K).;false;false
6;true,false;publication(H, A), publication(H, B).;true;true
6;true,true,false;ta(F, D, G).;false;false
6;true,false,false;publication(L, A), publication(M, B).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;tempadvisedby(D, B).;false;true
7;true,false,true;ta(I, H, J), student(A).;false;false
7;true,false;publication(G, A), tempadvisedby(H, B).;true;true
7;true,true,false;ta(E, A, F).;false;false
7;true,false,false;publication(C, K), tempadvisedby(K, L).;false;false
7;false;professor(B), ta(M, A, N).;false;false
7;true;student(A), publication(C, A).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,true;publication(E, A), publication(C, D).;false;true
8;true,false;ta(H, A, I), tempadvisedby(J, B).;false;true
8;true,true,false;ta(F, D, G).;false;false
8;true,false,false;publication(K, A), tempadvisedby(L, B).;false;false
8;true;publication(C, B), tempadvisedby(D, B).;true;true
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,true;publication(C, D), student(D).;true;true
9;true,true,true;ta(E, A, F), ta(G, D, H).;false;false
9;true,false;ta(J, A, K), projectmember(L, B).;false;true
9;true,true,false;tempadvisedby(I, B).;false;false
9;true,false,false;projectmember(M, B).;false;false
9;true;publication(C, B).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(C, F), movie(D, F) )
%   | | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(G, A), movie(H, B) )
%   | | then if ( movie(G, I), director(I) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, F) )
%   | | then if ( movie(E, G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, B) )
%   | | then return 0.36807454476343876;  // std dev = 0,152, 21,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), movie(F, A) )
%   | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.2941970402496438;  // std dev = 0,639, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B), movie(E, A) )
%   | then if ( movie(D, A) )
%   | | then return 0.269874309259393;  // std dev = 3,94e-08, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.17985347870216903;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.013716680439977348;  // std dev = 0,754, 29,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E), movie(D, B) )
%   | | | then return 0.2303638221474673;  // std dev = 0,091, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.15483210347206902;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08412189785166559;  // std dev = 1,39e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.19213250131535906;  // std dev = 0,016, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A) )
%   | | then if ( actor(A) )
%   | | | then return -0.13563518760695784;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07786333493584575;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(D, A), movie(C, E) )
%   | | then return 0.14301690505431036;  // std dev = 0,394, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07245325475219656;  // std dev = 3,73e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D), actor(D) )
%   | | then return 0.12455135924098411;  // std dev = 0,075, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06773242495756303;  // std dev = 3,73e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071966
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.101 seconds
Total inference time: 1.219 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106856
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.773 seconds
Parameter learned model CLL: -0.106856


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)'}, {'true,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'true,true,true': [1.33e-07, 0, 25], 'true,false,true': [0.0, 2, 0], 'false': [1.49e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, E)', 'true,true,true': 'movie(C, F), movie(D, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(G, A), movie(H, B)', 'true,false,true': 'movie(G, I), director(I)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,true,true,true': [0.0, 0, 25], 'true,false,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 23, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)', 'true,false,true': 'movie(E, G)', 'true,false': 'movie(E, F)'}, {'true,true,true': [0.0, 0, 25], 'true,true,false': [0.0, 0, 0], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.05e-08, 23, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, B)', 'true': 'genre(D, C)', 'false': 'director(B), movie(F, A)'}, {'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'true,true,true': [0.152, 2, 19], 'false,true': [2.11e-08, 0, 6], 'false,false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.639, 2, 25], 'false': [1.18e-08, 23, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(D, A)', 'true': 'movie(D, B), movie(E, A)'}, {'true,true,false': [0.0, 2, 0], 'true,true,true': [3.94e-08, 0, 19], 'false': [0.754, 23, 6], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E), movie(D, B)', 'true': 'movie(C, A)'}, {'true,true,false': [0.0, 2, 0], 'true,true,true,true': [0.091, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'false': [1.39e-08, 23, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true': 'actor(A), movie(C, A)', 'true,false,true': 'actor(A)', 'false': 'director(B)', 'true,false': 'movie(D, A)'}, {'true,true': [0.016, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'false,false': [7.45e-09, 23, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(D, A), movie(C, E)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.394, 2, 25], 'false': [3.73e-09, 23, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D), actor(D)', 'true': 'movie(C, B)'}, {'true,true,false': [0.0, 0, 0], 'true,true,true': [0.075, 2, 25], 'false': [3.73e-09, 23, 0], 'true,false': [0.0, 0, 0]}]]
[{'': [0.06858710562414343, 9.654113257610057e-18], 'true,true': [7.105427357601002e-16, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.04896340963409988, -2.413528314402514e-18], 'true,true': [-7.105427357601002e-17, nan], 'true,true,true': [-7.105427357601002e-17, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,false,true': [0.0, nan]}, {'': [0.030576155100552255, 4.827056628805028e-18], 'true,true': [-2.842170943040401e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.023220076854732447, 0.04421826889121028], 'true,true': [0.023220076854732447, nan], 'true': [0.023220076854732447, nan], 'false': [7.401486830834377e-17, -2.413528314402514e-18]}, {'': [0.015133546911533293, 6.033820786006285e-18], 'true,true': [0.015133546911533293, nan], 'true': [0.015133546911533293, nan]}, {'': [0.017427875655470333, 0.019579459799505237], 'true,true': [8.180590707764311e-17, 0.0], 'true': [0.017427875655470333, nan]}, {'': [0.010486085342115856, 8.4473491004088e-18], 'true,true': [0.00033416467956723925, 0.0], 'true,true,true': [0.00033416467956723925, nan], 'true': [0.010486085342115856, nan]}, {'': [0.007607757933232515, 2.413528314402514e-18], 'true,false,true': [0.0, nan], 'false': [nan, 2.413528314402514e-18], 'true': [0.00025847798259653665, 0.0], 'true,false': [0.0, nan]}, {'': [0.005743652525843684, 6.033820786006285e-19], 'true,true': [0.005743652525843684, nan], 'true': [0.005743652525843684, nan]}, {'': [0.00560711358566974, 6.033820786006285e-19], 'true,true': [0.00560711358566974, nan], 'true': [0.00560711358566974, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
3;false;director(B), movie(F, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
5;true;movie(D, A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;actor(A), movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.3656025927936952;  // std dev = 0,156, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.37032177382684206;  // std dev = 0,149, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( director(B), movie(D, A) )
%   | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2968351000172087;  // std dev = 0,117, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.2908978636169289;  // std dev = 0,130, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.22486962404958363;  // std dev = 0,135, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.2291925465837524;  // std dev = 0,129, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 1,58e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.25992724116218957;  // std dev = 0,001, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.19334804956716475;  // std dev = 0,109, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.18927819959068204;  // std dev = 0,122, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( actor(A), movie(C, A) )
%   | then return 0.19258236285987093;  // std dev = 0,028, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.24984499585752462;  // std dev = 0,000128, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13831551755084656;  // std dev = 0,092, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.13527004496937897;  // std dev = 0,103, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11995395979905246;  // std dev = 0,094, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.11693057312675507;  // std dev = 0,104, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.0641918400820262;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07361
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.29 seconds
Total inference time: 1.229 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111152
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.532 seconds
Refined model CLL: -0.111152


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071966
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 4.696 seconds
Total inference time: 1.219 seconds
AUC ROC: 1.0
Total revision time: 4.696
Best scored revision CLL: -0.106856


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:11:04
{'Inference time': 1.219, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 4.696, 'Precision': [1.0, 0.5], 'CLL': -0.071966, 'AUC PR': 1.0, 'parameter_25': {'Inference time': 1.219, 'AUC ROC': 1.0, 'F1': 1.0, 'Learning time': 2.101, 'Precision': [1.0, 0.5], 'CLL': -0.071966, 'AUC PR': 1.0, 'Recall': 1.0}, 'Recall': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.6539072664925316;  // std dev = 0,245, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.735981226434616;  // std dev = 2,98e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.5714926663825015;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.4901315864625721;  // std dev = 0,271, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.15510662382713405;  // std dev = 0,142, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( female(A) )
%   | then return 0.3941719214683715;  // std dev = 0,132, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.4039751699193277;  // std dev = 0,152, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.13861933161569304;  // std dev = 0,133, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( female(A) )
%   | then return 0.30474333033642637;  // std dev = 0,120, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.3117171873915586;  // std dev = 0,138, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.12507912851756173;  // std dev = 0,125, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( female(A) )
%   | then return 0.24188810131441232;  // std dev = 0,114, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.24618731194678;  // std dev = 0,131, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.18365538087837227;  // std dev = 0,163, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.2381574161719106;  // std dev = 1,49e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.08830470797778756;  // std dev = 0,205, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.11466111467828319;  // std dev = 0,135, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.07260208073401439;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( female(A) )
%   | then return 0.16946945087171406;  // std dev = 0,101, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.1634284726326636;  // std dev = 0,114, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.17115308968955725;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.12172260720748442;  // std dev = 0,170, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.07915110506101107;  // std dev = 0,239, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.10682414421951693;  // std dev = 0,155, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.15628723060675354;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else return -0.07374378594174363;  // std dev = 0,226, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.999646
   AUC PR    = 0.98105
   CLL	      = -0.266124
   Precision = 0.12605 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.223881


Total learning time: 2.015 seconds
Total inference time: 1.091 seconds
AUC ROC: 0.999646


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:11:07
{'Inference time': 1.091, 'AUC ROC': 0.999646, 'F1': 0.223881, 'Learning time': 2.015, 'Precision': [0.12605, 0.5], 'CLL': -0.266124, 'AUC PR': 0.98105, 'Recall': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.933548
   AUC PR    = 0.591942
   CLL	      = -0.204751
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.748 seconds
Total inference time: 0.817 seconds
AUC ROC: 0.933548


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:11:09
{'Inference time': 0.817, 'AUC ROC': 0.933548, 'F1': nan, 'Learning time': 0.748, 'Precision': [nan, 0.5], 'CLL': -0.204751, 'AUC PR': 0.591942, 'Recall': 0.0}


