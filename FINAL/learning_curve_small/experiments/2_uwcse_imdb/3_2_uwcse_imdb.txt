Starting experiment #3 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( tempadvisedby(G, B) )
%   | | | then return 0.7748156017661789;  // std dev = 0,957, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( publication(H, A) )
%   | | then if ( publication(H, I), professor(I) )
%   | | | then return 0.12841920536978263;  // std dev = 2,701, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.7331489350995123;  // std dev = 0,935, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( publication(J, B), ta(K, A, L) )
%   | | | then return 0.7547006592374428;  // std dev = 1,640, 29,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | | else return 0.47517021169525653;  // std dev = 3,333, 47,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=29 */
%   else return -0.14185106490048793;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.7257349969164815;  // std dev = 0,043, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( publication(C, E), ta(F, E, G) )
%   | | | then return 0.4694734122109544;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( publication(H, A), tempadvisedby(I, B) )
%   | | then if ( publication(H, J), ta(K, J, L) )
%   | | | then return 0.3425235170009292;  // std dev = 1,924, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.1582135316710165;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( publication(M, B) )
%   | | | then return 0.5325610197891811;  // std dev = 3,534, 71,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=54 */
%   | | | else return 0.32751177435419726;  // std dev = 2,130, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   else return -0.1254446385283913;  // std dev = 5,58e-08, 170,000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( ta(C, A, D), publication(E, B) )
%   | then if ( tempadvisedby(F, B) )
%   | | then if ( publication(E, A) )
%   | | | then return 0.5612699617253544;  // std dev = 0,033, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.4287006238706057;  // std dev = 1,935, 23,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( ta(C, G, H), tempadvisedby(G, I) )
%   | | | then return 0.5336752883140284;  // std dev = 0,953, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.6632583211803116;  // std dev = 0,158, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( projectmember(J, B) )
%   | | then return 0.7502807228690284;  // std dev = 0,100, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( publication(K, A), publication(K, B) )
%   | | | then return 0.49515146803686333;  // std dev = 1,365, 30,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | else return 0.25307365113624386;  // std dev = 3,716, 61,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=32 */
%   else return -0.11231637819360646;  // std dev = 4,21e-08, 198,000 (wgt'ed) examples reached here.  /* #neg=198 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( tempadvisedby(E, B) )
%   | | | then return 0.432337061447732;  // std dev = 0,069, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.30043558023624073;  // std dev = 1,313, 14,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return -0.30603443383020024;  // std dev = 0,142, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.08464864842061784;  // std dev = 2,346, 25,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | else if ( projectmember(I, B), publication(J, A) )
%   | | then return 0.6407858430418224;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(K, A, L) )
%   | | | then return 0.30311947160789654;  // std dev = 2,486, 36,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=28 */
%   | | | else return 0.38375041790324876;  // std dev = 2,717, 40,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   else return -0.10159632948783644;  // std dev = 0,000, 169,000 (wgt'ed) examples reached here.  /* #neg=169 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( publication(F, A), publication(F, B) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.2647263377126249;  // std dev = 0,924, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.3481285798721253;  // std dev = 0,098, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( publication(I, B) )
%   | | | then return 0.19548202836491183;  // std dev = 3,983, 81,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=54 */
%   | | | else return 0.36611541973961165;  // std dev = 1,258, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( publication(J, A), publication(J, B) )
%   | | then return 0.3396959661698522;  // std dev = 0,025, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(K, B) )
%   | | | then return -0.17872551027226327;  // std dev = 1,589, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.06883062009333482;  // std dev = 1,258, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( ta(L, A, M) )
%   | then return -0.10349784593420493;  // std dev = 0,052, 48,000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.0869128755526408;  // std dev = 0,063, 118,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( tempadvisedby(F, B) )
%   | | then if ( sameperson(B, D), ta(G, F, H) )
%   | | | then return 0.38009987792810274;  // std dev = 0,021, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16909192225055888;  // std dev = 3,514, 82,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=63 */
%   | | else if ( ta(I, A, J) )
%   | | | then return 0.18925452662619285;  // std dev = 1,599, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.3215317254853005;  // std dev = 1,458, 25,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | else if ( publication(K, B), publication(K, A) )
%   | | then return 0.2681485502685323;  // std dev = 0,022, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(L, B), publication(M, A) )
%   | | | then return -0.1377315541596334;  // std dev = 0,892, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.13888381874128322;  // std dev = 1,541, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else if ( ta(N, A, P) )
%   | then return -0.09501681370813303;  // std dev = 0,054, 53,000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.08059512844487797;  // std dev = 0,059, 138,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=1 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.23455790429859238;  // std dev = 0,110, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, B), tempadvisedby(E, B) )
%   | | then if ( publication(D, F), student(F) )
%   | | | then return -0.046613120317664215;  // std dev = 3,407, 56,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=27 */
%   | | | else return 0.278982672702087;  // std dev = 0,595, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( ta(G, A, H), publication(I, A) )
%   | | | then return 0.3521256894755191;  // std dev = 0,795, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.08828929055933417;  // std dev = 3,300, 54,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=35 */
%   else return -0.07905063452866683;  // std dev = 0,013, 186,000 (wgt'ed) examples reached here.  /* #neg=186 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), publication(C, B) )
%   then if ( publication(C, D), tempadvisedby(E, D) )
%   | then if ( publication(F, E), sameperson(B, D) )
%   | | then if ( publication(C, A) )
%   | | | then return 0.11077718742848934;  // std dev = 0,964, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.2133548973571011;  // std dev = 1,693, 22,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( ta(G, E, H), student(A) )
%   | | | then return 0.1845609443973004;  // std dev = 3,080, 96,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=78 */
%   | | | else return -0.07579161340839363;  // std dev = 1,011, 17,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( publication(I, A) )
%   | | then return -0.022554736680388654;  // std dev = 0,899, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.5951919660834505;  // std dev = 0,157, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( hasposition(B, J), student(A) )
%   | then if ( ta(K, A, L), projectmember(M, B) )
%   | | then return -0.383659011384347;  // std dev = 0,812, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.040679999081605356;  // std dev = 0,459, 20,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | else return -0.07299817699098303;  // std dev = 0,059, 185,000 (wgt'ed) examples reached here.  /* #neg=184 #pos=1 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(D, B) )
%   | then if ( publication(C, B) )
%   | | then if ( publication(D, E), tempadvisedby(E, F) )
%   | | | then return 0.09495735890331013;  // std dev = 0,954, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.1716991348015843;  // std dev = 0,086, 30,000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( publication(D, G), student(G) )
%   | | | then return -0.17249291365259292;  // std dev = 2,216, 28,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.18906018046820672;  // std dev = 0,565, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( tempadvisedby(H, B), ta(I, A, J) )
%   | | then if ( publication(K, B) )
%   | | | then return -0.00264463638273375;  // std dev = 2,225, 23,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return 0.42266366234079955;  // std dev = 0,075, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( publication(L, A), tempadvisedby(M, B) )
%   | | | then return 0.01488335880161662;  // std dev = 0,762, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17166304737047147;  // std dev = 2,746, 53,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=41 */
%   else return -0.06858258967320192;  // std dev = 0,016, 190,000 (wgt'ed) examples reached here.  /* #neg=190 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( hasposition(D, C), projectmember(E, D) )
%   | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | then if ( publication(I, A) )
%   | | | then return 0.08735642172268154;  // std dev = 0,712, 21,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return 0.2483601593809805;  // std dev = 1,421, 23,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.004029631714551206;  // std dev = 2,737, 45,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=29 */
%   | | | else return 0.1035443495959658;  // std dev = 2,233, 43,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=35 */
%   | else if ( publication(K, B) )
%   | | then if ( publication(K, A) )
%   | | | then return 0.13442118126889394;  // std dev = 0,013, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18968465392822048;  // std dev = 1,481, 15,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0.09672308515642883;  // std dev = 1,085, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( ta(L, A, M) )
%   | then return -0.07384950000248718;  // std dev = 0,058, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.06038947608060704;  // std dev = 0,052, 156,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=1 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583099;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068497
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.823 seconds
Total inference time: 1.346 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.49 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'false,false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true,true': [4.4408920985006264e-17, nan], 'true': [4.4408920985006264e-17, nan]}, {'': [-2.2204460492503132e-17, 0.0], 'true,true': [-2.2204460492503132e-17, nan], 'true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [-5.551115123125783e-18, nan]}, {'': [0.0, -6.938893903907229e-19], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, nan], 'false': [nan, -6.938893903907229e-19]}, {'': [0.0, 6.938893903907229e-19], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true,true': [0.0, nan], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.130363
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 0.623 seconds
Total inference time: 1.187 seconds
AUC ROC: 0.983525


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.477 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068497
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.413 seconds
Total inference time: 1.346 seconds
AUC ROC: 1.0
Total revision time: 2.413
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 03:35:30
{'AUC ROC': 1.0, 'parameter_5': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.068497, 'Precision': [1.0, 0.5], 'Learning time': 0.823, 'F1': 1.0, 'Inference time': 1.346, 'AUC PR': 1.0}, 'Recall': 1.0, 'CLL': -0.068497, 'Precision': [1.0, 0.5], 'Learning time': 2.413, 'F1': 1.0, 'Inference time': 1.346, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.982164
   AUC PR    = 0.321839
   CLL	      = -0.13584
   Precision = 0.321839 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.486957


Total learning time: 1.05 seconds
Total inference time: 1.031 seconds
AUC ROC: 0.982164


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 03:35:33
{'AUC ROC': 0.982164, 'Recall': 1.0, 'CLL': -0.13584, 'Precision': [0.321839, 0.5], 'Learning time': 1.05, 'F1': 0.486957, 'Inference time': 1.031, 'AUC PR': 0.321839}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.982164
   AUC PR    = 0.321839
   CLL	      = -0.159815
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.489 seconds
Total inference time: 0.8 seconds
AUC ROC: 0.982164


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 03:35:34
{'AUC ROC': 0.982164, 'Recall': 0.0, 'CLL': -0.159815, 'Precision': [nan, 0.5], 'Learning time': 0.489, 'F1': nan, 'Inference time': 0.8, 'AUC PR': 0.321839}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415830986;  // std dev = 1,18e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0513509638543199;  // std dev = 0,124, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.22113654317370077;  // std dev = 0,102, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04641582005851349;  // std dev = 0,126, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22814700216761485;  // std dev = 0,120, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then return -0.10407329989682691;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08479005748659897;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.1907489018454121;  // std dev = 0,108, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.08659956447509626;  // std dev = 0,012, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07843773255390755;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.16321117343578648;  // std dev = 0,097, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), actor(F) )
%   | | | then return -0.08758892956695416;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07289092690237592;  // std dev = 0,000519, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.11164035239930095;  // std dev = 0,203, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.038770803767542494;  // std dev = 0,088, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069873
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.998 seconds
Total inference time: 1.535 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106346
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.595 seconds
Parameter learned model CLL: -0.106346


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [2.98e-08, 0, 10], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'false': [0.124, 9, 1]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [0.102, 1, 9], 'true,false': [0.0, 0, 0], 'false': [0.126, 9, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.12, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.108, 0, 10], 'true,true,true,false': [0.012, 2, 0], 'false,false': [2.63e-09, 8, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)', 'true,true,false': 'movie(D, F), actor(F)'}, {'true,true,true,true': [0.097, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.000519, 9, 0], 'true,true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.203, 1, 9], 'true,false': [0.0, 0, 0], 'false': [0.088, 9, 1], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true,false,true': [0.0, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.058998885327700486, 0.0], 'true,false,true': [0.0, nan], 'true,true': [8.881784197001253e-17, nan], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true,true': [-1.7763568394002506e-16, 0.0], 'true': [0.036843003418682206, nan]}, {'': [0.02227066962361243, 3.0839528461809902e-18], 'true,true': [1.3322676295501878e-16, 0.0], 'true': [0.02227066962361243, nan]}, {'': [0.015381192815554301, 0.015381192815554324], 'true,true': [-3.700743415417188e-17, 0.0], 'true': [0.015381192815554301, nan], 'true,true,false': [0.0, nan]}, {'': [0.0104258595002444, 0.01591098167101323], 'true': [0.0104258595002444, nan]}, {'': [0.010439459986745357, 0.0], 'true,false,true': [0.0, nan], 'true': [0.0014497397032572578, 0.0], 'true,false': [0.0, nan]}, {'': [0.011662723473889358, 8.673617379884035e-19], 'true,true,true': [0.0011615831068822525, 6.661550030973625e-05], 'true,true': [0.011662723473889358, nan], 'true': [0.011662723473889358, nan], 'false': [nan, 8.673617379884035e-19]}, {'': [0.006051157781989989, 2.9883578590850224e-08], 'true,true,true': [0.0009380288632630573, nan], 'true,true': [0.0009380288632630573, 0.0], 'true': [0.006051157781989989, nan], 'true,true,false': [0.0, nan]}, {'': [0.004116404283989209, 0.007750230408004622], 'true,true': [0.004116404283989209, nan], 'true': [0.004116404283989209, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4719060848787982;  // std dev = 0,221, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.36211875425066564;  // std dev = 0,201, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.34480094474154316;  // std dev = 0,039, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.22560946075306526;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( female(A) )
%   | then return 0.04510976492720925;  // std dev = 0,338, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.27073559993258484;  // std dev = 0,049, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.21931133424356297;  // std dev = 0,154, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.08771154683784219;  // std dev = 0,014, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2313327996375664;  // std dev = 0,048, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.22451101802954998;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08094391942870338;  // std dev = 0,013, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then return 0.19281058014931415;  // std dev = 0,042, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.13038616157424915;  // std dev = 0,081, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07539889604092403;  // std dev = 0,012, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15664959204990184;  // std dev = 0,033, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1259012365781424;  // std dev = 0,111, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06967362148379845;  // std dev = 0,013, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13709806867900523;  // std dev = 0,030, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1088393326724945;  // std dev = 0,112, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.06529173617021528;  // std dev = 0,012, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072994
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.069 seconds
Total inference time: 1.296 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111291
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.521 seconds
Refined model CLL: -0.111291


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069873
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.183 seconds
Total inference time: 1.535 seconds
AUC ROC: 1.0
Total revision time: 3.183
Best scored revision CLL: -0.106346


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 03:35:41
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.069873, 'Precision': [1.0, 0.5], 'Learning time': 3.183, 'parameter_10': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.069873, 'Precision': [1.0, 0.5], 'Learning time': 0.998, 'F1': 1.0, 'Inference time': 1.535, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.535, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.6189976143448207;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.4851287515461648;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.36568225360444984;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.37663492857936476;  // std dev = 0,116, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1771424029121651;  // std dev = 0,463, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.29349234218518283;  // std dev = 0,101, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.15839419448470568;  // std dev = 0,436, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.23674068343977547;  // std dev = 0,087, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.14286521326732046;  // std dev = 0,410, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.19679582573116067;  // std dev = 0,076, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1298131378295649;  // std dev = 0,385, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16762338129092544;  // std dev = 0,067, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11870991537954383;  // std dev = 0,362, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.14558157070550104;  // std dev = 0,059, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10916802204079608;  // std dev = 0,340, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06744
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.49 seconds
Total inference time: 1.375 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 03:35:44
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.06744, 'Precision': [1.0, 0.5], 'Learning time': 1.49, 'F1': 1.0, 'Inference time': 1.375, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.98376
   AUC PR    = 0.343975
   CLL	      = -0.159503
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.608 seconds
Total inference time: 0.901 seconds
AUC ROC: 0.98376


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 03:35:45
{'AUC ROC': 0.98376, 'Recall': 0.0, 'CLL': -0.159503, 'Precision': [nan, 0.5], 'Learning time': 0.608, 'F1': nan, 'Inference time': 0.901, 'AUC PR': 0.343975}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583098;  // std dev = 1,18e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06513106796596692;  // std dev = 0,103, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.2324817763056303;  // std dev = 0,085, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05919578956241302;  // std dev = 0,105, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22253261738619495;  // std dev = 0,130, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then return -0.10513591441059413;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08275157729209745;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.1866233403427164;  // std dev = 0,117, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.08616527281049545;  // std dev = 0,013, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07668340597332567;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.1600780121905493;  // std dev = 0,106, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), actor(F) )
%   | | | then return -0.08844918796683539;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07138244714627585;  // std dev = 0,000604, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.11888468197847032;  // std dev = 0,207, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04685402237092757;  // std dev = 0,075, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068101
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.003 seconds
Total inference time: 1.584 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10288
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.617 seconds
Parameter learned model CLL: -0.10288


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [5.16e-08, 0, 15], 'false': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [1.18e-08, 14, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 14], 'true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'false': [0.103, 14, 1]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [0.085, 1, 14], 'true,false': [0.0, 0, 0], 'false': [0.105, 14, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.13, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.117, 0, 15], 'true,true,true,false': [0.013, 2, 0], 'false,false': [0.0, 13, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)', 'true,true,false': 'movie(D, F), actor(F)'}, {'true,true,true,true': [0.106, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.000604, 14, 0], 'true,true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.207, 1, 14], 'true,false': [0.0, 0, 0], 'false': [0.075, 14, 1], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true,false,true': [0.0, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.041829287839756535, 3.96508223080413e-18], 'true,false,true': [0.0, nan], 'true,true': [1.7763568394002506e-16, nan], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true,true': [-2.3684757858670006e-16, 0.0], 'true': [0.02612111375191717, nan]}, {'': [0.015789556783928405, -3.96508223080413e-18], 'true,true': [1.4802973661668753e-16, 0.0], 'true': [0.015789556783928405, nan]}, {'': [0.010633911082358515, 0.010633911082358543], 'true,true': [-3.172065784643304e-17, 0.0], 'true': [0.010633911082358515, nan], 'true,true,false': [0.0, nan]}, {'': [0.007208001629798614, 0.011102887086315608], 'true': [0.007208001629798614, nan]}, {'': [0.007351537007218814, -3.96508223080413e-18], 'true,false,true': [0.0, nan], 'true': [0.0011312228037502722, 0.0], 'true,false': [0.0, nan]}, {'': [0.008541092333371166, -3.2025664171879517e-18], 'true,true,true': [0.0009133727968873758, 8.990579871782055e-05], 'true,true': [0.008541092333371166, nan], 'true': [0.008541092333371166, nan], 'false': [nan, -3.2025664171879517e-18]}, {'': [0.0043154263579000575, 2.6019862804054535e-08], 'true,true,true': [0.0007427608722974322, nan], 'true,true': [0.0007427608722974322, 0.0], 'true': [0.0043154263579000575, nan], 'true,true,false': [0.0, nan]}, {'': [0.002870225464611307, 0.0055659483869986755], 'true,true': [0.002870225464611307, nan], 'true': [0.002870225464611307, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.49972620216796043;  // std dev = 0,185, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3807983432695074;  // std dev = 0,167, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.33677511730176807;  // std dev = 0,031, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.23383690888238207;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( female(A) )
%   | then return 0.010659504648091699;  // std dev = 0,358, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2686969852142836;  // std dev = 0,057, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.23123204702548428;  // std dev = 0,128, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.0869862268514863;  // std dev = 0,013, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22488035889209343;  // std dev = 0,052, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.23337055269933324;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08032238652288048;  // std dev = 0,012, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then return 0.18814472025920428;  // std dev = 0,046, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.13362535653454233;  // std dev = 0,086, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07470666149587253;  // std dev = 0,011, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15702487949668503;  // std dev = 0,039, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.13451473387156745;  // std dev = 0,093, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0693308976132762;  // std dev = 0,012, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1373920415858571;  // std dev = 0,035, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.11679571463547135;  // std dev = 0,094, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.06498937827278882;  // std dev = 0,011, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072241
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.171 seconds
Total inference time: 1.391 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106372
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.505 seconds
Refined model CLL: -0.106372


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068101
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.296 seconds
Total inference time: 1.584 seconds
AUC ROC: 1.0
Total revision time: 3.296
Best scored revision CLL: -0.10288


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 03:35:52
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.068101, 'Precision': [1.0, 0.5], 'Learning time': 3.296, 'F1': 1.0, 'Inference time': 1.584, 'parameter_15': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.068101, 'Precision': [1.0, 0.5], 'Learning time': 1.003, 'F1': 1.0, 'Inference time': 1.584, 'AUC PR': 1.0}, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6526478931012827;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.508738411682717;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.11231637819360639;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.38266873164552506;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2897830208139342;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2940427404723865;  // std dev = 0,091, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B), actor(A) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.23684419679566493;  // std dev = 0,525, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.23700893833789613;  // std dev = 0,079, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.21113276474104092;  // std dev = 0,494, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.19692029136682487;  // std dev = 0,068, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.18941609935298578;  // std dev = 0,462, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16767269501758478;  // std dev = 0,060, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B), actor(A) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.17086642988951983;  // std dev = 0,429, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.1455905691039461;  // std dev = 0,053, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A), actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.1549066245242082;  // std dev = 0,399, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082699
   Precision = 0.523364 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.687117


Total learning time: 1.685 seconds
Total inference time: 1.657 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 03:35:56
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.082699, 'Precision': [0.523364, 0.5], 'Learning time': 1.685, 'F1': 0.687117, 'Inference time': 1.657, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.98376
   AUC PR    = 0.343975
   CLL	      = -0.159424
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.674 seconds
Total inference time: 0.867 seconds
AUC ROC: 0.98376


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 03:35:58
{'AUC ROC': 0.98376, 'Recall': 0.0, 'CLL': -0.159424, 'Precision': [nan, 0.5], 'Learning time': 0.674, 'F1': nan, 'Inference time': 0.867, 'AUC PR': 0.343975}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415830986;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601496;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05331955015598376;  // std dev = 0,121, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.23725871657170594;  // std dev = 0,076, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04823292339911355;  // std dev = 0,124, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22579086256817713;  // std dev = 0,175, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then return -0.10558618866536064;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08449674669921614;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.1890605089925011;  // std dev = 0,157, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.08710385133048687;  // std dev = 0,013, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07818565643556472;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.16195749078317356;  // std dev = 0,141, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), actor(F) )
%   | | | then return -0.08872273683544915;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07270167043168742;  // std dev = 0,000583, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.12054180967411876;  // std dev = 0,208, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.03986680140497626;  // std dev = 0,087, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069639
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.076 seconds
Total inference time: 1.908 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104691
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.599 seconds
Parameter learned model CLL: -0.104691


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [7.3e-08, 0, 20], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [1.67e-08, 19, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [5.27e-09, 0, 18], 'true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'false': [0.121, 19, 2]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [0.076, 1, 18], 'true,false': [0.0, 0, 0], 'false': [0.124, 19, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.175, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.157, 0, 20], 'true,true,true,false': [0.013, 2, 0], 'false,false': [0.0, 18, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)', 'true,true,false': 'movie(D, F), actor(F)'}, {'true,true,true,true': [0.141, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.000583, 19, 0], 'true,true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.208, 1, 18], 'true,false': [0.0, 0, 0], 'false': [0.087, 19, 2], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.04535147392290242, 0.0], 'true,false,true': [0.0, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.03237580555397633, 0.0], 'true,false,true': [0.0, nan], 'true,true': [2.6645352591003756e-16, nan], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02021770255628346, 1.460819769243627e-17], 'true,true': [-2.6645352591003756e-16, 0.0], 'true': [0.02021770255628346, nan]}, {'': [0.012221093081438202, -5.843279076974508e-18], 'true,true': [1.3322676295501878e-16, 0.0], 'true': [0.012221093081438202, nan]}, {'': [0.008521436462911007, 0.01472626170297465], 'true,true': [2.4671622769447922e-17, 0.0], 'true': [0.008521436462911007, nan], 'true,true,false': [0.0, nan]}, {'': [0.0057760994461187815, 0.01525365145268516], 'true': [0.0057760994461187815, nan]}, {'': [0.006439451013322344, -1.460819769243627e-18], 'true,false,true': [0.0, nan], 'true': [0.0015323402266439578, 0.0], 'true,false': [0.0, nan]}, {'': [0.007428327093693449, -7.709882115452476e-19], 'true,true,true': [0.00122986511826213, 7.953420018381747e-05], 'true,true': [0.007428327093693449, nan], 'true': [0.007428327093693449, nan], 'false': [nan, -7.709882115452476e-19]}, {'': [0.003797438600988507, 1.7901315412472448e-08], 'true,true,true': [0.000994902125374858, nan], 'true,true': [0.000994902125374858, 0.0], 'true': [0.003797438600988507, nan], 'true,true,false': [0.0, nan]}, {'': [0.0022747093661616134, 0.007492398947371568], 'true,true': [0.0022747093661616134, nan], 'true': [0.0022747093661616134, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5076748071077211;  // std dev = 0,172, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3860944006502344;  // std dev = 0,155, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.33333157638827715;  // std dev = 0,033, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.23621814523735488;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.18291080604367946;  // std dev = 0,338, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2611959083299728;  // std dev = 0,035, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.23485037228357242;  // std dev = 0,120, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.08645199579497413;  // std dev = 0,023, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22084624234914677;  // std dev = 0,038, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.23597146186701917;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07986607680687306;  // std dev = 0,022, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then return 0.18520081132722543;  // std dev = 0,033, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14509686248468798;  // std dev = 0,072, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.0730864199509665;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.15361956600801627;  // std dev = 0,024, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.13770683151248692;  // std dev = 0,087, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06903170916324924;  // std dev = 0,014, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.1295778491442311;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.11969076034745053;  // std dev = 0,087, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( actor(B) )
%   | then return -0.0640237562883185;  // std dev = 3,73e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.07255188337023821;  // std dev = 0,184, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069682
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.133 seconds
Total inference time: 1.287 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104172
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.532 seconds
Refined model CLL: -0.104172


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069682
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.34 seconds
Total inference time: 1.287 seconds
AUC ROC: 1.0
Total revision time: 3.34
Best scored revision CLL: -0.104172


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 03:36:05
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.069682, 'Precision': [1.0, 0.5], 'Learning time': 3.34, 'parameter_20': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.069639, 'Precision': [1.0, 0.5], 'Learning time': 1.076, 'F1': 1.0, 'Inference time': 1.908, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.287, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6622329172201352;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5154428111118985;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3875647182006322;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.29398103437200096;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2288562690978686;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.08518475138839686;  // std dev = 1,05e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.18306311556471894;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.2058562623243672;  // std dev = 0,094, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.24959909697114885;  // std dev = 0,611, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.17430526899070015;  // std dev = 0,083, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.2266741557690858;  // std dev = 0,584, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.15067321875881629;  // std dev = 0,074, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.20659911108700535;  // std dev = 0,554, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096768
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 1.787 seconds
Total inference time: 1.488 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 03:36:08
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.096768, 'Precision': [0.339394, 0.5], 'Learning time': 1.787, 'F1': 0.506787, 'Inference time': 1.488, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.98376
   AUC PR    = 0.343975
   CLL	      = -0.159403
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.652 seconds
Total inference time: 0.858 seconds
AUC ROC: 0.98376


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 03:36:10
{'AUC ROC': 0.98376, 'Recall': 0.0, 'CLL': -0.159403, 'Precision': [nan, 0.5], 'Learning time': 0.652, 'F1': nan, 'Inference time': 0.858, 'AUC PR': 0.343975}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,36e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601496;  // std dev = 5,27e-09, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.033633687139345156;  // std dev = 0,145, 28,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.2397014701168583;  // std dev = 0,071, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.030189171087693367;  // std dev = 0,146, 28,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2319238143064077;  // std dev = 0,224, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then return -0.09663931196982145;  // std dev = 0,013, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08746152477962114;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.19358202419646506;  // std dev = 0,200, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.08593110917801276;  // std dev = 0,014, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08072828045635477;  // std dev = 1,58e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.16539934346747412;  // std dev = 0,179, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), actor(F) )
%   | | | then return -0.08184469422962429;  // std dev = 0,011, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07492086884973852;  // std dev = 0,000352, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.12021248029554074;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.028720543578727293;  // std dev = 0,101, 28,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072279
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.09 seconds
Total inference time: 1.485 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108141
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.664 seconds
Parameter learned model CLL: -0.108141


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [2.36e-08, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 25], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 23, 0], 'true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0], 'true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [5.27e-09, 0, 21], 'true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'false': [0.145, 24, 4]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [0.071, 1, 21], 'true,false': [0.0, 0, 0], 'false': [0.146, 24, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.224, 0, 25], 'true,false,true,true': [0.013, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.18e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.2, 0, 25], 'true,true,true,false': [0.014, 3, 0], 'false,false': [1.58e-08, 22, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)', 'true,true,false': 'movie(D, F), actor(F)'}, {'true,true,true,true': [0.179, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.000352, 23, 0], 'true,true,false,true': [0.011, 2, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.208, 1, 21], 'true,false': [0.0, 0, 0], 'false': [0.101, 24, 4], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.06858710562414343, 9.654113257610057e-18], 'true,false,true': [0.0, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.04896340963409988, -2.413528314402514e-18], 'true,false,true': [0.0, nan], 'true,true': [-7.105427357601002e-17, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.030576155100552255, 4.827056628805028e-18], 'true,true': [-2.842170943040401e-16, 0.0], 'true': [0.030576155100552255, nan]}, {'': [0.01848251731452055, -2.413528314402514e-18], 'true,true': [-3.552713678800501e-17, 0.0], 'true': [0.01848251731452055, nan]}, {'': [0.007415175599785167, 0.02092679294633241], 'true,true': [4.229421046191072e-17, 0.0], 'true': [0.007415175599785167, nan], 'true,true,false': [0.0, nan]}, {'': [0.00502624080590294, 0.021393145321404117], 'true': [0.00502624080590294, nan]}, {'': [0.009276042439898883, 6.033820786006285e-18], 'true,false,true': [8.42317777086047e-05, nan], 'true': [0.0020148148522512077, 8.42317777086047e-05], 'true,false': [8.42317777086047e-05, nan]}, {'': [0.008909383193901289, 1.1354553660939102e-17], 'true,true,true': [0.001600315085742512, 6.150576592201552e-05], 'true,true': [0.008909383193901289, nan], 'true': [0.008909383193901289, nan], 'false': [nan, 1.1354553660939102e-17]}, {'': [0.005385077821417423, 5.385864016848668e-09], 'true,true,true': [0.0012827729619562288, nan], 'true,true': [0.0012827729619562288, 6.239395656737999e-05], 'true': [0.005385077821417423, nan], 'true,true,false': [6.239395656737999e-05, nan]}, {'': [0.0019718370585335055, 0.01014208385508632], 'true,true': [0.0019718370585335055, nan], 'true': [0.0019718370585335055, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.48117945730851897;  // std dev = 0,210, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3683705750884093;  // std dev = 0,190, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3403119336670478;  // std dev = 0,057, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.22833341389532236;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( female(A), director(B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( actor(B) )
%   | | then return -0.09269127618926093;  // std dev = 1,18e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.00904242606174129;  // std dev = 0,426, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2527007282265268;  // std dev = 0,005, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.22534997864214093;  // std dev = 0,155, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else return -0.08554430770216363;  // std dev = 0,008, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22641589388821534;  // std dev = 0,093, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.25001754806588383;  // std dev = 0,031, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07908563054926364;  // std dev = 0,008, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then return 0.1892863596798026;  // std dev = 0,082, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.16427688908276006;  // std dev = 0,106, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07320086471848697;  // std dev = 8,33e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.13659171402166392;  // std dev = 0,091, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0684169291502178;  // std dev = 0,000667, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.13058354886290213;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.12795508051897844;  // std dev = 0,080, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( director(B), female(A) )
%   | then return 0.13282493300158238;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then if ( female(B) )
%   | | | then return -0.06415502489867767;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.012198791278641496;  // std dev = 0,232, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.073985024663409;  // std dev = 0,152, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06939
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.457 seconds
Total inference time: 1.296 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107645
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.573 seconds
Refined model CLL: -0.107645


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06939
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.7840000000000003 seconds
Total inference time: 1.296 seconds
AUC ROC: 1.0
Total revision time: 3.7840000000000003
Best scored revision CLL: -0.107645


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 03:36:17
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.06939, 'Precision': [1.0, 0.5], 'parameter_25': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.072279, 'Precision': [1.0, 0.5], 'Learning time': 1.09, 'F1': 1.0, 'Inference time': 1.485, 'AUC PR': 1.0}, 'Learning time': 3.7840000000000003, 'F1': 1.0, 'Inference time': 1.296, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7470378239884012;  // std dev = 0,314, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else return -0.14185106490048777;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6302322013528497;  // std dev = 0,314, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.49302521280871553;  // std dev = 0,314, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.37132231240916236;  // std dev = 0,314, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.3659238533946083;  // std dev = 0,170, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.4366600207954261;  // std dev = 0,421, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.28618830149617075;  // std dev = 0,148, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.3548019793292951;  // std dev = 0,359, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.19740155387467162;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17710140765097102;  // std dev = 0,209, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else return -0.07727553740391531;  // std dev = 0,034, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2007061803968625;  // std dev = 0,123, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07334819552904476;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.07334819552904473;  // std dev = 6,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.3183120088069243;  // std dev = 0,340, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17052854222137503;  // std dev = 0,108, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06851622637800027;  // std dev = 4,56e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(B) )
%   | then return -0.06851622637800027;  // std dev = 6,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.2631730401442551;  // std dev = 0,285, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06427057829920706;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.14780951910891255;  // std dev = 0,096, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.06427057829920704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return -0.22106646197947613;  // std dev = 0,242, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07361
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.755 seconds
Total inference time: 1.479 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 03:36:21
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.07361, 'Precision': [1.0, 0.5], 'Learning time': 1.755, 'F1': 1.0, 'Inference time': 1.479, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7470378239884012;  // std dev = 0,314, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else return -0.14185106490048777;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 0.98376
   AUC PR    = 0.343975
   CLL	      = -0.159476
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.656 seconds
Total inference time: 0.873 seconds
AUC ROC: 0.98376


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 03:36:22
{'AUC ROC': 0.98376, 'Recall': 0.0, 'CLL': -0.159476, 'Precision': [nan, 0.5], 'Learning time': 0.656, 'F1': nan, 'Inference time': 0.873, 'AUC PR': 0.343975}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583099;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070714
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.898 seconds
Total inference time: 1.473 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.543 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'false,false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true,true': [4.4408920985006264e-17, nan], 'true': [4.4408920985006264e-17, nan]}, {'': [-2.2204460492503132e-17, 0.0], 'true,true': [-2.2204460492503132e-17, nan], 'true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [-5.551115123125783e-18, nan]}, {'': [0.0, -6.938893903907229e-19], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, nan], 'false': [nan, -6.938893903907229e-19]}, {'': [0.0, 6.938893903907229e-19], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true,true': [0.0, nan], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159582
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.635 seconds
Total inference time: 1.251 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.47 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070714
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.5460000000000003 seconds
Total inference time: 1.473 seconds
AUC ROC: 1.0
Total revision time: 2.5460000000000003
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 03:36:28
{'AUC ROC': 1.0, 'parameter_5': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.070714, 'Precision': [1.0, 0.5], 'Learning time': 0.898, 'F1': 1.0, 'Inference time': 1.473, 'AUC PR': 1.0}, 'Recall': 1.0, 'CLL': -0.070714, 'Precision': [1.0, 0.5], 'Learning time': 2.5460000000000003, 'F1': 1.0, 'Inference time': 1.473, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.168993
   Precision = 0.245763 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.394558


Total learning time: 1.044 seconds
Total inference time: 1.071 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 03:36:31
{'AUC ROC': 0.973999, 'Recall': 1.0, 'CLL': -0.168993, 'Precision': [0.245763, 0.5], 'Learning time': 1.044, 'F1': 0.394558, 'Inference time': 1.071, 'AUC PR': 0.245763}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.162966
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.511 seconds
Total inference time: 0.837 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 03:36:32
{'AUC ROC': 0.973999, 'Recall': 0.0, 'CLL': -0.162966, 'Precision': [nan, 0.5], 'Learning time': 0.511, 'F1': nan, 'Inference time': 0.837, 'AUC PR': 0.245763}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415830986;  // std dev = 1,18e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.2551722425694894;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 1,61e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070714
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.94 seconds
Total inference time: 1.457 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.58 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [2.98e-08, 0, 10], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)'}, {'true,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [5.27e-09, 0, 10], 'true,false': [0.0, 0, 0], 'false': [9.31e-10, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [7.45e-09, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'false,false': [2.63e-09, 10, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true,true': [0.0, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [1.61e-09, 10, 0], 'true,true,false': [0.0, 0, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true,true': [8.881784197001253e-17, nan], 'true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true,true': [-1.7763568394002506e-16, nan], 'true': [-1.7763568394002506e-16, nan]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true,true': [1.3322676295501878e-16, nan], 'true': [1.3322676295501878e-16, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, nan]}, {'': [3.3306690738754695e-17, 1.3877787807814458e-18], 'true': [3.3306690738754695e-17, nan]}, {'': [-2.7755575615628914e-17, 0.0], 'true': [-2.7755575615628914e-17, nan]}, {'': [5.551115123125783e-18, 6.938893903907229e-19], 'true,true,true': [5.551115123125783e-18, nan], 'true,true': [5.551115123125783e-18, nan], 'true': [5.551115123125783e-18, nan], 'false': [nan, 6.938893903907229e-19]}, {'': [0.0, 6.938893903907229e-19], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 1.3877787807814458e-18], 'true,true': [0.0, nan], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926096;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159582
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.706 seconds
Total inference time: 1.185 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.486 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070714
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.7119999999999997 seconds
Total inference time: 1.457 seconds
AUC ROC: 1.0
Total revision time: 2.7119999999999997
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 03:36:38
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.070714, 'Precision': [1.0, 0.5], 'Learning time': 2.7119999999999997, 'parameter_10': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.070714, 'Precision': [1.0, 0.5], 'Learning time': 0.94, 'F1': 1.0, 'Inference time': 1.457, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.457, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.168993
   Precision = 0.245763 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.394558


Total learning time: 1.096 seconds
Total inference time: 1.114 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 03:36:41
{'AUC ROC': 0.973999, 'Recall': 1.0, 'CLL': -0.168993, 'Precision': [0.245763, 0.5], 'Learning time': 1.096, 'F1': 0.394558, 'Inference time': 1.114, 'AUC PR': 0.245763}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.162966
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.54 seconds
Total inference time: 0.797 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 03:36:42
{'AUC ROC': 0.973999, 'Recall': 0.0, 'CLL': -0.162966, 'Precision': [nan, 0.5], 'Learning time': 0.54, 'F1': nan, 'Inference time': 0.797, 'AUC PR': 0.245763}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583098;  // std dev = 1,18e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.044055614618742064;  // std dev = 0,133, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.2551722425694894;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.03970662954235979;  // std dev = 0,135, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22702030893652106;  // std dev = 0,170, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08588315794691317;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.1900267225568695;  // std dev = 0,152, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.07937613389045452;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07937613389045452;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.1627323637413019;  // std dev = 0,137, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07376593403645934;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.12941221167156303;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.03450700013277083;  // std dev = 0,094, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076154
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.986 seconds
Total inference time: 1.692 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105075
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.639 seconds
Parameter learned model CLL: -0.105075


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [5.16e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [1.39e-08, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)'}, {'true,true,true': [0.0, 0, 13], 'true,false': [0.0, 0, 0], 'false': [0.133, 15, 2], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [5.27e-09, 0, 13], 'true,false': [0.0, 0, 0], 'false': [0.135, 15, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.17, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.152, 0, 15], 'true,true,true,false': [0.0, 1, 0], 'false,false': [0.0, 14, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true,true': [0.137, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [7.45e-09, 0, 13], 'true,false': [0.0, 0, 0], 'false': [0.094, 15, 2], 'true,true,false': [0.0, 0, 0]}]]
[{'': [-2.3684757858670006e-16, -1.4802973661668754e-17], 'true': [-2.3684757858670006e-16, nan]}, {'': [1.7763568394002506e-16, 3.7007434154171884e-18], 'true,true': [1.7763568394002506e-16, nan], 'true': [1.7763568394002506e-16, nan]}, {'': [-2.3684757858670006e-16, 1.295260195396016e-17], 'true,true': [-2.3684757858670006e-16, nan], 'true': [-2.3684757858670006e-16, nan]}, {'': [1.4802973661668753e-16, -5.551115123125783e-18], 'true,true': [1.4802973661668753e-16, nan], 'true': [1.4802973661668753e-16, nan]}, {'': [-5.124106267500723e-17, 0.017740706823015352], 'true,true': [-5.124106267500723e-17, nan], 'true': [-5.124106267500723e-17, nan]}, {'': [3.416070845000482e-17, 0.01826232121088032], 'true': [3.416070845000482e-17, nan]}, {'': [0.0019369813292621958, -3.7007434154171884e-18], 'true': [0.0019369813292621958, nan]}, {'': [0.0057038083953996135, 0.0], 'true,true,true': [0.0015479435970526664, 0.0], 'true,true': [0.0057038083953996135, nan], 'true': [0.0057038083953996135, nan], 'false': [nan, 0.0]}, {'': [0.001247750490818574, -3.7007434154171884e-18], 'true,true,true': [0.001247750490818574, nan], 'true,true': [0.001247750490818574, nan], 'true': [0.001247750490818574, nan]}, {'': [4.270088556250602e-18, 0.008862147131477897], 'true,true': [4.270088556250602e-18, nan], 'true': [4.270088556250602e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.18291080604367946;  // std dev = 0,338, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.2551722425694894;  // std dev = 2,11e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( actor(B) )
%   | then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.1517343808231003;  // std dev = 0,320, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.21546110371405483;  // std dev = 0,056, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08185354357521903;  // std dev = 0,045, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then return 0.18130628675169205;  // std dev = 0,050, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11625147991160963;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07303764363408646;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15595510438958865;  // std dev = 0,044, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.0706834467125943;  // std dev = 0,035, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.13249125458779232;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( actor(B) )
%   | then return -0.06388468109898339;  // std dev = 6,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.07570994654111018;  // std dev = 0,213, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.147969
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.888 seconds
Total inference time: 1.281 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098121
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.5 seconds
Refined model CLL: -0.098121


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.147969
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 3.013 seconds
Total inference time: 1.281 seconds
AUC ROC: 1.0
Total revision time: 3.013
Best scored revision CLL: -0.098121


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 03:36:49
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.147969, 'Precision': [0.263636, 0.5], 'Learning time': 3.013, 'F1': 0.417266, 'Inference time': 1.281, 'parameter_15': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.076154, 'Precision': [1.0, 0.5], 'Learning time': 0.986, 'F1': 1.0, 'Inference time': 1.692, 'AUC PR': 1.0}, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839689;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 1.217 seconds
Total inference time: 1.076 seconds
AUC ROC: 0.976337


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 03:36:51
{'AUC ROC': 0.976337, 'Recall': 1.0, 'CLL': -0.159504, 'Precision': [0.263636, 0.5], 'Learning time': 1.217, 'F1': 0.417266, 'Inference time': 1.076, 'AUC PR': 0.263636}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.162069
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.54 seconds
Total inference time: 0.853 seconds
AUC ROC: 0.976337


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 03:36:53
{'AUC ROC': 0.976337, 'Recall': 0.0, 'CLL': -0.162069, 'Precision': [nan, 0.5], 'Learning time': 0.54, 'F1': nan, 'Inference time': 0.853, 'AUC PR': 0.263636}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415830986;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.020795080824146064;  // std dev = 0,157, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.23515124292490786;  // std dev = 0,080, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.018571754111517506;  // std dev = 0,158, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.23634613148706513;  // std dev = 0,208, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then return -0.10538732897470761;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08943320316120842;  // std dev = 9,13e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.19679146036959091;  // std dev = 0,185, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.08913459097705292;  // std dev = 0,010, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08241267918960185;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.16780818875432657;  // std dev = 0,165, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), actor(F) )
%   | | | then return -0.08840475170697285;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0763663074049016;  // std dev = 0,000460, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.11688216630163781;  // std dev = 0,205, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.021883297951293627;  // std dev = 0,107, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074241
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.109 seconds
Total inference time: 1.829 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110646
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.69 seconds
Parameter learned model CLL: -0.110646


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [7.3e-08, 0, 20], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [1.67e-08, 19, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 16], 'true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'false': [0.157, 19, 4]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [0.08, 1, 16], 'true,false': [0.0, 0, 0], 'false': [0.158, 19, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.208, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.13e-09, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.185, 0, 20], 'true,true,true,false': [0.01, 2, 0], 'false,false': [5.27e-09, 18, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)', 'true,true,false': 'movie(D, F), actor(F)'}, {'true,true,true,true': [0.165, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.00046, 19, 0], 'true,true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.205, 1, 16], 'true,false': [0.0, 0, 0], 'false': [0.107, 19, 4], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.04535147392290242, 0.0], 'true,false,true': [0.0, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.03237580555397633, 0.0], 'true,false,true': [0.0, nan], 'true,true': [2.6645352591003756e-16, nan], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02021770255628346, 1.460819769243627e-17], 'true,true': [-2.6645352591003756e-16, 0.0], 'true': [0.02021770255628346, nan]}, {'': [0.012221093081438202, -5.843279076974508e-18], 'true,true': [1.3322676295501878e-16, 0.0], 'true': [0.012221093081438202, nan]}, {'': [0.009461710305608181, 0.02455304881289914], 'true,true': [0.0, 0.0], 'true': [0.009461710305608181, nan], 'true,true,false': [0.0, nan]}, {'': [0.006413446828293368, 0.024888329061303067], 'true': [0.006413446828293368, nan]}, {'': [0.007355592315862485, 4.382459307730881e-18], 'true,false,true': [0.0, nan], 'true': [0.0021623358364566635, 0.0], 'true,false': [0.0, nan]}, {'': [0.008311243410227537, 1.5419764230904951e-18], 'true,true,true': [0.001705694174289396, 4.5184098078271395e-05], 'true,true': [0.008311243410227537, nan], 'true': [0.008311243410227537, nan], 'false': [nan, 1.5419764230904951e-18]}, {'': [0.004271360139276145, 1.1151689489239275e-08], 'true,true,true': [0.0013589723910101769, nan], 'true,true': [0.0013589723910101769, 0.0], 'true': [0.004271360139276145, nan], 'true,true,false': [0.0, nan]}, {'': [0.0024605788823255877, 0.011529761746766022], 'true,true': [0.0024605788823255877, nan], 'true': [0.0024605788823255877, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5076748071077211;  // std dev = 0,172, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3860944006502344;  // std dev = 0,155, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.33272485863692486;  // std dev = 0,032, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.23621814523735488;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), director(B) )
%   | then return 0.3294485827796225;  // std dev = 0,017, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09269127618926094;  // std dev = 9,13e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2530727853193357;  // std dev = 0,000740, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.23505282992113677;  // std dev = 0,120, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.08518475138839686;  // std dev = 1,05e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21893027055342565;  // std dev = 0,035, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.2360079646891977;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then return 0.18380648871946176;  // std dev = 0,031, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.13468496629804466;  // std dev = 0,087, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.14955444023671755;  // std dev = 0,000498, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.13812957296284437;  // std dev = 0,087, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06822623758363425;  // std dev = 0,004, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.13140518204255425;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.11588490037140066;  // std dev = 0,094, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( director(B), actor(A) )
%   | then return 0.13824166864284154;  // std dev = 0,013, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.06401474254178477;  // std dev = 0,003, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072367
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.219 seconds
Total inference time: 1.344 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102734
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.522 seconds
Refined model CLL: -0.102734


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072367
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.54 seconds
Total inference time: 1.344 seconds
AUC ROC: 1.0
Total revision time: 3.54
Best scored revision CLL: -0.102734


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 03:37:00
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.072367, 'Precision': [1.0, 0.5], 'Learning time': 3.54, 'parameter_20': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.074241, 'Precision': [1.0, 0.5], 'Learning time': 1.109, 'F1': 1.0, 'Inference time': 1.829, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.344, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6622329172201352;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5154428111118985;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3875647182006322;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.29398103437200096;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2844954312415074;  // std dev = 0,096, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.23881735340968763;  // std dev = 0,532, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.23038073664266764;  // std dev = 0,083, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(B), actor(A) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.2130644783903497;  // std dev = 0,501, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.19214693323196078;  // std dev = 0,073, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.19127501094599705;  // std dev = 0,469, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.16411031692573314;  // std dev = 0,064, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.17262673669157386;  // std dev = 0,436, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.14284793663945825;  // std dev = 0,057, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(B), actor(A) )
%   | then return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.1565516068642857;  // std dev = 0,405, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.090415
   Precision = 0.54717 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.707317


Total learning time: 1.689 seconds
Total inference time: 1.628 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 03:37:04
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.090415, 'Precision': [0.54717, 0.5], 'Learning time': 1.689, 'F1': 0.707317, 'Inference time': 1.628, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.977485
   AUC PR    = 0.280399
   CLL	      = -0.161996
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.638 seconds
Total inference time: 0.872 seconds
AUC ROC: 0.977485


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 03:37:06
{'AUC ROC': 0.977485, 'Recall': 0.0, 'CLL': -0.161996, 'Precision': [nan, 0.5], 'Learning time': 0.638, 'F1': nan, 'Inference time': 0.872, 'AUC PR': 0.280399}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,36e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601496;  // std dev = 3,73e-09, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.018869289876866185;  // std dev = 0,158, 28,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.2242306976642271;  // std dev = 0,098, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.016839206766386706;  // std dev = 0,159, 28,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2376541902780775;  // std dev = 0,227, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then return -0.10436215883741057;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08973156740173964;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.19771111462931273;  // std dev = 0,202, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.09089058203518607;  // std dev = 0,010, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0826671199765552;  // std dev = 7,45e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.1684791806649077;  // std dev = 0,180, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), actor(F) )
%   | | | then return -0.08747026768845624;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07658539397791699;  // std dev = 0,000567, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.11101395041638257;  // std dev = 0,284, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.020915654161451153;  // std dev = 0,108, 28,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074451
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.17 seconds
Total inference time: 1.456 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111543
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.683 seconds
Parameter learned model CLL: -0.111543


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [2.36e-08, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 25], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 23, 0], 'true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0], 'true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [3.73e-09, 0, 20], 'true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'false': [0.158, 23, 5]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [0.098, 2, 20], 'true,false': [0.0, 0, 0], 'false': [0.159, 23, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.227, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.18e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.202, 0, 25], 'true,true,true,false': [0.01, 3, 0], 'false,false': [7.45e-09, 22, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)', 'true,true,false': 'movie(D, F), actor(F)'}, {'true,true,true,true': [0.18, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.000567, 23, 0], 'true,true,false,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.284, 2, 20], 'true,false': [0.0, 0, 0], 'false': [0.108, 23, 5], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.06858710562414343, 9.654113257610057e-18], 'true,false,true': [0.0, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.04896340963409988, -2.413528314402514e-18], 'true,false,true': [0.0, nan], 'true,true': [-7.105427357601002e-17, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.030576155100552255, 4.827056628805028e-18], 'true,true': [-2.842170943040401e-16, 0.0], 'true': [0.030576155100552255, nan]}, {'': [0.01848251731452055, -2.413528314402514e-18], 'true,true': [-3.552713678800501e-17, 0.0], 'true': [0.01848251731452055, nan]}, {'': [0.014124143999590782, 0.02506855405029405], 'true,true': [2.2204460492503132e-17, 0.0], 'true': [0.014124143999590782, nan], 'true,true,false': [0.0, nan]}, {'': [0.009573792011243693, 0.02537875274072533], 'true': [0.009573792011243693, nan]}, {'': [0.009935097972203323, 6.033820786006285e-18], 'true,false,true': [0.0, nan], 'true': [0.0020650774349953147, 0.0], 'true,false': [0.0, nan]}, {'': [0.009424525759762218, 2.523234146875356e-18], 'true,true,true': [0.001627382118636973, 3.3812664114870696e-05], 'true,true': [0.009424525759762218, nan], 'true': [0.009424525759762218, nan], 'false': [nan, 2.523234146875356e-18]}, {'': [0.005692510591104546, 1.3976552735210344e-08], 'true,true,true': [0.0012953099485861496, nan], 'true,true': [0.0012953099485861496, 0.0], 'true': [0.005692510591104546, nan], 'true,true,false': [0.0, nan]}, {'': [0.0036767951813402033, 0.01169690357188448], 'true,true': [0.0036767951813402033, nan], 'true': [0.0036767951813402033, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.48117945730851897;  // std dev = 0,210, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.5182729470274018;  // std dev = 0,153, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.36837057508840926;  // std dev = 0,190, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.39312851372214325;  // std dev = 0,138, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.33772569245054723;  // std dev = 0,027, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.23387376842092686;  // std dev = 0,008, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( director(B), actor(A) )
%   | then return 0.3425912878328686;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.22383592592765483;  // std dev = 0,146, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.23787882827319345;  // std dev = 0,106, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else return -0.08518475138839682;  // std dev = 1,58e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22426539931120498;  // std dev = 0,031, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.23335689170899537;  // std dev = 0,010, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then return 0.18767321117436694;  // std dev = 0,027, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1539023231788688;  // std dev = 0,099, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1305750517111784;  // std dev = 0,105, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.13891175586871243;  // std dev = 0,077, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0682110712031161;  // std dev = 0,005, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11297873751047566;  // std dev = 0,105, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.12114809715353497;  // std dev = 0,077, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else return -0.06400137532355255;  // std dev = 0,005, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071905
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.249 seconds
Total inference time: 1.33 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107253
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.551 seconds
Refined model CLL: -0.107253


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071905
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.6530000000000005 seconds
Total inference time: 1.33 seconds
AUC ROC: 1.0
Total revision time: 3.6530000000000005
Best scored revision CLL: -0.107253


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 03:37:13
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.071905, 'Precision': [1.0, 0.5], 'parameter_25': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.074451, 'Precision': [1.0, 0.5], 'Learning time': 1.17, 'F1': 1.0, 'Inference time': 1.456, 'AUC PR': 1.0}, 'Learning time': 3.6530000000000005, 'F1': 1.0, 'Inference time': 1.33, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8025933795439567;  // std dev = 0,229, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6302322013528495;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.6749928282743806;  // std dev = 0,229, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.4930252128087158;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5243568433454531;  // std dev = 0,229, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.4601645717128715;  // std dev = 0,076, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.3898259313095877;  // std dev = 0,354, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.3499121875364144;  // std dev = 0,070, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.31502950614872943;  // std dev = 0,300, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.27506985786333243;  // std dev = 0,062, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.25875349680481957;  // std dev = 0,253, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.22375404221633174;  // std dev = 0,054, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.21669012879564356;  // std dev = 0,216, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.187317591913115;  // std dev = 0,047, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.18488679671733355;  // std dev = 0,186, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16046825892213368;  // std dev = 0,042, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.1603896140602014;  // std dev = 0,163, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14001844748888348;  // std dev = 0,038, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(B) )
%   | then return -0.06419184008202619;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.14113667742080307;  // std dev = 0,144, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070356
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.945 seconds
Total inference time: 1.643 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 03:37:17
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.070356, 'Precision': [1.0, 0.5], 'Learning time': 1.945, 'F1': 1.0, 'Inference time': 1.643, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8025933795439567;  // std dev = 0,229, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 0.975188
   AUC PR    = 0.252639
   CLL	      = -0.162062
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.713 seconds
Total inference time: 0.877 seconds
AUC ROC: 0.975188


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 03:37:18
{'AUC ROC': 0.975188, 'Recall': 0.0, 'CLL': -0.162062, 'Precision': [nan, 0.5], 'Learning time': 0.713, 'F1': nan, 'Inference time': 0.877, 'AUC PR': 0.252639}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583099;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.19844607690984173;  // std dev = 0,127, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21931540999270674;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then return -0.10197652126901377;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18407551867794292;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.09300951736417028;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.15801779574396146;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), actor(F) )
%   | | | then return -0.08545477360936525;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.10192438199021399;  // std dev = 0,198, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070751
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.958 seconds
Total inference time: 2.402 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10159
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.569 seconds
Parameter learned model CLL: -0.10159


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [0.127, 1, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [5.27e-09, 0, 5], 'true,true,true,false': [0.0, 1, 0], 'false,false': [0.0, 4, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)', 'true,true,false': 'movie(D, F), actor(F)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.198, 1, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true,false,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.09915090450905224, 0.0], 'true,false,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.061916714078618984, 0.0], 'true,true': [-4.4408920985006264e-17, 0.0], 'true': [0.061916714078618984, nan]}, {'': [0.03742709756190412, 0.0], 'true,true': [4.4408920985006264e-17, 0.0], 'true': [0.03742709756190412, nan]}, {'': [0.02373640866597888, 0.0], 'true,true': [-2.2204460492503132e-17, 0.0], 'true': [0.02373640866597888, nan], 'true,true,false': [0.0, nan]}, {'': [0.01608928935222897, 0.0], 'true': [0.01608928935222897, nan]}, {'': [0.014337292374150842, 0.0], 'true,false,true': [0.0, nan], 'true': [-1.1102230246251566e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.010663349610897111, 0.0], 'true,true,true': [5.551115123125783e-18, 0.0], 'true,true': [0.010663349610897111, nan], 'true': [0.010663349610897111, nan], 'false': [nan, 0.0]}, {'': [0.008233179448265347, 0.0], 'true,true,true': [0.0, nan], 'true,true': [0.0, 0.0], 'true': [0.008233179448265347, nan], 'true,true,false': [0.0, nan]}, {'': [0.006547346522489347, 0.0], 'true,true': [0.006547346522489347, nan], 'true': [0.006547346522489347, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.44408596758963603;  // std dev = 0,610, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.34320526267881896;  // std dev = 0,556, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3624113167136419;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.21754946214698206;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.20575802054536188;  // std dev = 0,426, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2435926087292767;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.21554898873995793;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then return 0.20154345598385462;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.18133261169794362;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.11654824839574418;  // std dev = 0,299, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.10063943302070211;  // std dev = 0,299, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.088874
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.704 seconds
Total inference time: 1.383 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.122421
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.494 seconds
Refined model CLL: -0.122421


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070751
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.7249999999999996 seconds
Total inference time: 2.402 seconds
AUC ROC: 1.0
Total revision time: 2.7249999999999996
Best scored revision CLL: -0.10159


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 03:37:26
{'AUC ROC': 1.0, 'parameter_5': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.070751, 'Precision': [1.0, 0.5], 'Learning time': 0.958, 'F1': 1.0, 'Inference time': 2.402, 'AUC PR': 1.0}, 'Recall': 1.0, 'CLL': -0.070751, 'Precision': [1.0, 0.5], 'Learning time': 2.7249999999999996, 'F1': 1.0, 'Inference time': 2.402, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6056364498471037;  // std dev = 0,801, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.15612031201574286;  // std dev = 0,106, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.4845912943420874;  // std dev = 0,759, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.13701473982051887;  // std dev = 0,096, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14726242728701588;  // std dev = 0,175, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.38755131270767945;  // std dev = 0,641, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.13069242947318732;  // std dev = 0,160, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.29623661057414924;  // std dev = 0,616, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24221489086665268;  // std dev = 0,533, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.13818278300855044;  // std dev = 0,219, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1909477009467079;  // std dev = 0,529, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12398127764140526;  // std dev = 0,201, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1271651337286327;  // std dev = 0,237, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.162844788542252;  // std dev = 0,477, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.13309504077101025;  // std dev = 0,480, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.11562152024706876;  // std dev = 0,220, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1184493351346096;  // std dev = 0,249, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.11850265039157866;  // std dev = 0,439, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */


Results
   AUC ROC   = 0.985041
   AUC PR    = 0.626761
   CLL	      = -0.228642
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.022 seconds
Total inference time: 1.306 seconds
AUC ROC: 0.985041


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 03:37:28
{'AUC ROC': 0.985041, 'Recall': 1.0, 'CLL': -0.228642, 'Precision': [0.626761, 0.5], 'Learning time': 1.022, 'F1': 0.770563, 'Inference time': 1.306, 'AUC PR': 0.626761}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.231676
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.484 seconds
Total inference time: 0.854 seconds
AUC ROC: 0.870167


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 03:37:30
{'AUC ROC': 0.870167, 'Recall': 0.0, 'CLL': -0.231676, 'Precision': [nan, 0.5], 'Learning time': 0.484, 'F1': nan, 'Inference time': 0.854, 'AUC PR': 0.162113}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415830986;  // std dev = 1,18e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0513509638543199;  // std dev = 0,124, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.22113654317370077;  // std dev = 0,102, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04641582005851349;  // std dev = 0,126, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22814700216761485;  // std dev = 0,120, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then return -0.10407329989682691;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08479005748659897;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.1907489018454121;  // std dev = 0,108, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.09476139639628497;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07843773255390755;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.1632111734357865;  // std dev = 0,097, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), actor(F) )
%   | | | then return -0.08693885134725245;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07295204520834318;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.11169599124360137;  // std dev = 0,202, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.038818975758002985;  // std dev = 0,088, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075307
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.016 seconds
Total inference time: 2.168 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106334
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.626 seconds
Parameter learned model CLL: -0.106334


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [2.98e-08, 0, 10], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'false': [0.124, 9, 1]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [0.102, 1, 9], 'true,false': [0.0, 0, 0], 'false': [0.126, 9, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.12, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.108, 0, 10], 'true,true,true,false': [0.0, 1, 0], 'false,false': [3.73e-09, 9, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)', 'true,true,false': 'movie(D, F), actor(F)'}, {'true,true,true,true': [0.097, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0], 'true,true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.202, 1, 9], 'true,false': [0.0, 0, 0], 'false': [0.088, 9, 1], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true,false,true': [0.0, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.058998885327700486, 0.0], 'true,false,true': [0.0, nan], 'true,true': [8.881784197001253e-17, nan], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true,true': [-1.7763568394002506e-16, 0.0], 'true': [0.036843003418682206, nan]}, {'': [0.02227066962361243, 3.0839528461809902e-18], 'true,true': [1.3322676295501878e-16, 0.0], 'true': [0.02227066962361243, nan]}, {'': [0.015381192815554301, 0.015381192815554324], 'true,true': [-3.700743415417188e-17, 0.0], 'true': [0.015381192815554301, nan], 'true,true,false': [0.0, nan]}, {'': [0.0104258595002444, 0.01591098167101323], 'true': [0.0104258595002444, nan]}, {'': [0.010439459986745357, 0.0], 'true,false,true': [0.0, nan], 'true': [0.0014497397032572578, 0.0], 'true,false': [0.0, nan]}, {'': [0.007792854923782445, 1.5419764230904951e-18], 'true,true,true': [0.0011615831068822525, 0.0], 'true,true': [0.007792854923782445, nan], 'true': [0.007792854923782445, nan], 'false': [nan, 1.5419764230904951e-18]}, {'': [0.006024243999574259, -3.854941057726238e-18], 'true,true,true': [0.0009380288632630518, nan], 'true,true': [0.0009380288632630518, 0.0], 'true': [0.006024243999574259, nan], 'true,true,false': [0.0, nan]}, {'': [0.004095013679198278, 0.007753034160265909], 'true,true': [0.004095013679198278, nan], 'true': [0.004095013679198278, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4218298737583063;  // std dev = 0,597, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3278967330645655;  // std dev = 0,547, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.33751970288971384;  // std dev = 0,071, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.21122301676481162;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( female(A), actor(B) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 7.406191835961362E-5;  // std dev = 0,415, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3150218934873263;  // std dev = 0,065, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.20274971493521873;  // std dev = 0,121, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.09802075050723055;  // std dev = 0,086, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.23005689761887022;  // std dev = 0,080, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.16426743483646108;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.0838661236272859;  // std dev = 0,031, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then return 0.19196917803977703;  // std dev = 0,071, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14294032676746166;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07765111840393177;  // std dev = 0,028, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1194081406390581;  // std dev = 0,278, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.1528011723038234;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0722752108807193;  // std dev = 0,027, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1638721324254289;  // std dev = 0,042, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1020273096791612;  // std dev = 0,078, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.0731329294098298;  // std dev = 0,071, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.09548
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.15 seconds
Total inference time: 1.461 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107302
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.509 seconds
Refined model CLL: -0.107302


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075307
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.3009999999999997 seconds
Total inference time: 2.168 seconds
AUC ROC: 1.0
Total revision time: 3.3009999999999997
Best scored revision CLL: -0.106334


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 03:37:37
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.075307, 'Precision': [1.0, 0.5], 'Learning time': 3.3009999999999997, 'parameter_10': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.075307, 'Precision': [1.0, 0.5], 'Learning time': 1.016, 'F1': 1.0, 'Inference time': 2.168, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 2.168, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7580193346218546;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.598770833533905;  // std dev = 0,296, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.13839308595614183;  // std dev = 0,110, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5947969362557473;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4718039069034324;  // std dev = 0,277, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.12286262144747363;  // std dev = 0,100, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.09947184665611794;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1483510837042503;  // std dev = 0,169, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return 0.31849803825392586;  // std dev = 0,577, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.46786344351765513;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.09090962595462568;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.13148746883026674;  // std dev = 0,154, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return 0.24598669964555947;  // std dev = 0,557, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.35512489473177716;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.3153013548366469;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.20442263001942915;  // std dev = 0,182, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( female(A), actor(B) )
%   | then return -0.08367060006074158;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.13325311336494736;  // std dev = 0,195, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.07747502338363592;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12096500432383075;  // std dev = 0,183, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return 0.14628008361842837;  // std dev = 0,470, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.23937034984564312;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.22495313927865745;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.13361905069572902;  // std dev = 0,159, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( female(A), actor(B) )
%   | then return -0.07211579409752168;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12175610718201646;  // std dev = 0,211, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.06743657351040269;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.11119310357726331;  // std dev = 0,197, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return 0.09464762141807812;  // std dev = 0,418, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.17812188470358448;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.17413044385564347;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.0944265377419095;  // std dev = 0,145, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( female(A) )
%   | then return -0.10257541053169368;  // std dev = 0,215, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.04879449408939938;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.977561
   AUC PR    = 0.504309
   CLL	      = -0.272469
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 2.064 seconds
Total inference time: 1.383 seconds
AUC ROC: 0.977561


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 03:37:41
{'AUC ROC': 0.977561, 'Recall': 1.0, 'CLL': -0.272469, 'Precision': [0.626761, 0.5], 'Learning time': 2.064, 'F1': 0.770563, 'Inference time': 1.383, 'AUC PR': 0.504309}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */


Results
   AUC ROC   = 0.848575
   AUC PR    = 0.136922
   CLL	      = -0.235923
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.59 seconds
Total inference time: 0.855 seconds
AUC ROC: 0.848575


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 03:37:43
{'AUC ROC': 0.848575, 'Recall': 0.0, 'CLL': -0.235923, 'Precision': [nan, 0.5], 'Learning time': 0.59, 'F1': nan, 'Inference time': 0.855, 'AUC PR': 0.136922}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583098;  // std dev = 1,18e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06513106796596693;  // std dev = 0,103, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.2324817763056303;  // std dev = 0,085, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05919578956241302;  // std dev = 0,105, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22253261738619495;  // std dev = 0,130, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then return -0.10513591441059413;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08275157729209745;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.1866233403427164;  // std dev = 0,117, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.09564713964766525;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07668340597332567;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.1600780121905493;  // std dev = 0,106, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), actor(F) )
%   | | | then return -0.08768768095462733;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07142718558509543;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.11892807782595809;  // std dev = 0,207, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.046890681100384;  // std dev = 0,075, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073863
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.024 seconds
Total inference time: 1.93 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102869
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.641 seconds
Parameter learned model CLL: -0.102869


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [5.16e-08, 0, 15], 'false': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [1.18e-08, 14, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 14], 'true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'false': [0.103, 14, 1]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [0.085, 1, 14], 'true,false': [0.0, 0, 0], 'false': [0.105, 14, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.13, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.117, 0, 15], 'true,true,true,false': [0.0, 1, 0], 'false,false': [0.0, 14, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)', 'true,true,false': 'movie(D, F), actor(F)'}, {'true,true,true,true': [0.106, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0], 'true,true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.207, 1, 14], 'true,false': [0.0, 0, 0], 'false': [0.075, 14, 1], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true,false,true': [0.0, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.041829287839756535, 3.96508223080413e-18], 'true,false,true': [0.0, nan], 'true,true': [1.7763568394002506e-16, nan], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true,true': [-2.3684757858670006e-16, 0.0], 'true': [0.02612111375191717, nan]}, {'': [0.015789556783928405, -3.96508223080413e-18], 'true,true': [1.4802973661668753e-16, 0.0], 'true': [0.015789556783928405, nan]}, {'': [0.010633911082358515, 0.010633911082358545], 'true,true': [-3.172065784643304e-17, 0.0], 'true': [0.010633911082358515, nan], 'true,true,false': [0.0, nan]}, {'': [0.007208001629798614, 0.011102887086315608], 'true': [0.007208001629798614, nan]}, {'': [0.007351537007218814, -3.96508223080413e-18], 'true,false,true': [0.0, nan], 'true': [0.0011312228037502722, 0.0], 'true,false': [0.0, nan]}, {'': [0.0055248391771991374, -1.982541115402065e-18], 'true,true,true': [0.0009133727968873758, 0.0], 'true,true': [0.0055248391771991374, nan], 'true': [0.0055248391771991374, nan], 'false': [nan, -1.982541115402065e-18]}, {'': [0.004293281991589969, 0.0], 'true,true,true': [0.0007427608722974359, nan], 'true,true': [0.0007427608722974359, 0.0], 'true': [0.004293281991589969, nan], 'true,true,false': [0.0, nan]}, {'': [0.0028528537946405827, 0.005567388892412892], 'true,true': [0.0028528537946405827, nan], 'true': [0.0028528537946405827, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4599831774691573;  // std dev = 0,234, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.354042432180887;  // std dev = 0,213, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3334064824080874;  // std dev = 0,064, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.2221345832860717;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( movie(E, A), movie(E, B) )
%   | then if ( female(A) )
%   | | then return 0.0569580911586178;  // std dev = 0,367, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08695747846296224;  // std dev = 0,016, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.22526098566623448;  // std dev = 0,169, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.25276701594514006;  // std dev = 1,49e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2246081896093748;  // std dev = 0,093, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.22267526614745878;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08029831332006596;  // std dev = 0,015, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then return 0.1880210380383094;  // std dev = 0,082, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.18651452438050653;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07456574486190377;  // std dev = 0,014, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13181678978524242;  // std dev = 0,120, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.14813486739792958;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06958170053228468;  // std dev = 0,013, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06521047831632833;  // std dev = 0,013, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.11318890226429439;  // std dev = 0,120, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.13039849464365305;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101222
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.194 seconds
Total inference time: 1.677 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105729
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.529 seconds
Refined model CLL: -0.105729


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073863
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.388 seconds
Total inference time: 1.93 seconds
AUC ROC: 1.0
Total revision time: 3.388
Best scored revision CLL: -0.102869


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 03:37:50
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.073863, 'Precision': [1.0, 0.5], 'Learning time': 3.388, 'F1': 1.0, 'Inference time': 1.93, 'parameter_15': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.073863, 'Precision': [1.0, 0.5], 'Learning time': 1.024, 'F1': 1.0, 'Inference time': 1.93, 'AUC PR': 1.0}, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.3584548159137827;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.2697478132793615;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.2062525881598365;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.24737970684094404;  // std dev = 0,178, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A), actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.2331293926349296;  // std dev = 0,535, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.20466906419123418;  // std dev = 0,156, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.20876539922230436;  // std dev = 0,503, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17363246606636393;  // std dev = 0,138, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.18798778063030785;  // std dev = 0,471, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.15029698105718894;  // std dev = 0,123, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A), actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.17009020897291882;  // std dev = 0,438, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.977561
   AUC PR    = 0.504309
   CLL	      = -0.299454
   Precision = 0.162113 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.278997


Total learning time: 1.738 seconds
Total inference time: 1.636 seconds
AUC ROC: 0.977561


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 03:37:54
{'AUC ROC': 0.977561, 'Recall': 1.0, 'CLL': -0.299454, 'Precision': [0.162113, 0.5], 'Learning time': 1.738, 'F1': 0.278997, 'Inference time': 1.636, 'AUC PR': 0.504309}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */


Results
   AUC ROC   = 0.848575
   AUC PR    = 0.136922
   CLL	      = -0.23606
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.647 seconds
Total inference time: 0.913 seconds
AUC ROC: 0.848575


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 03:37:56
{'AUC ROC': 0.848575, 'Recall': 0.0, 'CLL': -0.23606, 'Precision': [nan, 0.5], 'Learning time': 0.647, 'F1': nan, 'Inference time': 0.913, 'AUC PR': 0.136922}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415830986;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601496;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05331955015598376;  // std dev = 0,121, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.23725871657170594;  // std dev = 0,076, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04823292339911355;  // std dev = 0,124, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22579086256817713;  // std dev = 0,175, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then return -0.10558618866536064;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08449674669921614;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.1890605089925011;  // std dev = 0,157, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.09602204622540905;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07818565643556472;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.16195749078317356;  // std dev = 0,141, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), actor(F) )
%   | | | then return -0.08800433151082532;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07273320640357836;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.12057411552479683;  // std dev = 0,207, 19,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.039891797029781;  // std dev = 0,087, 21,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07517
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.14 seconds
Total inference time: 2.357 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104684
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.666 seconds
Parameter learned model CLL: -0.104684


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [7.3e-08, 0, 20], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [1.67e-08, 19, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [5.27e-09, 0, 18], 'true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'false': [0.121, 19, 2]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [0.076, 1, 18], 'true,false': [0.0, 0, 0], 'false': [0.124, 19, 2]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.175, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.157, 0, 20], 'true,true,true,false': [0.0, 1, 0], 'false,false': [0.0, 19, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)', 'true,true,false': 'movie(D, F), actor(F)'}, {'true,true,true,true': [0.141, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0], 'true,true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.207, 1, 18], 'true,false': [0.0, 0, 0], 'false': [0.087, 19, 2], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.04535147392290242, 0.0], 'true,false,true': [0.0, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.03237580555397633, 0.0], 'true,false,true': [0.0, nan], 'true,true': [2.6645352591003756e-16, nan], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02021770255628346, 1.460819769243627e-17], 'true,true': [-2.6645352591003756e-16, 0.0], 'true': [0.02021770255628346, nan]}, {'': [0.012221093081438202, -5.843279076974508e-18], 'true,true': [1.3322676295501878e-16, 0.0], 'true': [0.012221093081438202, nan]}, {'': [0.008521436462911007, 0.014726261702974645], 'true,true': [2.4671622769447922e-17, 0.0], 'true': [0.008521436462911007, nan], 'true,true,false': [0.0, nan]}, {'': [0.0057760994461187815, 0.01525365145268516], 'true': [0.0057760994461187815, nan]}, {'': [0.006439451013322333, -1.460819769243627e-18], 'true,false,true': [0.0, nan], 'true': [0.0015323402266439468, 0.0], 'true,false': [0.0, nan]}, {'': [0.004857107971568141, -1.460819769243627e-18], 'true,true,true': [0.00122986511826213, 0.0], 'true,true': [0.004857107971568141, nan], 'true': [0.004857107971568141, nan], 'false': [nan, -1.460819769243627e-18]}, {'': [0.003781127312354143, -3.652049423109067e-18], 'true,true,true': [0.0009949021253748635, nan], 'true,true': [0.0009949021253748635, 0.0], 'true': [0.003781127312354143, nan], 'true,true,false': [0.0, nan]}, {'': [0.0022616540947806413, 0.007493788639892514], 'true,true': [0.0022616540947806413, nan], 'true': [0.0022616540947806413, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.48859815525229555;  // std dev = 0,200, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.37335366934007574;  // std dev = 0,181, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3302905528931078;  // std dev = 0,051, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.23052593460878668;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.19933144444303627;  // std dev = 0,358, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08653664884304865;  // std dev = 0,025, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.23356971649810565;  // std dev = 0,142, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.2533559930339759;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2209565999933724;  // std dev = 0,069, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.2310662947849707;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07993893005775583;  // std dev = 0,023, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then return 0.18531074694829297;  // std dev = 0,060, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.19257470325632767;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.0742555354501762;  // std dev = 0,022, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13732578042364596;  // std dev = 0,101, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.1492600693560724;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06931141021206731;  // std dev = 0,021, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.10685348172559733;  // std dev = 0,110, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.1312813784391417;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( actor(A), actor(B) )
%   | then return -0.0639275652347123;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.08256820942741365;  // std dev = 0,204, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.114238
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.29 seconds
Total inference time: 1.408 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.551 seconds
Refined model CLL: -0.104


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.114238
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.6470000000000002 seconds
Total inference time: 1.408 seconds
AUC ROC: 1.0
Total revision time: 3.6470000000000002
Best scored revision CLL: -0.104


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 03:38:04
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.114238, 'Precision': [1.0, 0.5], 'Learning time': 3.6470000000000002, 'parameter_20': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.07517, 'Precision': [1.0, 0.5], 'Learning time': 1.14, 'F1': 1.0, 'Inference time': 2.357, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.408, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.6392070123615109;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.49932275605826126;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.3758491322444214;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.28401811356076057;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.219396647293074;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.17369760260917727;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.20565273748039026;  // std dev = 0,141, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( female(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.1876127200914891;  // std dev = 0,626, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.1742495353034726;  // std dev = 0,124, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( female(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.1718269496421303;  // std dev = 0,604, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1506939852065296;  // std dev = 0,111, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A), actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.15821835812810522;  // std dev = 0,580, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.977561
   AUC PR    = 0.504309
   CLL	      = -0.375833
   Precision = 0.162113 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.278997


Total learning time: 1.601 seconds
Total inference time: 1.315 seconds
AUC ROC: 0.977561


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 03:38:07
{'AUC ROC': 0.977561, 'Recall': 1.0, 'CLL': -0.375833, 'Precision': [0.162113, 0.5], 'Learning time': 1.601, 'F1': 0.278997, 'Inference time': 1.315, 'AUC PR': 0.504309}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */


Results
   AUC ROC   = 0.848575
   AUC PR    = 0.136922
   CLL	      = -0.236206
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.65 seconds
Total inference time: 0.935 seconds
AUC ROC: 0.848575


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 03:38:09
{'AUC ROC': 0.848575, 'Recall': 0.0, 'CLL': -0.236206, 'Precision': [nan, 0.5], 'Learning time': 0.65, 'F1': nan, 'Inference time': 0.935, 'AUC PR': 0.136922}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,36e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014955;  // std dev = 6,45e-09, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.046757595817104224;  // std dev = 0,130, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.2403741123974075;  // std dev = 0,069, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04218697764983846;  // std dev = 0,132, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2276014104648614;  // std dev = 0,208, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then return -0.10588076134269644;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08547717974478936;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.1904087268152476;  // std dev = 0,186, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.0962671779658765;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07902779982505677;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.16299280877890077;  // std dev = 0,167, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), actor(F) )
%   | | | then return -0.08821127488193181;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07346396231956186;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.12171804856905678;  // std dev = 0,208, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.036105521649841925;  // std dev = 0,092, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075905
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.144 seconds
Total inference time: 2.059 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105669
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.673 seconds
Parameter learned model CLL: -0.105669


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [2.36e-08, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 25], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 24, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [6.45e-09, 0, 22], 'true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'false': [0.13, 24, 3]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [0.069, 1, 22], 'true,false': [0.0, 0, 0], 'false': [0.132, 24, 3]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.208, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.186, 0, 25], 'true,true,true,false': [0.0, 1, 0], 'false,false': [0.0, 24, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)', 'true,true,false': 'movie(D, F), actor(F)'}, {'true,true,true,true': [0.167, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0], 'true,true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.208, 1, 22], 'true,false': [0.0, 0, 0], 'false': [0.092, 24, 3], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.03698224852071082, 9.25185853854297e-18], 'true,false,true': [0.0, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.026401128419570055, -4.625929269271485e-18], 'true,false,true': [0.0, nan], 'true,true': [-7.105427357601002e-17, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.016486699015016572, 2.3129646346357427e-18], 'true,true': [-2.842170943040401e-16, 0.0], 'true': [0.016486699015016572, nan]}, {'': [0.009965795208791005, -2.3129646346357427e-18], 'true,true': [-3.552713678800501e-17, 0.0], 'true': [0.009965795208791005, nan]}, {'': [0.007107461498470833, 0.016879223940251636], 'true,true': [2.0185873175002847e-17, 0.0], 'true': [0.007107461498470833, nan], 'true,true,false': [0.0, nan]}, {'': [0.004817662444977447, 0.017406931181877004], 'true': [0.004817662444977447, nan]}, {'': [0.0057808002303222274, 9.25185853854297e-18], 'true,false,true': [0.0, nan], 'true': [0.0017347107428625995, 0.0], 'true,false': [0.0, nan]}, {'': [0.004373540403890977, -3.469446951953614e-18], 'true,true,true': [0.0013875945438129155, 0.0], 'true,true': [0.004373540403890977, nan], 'true': [0.004373540403890977, nan], 'false': [nan, -3.469446951953614e-18]}, {'': [0.0034098607583876984, -2.3129646346357427e-18], 'true,true,true': [0.0011191978176509564, nan], 'true,true': [0.0011191978176509564, 0.0], 'true': [0.0034098607583876984, nan], 'true,true,false': [0.0, nan]}, {'': [0.001874750552563309, 0.008456246869676576], 'true,true': [0.001874750552563309, nan], 'true': [0.001874750552563309, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.49972620216796043;  // std dev = 0,185, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3807983432695074;  // std dev = 0,167, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3290753679776865;  // std dev = 0,047, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.23383690888238207;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.09269127618926094;  // std dev = 1,05e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0.33434128849243194;  // std dev = 0,017, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.23245210457970145;  // std dev = 0,129, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.25351483162578975;  // std dev = 0,000959, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21705152183334903;  // std dev = 0,048, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.2335889026593118;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then return 0.18244429182982158;  // std dev = 0,042, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1943881895415046;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13761026770167997;  // std dev = 0,091, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.15020886005076658;  // std dev = 0,000647, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420275;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.11390955761192334;  // std dev = 0,100, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.1320679068765349;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return 0.14151130939009535;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.113824
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.199 seconds
Total inference time: 1.642 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100831
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.549 seconds
Refined model CLL: -0.100831


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.113824
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.565 seconds
Total inference time: 1.642 seconds
AUC ROC: 1.0
Total revision time: 3.565
Best scored revision CLL: -0.100831


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 03:38:17
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.113824, 'Precision': [1.0, 0.5], 'parameter_25': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.075905, 'Precision': [1.0, 0.5], 'Learning time': 1.144, 'F1': 1.0, 'Inference time': 2.059, 'AUC PR': 1.0}, 'Learning time': 3.565, 'F1': 1.0, 'Inference time': 1.642, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.6526478931012827;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.508738411682717;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.38266873164552506;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 1,05e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.2897830208139342;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.22484413364919764;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.17907321293961084;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.20975771563253562;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.14591312396794645;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.1770964977452774;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17551074435057104;  // std dev = 0,128, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.15931275793807642;  // std dev = 0,240, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06419184008202618;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.15163703624820005;  // std dev = 0,114, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( female(A), actor(B) )
%   | then return -0.06419184008202618;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.14762290721201393;  // std dev = 0,235, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 0.977561
   AUC PR    = 0.504309
   CLL	      = -0.442277
   Precision = 0.162113 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.278997


Total learning time: 1.71 seconds
Total inference time: 1.392 seconds
AUC ROC: 0.977561


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 03:38:20
{'AUC ROC': 0.977561, 'Recall': 1.0, 'CLL': -0.442277, 'Precision': [0.162113, 0.5], 'Learning time': 1.71, 'F1': 0.278997, 'Inference time': 1.392, 'AUC PR': 0.504309}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */


Results
   AUC ROC   = 0.848575
   AUC PR    = 0.136922
   CLL	      = -0.236272
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.648 seconds
Total inference time: 0.869 seconds
AUC ROC: 0.848575


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 03:38:22
{'AUC ROC': 0.848575, 'Recall': 0.0, 'CLL': -0.236272, 'Precision': [nan, 0.5], 'Learning time': 0.648, 'F1': nan, 'Inference time': 0.869, 'AUC PR': 0.136922}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583099;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.023790755631025878;  // std dev = 0,154, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.021272022047791203;  // std dev = 0,155, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.23392763368715377;  // std dev = 0,108, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08897043806053966;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.19508690083990898;  // std dev = 0,096, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08201780577681322;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.166561824306441;  // std dev = 0,086, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07605052744175067;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.127642846590588;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.02339767326839647;  // std dev = 0,106, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081723
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.845 seconds
Total inference time: 1.434 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108978
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.49 seconds
Parameter learned model CLL: -0.108978


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)'}, {'true,true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false': [0.154, 5, 1], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false': [0.155, 5, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.108, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.096, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'false,false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true,true': [0.086, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false': [0.106, 5, 1], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true,true': [4.4408920985006264e-17, nan], 'true': [4.4408920985006264e-17, nan]}, {'': [0.0, 0.023736408665978894], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.024108009491603535], 'true': [0.0, nan]}, {'': [0.0023367397550678403, -1.3877787807814458e-18], 'true': [0.0023367397550678403, nan]}, {'': [0.0018464757825894184, 0.0], 'true,true,true': [0.0018464757825894184, nan], 'true,true': [0.0018464757825894184, nan], 'true': [0.0018464757825894184, nan], 'false': [nan, 0.0]}, {'': [0.001473723788798842, 0.0], 'true,true,true': [0.001473723788798842, nan], 'true,true': [0.001473723788798842, nan], 'true': [0.001473723788798842, nan]}, {'': [0.0, 0.01127096928329678], 'true,true': [0.0, nan], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.023790755631025878;  // std dev = 0,377, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.021272022047791203;  // std dev = 0,380, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.23392763368715377;  // std dev = 0,108, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08897043806053966;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then return 0.19508690083990898;  // std dev = 0,096, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08201780577681322;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.166561824306441;  // std dev = 0,086, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07605052744175067;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.127642846590588;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.02339767326839647;  // std dev = 0,260, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */


Results
   AUC ROC   = 0.969593
   AUC PR    = 0.28125
   CLL	      = -0.197874
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 0.636 seconds
Total inference time: 0.966 seconds
AUC ROC: 0.969593


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108978
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.461 seconds
Refined model CLL: -0.108978


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081723
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.432 seconds
Total inference time: 1.434 seconds
AUC ROC: 1.0
Total revision time: 2.432
Best scored revision CLL: -0.108978


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 03:38:27
{'AUC ROC': 1.0, 'parameter_5': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.081723, 'Precision': [1.0, 0.5], 'Learning time': 0.845, 'F1': 1.0, 'Inference time': 1.434, 'AUC PR': 1.0}, 'Recall': 1.0, 'CLL': -0.081723, 'Precision': [1.0, 0.5], 'Learning time': 2.432, 'F1': 1.0, 'Inference time': 1.434, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.965362
   AUC PR    = 0.255682
   CLL	      = -0.203547
   Precision = 0.255682 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.40724


Total learning time: 1.05 seconds
Total inference time: 0.952 seconds
AUC ROC: 0.965362


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 03:38:29
{'AUC ROC': 0.965362, 'Recall': 1.0, 'CLL': -0.203547, 'Precision': [0.255682, 0.5], 'Learning time': 1.05, 'F1': 0.40724, 'Inference time': 0.952, 'AUC PR': 0.255682}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.965362
   AUC PR    = 0.255682
   CLL	      = -0.173677
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.497 seconds
Total inference time: 0.706 seconds
AUC ROC: 0.965362


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 03:38:31
{'AUC ROC': 0.965362, 'Recall': 0.0, 'CLL': -0.173677, 'Precision': [nan, 0.5], 'Learning time': 0.497, 'F1': nan, 'Inference time': 0.706, 'AUC PR': 0.255682}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415830986;  // std dev = 1,18e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.05510917406658727;  // std dev = 0,119, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.2551722425694894;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.049887313949129326;  // std dev = 0,121, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22318224310564655;  // std dev = 0,127, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then return -0.08423070887532945;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08423070887532945;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18718644783061053;  // std dev = 0,114, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.07795691802736343;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07795691802736343;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.16056286593617947;  // std dev = 0,103, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), actor(F) )
%   | | | then return -0.07253455114466338;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07253455114466338;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.1304123233906782;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04086115694242501;  // std dev = 0,085, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071498
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.99 seconds
Total inference time: 1.381 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102844
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.619 seconds
Parameter learned model CLL: -0.102844


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [2.98e-08, 0, 10], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)'}, {'true,true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 0], 'false': [0.119, 10, 1], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [5.27e-09, 0, 9], 'true,false': [0.0, 0, 0], 'false': [0.121, 10, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.127, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.114, 0, 10], 'true,true,true,false': [0.0, 1, 0], 'false,false': [0.0, 9, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)', 'true,true,false': 'movie(D, F), actor(F)'}, {'true,true,true,true': [0.103, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 9, 0], 'true,true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 0], 'false': [0.085, 10, 1], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true,false,true': [0.0, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.058998885327700486, 0.0], 'true,false,true': [0.0, nan], 'true,true': [8.881784197001253e-17, nan], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true,true': [-1.7763568394002506e-16, 0.0], 'true': [0.036843003418682206, nan]}, {'': [0.02227066962361243, 3.0839528461809902e-18], 'true,true': [1.3322676295501878e-16, 0.0], 'true': [0.02227066962361243, nan]}, {'': [-3.700743415417188e-17, 0.014124143999590747], 'true,true': [-3.700743415417188e-17, nan], 'true': [-3.700743415417188e-17, nan]}, {'': [3.700743415417188e-17, 0.014647591505743907], 'true': [3.700743415417188e-17, nan]}, {'': [0.009284652801273763, 0.0], 'true,false,true': [0.0, nan], 'true': [0.0016219614408867877, 0.0], 'true,false': [0.0, nan]}, {'': [0.006995631781259296, 0.0], 'true,true,true': [0.0013041945540674615, 0.0], 'true,true': [0.006995631781259296, nan], 'true': [0.006995631781259296, nan], 'false': [nan, 0.0]}, {'': [0.005451378383585072, 1.5419764230904951e-18], 'true,true,true': [0.0010570247810562706, nan], 'true,true': [0.0010570247810562706, 0.0], 'true': [0.005451378383585072, nan], 'true,true,false': [0.0, nan]}, {'': [0.0, 0.007258991684323973], 'true,true': [0.0, nan], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.3884457330113118;  // std dev = 0,578, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.30462164652790913;  // std dev = 0,533, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3348765494603215;  // std dev = 0,079, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.029941391761688002;  // std dev = 0,441, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.26501093282119226;  // std dev = 0,070, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return 0.02511539217873374;  // std dev = 0,439, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.294032050985295;  // std dev = 0,095, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20580664332415344;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.2109561606627462;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.08084895111788214;  // std dev = 0,018, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.23759835430903886;  // std dev = 0,084, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17419310304106506;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.17797500243107706;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07504336982245251;  // std dev = 0,016, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1099369188587273;  // std dev = 0,313, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.15053775282058476;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06999979307724635;  // std dev = 0,015, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.13686092016405793;  // std dev = 0,026, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06386569732935608;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.003395495441361714;  // std dev = 0,301, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.086523
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.038 seconds
Total inference time: 1.137 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110007
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.505 seconds
Refined model CLL: -0.110007


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071498
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.152 seconds
Total inference time: 1.381 seconds
AUC ROC: 1.0
Total revision time: 3.152
Best scored revision CLL: -0.102844


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 03:38:37
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.071498, 'Precision': [1.0, 0.5], 'Learning time': 3.152, 'parameter_10': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.071498, 'Precision': [1.0, 0.5], 'Learning time': 0.99, 'F1': 1.0, 'Inference time': 1.381, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.381, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5439428120454434;  // std dev = 0,773, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.13738723844337883;  // std dev = 0,101, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.6565389375455651;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.461177100910026;  // std dev = 0,249, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.12203720796007723;  // std dev = 0,093, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.16027770660165827;  // std dev = 0,149, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09963600624653211;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A) )
%   | then return 0.3259304213649928;  // std dev = 0,596, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.44058222902207994;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.14086814221322805;  // std dev = 0,134, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09104749765633409;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A) )
%   | then return 0.2515931458680666;  // std dev = 0,573, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.33639931979757437;  // std dev = 1,49e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.35751773317544866;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.20451805469085516;  // std dev = 0,162, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( female(A) )
%   | then return -0.14861713883049057;  // std dev = 0,179, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08378792051439125;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.28015921579660485;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.16659417128879245;  // std dev = 0,162, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( female(A) )
%   | then return -0.1321387502947541;  // std dev = 0,162, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07757599649176865;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.1374693399205055;  // std dev = 0,194, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07220356474967522;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(A) )
%   | then return 0.11053053182767208;  // std dev = 0,404, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.19990419931029346;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(B) )
%   | then return -0.11766259299332595;  // std dev = 0,174, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06096504860766858;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then return 0.09123327396037426;  // std dev = 0,406, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.16983495437457874;  // std dev = 5,27e-09, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.19378596122944858;  // std dev = 3,73e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.0981035819680956;  // std dev = 0,130, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( female(A) )
%   | then return -0.12495346732284247;  // std dev = 0,188, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0621238198714768;  // std dev = 0,004, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.998684
   AUC PR    = 0.897867
   CLL	      = -0.191255
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 1.613 seconds
Total inference time: 1.217 seconds
AUC ROC: 0.998684


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 03:38:40
{'AUC ROC': 0.998684, 'Recall': 1.0, 'CLL': -0.191255, 'Precision': [0.918367, 0.5], 'Learning time': 1.613, 'F1': 0.957447, 'Inference time': 1.217, 'AUC PR': 0.897867}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */


Results
   AUC ROC   = 0.963505
   AUC PR    = 0.244543
   CLL	      = -0.173906
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.618 seconds
Total inference time: 0.737 seconds
AUC ROC: 0.963505


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 03:38:42
{'AUC ROC': 0.963505, 'Recall': 0.0, 'CLL': -0.173906, 'Precision': [nan, 0.5], 'Learning time': 0.618, 'F1': nan, 'Inference time': 0.737, 'AUC PR': 0.244543}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583098;  // std dev = 1,18e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0668535809799228;  // std dev = 0,100, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.2551722425694894;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.060803229127936634;  // std dev = 0,102, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21904950463159215;  // std dev = 0,135, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then return -0.08249917232062208;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08249917232062208;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.18410572660365532;  // std dev = 0,121, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.0764657898586453;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07646578985864529;  // std dev = 6,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.1581938092265173;  // std dev = 0,109, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), actor(F) )
%   | | | then return -0.07123773198887455;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07123773198887454;  // std dev = 6,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.13150288213439337;  // std dev = 1,29e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04785570533681211;  // std dev = 0,073, 16,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070068
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.025 seconds
Total inference time: 1.328 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100387
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.626 seconds
Parameter learned model CLL: -0.100387


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [5.16e-08, 0, 15], 'false': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [1.18e-08, 14, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)'}, {'true,true,true': [0.0, 0, 14], 'true,false': [0.0, 0, 0], 'false': [0.1, 15, 1], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [5.27e-09, 0, 14], 'true,false': [0.0, 0, 0], 'false': [0.102, 15, 1]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.135, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.73e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.121, 0, 15], 'true,true,true,false': [0.0, 1, 0], 'false,false': [6.45e-09, 14, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)', 'true,true,false': 'movie(D, F), actor(F)'}, {'true,true,true,true': [0.109, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.45e-09, 14, 0], 'true,true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [1.29e-08, 0, 14], 'true,false': [0.0, 0, 0], 'false': [0.073, 15, 1], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true,false,true': [0.0, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.041829287839756535, 3.96508223080413e-18], 'true,false,true': [0.0, nan], 'true,true': [1.7763568394002506e-16, nan], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true,true': [-2.3684757858670006e-16, 0.0], 'true': [0.02612111375191717, nan]}, {'': [0.015789556783928405, -3.96508223080413e-18], 'true,true': [1.4802973661668753e-16, 0.0], 'true': [0.015789556783928405, nan]}, {'': [-3.172065784643304e-17, 0.010013797405959847], 'true,true': [-3.172065784643304e-17, nan], 'true': [-3.172065784643304e-17, nan]}, {'': [3.172065784643304e-17, 0.010467638369630165], 'true': [3.172065784643304e-17, nan]}, {'': [0.006461201329658196, 9.912705577010326e-19], 'true,false,true': [0.0, nan], 'true': [0.001208722799241809, 0.0], 'true,false': [0.0, nan]}, {'': [0.004895515626795029, 2.9738116731030977e-18], 'true,true,true': [0.0009782886357815916, 0.0], 'true,true': [0.004895515626795029, nan], 'true': [0.004895515626795029, nan], 'false': [nan, 2.9738116731030977e-18]}, {'': [0.003831988235153766, 2.9738116731030977e-18], 'true,true,true': [0.0007975271109679734, nan], 'true,true': [0.0007975271109679734, 0.0], 'true': [0.003831988235153766, nan], 'true,true,false': [0.0, nan]}, {'': [1.1895246692412391e-17, 0.0053074122939223665], 'true,true': [1.1895246692412391e-17, nan], 'true': [1.1895246692412391e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4599831774691573;  // std dev = 0,234, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.354042432180887;  // std dev = 0,213, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3334064824080874;  // std dev = 0,064, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( movie(D, A), movie(D, B) )
%   | then return 0.0569580911586178;  // std dev = 0,367, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.10264845365824639;  // std dev = 0,124, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.2638963451797068;  // std dev = 0,056, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( movie(D, A), movie(D, B) )
%   | then return 0.0493720160304395;  // std dev = 0,360, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.09368065294032958;  // std dev = 0,116, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22370391408155227;  // std dev = 0,123, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.19006325713050257;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.0809595708837032;  // std dev = 0,032, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then return 0.18744706391024044;  // std dev = 0,109, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.16251099727664683;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07514190991751482;  // std dev = 0,030, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13518336617794416;  // std dev = 0,116, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.14692111986531609;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07008816021313126;  // std dev = 0,028, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.13675475272953871;  // std dev = 0,037, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( movie(D, A), movie(D, B) )
%   | then return 0.019167882522973818;  // std dev = 0,250, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.07014394501129322;  // std dev = 0,092, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.09239
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.086 seconds
Total inference time: 1.099 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10424
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.512 seconds
Refined model CLL: -0.10424


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070068
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.249 seconds
Total inference time: 1.328 seconds
AUC ROC: 1.0
Total revision time: 3.249
Best scored revision CLL: -0.100387


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 03:38:48
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.070068, 'Precision': [1.0, 0.5], 'Learning time': 3.249, 'F1': 1.0, 'Inference time': 1.328, 'parameter_15': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.070068, 'Precision': [1.0, 0.5], 'Learning time': 1.025, 'F1': 1.0, 'Inference time': 1.328, 'AUC PR': 1.0}, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.5013119587709255;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.32312996349537415;  // std dev = 0,200, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( female(A) )
%   | then return -0.23396023340158237;  // std dev = 0,324, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.3784660620049208;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2549346308498423;  // std dev = 0,184, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( actor(A), actor(B) )
%   | then return -0.0905817364452267;  // std dev = 0,013, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.20862135614496916;  // std dev = 0,284, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09447204398781972;  // std dev = 0,113, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return 0.24731607993742136;  // std dev = 0,165, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.14550527418494302;  // std dev = 0,173, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.23896368931170908;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07645132342236027;  // std dev = 0,011, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.19678337257876377;  // std dev = 0,310, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.2197109639462896;  // std dev = 1,05e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.13037570577434665;  // std dev = 0,144, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07122603984719124;  // std dev = 0,011, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.1728905985703898;  // std dev = 0,281, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.1274678103911423;  // std dev = 0,134, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06450711991890454;  // std dev = 0,024, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( female(A) )
%   | then return 0.10642637765052242;  // std dev = 0,191, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.17832915522215587;  // std dev = 7,45e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A), director(B) )
%   | then return 0.16889360350185245;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.09384002642520031;  // std dev = 0,127, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( female(A) )
%   | then return -0.16434165266534811;  // std dev = 0,272, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06072533501333919;  // std dev = 0,022, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.998684
   AUC PR    = 0.897867
   CLL	      = -0.152649
   Precision = 0.298013 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.459184


Total learning time: 2.01 seconds
Total inference time: 1.206 seconds
AUC ROC: 0.998684


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 03:38:51
{'AUC ROC': 0.998684, 'Recall': 1.0, 'CLL': -0.152649, 'Precision': [0.298013, 0.5], 'Learning time': 2.01, 'F1': 0.459184, 'Inference time': 1.206, 'AUC PR': 0.897867}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */


Results
   AUC ROC   = 0.963505
   AUC PR    = 0.244543
   CLL	      = -0.173781
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.629 seconds
Total inference time: 0.74 seconds
AUC ROC: 0.963505


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 03:38:53
{'AUC ROC': 0.963505, 'Recall': 0.0, 'CLL': -0.173781, 'Precision': [nan, 0.5], 'Learning time': 0.629, 'F1': nan, 'Inference time': 0.74, 'AUC PR': 0.244543}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415830986;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.020795080824146064;  // std dev = 0,157, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.23515124292490786;  // std dev = 0,080, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.018571754111517506;  // std dev = 0,158, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.23634613148706513;  // std dev = 0,208, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then return -0.09741026606795802;  // std dev = 0,011, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08943320316120842;  // std dev = 9,13e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.1967914603695909;  // std dev = 0,185, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.08918077225446853;  // std dev = 0,010, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08241267918960185;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.16780818875432657;  // std dev = 0,165, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), actor(F) )
%   | | | then return -0.08220165375547606;  // std dev = 0,010, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0763911979313119;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.1168195352209658;  // std dev = 0,206, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0218426405609075;  // std dev = 0,107, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074972
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.03 seconds
Total inference time: 1.431 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110657
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.637 seconds
Parameter learned model CLL: -0.110657


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [7.3e-08, 0, 20], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [1.67e-08, 18, 0], 'true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0], 'true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [0.0, 0, 16], 'true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'false': [0.157, 19, 4]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [0.08, 1, 16], 'true,false': [0.0, 0, 0], 'false': [0.158, 19, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.208, 0, 20], 'true,false,true,true': [0.011, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [9.13e-09, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.185, 0, 20], 'true,true,true,false': [0.01, 2, 0], 'false,false': [5.27e-09, 18, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)', 'true,true,false': 'movie(D, F), actor(F)'}, {'true,true,true,true': [0.165, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0], 'true,true,false,true': [0.01, 2, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.206, 1, 16], 'true,false': [0.0, 0, 0], 'false': [0.107, 19, 4], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.08264462809917356, -3.0839528461809902e-18], 'true,false,true': [0.0, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.05899888532770057, 0.0], 'true,false,true': [0.0, nan], 'true,true': [2.6645352591003756e-16, nan], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.03684300341868208, 1.5419764230904953e-17], 'true,true': [-2.6645352591003756e-16, 0.0], 'true': [0.03684300341868208, nan]}, {'': [0.022270669623612512, -4.625929269271485e-18], 'true,true': [1.3322676295501878e-16, 0.0], 'true': [0.022270669623612512, nan]}, {'': [0.009461710305608181, 0.02455304881289914], 'true,true': [0.0, 0.0], 'true': [0.009461710305608181, nan], 'true,true,false': [0.0, nan]}, {'': [0.006413446828293368, 0.024888329061303067], 'true': [0.006413446828293368, nan]}, {'': [0.01117760528890991, 4.625929269271485e-18], 'true,false,true': [6.363353261824162e-05, nan], 'true': [0.0021623358364566527, 6.363353261824162e-05], 'true,false': [6.363353261824162e-05, nan]}, {'': [0.00831425547948278, 1.5419764230904951e-18], 'true,true,true': [0.0017056941742894017, 5.430686597182946e-05], 'true,true': [0.00831425547948278, nan], 'true': [0.00831425547948278, nan], 'false': [nan, 1.5419764230904951e-18]}, {'': [0.006405384051844295, -7.709882115452476e-19], 'true,true,true': [0.0013589723910101715, nan], 'true,true': [0.0013589723910101715, 4.6844885843473974e-05], 'true': [0.006405384051844295, nan], 'true,true,false': [4.6844885843473974e-05, nan]}, {'': [0.0024854957732125048, 0.011525822537249838], 'true,true': [0.0024854957732125048, nan], 'true': [0.0024854957732125048, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.4946679990244764;  // std dev = 0,192, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.4946679990244764;  // std dev = 0,192, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3774188123230085;  // std dev = 0,174, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.3774188123230085;  // std dev = 0,174, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.3430550807508335;  // std dev = 2,58e-08, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.2323286242674962;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.2279783397471676;  // std dev = 0,515, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2750245906190947;  // std dev = 0,042, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.159821254091099;  // std dev = 0,160, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22370761383427956;  // std dev = 0,036, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.20723070693326;  // std dev = 0,053, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07819353400012678;  // std dev = 0,007, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then return 0.18727470584211642;  // std dev = 0,032, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.17548141547405705;  // std dev = 0,047, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07274023922089162;  // std dev = 0,007, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1322767648285178;  // std dev = 0,099, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.1318364820459915;  // std dev = 0,080, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06798405282268662;  // std dev = 0,006, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.14051152347374718;  // std dev = 3,73e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1153078909299349;  // std dev = 0,080, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( actor(B) )
%   | then return -0.06380103384966512;  // std dev = 0,006, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.08371117354045701;  // std dev = 0,319, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070352
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.451 seconds
Total inference time: 1.148 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107581
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.57 seconds
Refined model CLL: -0.107581


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070352
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.688 seconds
Total inference time: 1.148 seconds
AUC ROC: 1.0
Total revision time: 3.688
Best scored revision CLL: -0.107581


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 03:39:00
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.070352, 'Precision': [1.0, 0.5], 'Learning time': 3.688, 'parameter_20': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.074972, 'Precision': [1.0, 0.5], 'Learning time': 1.03, 'F1': 1.0, 'Inference time': 1.431, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.148, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.6465415686654066;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.6465415686654066;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.5044629797645588;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.5044629797645588;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4704732967125141;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.3155615163876612;  // std dev = 0,428, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.3569291299756465;  // std dev = 2,98e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.2635136847702436;  // std dev = 0,375, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2797611238837395;  // std dev = 4,21e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.22319332374297812;  // std dev = 0,327, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.22698615351561274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.1918074713849373;  // std dev = 0,287, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.18963338563437762;  // std dev = 1,83e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.16710514954849956;  // std dev = 0,254, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1621893714843506;  // std dev = 1,83e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.14739084596960433;  // std dev = 0,226, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1413385248951214;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.13142532796990455;  // std dev = 0,204, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.998942
   AUC PR    = 0.918367
   CLL	      = -0.077453
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 1.9 seconds
Total inference time: 1.275 seconds
AUC ROC: 0.998942


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 03:39:03
{'AUC ROC': 0.998942, 'Recall': 1.0, 'CLL': -0.077453, 'Precision': [0.918367, 0.5], 'Learning time': 1.9, 'F1': 0.957447, 'Inference time': 1.275, 'AUC PR': 0.918367}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */


Results
   AUC ROC   = 0.965362
   AUC PR    = 0.255682
   CLL	      = -0.173546
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.693 seconds
Total inference time: 0.723 seconds
AUC ROC: 0.965362


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 03:39:05
{'AUC ROC': 0.965362, 'Recall': 0.0, 'CLL': -0.173546, 'Precision': [nan, 0.5], 'Learning time': 0.693, 'F1': nan, 'Inference time': 0.723, 'AUC PR': 0.255682}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,36e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601496;  // std dev = 5,27e-09, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.033633687139345156;  // std dev = 0,145, 28,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.2397014701168583;  // std dev = 0,071, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.030189171087693367;  // std dev = 0,146, 28,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2319238143064077;  // std dev = 0,224, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then return -0.09663931196982145;  // std dev = 0,013, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08746152477962114;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.19358202419646503;  // std dev = 0,200, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.08853252353884175;  // std dev = 0,012, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.08072828045635477;  // std dev = 1,58e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.16539934346747412;  // std dev = 0,179, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), actor(F) )
%   | | | then return -0.08164958229277633;  // std dev = 0,011, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07493651531901423;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.12022082214495557;  // std dev = 0,208, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.02872628205755439;  // std dev = 0,101, 28,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073372
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.097 seconds
Total inference time: 1.525 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108139
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.672 seconds
Parameter learned model CLL: -0.108139


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [2.36e-08, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 25], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 23, 0], 'true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0], 'true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [5.27e-09, 0, 21], 'true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'false': [0.145, 24, 4]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [0.071, 1, 21], 'true,false': [0.0, 0, 0], 'false': [0.146, 24, 4]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.224, 0, 25], 'true,false,true,true': [0.013, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.18e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.2, 0, 25], 'true,true,true,false': [0.012, 2, 0], 'false,false': [1.58e-08, 23, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)', 'true,true,false': 'movie(D, F), actor(F)'}, {'true,true,true,true': [0.179, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0], 'true,true,false,true': [0.011, 2, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.208, 1, 21], 'true,false': [0.0, 0, 0], 'false': [0.101, 24, 4], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.06858710562414343, 9.654113257610057e-18], 'true,false,true': [0.0, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.04896340963409988, -2.413528314402514e-18], 'true,false,true': [0.0, nan], 'true,true': [-7.105427357601002e-17, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.030576155100552255, 4.827056628805028e-18], 'true,true': [-2.842170943040401e-16, 0.0], 'true': [0.030576155100552255, nan]}, {'': [0.01848251731452055, -2.413528314402514e-18], 'true,true': [-3.552713678800501e-17, 0.0], 'true': [0.01848251731452055, nan]}, {'': [0.007415175599785167, 0.02092679294633241], 'true,true': [4.229421046191072e-17, 0.0], 'true': [0.007415175599785167, nan], 'true,true,false': [0.0, nan]}, {'': [0.00502624080590294, 0.021393145321404117], 'true': [0.00502624080590294, nan]}, {'': [0.009276042439898876, 6.033820786006285e-18], 'true,false,true': [8.42317777086047e-05, nan], 'true': [0.0020148148522511986, 8.42317777086047e-05], 'true,false': [8.42317777086047e-05, nan]}, {'': [0.006945856296747734, 1.0860877414811314e-17], 'true,true,true': [0.0016003150857425252, 7.195657885283868e-05], 'true,true': [0.006945856296747734, nan], 'true': [0.006945856296747734, nan], 'false': [nan, 1.0860877414811314e-17]}, {'': [0.005378443041238283, 0.0], 'true,true,true': [0.0012827729619562288, nan], 'true,true': [0.0012827729619562288, 6.21229958807654e-05], 'true': [0.005378443041238283, nan], 'true,true,false': [6.21229958807654e-05, nan]}, {'': [0.0019684435376533175, 0.010142568317418457], 'true,true': [0.0019684435376533175, nan], 'true': [0.0019684435376533175, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(E, A), movie(E, B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5108542490836253;  // std dev = 0,167, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.49972620216796043;  // std dev = 0,185, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.3882078802885462;  // std dev = 0,150, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.3807983432695074;  // std dev = 0,167, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.33917776399405;  // std dev = 0,010, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.23383690888238207;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.22216647095725883;  // std dev = 0,514, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 1,58e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.23572079902766807;  // std dev = 0,138, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.2307982486215984;  // std dev = 0,128, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22756589031045904;  // std dev = 0,036, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.2814076377589012;  // std dev = 0,068, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then return 0.19006144042544348;  // std dev = 0,031, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.22866170885419232;  // std dev = 0,059, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1371004707635688;  // std dev = 0,098, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.1353370454772761;  // std dev = 0,087, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.14108458532123605;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1177385306738395;  // std dev = 0,088, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.07411855036014704;  // std dev = 0,366, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.0736
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.385 seconds
Total inference time: 1.181 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109149
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.552 seconds
Refined model CLL: -0.109149


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.073372
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.706 seconds
Total inference time: 1.525 seconds
AUC ROC: 1.0
Total revision time: 3.706
Best scored revision CLL: -0.108139


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 03:39:12
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.073372, 'Precision': [1.0, 0.5], 'parameter_25': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.073372, 'Precision': [1.0, 0.5], 'Learning time': 1.097, 'F1': 1.0, 'Inference time': 1.525, 'AUC PR': 1.0}, 'Learning time': 3.706, 'F1': 1.0, 'Inference time': 1.525, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.7914822684328456;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.6660633000779167;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.6526478931012827;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.5181199435476403;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.508738411682717;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4605107844588149;  // std dev = 0,024, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.27651814331545965;  // std dev = 0,479, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3500646866253982;  // std dev = 0,022, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926094;  // std dev = 9,13e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.23535216190332756;  // std dev = 0,428, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.27512159477180476;  // std dev = 0,020, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839685;  // std dev = 1,05e-08, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.20286744580116184;  // std dev = 0,382, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.22375914919424356;  // std dev = 0,017, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.1769947462710415;  // std dev = 0,341, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.18730193425189764;  // std dev = 0,015, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.15615832750833947;  // std dev = 0,306, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.16044385054458601;  // std dev = 0,013, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.13917541982252762;  // std dev = 0,277, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.13999093071382998;  // std dev = 0,012, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202619;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.12516493651888771;  // std dev = 0,251, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.999201
   AUC PR    = 0.95488
   CLL	      = -0.079903
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 1.858 seconds
Total inference time: 1.188 seconds
AUC ROC: 0.999201


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 03:39:15
{'AUC ROC': 0.999201, 'Recall': 1.0, 'CLL': -0.079903, 'Precision': [0.918367, 0.5], 'Learning time': 1.858, 'F1': 0.957447, 'Inference time': 1.188, 'AUC PR': 0.95488}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.7914822684328456;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */


Results
   AUC ROC   = 0.967219
   AUC PR    = 0.277528
   CLL	      = -0.173539
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.717 seconds
Total inference time: 0.704 seconds
AUC ROC: 0.967219


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 03:39:17
{'AUC ROC': 0.967219, 'Recall': 0.0, 'CLL': -0.173539, 'Precision': [nan, 0.5], 'Learning time': 0.717, 'F1': nan, 'Inference time': 0.704, 'AUC PR': 0.277528}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583099;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069266
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.84 seconds
Total inference time: 1.214 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.499 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [5.27e-09, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'false,false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true,true': [4.4408920985006264e-17, nan], 'true': [4.4408920985006264e-17, nan]}, {'': [-2.2204460492503132e-17, 0.0], 'true,true': [-2.2204460492503132e-17, nan], 'true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true': [-5.551115123125783e-18, nan]}, {'': [0.0, -6.938893903907229e-19], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, nan], 'false': [nan, -6.938893903907229e-19]}, {'': [0.0, 6.938893903907229e-19], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true,true': [0.0, nan], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.134433
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.631 seconds
Total inference time: 0.989 seconds
AUC ROC: 0.98318


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.479 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069266
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.449 seconds
Total inference time: 1.214 seconds
AUC ROC: 1.0
Total revision time: 2.449
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 03:39:22
{'AUC ROC': 1.0, 'parameter_5': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.069266, 'Precision': [1.0, 0.5], 'Learning time': 0.84, 'F1': 1.0, 'Inference time': 1.214, 'AUC PR': 1.0}, 'Recall': 1.0, 'CLL': -0.069266, 'Precision': [1.0, 0.5], 'Learning time': 2.449, 'F1': 1.0, 'Inference time': 1.214, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.154459
   Precision = 0.326087 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.491803


Total learning time: 1.143 seconds
Total inference time: 0.94 seconds
AUC ROC: 0.977547


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 03:39:25
{'AUC ROC': 0.977547, 'Recall': 1.0, 'CLL': -0.154459, 'Precision': [0.326087, 0.5], 'Learning time': 1.143, 'F1': 0.491803, 'Inference time': 0.94, 'AUC PR': 0.326087}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.1668
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.507 seconds
Total inference time: 0.728 seconds
AUC ROC: 0.977547


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 03:39:26
{'AUC ROC': 0.977547, 'Recall': 0.0, 'CLL': -0.1668, 'Precision': [nan, 0.5], 'Learning time': 0.507, 'F1': nan, 'Inference time': 0.728, 'AUC PR': 0.326087}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415830986;  // std dev = 1,18e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.2551722425694894;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 9,31e-10, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 1,61e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069266
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.865 seconds
Total inference time: 1.254 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.515 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [2.98e-08, 0, 10], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [1.18e-08, 0, 10], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)'}, {'true,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [5.27e-09, 0, 10], 'true,false': [0.0, 0, 0], 'false': [9.31e-10, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [7.45e-09, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'false,false': [2.63e-09, 10, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true,true': [0.0, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [1.61e-09, 10, 0], 'true,true,false': [0.0, 0, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true,true': [8.881784197001253e-17, nan], 'true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true,true': [-1.7763568394002506e-16, nan], 'true': [-1.7763568394002506e-16, nan]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true,true': [1.3322676295501878e-16, nan], 'true': [1.3322676295501878e-16, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, nan]}, {'': [3.3306690738754695e-17, 1.3877787807814458e-18], 'true': [3.3306690738754695e-17, nan]}, {'': [-2.7755575615628914e-17, 0.0], 'true': [-2.7755575615628914e-17, nan]}, {'': [5.551115123125783e-18, 6.938893903907229e-19], 'true,true,true': [5.551115123125783e-18, nan], 'true,true': [5.551115123125783e-18, nan], 'true': [5.551115123125783e-18, nan], 'false': [nan, 6.938893903907229e-19]}, {'': [0.0, 6.938893903907229e-19], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 1.3877787807814458e-18], 'true,true': [0.0, nan], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926096;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.134433
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.651 seconds
Total inference time: 1.007 seconds
AUC ROC: 0.98318


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.473 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069266
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.5039999999999996 seconds
Total inference time: 1.254 seconds
AUC ROC: 1.0
Total revision time: 2.5039999999999996
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 03:39:31
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.069266, 'Precision': [1.0, 0.5], 'Learning time': 2.5039999999999996, 'parameter_10': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.069266, 'Precision': [1.0, 0.5], 'Learning time': 0.865, 'F1': 1.0, 'Inference time': 1.254, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.254, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.154459
   Precision = 0.326087 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.491803


Total learning time: 1.064 seconds
Total inference time: 0.89 seconds
AUC ROC: 0.977547


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 03:39:34
{'AUC ROC': 0.977547, 'Recall': 1.0, 'CLL': -0.154459, 'Precision': [0.326087, 0.5], 'Learning time': 1.064, 'F1': 0.491803, 'Inference time': 0.89, 'AUC PR': 0.326087}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.1668
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.53 seconds
Total inference time: 0.743 seconds
AUC ROC: 0.977547


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 03:39:35
{'AUC ROC': 0.977547, 'Recall': 0.0, 'CLL': -0.1668, 'Precision': [nan, 0.5], 'Learning time': 0.53, 'F1': nan, 'Inference time': 0.743, 'AUC PR': 0.326087}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.4175135841583098;  // std dev = 1,18e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 1,86e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.2551722425694894;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839685;  // std dev = 2,63e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 1,86e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069266
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.941 seconds
Total inference time: 1.285 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.562 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [5.16e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [1.39e-08, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [1.18e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)'}, {'true,true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [5.27e-09, 0, 15], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.0, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'false,false': [3.73e-09, 15, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true,true': [0.0, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [1.86e-09, 15, 0], 'true,true,false': [0.0, 0, 0]}]]
[{'': [-2.3684757858670006e-16, -1.4802973661668754e-17], 'true': [-2.3684757858670006e-16, nan]}, {'': [1.7763568394002506e-16, 3.7007434154171884e-18], 'true,true': [1.7763568394002506e-16, nan], 'true': [1.7763568394002506e-16, nan]}, {'': [-2.3684757858670006e-16, 1.295260195396016e-17], 'true,true': [-2.3684757858670006e-16, nan], 'true': [-2.3684757858670006e-16, nan]}, {'': [1.4802973661668753e-16, -5.551115123125783e-18], 'true,true': [1.4802973661668753e-16, nan], 'true': [1.4802973661668753e-16, nan]}, {'': [-1.4802973661668754e-17, 1.8503717077085942e-18], 'true,true': [-1.4802973661668754e-17, nan], 'true': [-1.4802973661668754e-17, nan]}, {'': [3.700743415417188e-17, 5.551115123125783e-18], 'true': [3.700743415417188e-17, nan]}, {'': [-2.960594732333751e-17, -1.8503717077085942e-18], 'true': [-2.960594732333751e-17, nan]}, {'': [-7.401486830834377e-18, 9.251858538542971e-19], 'true,true,true': [-7.401486830834377e-18, nan], 'true,true': [-7.401486830834377e-18, nan], 'true': [-7.401486830834377e-18, nan], 'false': [nan, 9.251858538542971e-19]}, {'': [-2.2204460492503132e-17, 9.251858538542971e-19], 'true,true,true': [-2.2204460492503132e-17, nan], 'true,true': [-2.2204460492503132e-17, nan], 'true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 4.163336342344337e-18], 'true,true': [0.0, nan], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.134433
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.707 seconds
Total inference time: 0.984 seconds
AUC ROC: 0.98318


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.487 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069266
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.697 seconds
Total inference time: 1.285 seconds
AUC ROC: 1.0
Total revision time: 2.697
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 03:39:41
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.069266, 'Precision': [1.0, 0.5], 'Learning time': 2.697, 'F1': 1.0, 'Inference time': 1.285, 'parameter_15': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.069266, 'Precision': [1.0, 0.5], 'Learning time': 0.941, 'F1': 1.0, 'Inference time': 1.285, 'AUC PR': 1.0}, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.154459
   Precision = 0.326087 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.491803


Total learning time: 1.209 seconds
Total inference time: 0.93 seconds
AUC ROC: 0.977547


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 03:39:43
{'AUC ROC': 0.977547, 'Recall': 1.0, 'CLL': -0.154459, 'Precision': [0.326087, 0.5], 'Learning time': 1.209, 'F1': 0.491803, 'Inference time': 0.93, 'AUC PR': 0.326087}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.1668
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.537 seconds
Total inference time: 0.738 seconds
AUC ROC: 0.977547


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 03:39:44
{'AUC ROC': 0.977547, 'Recall': 0.0, 'CLL': -0.1668, 'Precision': [nan, 0.5], 'Learning time': 0.537, 'F1': nan, 'Inference time': 0.738, 'AUC PR': 0.326087}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415830986;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601496;  // std dev = 3,73e-09, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 2,95e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.25517224256948945;  // std dev = 3,73e-09, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 3,09e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then return -0.07877675473109173;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.07324622576333704;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), actor(F) )
%   | | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06419184008202619;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065813
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.042 seconds
Total inference time: 1.259 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.613 seconds
Parameter learned model CLL: -0.094637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [7.3e-08, 0, 20], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [1.67e-08, 19, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [1.18e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0], 'true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)'}, {'true,true,true': [3.73e-09, 0, 20], 'true,false': [0.0, 0, 0], 'false': [2.95e-09, 20, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [3.73e-09, 0, 20], 'true,false': [0.0, 0, 0], 'false': [3.09e-09, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [0.0, 0, 20], 'true,true,true,false': [0.0, 2, 0], 'false,false': [0.0, 18, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)', 'true,true,false': 'movie(D, F), actor(F)'}, {'true,true,true,true': [0.0, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0], 'true,true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.04535147392290242, 0.0], 'true,false,true': [0.0, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.03237580555397633, 0.0], 'true,false,true': [0.0, nan], 'true,true': [2.6645352591003756e-16, nan], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02021770255628346, 1.460819769243627e-17], 'true,true': [-2.6645352591003756e-16, 0.0], 'true': [0.02021770255628346, nan]}, {'': [0.012221093081438202, -5.843279076974508e-18], 'true,true': [1.3322676295501878e-16, 0.0], 'true': [0.012221093081438202, nan]}, {'': [2.2204460492503132e-17, 5.551115123125783e-18], 'true,true': [2.2204460492503132e-17, nan], 'true': [2.2204460492503132e-17, nan]}, {'': [1.1102230246251566e-17, 9.714451465470119e-18], 'true': [1.1102230246251566e-17, nan]}, {'': [0.0037756072829033234, -4.382459307730881e-18], 'true,false,true': [0.0, nan], 'true': [-2.7755575615628914e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.005179461092042178, -7.709882115452476e-19], 'true,true,true': [-2.2204460492503132e-17, 0.0], 'true,true': [0.005179461092042178, nan], 'true': [0.005179461092042178, nan], 'false': [nan, -7.709882115452476e-19]}, {'': [0.002218437127866534, -2.1912296538654404e-18], 'true,true,true': [-3.3306690738754695e-17, nan], 'true,true': [-3.3306690738754695e-17, 0.0], 'true': [0.002218437127866534, nan], 'true,true,false': [0.0, nan]}, {'': [0.0, -1.3877787807814458e-18], 'true,true': [0.0, nan], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.49972620216796043;  // std dev = 0,185, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3807983432695074;  // std dev = 0,167, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.33195613625928255;  // std dev = 0,045, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09974855782391699;  // std dev = 0,138, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.26285892267014693;  // std dev = 0,040, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09122670045814511;  // std dev = 0,128, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21518994389278986;  // std dev = 0,035, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.2013711790552824;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07783136067201246;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then return 0.18108125818338072;  // std dev = 0,030, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12167298199082499;  // std dev = 0,070, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.0724254756349101;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.14911126149655785;  // std dev = 9,13e-09, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.13491472986295192;  // std dev = 0,087, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06754790458072099;  // std dev = 0,003, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.13810955040535938;  // std dev = 0,028, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06888516584368082;  // std dev = 0,107, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.074898
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.952 seconds
Total inference time: 1.055 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098903
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.514 seconds
Refined model CLL: -0.098903


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.065813
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.1210000000000004 seconds
Total inference time: 1.259 seconds
AUC ROC: 1.0
Total revision time: 3.1210000000000004
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 03:39:50
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065813, 'Precision': [1.0, 0.5], 'Learning time': 3.1210000000000004, 'parameter_20': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.065813, 'Precision': [1.0, 0.5], 'Learning time': 1.042, 'F1': 1.0, 'Inference time': 1.259, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.259, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6526478931012827;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.508738411682717;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.38266873164552506;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2897830208139342;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.22484413364919764;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.08518475138839686;  // std dev = 1,05e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17907321293961084;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.07877675473109179;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20577897550107868;  // std dev = 0,116, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.3057486647417981;  // std dev = 0,570, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.1742871822626865;  // std dev = 0,102, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.27412487403281055;  // std dev = 0,537, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.15068539643410553;  // std dev = 0,091, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.2459546931993711;  // std dev = 0,499, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100207
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.773 seconds
Total inference time: 1.188 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 03:39:54
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.100207, 'Precision': [0.348837, 0.5], 'Learning time': 1.773, 'F1': 0.517241, 'Inference time': 1.188, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.980428
   AUC PR    = 0.360179
   CLL	      = -0.166128
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.662 seconds
Total inference time: 0.805 seconds
AUC ROC: 0.980428


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 03:39:55
{'AUC ROC': 0.980428, 'Recall': 0.0, 'CLL': -0.166128, 'Precision': [nan, 0.5], 'Learning time': 0.662, 'F1': nan, 'Inference time': 0.805, 'AUC PR': 0.360179}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(H, I), professor(I).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(H, A).;true;true
0;true,false,false;publication(J, B), ta(K, A, L).;false;false
0;true,true,false;tempadvisedby(G, B).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;publication(H, J), ta(K, J, L).;false;false
1;true,true;tempadvisedby(D, B).;false;true
1;true,false;publication(H, A), tempadvisedby(I, B).;true;true
1;true,false,false;publication(M, B).;false;false
1;true,true,false;publication(C, E), ta(F, E, G).;false;false
1;true;publication(C, A), publication(C, B).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,true;tempadvisedby(F, B).;true;true
2;true,false;projectmember(J, B).;false;true
2;true,false,false;publication(K, A), publication(K, B).;false;false
2;true,true,false;ta(C, G, H), tempadvisedby(G, I).;false;false
2;true,true,true;publication(E, A).;false;false
2;true;ta(C, A, D), publication(E, B).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true;publication(C, B).;true;true
3;true,false;projectmember(I, B), publication(J, A).;false;true
3;true,false,false;ta(K, A, L).;false;false
3;true,true,false;tempadvisedby(F, B), ta(G, F, H).;false;false
3;true,true,true;tempadvisedby(E, B).;false;false
3;true;publication(C, A), publication(D, B).;true;true
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;true
4;true,true;publication(F, A), publication(F, B).;true;true
4;true,false;publication(J, A), publication(J, B).;false;true
4;false;ta(L, A, M).;false;false
4;true,false,false;publication(K, B).;false;false
4;true,true,false;publication(I, B).;false;false
4;true,true,true;ta(G, A, H).;false;false
4;true;hasposition(D, C), projectmember(E, D).;true;true
5;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
5;true,true;tempadvisedby(F, B).;true;true
5;true,false;publication(K, B), publication(K, A).;false;true
5;false;ta(N, A, P).;false;false
5;true,false,false;publication(L, B), publication(M, A).;false;false
5;true,true,false;ta(I, A, J).;false;false
5;true,true,true;sameperson(B, D), ta(G, F, H).;false;false
5;true;hasposition(D, C), projectmember(E, D).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(D, F), student(F).;false;false
6;true;publication(C, B), publication(C, A).;false;true
6;true,false;publication(D, B), tempadvisedby(E, B).;true;true
6;true,false,false;ta(G, A, H), publication(I, A).;false;false
7;;advisedby(A, B) :- professor(B), publication(C, B).;true;true
7;true,true;publication(F, E), sameperson(B, D).;true;true
7;true,false;publication(I, A).;false;false
7;false;hasposition(B, J), student(A).;true;false
7;true,true,false;ta(G, E, H), student(A).;false;false
7;true,true,true;publication(C, A).;false;false
7;false,true;ta(K, A, L), projectmember(M, B).;false;false
7;true;publication(C, D), tempadvisedby(E, D).;true;true
8;;advisedby(A, B) :- professor(B), student(A).;true;false
8;true,false,true;publication(K, B).;false;false
8;true,true;publication(C, B).;true;true
8;true,false;tempadvisedby(H, B), ta(I, A, J).;true;true
8;true,false,false;publication(L, A), tempadvisedby(M, B).;false;false
8;true,true,false;publication(D, G), student(G).;false;false
8;true,true,true;publication(D, E), tempadvisedby(E, F).;false;false
8;true;publication(C, A), publication(D, B).;true;true
9;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
9;true,false,true;publication(K, A).;false;false
9;true,true;tempadvisedby(F, B), ta(G, F, H).;true;true
9;true,false;publication(K, B).;true;false
9;false;ta(L, A, M).;false;false
9;true,true,false;tempadvisedby(J, B).;false;false
9;true,true,true;publication(I, A).;false;false
9;true;hasposition(D, C), projectmember(E, D).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 2,36e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, A) )
%   | | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014955;  // std dev = 5,27e-09, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( movie(F, B) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 1,86e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then return 0.24208158895572468;  // std dev = 0,065, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 3,48e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.21193585940340579;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B) )
%   | | then if ( movie(D, E), actor(E) )
%   | | | then return -0.09240963586877587;  // std dev = 0,019, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, D) )
%   | then if ( movie(E, F) )
%   | | then if ( movie(C, A) )
%   | | | then return 0.17869242182476966;  // std dev = 2,58e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.08105607733471491;  // std dev = 0,020, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( genre(B, G), actor(A) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(D, B) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.15395345158663387;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( movie(D, F), actor(F) )
%   | | | then return -0.07887950181777251;  // std dev = 0,017, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06840540558305874;  // std dev = 0,000485, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( genre(D, C) )
%   | then if ( movie(E, A) )
%   | | then return 0.1265145204351397;  // std dev = 0,215, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06409486843231424;  // std dev = 0,000385, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06546
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.144 seconds
Total inference time: 1.513 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096272
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.677 seconds
Parameter learned model CLL: -0.096272


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [2.36e-08, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [1.49e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 25], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, A)', 'true': 'movie(C, B)'}, {'true,true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 23, 0], 'true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true': 'movie(C, A), movie(D, B)'}, {'true,true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0], 'true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true,true': 'movie(E, A), movie(E, B)', 'true': 'genre(D, C)', 'true,true,false': 'movie(F, B)'}, {'true,true,true': [5.27e-09, 0, 25], 'true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'false': [1.86e-09, 24, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true': 'genre(D, C)'}, {'true,true': [0.065, 1, 25], 'true,false': [0.0, 0, 0], 'false': [3.48e-09, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), actor(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [1.49e-08, 0, 25], 'true,false,true,true': [0.019, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), movie(C, B)', 'true,true': 'movie(E, F)', 'true,true,true': 'movie(C, A)', 'true': 'movie(C, D)', 'false': 'genre(B, G), actor(A)'}, {'true,true,true,true': [2.58e-08, 0, 25], 'true,true,true,false': [0.02, 3, 0], 'false,false': [0.0, 22, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A), movie(D, B)', 'true,true,false': 'movie(D, F), actor(F)'}, {'true,true,true,true': [1.49e-08, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.000485, 23, 0], 'true,true,false,true': [0.017, 2, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'true,true': 'movie(E, A)', 'true': 'genre(D, C)'}, {'true,true,true': [0.215, 1, 25], 'true,false': [0.0, 0, 0], 'false': [0.000385, 24, 0], 'true,true,false': [0.0, 0, 0]}]]
[{'': [0.06858710562414343, 9.654113257610057e-18], 'true,false,true': [0.0, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.04896340963409988, -2.413528314402514e-18], 'true,false,true': [0.0, nan], 'true,true': [-7.105427357601002e-17, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.030576155100552255, 4.827056628805028e-18], 'true,true': [-2.842170943040401e-16, 0.0], 'true': [0.030576155100552255, nan]}, {'': [0.01848251731452055, -2.413528314402514e-18], 'true,true': [-3.552713678800501e-17, 0.0], 'true': [0.01848251731452055, nan]}, {'': [0.006320345502775467, 8.0953762212251e-18], 'true,true': [1.7763568394002505e-17, 0.0], 'true': [0.006320345502775467, nan], 'true,true,false': [0.0, nan]}, {'': [0.004284130300889366, 1.1564823173178714e-17], 'true': [0.004284130300889366, nan]}, {'': [0.006366728695228602, 0.0], 'true,false,true': [0.00018585544811422147, nan], 'true': [8.881784197001253e-18, 0.00018585544811422147], 'true,false': [0.00018585544811422147, nan]}, {'': [0.006469002201104456, -1.8924256101565167e-18], 'true,true,true': [2.6645352591003756e-17, 0.00013692279161329457], 'true,true': [0.006469002201104456, nan], 'true': [0.006469002201104456, nan], 'false': [nan, -1.8924256101565167e-18]}, {'': [0.003728514182072918, 1.0237973915498869e-08], 'true,true,true': [8.881784197001253e-18, nan], 'true,true': [8.881784197001253e-18, 0.00013940054037455546], 'true': [0.003728514182072918, nan], 'true,true,false': [0.00013940054037455546, nan]}, {'': [0.0017792003605094557, 1.4842514473092464e-07], 'true,true': [0.0017792003605094557, nan], 'true': [0.0017792003605094557, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(E, A), movie(E, B).;true;true
5;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B), movie(C, A).;true;true
7;;workedunder(A, B) :- director(B), movie(C, B).;true;true
7;true;movie(C, A).;true;true
8;;workedunder(A, B) :- director(B), actor(A).;true;true
8;true;movie(C, B).;true;true
9;;workedunder(A, B) :- genre(B, C), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( female(A) )
%   | | then return 0.48859815525229555;  // std dev = 0,200, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.5160909770439381;  // std dev = 0,157, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.37335366934007574;  // std dev = 0,181, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.3916828299121224;  // std dev = 0,142, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.33876053162015246;  // std dev = 0,025, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.23052593460878668;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09877723009445878;  // std dev = 0,143, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.2266815311839668;  // std dev = 0,140, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.2642185197166257;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.09040147687623697;  // std dev = 0,134, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.22133214975432255;  // std dev = 0,035, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.21796379749678296;  // std dev = 0,017, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07796040353656414;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), movie(C, B) )
%   then if ( movie(C, A) )
%   | then return 0.18554916989650344;  // std dev = 0,030, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14625760588566447;  // std dev = 0,091, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07253757879771248;  // std dev = 3,73e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.13251971106332508;  // std dev = 0,101, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.1369757526526422;  // std dev = 0,072, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0676100705576183;  // std dev = 0,004, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.11473669873538453;  // std dev = 0,102, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.13797256004648162;  // std dev = 7,45e-09, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else return -0.0679664664426278;  // std dev = 0,106, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070342
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.21 seconds
Total inference time: 1.159 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104316
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.537 seconds
Refined model CLL: -0.104316


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06546
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.5679999999999996 seconds
Total inference time: 1.513 seconds
AUC ROC: 1.0
Total revision time: 3.5679999999999996
Best scored revision CLL: -0.096272


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 03:40:02
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.06546, 'Precision': [1.0, 0.5], 'parameter_25': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.06546, 'Precision': [1.0, 0.5], 'Learning time': 1.144, 'F1': 1.0, 'Inference time': 1.513, 'AUC PR': 1.0}, 'Learning time': 3.5679999999999996, 'F1': 1.0, 'Inference time': 1.513, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.7993254056877476;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6392070123615109;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.6723676618346616;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.49932275605826126;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.5225238410881435;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3758491322444214;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.3927742928882807;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.28401811356076057;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.29850198038149095;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.30188887386361274;  // std dev = 0,066, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.49124911759526074;  // std dev = 0,498, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.24232471038589778;  // std dev = 0,057, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.40571513079793364;  // std dev = 0,431, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.20066579957302833;  // std dev = 0,050, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.33288987433604406;  // std dev = 0,364, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17041546429499602;  // std dev = 0,044, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.27502802238000784;  // std dev = 0,305, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11024262199989839;  // std dev = 0,144, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.11283307144940308;  // std dev = 0,116, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else return -0.062281636587559835;  // std dev = 0,043, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079669
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.689 seconds
Total inference time: 1.268 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 03:40:05
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.079669, 'Precision': [1.0, 0.5], 'Learning time': 1.689, 'F1': 1.0, 'Inference time': 1.268, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.7993254056877476;  // std dev = 0,235, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 0.979012
   AUC PR    = 0.338166
   CLL	      = -0.166359
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.685 seconds
Total inference time: 0.801 seconds
AUC ROC: 0.979012


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 03:40:07
{'AUC ROC': 0.979012, 'Recall': 0.0, 'CLL': -0.166359, 'Precision': [nan, 0.5], 'Learning time': 0.685, 'F1': nan, 'Inference time': 0.801, 'AUC PR': 0.338166}


