Starting experiment #1 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), ta(E, D, F) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( publication(C, G), tempadvisedby(H, G) )
%   | | | then return 0.7528857772047755;  // std dev = 1,338, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(I, A), publication(J, B) )
%   | | then if ( publication(I, K), professor(K) )
%   | | | then return 0.07554023944733843;  // std dev = 1,978, 23,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.7152917922423694;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( tempadvisedby(L, B), ta(M, A, N) )
%   | | | then return 0.4581489350995123;  // std dev = 2,683, 30,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | | else return 0.5748156017661786;  // std dev = 3,490, 60,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=43 */
%   else return -0.1418510649004881;  // std dev = 0,000, 177,000 (wgt'ed) examples reached here.  /* #neg=177 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( publication(C, D), tempadvisedby(D, B) )
%   | | then return 0.48503362742727046;  // std dev = 0,860, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7276629991669104;  // std dev = 0,063, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( publication(E, A), tempadvisedby(F, B) )
%   | | then if ( ta(G, A, H) )
%   | | | then return 0.434395724375132;  // std dev = 1,286, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.010525048049348543;  // std dev = 1,487, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( ta(I, A, J), publication(K, B) )
%   | | | then return 0.598719853707787;  // std dev = 2,365, 37,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=30 */
%   | | | else return 0.42294812007439003;  // std dev = 3,455, 53,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=34 */
%   else return -0.12544463852839138;  // std dev = 3,65e-08, 181,000 (wgt'ed) examples reached here.  /* #neg=181 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( ta(D, A, E) )
%   | | then if ( tempadvisedby(F, B), ta(G, F, H) )
%   | | | then return 0.5533432386464135;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.25868901816109646;  // std dev = 1,443, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.565601653204575;  // std dev = 0,081, 28,000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( publication(I, B), publication(J, A) )
%   | | then if ( tempadvisedby(K, B), ta(L, K, M) )
%   | | | then return -0.1886952137162048;  // std dev = 0,099, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.20725163612727607;  // std dev = 2,297, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( tempadvisedby(N, B), ta(P, N, Q) )
%   | | | then return 0.5008796593407195;  // std dev = 2,014, 27,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | | | else return 0.30488823539951604;  // std dev = 3,837, 63,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=39 */
%   else return -0.11231637819360624;  // std dev = 9,42e-08, 172,000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then return 0.4397887407997431;  // std dev = 0,276, 41,000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( publication(D, A) )
%   | | then if ( publication(D, E), professor(E) )
%   | | | then return 0.06812689565393248;  // std dev = 2,506, 28,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.4995906771797989;  // std dev = 0,864, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( projectmember(F, B) )
%   | | | then return 0.5812853406735672;  // std dev = 0,047, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.35286064107875303;  // std dev = 3,456, 66,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=50 */
%   else return -0.1015963294878364;  // std dev = 0,000, 156,000 (wgt'ed) examples reached here.  /* #neg=156 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(D, B) )
%   | | then return 0.19101399687608528;  // std dev = 0,841, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( publication(C, E), ta(F, E, G) )
%   | | | then return 0.34350458901045516;  // std dev = 0,151, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.28112115193034515;  // std dev = 0,967, 25,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | then if ( publication(J, A), ta(K, H, L) )
%   | | | then return -0.19521976942410973;  // std dev = 0,145, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1692334823483196;  // std dev = 3,190, 47,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=31 */
%   | | else if ( ta(M, A, N), publication(P, B) )
%   | | | then return 0.4180333278054023;  // std dev = 1,118, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.18263787047047406;  // std dev = 3,109, 43,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=26 */
%   else return -0.09269127618926092;  // std dev = 5,37e-08, 206,000 (wgt'ed) examples reached here.  /* #neg=206 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( publication(G, A) )
%   | | | then return 0.24813180230682289;  // std dev = 1,721, 45,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=40 */
%   | | | else return 0.3730201037563168;  // std dev = 1,382, 28,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | else if ( ta(H, A, I), publication(J, A) )
%   | | | then return 0.00529435174590962;  // std dev = 0,817, 5,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1785314890995497;  // std dev = 2,540, 42,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=31 */
%   | else if ( publication(K, A), projectmember(L, B) )
%   | | then return 0.6381857211458432;  // std dev = 0,063, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(M, A, N) )
%   | | | then return -0.19965468045543946;  // std dev = 1,225, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.16617461075646994;  // std dev = 1,630, 13,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   else return -0.08518475138839678;  // std dev = 6,99e-08, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), tempadvisedby(D, B) )
%   | then if ( ta(E, D, F), publication(C, B) )
%   | | then if ( publication(G, D) )
%   | | | then return 0.07391610117462218;  // std dev = 0,934, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.21057087039752664;  // std dev = 0,031, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( projectmember(H, B) )
%   | | | then return 0.4832739361330356;  // std dev = 0,067, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.021974710452287917;  // std dev = 2,311, 32,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else if ( publication(I, B), ta(J, A, K) )
%   | | then if ( publication(I, L), ta(M, L, N) )
%   | | | then return 0.20606951591140266;  // std dev = 1,666, 22,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return 0.3791198690687357;  // std dev = 0,128, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( ta(P, A, Q) )
%   | | | then return -0.2627344310297038;  // std dev = 0,936, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.16292252455855202;  // std dev = 2,962, 56,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=43 */
%   else return -0.0787767547310915;  // std dev = 7,88e-08, 212,000 (wgt'ed) examples reached here.  /* #neg=212 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.07107748197611183;  // std dev = 0,898, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.20284762075336688;  // std dev = 0,179, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( tempadvisedby(E, B), ta(F, E, G) )
%   | | then if ( ta(H, A, I), ta(H, J, G) )
%   | | | then return 0.053046398723351866;  // std dev = 1,357, 11,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.23761504923736415;  // std dev = 0,961, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else if ( tempadvisedby(K, B), publication(L, B) )
%   | | | then return -0.0942693757707439;  // std dev = 2,476, 25,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.0929013069503044;  // std dev = 3,232, 54,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   else return -0.07324622576333695;  // std dev = 5,77e-08, 205,000 (wgt'ed) examples reached here.  /* #neg=205 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( student(A), tempadvisedby(C, B) )
%   then if ( publication(D, A) )
%   | then return 0.21001454781890852;  // std dev = 0,184, 40,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | else if ( ta(E, C, F) )
%   | | then if ( projectmember(G, B), publication(H, B) )
%   | | | then return -0.09226621012865681;  // std dev = 0,811, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10666489689644636;  // std dev = 1,818, 23,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | else if ( ta(I, A, J) )
%   | | | then return 0.14448226398488895;  // std dev = 1,298, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.16460854369973382;  // std dev = 1,637, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( student(A), professor(B) )
%   | then if ( ta(K, A, L) )
%   | | then if ( ta(K, M, N), tempadvisedby(M, P) )
%   | | | then return -0.01711759222671678;  // std dev = 1,568, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return -0.17355749775344734;  // std dev = 1,785, 15,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else return 0.0477021059785058;  // std dev = 0,432, 38,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=27 */
%   | else return -0.06842697784420267;  // std dev = 4,94e-08, 156,000 (wgt'ed) examples reached here.  /* #neg=156 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), ta(D, C, E) )
%   | then if ( publication(F, B) )
%   | | then if ( ta(G, A, E) )
%   | | | then return -0.006600416647789931;  // std dev = 1,018, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.1090903630333903;  // std dev = 1,601, 35,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=31 */
%   | | else return 0.3228638829458734;  // std dev = 0,195, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tempadvisedby(H, B), publication(I, B) )
%   | | then if ( publication(J, H) )
%   | | | then return -0.22049764580569498;  // std dev = 1,773, 17,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.046734751008409826;  // std dev = 1,984, 25,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | | else if ( publication(K, B) )
%   | | | then return 0.03994463820333552;  // std dev = 3,010, 54,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=39 */
%   | | | else return 0.09740012741219854;  // std dev = 1,709, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   else return -0.06419184008202625;  // std dev = 0,000, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333703;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.06980479461696834;  // std dev = 0,303, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.14392748796317845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06948451206052769;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076824
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.803 seconds
Total inference time: 1.348 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101635
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.491 seconds
Parameter learned model CLL: -0.101635


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [0.0, 2, 0], 'true,true': [0.303, 3, 5], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.01, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan]}, {'': [-2.2204460492503132e-17, 1.3877787807814458e-18], 'true,true': [-2.2204460492503132e-17, nan], 'true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true,true,true': [-5.551115123125783e-18, nan], 'true,true': [-5.551115123125783e-18, nan], 'true': [-5.551115123125783e-18, nan]}, {'': [0.0, 1.3877787807814458e-18], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.01146481375065418, 0.0], 'true': [0.01146481375065418, nan], 'false': [nan, 0.0]}, {'': [-2.7755575615628915e-18, 1.8674917781342364e-05], 'true': [-2.7755575615628915e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.130317
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 0.691 seconds
Total inference time: 1.149 seconds
AUC ROC: 0.983525


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.493 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.130317
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 2.4779999999999998 seconds
Total inference time: 1.149 seconds
AUC ROC: 0.983525
Total revision time: 2.4779999999999998
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:15
{'AUC ROC': 0.983525, 'parameter_5': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.076824, 'Precision': [1.0, 0.5], 'Learning time': 0.803, 'F1': 1.0, 'Inference time': 1.348, 'AUC PR': 1.0}, 'Recall': 1.0, 'CLL': -0.130317, 'Precision': [0.339394, 0.5], 'Learning time': 2.4779999999999998, 'F1': 0.506787, 'Inference time': 1.149, 'AUC PR': 0.339394}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420274;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.130317
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 1.011 seconds
Total inference time: 1.066 seconds
AUC ROC: 0.983525


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:06:17
{'AUC ROC': 0.983525, 'Recall': 1.0, 'CLL': -0.130317, 'Precision': [0.339394, 0.5], 'Learning time': 1.011, 'F1': 0.506787, 'Inference time': 1.066, 'AUC PR': 0.339394}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.159293
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.479 seconds
Total inference time: 0.87 seconds
AUC ROC: 0.983525


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:06:19
{'AUC ROC': 0.983525, 'Recall': 0.0, 'CLL': -0.159293, 'Precision': [nan, 0.5], 'Learning time': 0.479, 'F1': nan, 'Inference time': 0.87, 'AUC PR': 0.339394}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333703;  // std dev = 4,56e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.06167351388395822;  // std dev = 0,449, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.14493226592548245;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06998271974412679;  // std dev = 0,012, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076261
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.891 seconds
Total inference time: 1.613 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102323
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.527 seconds
Parameter learned model CLL: -0.102323


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [2.98e-08, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [3.65e-08, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [1.83e-08, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [0.0, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [7.45e-09, 0, 10], 'true,false': [0.0, 0, 0], 'false': [4.56e-09, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [0.0, 3, 0], 'true,true': [0.449, 7, 10], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [2.63e-09, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.012, 10, 0]}]]
[{'': [-8.881784197001253e-17, -2.7755575615628915e-18], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 0.0], 'true,true': [8.881784197001253e-17, nan], 'true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true': [-1.7763568394002506e-16, nan]}, {'': [1.3322676295501878e-16, -4.163336342344337e-18], 'true': [1.3322676295501878e-16, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, nan]}, {'': [3.3306690738754695e-17, 0.0], 'true,true,true': [3.3306690738754695e-17, nan], 'true,true': [3.3306690738754695e-17, nan], 'true': [3.3306690738754695e-17, nan]}, {'': [-2.7755575615628914e-17, -6.938893903907229e-19], 'true,true,true': [-2.7755575615628914e-17, nan], 'true,true': [-2.7755575615628914e-17, nan], 'true': [-2.7755575615628914e-17, nan]}, {'': [5.551115123125783e-18, 2.0816681711721684e-18], 'true,true': [5.551115123125783e-18, nan], 'true': [5.551115123125783e-18, nan]}, {'': [0.011848296563536509, -5.782411586589357e-19], 'true': [0.011848296563536509, nan], 'false': [nan, -5.782411586589357e-19]}, {'': [8.326672684688674e-18, 1.4371837397540028e-05], 'true': [8.326672684688674e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.14185106490048777;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926096;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109173;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333703;  // std dev = 4,56e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.0641918400820262;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.130317
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 0.727 seconds
Total inference time: 1.231 seconds
AUC ROC: 0.983525


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.479 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.130317
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 2.624 seconds
Total inference time: 1.231 seconds
AUC ROC: 0.983525
Total revision time: 2.624
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:25
{'AUC ROC': 0.983525, 'Recall': 1.0, 'CLL': -0.130317, 'Precision': [0.339394, 0.5], 'Learning time': 2.624, 'parameter_10': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.076261, 'Precision': [1.0, 0.5], 'Learning time': 0.891, 'F1': 1.0, 'Inference time': 1.613, 'AUC PR': 1.0}, 'F1': 0.506787, 'Inference time': 1.231, 'AUC PR': 0.339394}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.14185106490048777;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783634;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926096;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109173;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.0641918400820262;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.130317
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 1.162 seconds
Total inference time: 1.114 seconds
AUC ROC: 0.983525


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:06:27
{'AUC ROC': 0.983525, 'Recall': 1.0, 'CLL': -0.130317, 'Precision': [0.339394, 0.5], 'Learning time': 1.162, 'F1': 0.506787, 'Inference time': 1.114, 'AUC PR': 0.339394}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.14185106490048777;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.159293
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.533 seconds
Total inference time: 0.819 seconds
AUC ROC: 0.983525


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:06:29
{'AUC ROC': 0.983525, 'Recall': 0.0, 'CLL': -0.159293, 'Precision': [nan, 0.5], 'Learning time': 0.533, 'F1': nan, 'Inference time': 0.819, 'AUC PR': 0.339394}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839686;  // std dev = 6,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.059171581350724305;  // std dev = 0,557, 26,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.1452425982023999;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0701352878989657;  // std dev = 0,014, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076088
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.916 seconds
Total inference time: 1.407 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102535
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.532 seconds
Parameter learned model CLL: -0.102535


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [5.16e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [4.71e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [2.36e-08, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [6.45e-09, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [0.0, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [0.0, 4, 0], 'true,true': [0.557, 11, 15], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.014, 15, 0]}]]
[{'': [-2.3684757858670006e-16, -1.4802973661668754e-17], 'true,true': [-2.3684757858670006e-16, nan], 'true': [-2.3684757858670006e-16, nan]}, {'': [1.7763568394002506e-16, 1.8503717077085942e-18], 'true,true': [1.7763568394002506e-16, nan], 'true': [1.7763568394002506e-16, nan]}, {'': [-2.3684757858670006e-16, 5.551115123125783e-18], 'true': [-2.3684757858670006e-16, nan]}, {'': [1.4802973661668753e-16, 0.0], 'true': [1.4802973661668753e-16, nan]}, {'': [-1.4802973661668754e-17, -1.8503717077085942e-18], 'true,true': [-1.4802973661668754e-17, nan], 'true': [-1.4802973661668754e-17, nan]}, {'': [3.700743415417188e-17, 2.7755575615628915e-18], 'true,true,true': [3.700743415417188e-17, nan], 'true,true': [3.700743415417188e-17, nan], 'true': [3.700743415417188e-17, nan]}, {'': [-2.960594732333751e-17, 1.8503717077085942e-18], 'true,true,true': [-2.960594732333751e-17, nan], 'true,true': [-2.960594732333751e-17, nan], 'true': [-2.960594732333751e-17, nan]}, {'': [-7.401486830834377e-18, 1.8503717077085942e-18], 'true,true': [-7.401486830834377e-18, nan], 'true': [-7.401486830834377e-18, nan]}, {'': [0.011939687692988952, 0.0], 'true': [0.011939687692988952, nan], 'false': [nan, 0.0]}, {'': [0.0, 1.2845298891884609e-05], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1015963294878363;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926097;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839686;  // std dev = 6,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109172;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.130317
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 0.76 seconds
Total inference time: 1.081 seconds
AUC ROC: 0.983525


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.514 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.130317
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 2.7220000000000004 seconds
Total inference time: 1.081 seconds
AUC ROC: 0.983525
Total revision time: 2.7220000000000004
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:35
{'AUC ROC': 0.983525, 'Recall': 1.0, 'CLL': -0.130317, 'Precision': [0.339394, 0.5], 'Learning time': 2.7220000000000004, 'F1': 0.506787, 'Inference time': 1.081, 'parameter_15': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.076088, 'Precision': [1.0, 0.5], 'Learning time': 0.916, 'F1': 1.0, 'Inference time': 1.407, 'AUC PR': 1.0}, 'AUC PR': 0.339394}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360638;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1015963294878363;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926097;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839689;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.0641918400820262;  // std dev = 4,56e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.130317
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 1.13 seconds
Total inference time: 1.122 seconds
AUC ROC: 0.983525


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:06:37
{'AUC ROC': 0.983525, 'Recall': 1.0, 'CLL': -0.130317, 'Precision': [0.339394, 0.5], 'Learning time': 1.13, 'F1': 0.506787, 'Inference time': 1.122, 'AUC PR': 0.339394}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.983525
   AUC PR    = 0.339394
   CLL	      = -0.159293
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.534 seconds
Total inference time: 0.894 seconds
AUC ROC: 0.983525


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:06:39
{'AUC ROC': 0.983525, 'Recall': 0.0, 'CLL': -0.159293, 'Precision': [nan, 0.5], 'Learning time': 0.534, 'F1': nan, 'Inference time': 0.894, 'AUC PR': 0.339394}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,58e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.238964766666733;  // std dev = 0,332, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839686;  // std dev = 1,05e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.2124568954916488;  // std dev = 1,83e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10574741263677113;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17907370093620298;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.09615622364368014;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.05824991481299697;  // std dev = 0,656, 35,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.1353807822923247;  // std dev = 0,051, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07011819480804979;  // std dev = 0,015, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072519
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.982 seconds
Total inference time: 1.34 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105044
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.566 seconds
Parameter learned model CLL: -0.105044


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, G), director(G)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 20], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [7.3e-08, 0, 20], 'false': [7.45e-09, 19, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 20], 'false': [1.58e-08, 19, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [5.16e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [2.11e-08, 0, 20], 'false': [7.45e-09, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.332, 1, 20], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 19, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'genre(B, F)'}, {'true,true,true,true': [1.83e-08, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0], 'true,true,false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 20], 'false': [3.73e-09, 19, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [1.86e-09, 5, 0], 'true,true': [0.656, 15, 20], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.051, 1, 20], 'true,false': [0.0, 0, 0], 'false': [0.015, 19, 0]}]]
[{'': [0.04535147392290242, -5.843279076974508e-18], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.03237580555397633, 2.921639538487254e-18], 'true,true': [2.6645352591003756e-16, nan], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02021770255628346, 1.3147377923192643e-17], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.012221093081438202, -5.843279076974508e-18], 'true,false,true': [0.0, nan], 'true': [1.3322676295501878e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.007750664054197215, 2.921639538487254e-18], 'true,false,true': [0.0, nan], 'true,true': [2.2204460492503132e-17, nan], 'true': [2.2204460492503132e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.005253645502768649, 5.843279076974508e-18], 'true,true,true': [0.005253645502768649, nan], 'true,true': [0.005253645502768649, nan], 'true': [0.005253645502768649, nan]}, {'': [0.004592017311178531, -7.304098846218135e-19], 'true,true,true': [1.6653345369377347e-17, nan], 'true,true': [1.6653345369377347e-17, 0.0], 'true': [0.004592017311178531, nan], 'true,true,false': [nan, 0.0]}, {'': [0.003435442693163146, 7.304098846218135e-19], 'true,true': [-3.8857805861880476e-17, nan], 'true': [-3.8857805861880476e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.012296342864015222, 6.938893903907229e-19], 'true': [0.012296342864015222, nan], 'false': [nan, 6.938893903907229e-19]}, {'': [0.0026058759085784383, 1.2543457263809513e-05], 'true': [0.0026058759085784383, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1,58e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783631;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.21735479879639094;  // std dev = 0,107, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.08518475138839686;  // std dev = 1,05e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1805599709025794;  // std dev = 0,101, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18108791466580043;  // std dev = 0,022, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12174749917028119;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( female(A) )
%   | | then return 0.13103552035311344;  // std dev = 0,085, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.15222803181234035;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11449381336732428;  // std dev = 0,084, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.1336042035004125;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.06419184008202619;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066487
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.075 seconds
Total inference time: 1.285 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099215
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.52 seconds
Refined model CLL: -0.099215


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066487
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.1430000000000002 seconds
Total inference time: 1.285 seconds
AUC ROC: 1.0
Total revision time: 3.1430000000000002
Best scored revision CLL: -0.099215


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:45
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.066487, 'Precision': [1.0, 0.5], 'Learning time': 3.1430000000000002, 'parameter_20': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.072519, 'Precision': [1.0, 0.5], 'Learning time': 0.982, 'F1': 1.0, 'Inference time': 1.34, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.285, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6302322013528495;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.4930252128087158;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.11231637819360635;  // std dev = 1,58e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3713223124091624;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.10159632948783631;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2802444957903803;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.28389657733913776;  // std dev = 0,157, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839687;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.23214279366789514;  // std dev = 0,509, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.23014593136042388;  // std dev = 0,138, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109172;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.2065729839613806;  // std dev = 0,477, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.192091238375594;  // std dev = 0,121, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333703;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.18506404219345973;  // std dev = 0,445, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1641430115749738;  // std dev = 0,107, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(A) )
%   | then return -0.1596417658672738;  // std dev = 0,408, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.0621581291281863;  // std dev = 0,030, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1429237672073574;  // std dev = 0,096, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06251708693166723;  // std dev = 0,009, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.154749730683147;  // std dev = 0,381, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.082478
   Precision = 0.491228 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.658824


Total learning time: 2.084 seconds
Total inference time: 1.395 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:06:49
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.082478, 'Precision': [0.491228, 0.5], 'Learning time': 2.084, 'F1': 0.658824, 'Inference time': 1.395, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.98329
   AUC PR    = 0.335101
   CLL	      = -0.15949
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.855 seconds
Total inference time: 0.91 seconds
AUC ROC: 0.98329


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:06:51
{'AUC ROC': 0.98329, 'Recall': 0.0, 'CLL': -0.15949, 'Precision': [nan, 0.5], 'Learning time': 0.855, 'F1': nan, 'Inference time': 0.91, 'AUC PR': 0.335101}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,29e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926103;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.24208158895572468;  // std dev = 0,334, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21193585940340579;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.10604251700645996;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109175;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17869242182476966;  // std dev = 2,58e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.09640173933490354;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.05467553044765839;  // std dev = 0,745, 45,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.13774298569834117;  // std dev = 0,046, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07036979443600054;  // std dev = 0,016, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07229
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.239 seconds
Total inference time: 1.516 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104879
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.634 seconds
Parameter learned model CLL: -0.104879


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, G), director(G)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.33e-07, 0, 25], 'false': [1.29e-08, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 25], 'false': [0.0, 24, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 25], 'false': [1.49e-08, 24, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [2.11e-08, 0, 25], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.334, 1, 25], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.39e-08, 24, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'genre(B, F)'}, {'true,true,true,true': [1.49e-08, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0], 'true,true,false,true': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [2.58e-08, 0, 25], 'false': [0.0, 24, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [1.86e-09, 5, 0], 'true,true': [0.745, 20, 25], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.046, 1, 25], 'true,false': [0.0, 0, 0], 'false': [0.016, 24, 0]}]]
[{'': [0.03698224852071082, 6.938893903907228e-18], 'true,false,true': [0.0, nan], 'true,true': [7.105427357601002e-16, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.026401128419570055, -2.3129646346357427e-18], 'true,true': [-7.105427357601002e-17, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.016486699015016572, 9.25185853854297e-18], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.009965795208791005, -3.469446951953614e-18], 'true,false,true': [0.0, nan], 'true': [-3.552713678800501e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.006320345502775467, -6.938893903907228e-18], 'true,false,true': [0.0, nan], 'true,true': [1.7763568394002505e-17, nan], 'true': [1.7763568394002505e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.004284130300889366, 8.0953762212251e-18], 'true,true,true': [0.004284130300889366, nan], 'true,true': [0.004284130300889366, nan], 'true': [0.004284130300889366, nan]}, {'': [0.0037392843145064645, -3.469446951953614e-18], 'true,true,true': [8.881784197001253e-18, nan], 'true,true': [8.881784197001253e-18, 0.0], 'true': [0.0037392843145064645, nan], 'true,true,false': [nan, 0.0]}, {'': [0.0027986981325497373, -1.1564823173178713e-18], 'true,true': [2.6645352591003756e-17, nan], 'true': [2.6645352591003756e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.012328490447443623, 6.938893903907229e-19], 'true': [0.012328490447443623, nan], 'false': [nan, 6.938893903907229e-19]}, {'': [0.0021265144023566527, 1.004397894731277e-05], 'true': [0.0021265144023566527, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048774;  // std dev = 1,29e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926103;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.22680915973966553;  // std dev = 0,094, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.18790609404498104;  // std dev = 0,088, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.20975771563253567;  // std dev = 2,36e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109175;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18036876908044358;  // std dev = 0,018, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12355533767242946;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( female(A) )
%   | | then return 0.13644300057980796;  // std dev = 0,075, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.15232086411324847;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11931141798458265;  // std dev = 0,074, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.13367671848195334;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.0641918400820262;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066508
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.123 seconds
Total inference time: 1.406 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098406
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.584 seconds
Refined model CLL: -0.098406


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066508
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.5800000000000005 seconds
Total inference time: 1.406 seconds
AUC ROC: 1.0
Total revision time: 3.5800000000000005
Best scored revision CLL: -0.098406


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:58
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.066508, 'Precision': [1.0, 0.5], 'parameter_25': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.07229, 'Precision': [1.0, 0.5], 'Learning time': 1.239, 'F1': 1.0, 'Inference time': 1.516, 'AUC PR': 1.0}, 'Learning time': 3.5800000000000005, 'F1': 1.0, 'Inference time': 1.406, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.14185106490048777;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.6526478931012827;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.7194734122109542;  // std dev = 5,16e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.508738411682717;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.38266873164552506;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.4175135841583098;  // std dev = 4,21e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2897830208139342;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.09269127618926094;  // std dev = 9,13e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.22484413364919764;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.2551722425694894;  // std dev = 2,11e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.23292320111431536;  // std dev = 0,131, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.24348092948008274;  // std dev = 0,571, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.19404064328720516;  // std dev = 0,114, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.2190753497226221;  // std dev = 0,541, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.16556463088204623;  // std dev = 0,101, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.19806566994974972;  // std dev = 0,509, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.14399546201391616;  // std dev = 0,090, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.0641918400820262;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.1797646739478802;  // std dev = 0,476, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.089376
   Precision = 0.339394 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.506787


Total learning time: 2.627 seconds
Total inference time: 1.338 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:07:02
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.089376, 'Precision': [0.339394, 0.5], 'Learning time': 2.627, 'F1': 0.506787, 'Inference time': 1.338, 'AUC PR': 1.0}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else return -0.14185106490048777;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.98329
   AUC PR    = 0.335101
   CLL	      = -0.159436
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.659 seconds
Total inference time: 0.875 seconds
AUC ROC: 0.98329


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:07:04
{'AUC ROC': 0.98329, 'Recall': 0.0, 'CLL': -0.159436, 'Precision': [nan, 0.5], 'Learning time': 0.659, 'F1': nan, 'Inference time': 0.875, 'AUC PR': 0.335101}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.05444570878794933;  // std dev = 0,330, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.14583028616943772;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0704225428283966;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077927
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.839 seconds
Total inference time: 1.457 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102934
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.501 seconds
Parameter learned model CLL: -0.102934


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [0.0, 1, 0], 'true,true': [0.33, 4, 5], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.007, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan]}, {'': [-2.2204460492503132e-17, 0.0], 'true,true': [-2.2204460492503132e-17, nan], 'true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true,true,true': [-5.551115123125783e-18, nan], 'true,true': [-5.551115123125783e-18, nan], 'true': [-5.551115123125783e-18, nan]}, {'': [0.0, -6.938893903907229e-19], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.012078157696162429, 0.0], 'true': [0.012078157696162429, nan], 'false': [nan, 0.0]}, {'': [0.0, 9.705414178406286e-06], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.691 seconds
Total inference time: 1.164 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.468 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 2.4989999999999997 seconds
Total inference time: 1.164 seconds
AUC ROC: 0.976337
Total revision time: 2.4989999999999997
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:10
{'AUC ROC': 0.976337, 'parameter_5': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.077927, 'Precision': [1.0, 0.5], 'Learning time': 0.839, 'F1': 1.0, 'Inference time': 1.457, 'AUC PR': 1.0}, 'Recall': 1.0, 'CLL': -0.159504, 'Precision': [0.263636, 0.5], 'Learning time': 2.4989999999999997, 'F1': 0.417266, 'Inference time': 1.164, 'AUC PR': 0.263636}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.168993
   Precision = 0.245763 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.394558


Total learning time: 1.059 seconds
Total inference time: 1.056 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:12
{'AUC ROC': 0.973999, 'Recall': 1.0, 'CLL': -0.168993, 'Precision': [0.245763, 0.5], 'Learning time': 1.059, 'F1': 0.394558, 'Inference time': 1.056, 'AUC PR': 0.245763}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.162966
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.534 seconds
Total inference time: 0.822 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:07:14
{'AUC ROC': 0.973999, 'Recall': 0.0, 'CLL': -0.162966, 'Precision': [nan, 0.5], 'Learning time': 0.534, 'F1': nan, 'Inference time': 0.822, 'AUC PR': 0.245763}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.047978725280993915;  // std dev = 0,481, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.14663768475852956;  // std dev = 1,86e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0708136656009222;  // std dev = 0,007, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077483
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.851 seconds
Total inference time: 1.336 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103482
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.527 seconds
Parameter learned model CLL: -0.103482


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [2.98e-08, 0, 10], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [3.65e-08, 0, 10], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [1.83e-08, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [0.0, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [7.45e-09, 0, 10], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [0.0, 1, 0], 'true,true': [0.481, 9, 10], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [1.86e-09, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.007, 10, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true,true': [8.881784197001253e-17, nan], 'true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true': [-1.7763568394002506e-16, nan]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, nan]}, {'': [3.3306690738754695e-17, 1.3877787807814458e-18], 'true,true,true': [3.3306690738754695e-17, nan], 'true,true': [3.3306690738754695e-17, nan], 'true': [3.3306690738754695e-17, nan]}, {'': [-2.7755575615628914e-17, 0.0], 'true,true,true': [-2.7755575615628914e-17, nan], 'true,true': [-2.7755575615628914e-17, nan], 'true': [-2.7755575615628914e-17, nan]}, {'': [5.551115123125783e-18, 6.938893903907229e-19], 'true,true': [5.551115123125783e-18, nan], 'true': [5.551115123125783e-18, nan]}, {'': [0.01219525894806429, 0.0], 'true': [0.01219525894806429, nan], 'false': [nan, 0.0]}, {'': [0.0, 4.872063689187467e-06], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.75 seconds
Total inference time: 1.102 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.483 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 2.611 seconds
Total inference time: 1.102 seconds
AUC ROC: 0.976337
Total revision time: 2.611
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:19
{'AUC ROC': 0.976337, 'Recall': 1.0, 'CLL': -0.159504, 'Precision': [0.263636, 0.5], 'Learning time': 2.611, 'parameter_10': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.077483, 'Precision': [1.0, 0.5], 'Learning time': 0.851, 'F1': 1.0, 'Inference time': 1.336, 'AUC PR': 1.0}, 'F1': 0.417266, 'Inference time': 1.102, 'AUC PR': 0.263636}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.168993
   Precision = 0.245763 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.394558


Total learning time: 1.174 seconds
Total inference time: 1.069 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:22
{'AUC ROC': 0.973999, 'Recall': 1.0, 'CLL': -0.168993, 'Precision': [0.245763, 0.5], 'Learning time': 1.174, 'F1': 0.394558, 'Inference time': 1.069, 'AUC PR': 0.245763}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.162966
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.527 seconds
Total inference time: 0.861 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:07:23
{'AUC ROC': 0.973999, 'Recall': 0.0, 'CLL': -0.162966, 'Precision': [nan, 0.5], 'Learning time': 0.527, 'F1': nan, 'Inference time': 0.861, 'AUC PR': 0.245763}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.05005739855108665;  // std dev = 0,584, 28,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.14637776083886372;  // std dev = 4,17e-09, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0706881943898241;  // std dev = 0,010, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077625
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.995 seconds
Total inference time: 1.43 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103306
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.604 seconds
Parameter learned model CLL: -0.103306


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [5.16e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [1.39e-08, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [4.71e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [2.36e-08, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [0.0, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [0.0, 2, 0], 'true,true': [0.584, 13, 15], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [4.17e-09, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.01, 15, 0]}]]
[{'': [-2.3684757858670006e-16, -1.4802973661668754e-17], 'true,true': [-2.3684757858670006e-16, nan], 'true': [-2.3684757858670006e-16, nan]}, {'': [1.7763568394002506e-16, 3.7007434154171884e-18], 'true,true': [1.7763568394002506e-16, nan], 'true': [1.7763568394002506e-16, nan]}, {'': [-2.3684757858670006e-16, 1.295260195396016e-17], 'true': [-2.3684757858670006e-16, nan]}, {'': [1.4802973661668753e-16, -5.551115123125783e-18], 'true': [1.4802973661668753e-16, nan]}, {'': [-1.4802973661668754e-17, 1.8503717077085942e-18], 'true,true': [-1.4802973661668754e-17, nan], 'true': [-1.4802973661668754e-17, nan]}, {'': [3.700743415417188e-17, 5.551115123125783e-18], 'true,true,true': [3.700743415417188e-17, nan], 'true,true': [3.700743415417188e-17, nan], 'true': [3.700743415417188e-17, nan]}, {'': [-2.960594732333751e-17, -1.8503717077085942e-18], 'true,true,true': [-2.960594732333751e-17, nan], 'true,true': [-2.960594732333751e-17, nan], 'true': [-2.960594732333751e-17, nan]}, {'': [-7.401486830834377e-18, 1.8503717077085942e-18], 'true,true': [-7.401486830834377e-18, nan], 'true': [-7.401486830834377e-18, nan]}, {'': [0.012166741123143197, 0.0], 'true': [0.012166741123143197, nan], 'false': [nan, 0.0]}, {'': [2.2204460492503132e-17, 6.492710660378302e-06], 'true': [2.2204460492503132e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.805 seconds
Total inference time: 1.219 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.513 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 2.917 seconds
Total inference time: 1.219 seconds
AUC ROC: 0.976337
Total revision time: 2.917
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:29
{'AUC ROC': 0.976337, 'Recall': 1.0, 'CLL': -0.159504, 'Precision': [0.263636, 0.5], 'Learning time': 2.917, 'F1': 0.417266, 'Inference time': 1.219, 'parameter_15': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.077625, 'Precision': [1.0, 0.5], 'Learning time': 0.995, 'F1': 1.0, 'Inference time': 1.43, 'AUC PR': 1.0}, 'AUC PR': 0.263636}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.168993
   Precision = 0.245763 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.394558


Total learning time: 1.263 seconds
Total inference time: 1.116 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:32
{'AUC ROC': 0.973999, 'Recall': 1.0, 'CLL': -0.168993, 'Precision': [0.245763, 0.5], 'Learning time': 1.263, 'F1': 0.394558, 'Inference time': 1.116, 'AUC PR': 0.245763}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.162966
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.579 seconds
Total inference time: 0.839 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:07:34
{'AUC ROC': 0.973999, 'Recall': 0.0, 'CLL': -0.162966, 'Precision': [nan, 0.5], 'Learning time': 0.579, 'F1': nan, 'Inference time': 0.839, 'AUC PR': 0.245763}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 1,05e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.047978725280993915;  // std dev = 0,681, 38,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.14663768475852956;  // std dev = 1,86e-09, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07081366560092214;  // std dev = 0,010, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077483
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.94 seconds
Total inference time: 1.6 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103482
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.593 seconds
Parameter learned model CLL: -0.103482


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 20, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [7.3e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [5.16e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [2.11e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [1.05e-08, 20, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [1.49e-08, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.39e-08, 20, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [0.0, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [0.0, 2, 0], 'true,true': [0.681, 18, 20], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [1.86e-09, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.01, 20, 0]}]]
[{'': [-8.881784197001253e-17, 2.7755575615628915e-18], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, nan]}, {'': [2.6645352591003756e-16, 0.0], 'true,true': [2.6645352591003756e-16, nan], 'true': [2.6645352591003756e-16, nan]}, {'': [-2.6645352591003756e-16, 1.1102230246251566e-17], 'true': [-2.6645352591003756e-16, nan]}, {'': [1.3322676295501878e-16, -1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan]}, {'': [2.2204460492503132e-17, 5.551115123125783e-18], 'true,true': [2.2204460492503132e-17, nan], 'true': [2.2204460492503132e-17, nan]}, {'': [1.1102230246251566e-17, 9.714451465470119e-18], 'true,true,true': [1.1102230246251566e-17, nan], 'true,true': [1.1102230246251566e-17, nan], 'true': [1.1102230246251566e-17, nan]}, {'': [-2.7755575615628914e-17, -4.8572257327350596e-18], 'true,true,true': [-2.7755575615628914e-17, nan], 'true,true': [-2.7755575615628914e-17, nan], 'true': [-2.7755575615628914e-17, nan]}, {'': [-2.2204460492503132e-17, -6.938893903907229e-19], 'true,true': [-2.2204460492503132e-17, nan], 'true': [-2.2204460492503132e-17, nan]}, {'': [0.012195258948064258, 0.0], 'true': [0.012195258948064258, nan], 'false': [nan, 0.0]}, {'': [0.0, 4.872063689188855e-06], 'true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09269127618926094;  // std dev = 1,05e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06419184008202619;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.839 seconds
Total inference time: 1.247 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.505 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 2.877 seconds
Total inference time: 1.247 seconds
AUC ROC: 0.976337
Total revision time: 2.877
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:40
{'AUC ROC': 0.976337, 'Recall': 1.0, 'CLL': -0.159504, 'Precision': [0.263636, 0.5], 'Learning time': 2.877, 'parameter_20': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.077483, 'Precision': [1.0, 0.5], 'Learning time': 0.94, 'F1': 1.0, 'Inference time': 1.6, 'AUC PR': 1.0}, 'F1': 0.417266, 'Inference time': 1.247, 'AUC PR': 0.263636}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.168993
   Precision = 0.245763 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.394558


Total learning time: 1.304 seconds
Total inference time: 1.179 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:43
{'AUC ROC': 0.973999, 'Recall': 1.0, 'CLL': -0.168993, 'Precision': [0.245763, 0.5], 'Learning time': 1.304, 'F1': 0.394558, 'Inference time': 1.179, 'AUC PR': 0.245763}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.162966
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.587 seconds
Total inference time: 1.328 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:07:45
{'AUC ROC': 0.973999, 'Recall': 0.0, 'CLL': -0.162966, 'Precision': [nan, 0.5], 'Learning time': 0.587, 'F1': nan, 'Inference time': 1.328, 'AUC PR': 0.245763}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 1,29e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.04921708382487901;  // std dev = 0,757, 47,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.1464827904701638;  // std dev = 3,73e-09, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07073894491592111;  // std dev = 0,012, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077568
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.014 seconds
Total inference time: 1.416 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103377
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.613 seconds
Parameter learned model CLL: -0.103377


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [1.33e-07, 0, 25], 'true,false': [0.0, 0, 0], 'false': [1.83e-08, 25, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [2.11e-08, 0, 25], 'true,false': [0.0, 0, 0], 'false': [1.29e-08, 25, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.75e-08, 25, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [1.49e-08, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [0.0, 3, 0], 'true,true': [0.757, 22, 25], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [3.73e-09, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.012, 25, 0]}]]
[{'': [7.105427357601002e-16, 1.3322676295501878e-17], 'true,true': [7.105427357601002e-16, nan], 'true': [7.105427357601002e-16, nan]}, {'': [-7.105427357601002e-17, -4.440892098500626e-18], 'true,true': [-7.105427357601002e-17, nan], 'true': [-7.105427357601002e-17, nan]}, {'': [-2.842170943040401e-16, 0.0], 'true': [-2.842170943040401e-16, nan]}, {'': [-3.552713678800501e-17, -2.220446049250313e-18], 'true': [-3.552713678800501e-17, nan]}, {'': [1.7763568394002505e-17, 6.661338147750939e-18], 'true,true': [1.7763568394002505e-17, nan], 'true': [1.7763568394002505e-17, nan]}, {'': [0.0, 1.2212453270876722e-17], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [8.881784197001253e-18, -1.1102230246251566e-18], 'true,true,true': [8.881784197001253e-18, nan], 'true,true': [8.881784197001253e-18, nan], 'true': [8.881784197001253e-18, nan]}, {'': [-3.552713678800501e-17, -1.1102230246251566e-18], 'true,true': [-3.552713678800501e-17, nan], 'true': [-3.552713678800501e-17, nan]}, {'': [0.012179310216478837, -5.782411586589357e-19], 'true': [0.012179310216478837, nan], 'false': [nan, -5.782411586589357e-19]}, {'': [1.3322676295501878e-17, 5.845170232640084e-06], 'true': [1.3322676295501878e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.09269127618926093;  // std dev = 1,29e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 3,73e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.829 seconds
Total inference time: 1.099 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.525 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.159504
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 2.981 seconds
Total inference time: 1.099 seconds
AUC ROC: 0.976337
Total revision time: 2.981
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:51
{'AUC ROC': 0.976337, 'Recall': 1.0, 'CLL': -0.159504, 'Precision': [0.263636, 0.5], 'parameter_25': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.077568, 'Precision': [1.0, 0.5], 'Learning time': 1.014, 'F1': 1.0, 'Inference time': 1.416, 'AUC PR': 1.0}, 'Learning time': 2.981, 'F1': 0.417266, 'Inference time': 1.099, 'AUC PR': 0.263636}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360639;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 9,13e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 1,75e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420276;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202622;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.168993
   Precision = 0.245763 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.394558


Total learning time: 1.312 seconds
Total inference time: 1.133 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:54
{'AUC ROC': 0.973999, 'Recall': 1.0, 'CLL': -0.168993, 'Precision': [0.245763, 0.5], 'Learning time': 1.312, 'F1': 0.394558, 'Inference time': 1.133, 'AUC PR': 0.245763}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004877;  // std dev = 1,83e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.162966
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.602 seconds
Total inference time: 0.868 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:07:55
{'AUC ROC': 0.973999, 'Recall': 0.0, 'CLL': -0.162966, 'Precision': [nan, 0.5], 'Learning time': 0.602, 'F1': nan, 'Inference time': 0.868, 'AUC PR': 0.245763}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.15792738715295052;  // std dev = 0,407, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.2263317006768216;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, F) )
%   | | | then return -0.09832531262782444;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.18916064823533763;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.08994574095784788;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.043819721309202794;  // std dev = 0,374, 10,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.08677355961470753;  // std dev = 0,109, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07127363276341987;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077654
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.874 seconds
Total inference time: 1.627 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.118567
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.518 seconds
Parameter learned model CLL: -0.118567


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, G), director(G)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true': [0.0, 2, 0], 'true,true': [0.0, 0, 5], 'false': [2.63e-09, 3, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [1.49e-08, 0, 5], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [2.63e-09, 3, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.407, 2, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 3, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'genre(B, F)'}, {'true,true,true,true': [7.45e-09, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 3, 0], 'true,true,false,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [5.27e-09, 0, 5], 'false': [1.86e-09, 3, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)'}, {'true,true': [0.374, 5, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.109, 2, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 3, 0]}]]
[{'': [0.20408163265306106, 0.0], 'true,false,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.1456911249928931, 0.0], 'true,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.09097966150327687, 2.3129646346357427e-18], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.05499491886647134, -1.1564823173178713e-18], 'true,false,true': [0.0, nan], 'true': [4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.03487798824388733, 2.3129646346357427e-18], 'true,false,true': [0.0, nan], 'true,true': [-2.2204460492503132e-17, nan], 'true': [-2.2204460492503132e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.0236414047624589, 0.0], 'true,true,true': [0.0236414047624589, nan], 'true,true': [0.0236414047624589, nan], 'true': [0.0236414047624589, nan]}, {'': [0.021510648222019018, 0.0], 'true,true,true': [1.1102230246251566e-17, nan], 'true,true': [1.1102230246251566e-17, 0.0], 'true': [0.021510648222019018, nan], 'true,true,false': [0.0, nan]}, {'': [0.015898036018052647, 1.1564823173178713e-18], 'true,true': [5.551115123125783e-18, nan], 'true': [5.551115123125783e-18, 0.0], 'true,false': [0.0, nan]}, {'': [0.01395268716484153, nan], 'true': [0.01395268716484153, nan]}, {'': [0.011973588145049277, -5.782411586589357e-19], 'true': [0.011973588145049277, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.141719911250194;  // std dev = 0,278, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.17008299408001787;  // std dev = 0,295, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.12048896047499824;  // std dev = 0,266, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1433056332729074;  // std dev = 0,280, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.20359995224166036;  // std dev = 0,009, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11048015792689543;  // std dev = 0,004, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1324034390540899;  // std dev = 0,220, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08425424451290758;  // std dev = 0,032, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.07546969830174625;  // std dev = 0,203, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.09012032965373212;  // std dev = 0,214, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06795329292885795;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075813
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.842 seconds
Total inference time: 1.66 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.118478
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.516 seconds
Refined model CLL: -0.118478


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075813
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.75 seconds
Total inference time: 1.66 seconds
AUC ROC: 1.0
Total revision time: 2.75
Best scored revision CLL: -0.118478


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:02
{'AUC ROC': 1.0, 'parameter_5': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.077654, 'Precision': [1.0, 0.5], 'Learning time': 0.874, 'F1': 1.0, 'Inference time': 1.627, 'AUC PR': 1.0}, 'Recall': 1.0, 'CLL': -0.075813, 'Precision': [1.0, 0.5], 'Learning time': 2.75, 'F1': 1.0, 'Inference time': 1.66, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.19890208353793024;  // std dev = 0,212, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return 0.38117887778441256;  // std dev = 0,604, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.44286578478166494;  // std dev = 0,641, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.38406210416725245;  // std dev = 0,779, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12720121125477402;  // std dev = 0,067, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.19453618149295746;  // std dev = 0,272, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return 0.2464647367285827;  // std dev = 0,474, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2815485607423225;  // std dev = 0,496, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.24398613442641795;  // std dev = 0,673, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12485834618225618;  // std dev = 0,110, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.18425404154521177;  // std dev = 0,299, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return 0.16460106089101975;  // std dev = 0,392, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.18569918853523731;  // std dev = 0,409, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.16283718840429318;  // std dev = 0,271, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return 0.13364463848100827;  // std dev = 0,382, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.15043833033937748;  // std dev = 0,400, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.1488122744243989;  // std dev = 0,543, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12740505788017165;  // std dev = 0,166, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.15329801983857103;  // std dev = 0,278, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return 0.09699346170612326;  // std dev = 0,338, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.10885016769881964;  // std dev = 0,357, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.977561
   AUC PR    = 0.504309
   CLL	      = -0.205319
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.183 seconds
Total inference time: 1.443 seconds
AUC ROC: 0.977561


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:05
{'AUC ROC': 0.977561, 'Recall': 1.0, 'CLL': -0.205319, 'Precision': [0.626761, 0.5], 'Learning time': 1.183, 'F1': 0.770563, 'Inference time': 1.443, 'AUC PR': 0.504309}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.888089
   AUC PR    = 0.183316
   CLL	      = -0.226517
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.511 seconds
Total inference time: 1.005 seconds
AUC ROC: 0.888089


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:08:07
{'AUC ROC': 0.888089, 'Recall': 0.0, 'CLL': -0.226517, 'Precision': [nan, 0.5], 'Learning time': 0.511, 'F1': nan, 'Inference time': 1.005, 'AUC PR': 0.183316}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.1984460769098417;  // std dev = 0,439, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21931540999270677;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, F) )
%   | | | then return -0.10197652126901377;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1840755186779429;  // std dev = 1,05e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.09300951736417028;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.043092629373363105;  // std dev = 0,514, 20,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.11215989337420984;  // std dev = 0,090, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07122551885682028;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078232
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.116 seconds
Total inference time: 1.44 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112456
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.562 seconds
Parameter learned model CLL: -0.112456


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, G), director(G)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 10], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [2.98e-08, 0, 10], 'false': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true': [0.0, 2, 0], 'true,true': [0.0, 0, 10], 'false': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [3.65e-08, 0, 10], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [3.73e-09, 8, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 10], 'false': [0.0, 8, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.439, 2, 10], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 8, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'genre(B, F)'}, {'true,true,true,true': [0.0, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 8, 0], 'true,true,false,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [1.05e-08, 0, 10], 'false': [2.63e-09, 8, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)'}, {'true,true': [0.514, 10, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.09, 2, 10], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 8, 0]}]]
[{'': [0.1388888888888887, -6.938893903907228e-18], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.09915090450905217, 0.0], 'true,true': [8.881784197001253e-17, nan], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.0619167140786188, -1.734723475976807e-18], 'true': [-1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.037427097561904134, 1.734723475976807e-18], 'true,false,true': [0.0, nan], 'true': [1.3322676295501878e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02373640866597886, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.016089289352229, 1.734723475976807e-18], 'true,true,true': [0.016089289352229, nan], 'true,true': [0.016089289352229, nan], 'true': [0.016089289352229, nan]}, {'': [0.014337292374150818, 0.0], 'true,true,true': [-3.8857805861880476e-17, nan], 'true,true': [-3.8857805861880476e-17, 0.0], 'true': [0.014337292374150818, nan], 'true,true,false': [0.0, nan]}, {'': [0.010663349610897118, 8.673617379884035e-19], 'true,true': [1.1102230246251566e-17, nan], 'true': [1.1102230246251566e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.013230989531599327, nan], 'true': [0.013230989531599327, nan]}, {'': [0.008083671147406548, 1.734723475976807e-18], 'true': [0.008083671147406548, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.09269127618926097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.21262761832475363;  // std dev = 0,113, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.17008299408001787;  // std dev = 0,295, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.17687452476404525;  // std dev = 0,106, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.1433056332729074;  // std dev = 0,280, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1919316832399053;  // std dev = 0,017, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11692271763371498;  // std dev = 0,006, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return 0.12703638711659;  // std dev = 0,089, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.1030162968543527;  // std dev = 0,236, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11105815443308142;  // std dev = 0,088, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.08996414613284114;  // std dev = 0,233, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.0641918400820262;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079387
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.166 seconds
Total inference time: 1.542 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111403
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.776 seconds
Refined model CLL: -0.111403


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079387
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.62 seconds
Total inference time: 1.542 seconds
AUC ROC: 1.0
Total revision time: 3.62
Best scored revision CLL: -0.111403


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:14
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.079387, 'Precision': [1.0, 0.5], 'Learning time': 3.62, 'parameter_10': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.078232, 'Precision': [1.0, 0.5], 'Learning time': 1.116, 'F1': 1.0, 'Inference time': 1.44, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.542, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return 0.6189976143448207;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return 0.4851287515461648;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.41257245288266;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.5130311748086669;  // std dev = 0,108, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.22508740112139822;  // std dev = 0,431, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.38734148477476515;  // std dev = 0,104, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1941626479448841;  // std dev = 0,389, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.3006613517194525;  // std dev = 0,093, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1697389517868146;  // std dev = 0,352, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.24165246932985437;  // std dev = 0,082, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.15013796006221422;  // std dev = 0,319, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.20029301411782843;  // std dev = 0,072, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.13417016042695362;  // std dev = 0,291, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17020868471705808;  // std dev = 0,064, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12098138157307942;  // std dev = 0,266, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1475563067923041;  // std dev = 0,057, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10994980873292605;  // std dev = 0,245, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.99252
   AUC PR    = 0.872151
   CLL	      = -0.146235
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.837 seconds
Total inference time: 1.32 seconds
AUC ROC: 0.99252


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:17
{'AUC ROC': 0.99252, 'Recall': 1.0, 'CLL': -0.146235, 'Precision': [0.626761, 0.5], 'Learning time': 1.837, 'F1': 0.770563, 'Inference time': 1.32, 'AUC PR': 0.872151}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.891758
   AUC PR    = 0.203944
   CLL	      = -0.23001
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.631 seconds
Total inference time: 0.906 seconds
AUC ROC: 0.891758


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:08:19
{'AUC ROC': 0.891758, 'Recall': 0.0, 'CLL': -0.23001, 'Precision': [nan, 0.5], 'Learning time': 0.631, 'F1': nan, 'Inference time': 0.906, 'AUC PR': 0.203944}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.2151302432803263;  // std dev = 0,452, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21647219178946342;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, F) )
%   | | | then return -0.10351459051400204;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1820058060991805;  // std dev = 1,29e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.09429512344733769;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.04280766909532315;  // std dev = 0,623, 30,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.12255216607009245;  // std dev = 0,078, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07120667034100259;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078488
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.137 seconds
Total inference time: 1.966 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109953
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.669 seconds
Parameter learned model CLL: -0.109953


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, G), director(G)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 15], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [5.16e-08, 0, 15], 'false': [7.45e-09, 13, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true': [0.0, 2, 0], 'true,true': [0.0, 0, 15], 'false': [1.05e-08, 13, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [4.71e-08, 0, 15], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 15], 'false': [5.27e-09, 13, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.452, 2, 15], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 13, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'genre(B, F)'}, {'true,true,true,true': [0.0, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 13, 0], 'true,true,false,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [1.29e-08, 0, 15], 'false': [0.0, 13, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)'}, {'true,true': [0.623, 15, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.078, 2, 15], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 13, 0]}]]
[{'': [0.10380622837370206, -1.2810265668751807e-17], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.0741058663458661, 4.270088556250602e-18], 'true,true': [1.7763568394002506e-16, nan], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.04627685204491911, 8.540177112501205e-18], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.027973194025506288, -2.135044278125301e-18], 'true,false,true': [0.0, nan], 'true': [1.4802973661668753e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.017740706823015356, 2.135044278125301e-18], 'true,false,true': [0.0, nan], 'true,true': [-1.4802973661668754e-17, nan], 'true': [-1.4802973661668754e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.012025212803050063, 4.270088556250602e-18], 'true,true,true': [0.012025212803050063, nan], 'true,true': [0.012025212803050063, nan], 'true': [0.012025212803050063, nan]}, {'': [0.010628879672898835, 1.0675221390626506e-18], 'true,true,true': [-1.4802973661668754e-17, nan], 'true,true': [-1.4802973661668754e-17, 0.0], 'true': [0.010628879672898835, nan], 'true,true,false': [0.0, nan]}, {'': [0.007924796228540143, 0.0], 'true,true': [1.1102230246251566e-17, nan], 'true': [1.1102230246251566e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.012935351426054552, nan], 'true': [0.012935351426054552, nan]}, {'': [0.0060231558964745436, 1.0675221390626506e-18], 'true': [0.0060231558964745436, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.22113654317370077;  // std dev = 0,102, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.20654981486121995;  // std dev = 0,119, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.183502337707499;  // std dev = 0,096, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.1721236308087268;  // std dev = 0,112, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18764030339480656;  // std dev = 0,008, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12108667675691095;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then return 0.13236039205549233;  // std dev = 0,081, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.12418412978259578;  // std dev = 0,095, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11575237141144194;  // std dev = 0,080, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.10848920306757392;  // std dev = 0,093, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080342
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.15 seconds
Total inference time: 1.503 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106665
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.726 seconds
Refined model CLL: -0.106665


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080342
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.682 seconds
Total inference time: 1.503 seconds
AUC ROC: 1.0
Total revision time: 3.682
Best scored revision CLL: -0.106665


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:27
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.080342, 'Precision': [1.0, 0.5], 'Learning time': 3.682, 'F1': 1.0, 'Inference time': 1.503, 'parameter_15': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.078488, 'Precision': [1.0, 0.5], 'Learning time': 1.137, 'F1': 1.0, 'Inference time': 1.966, 'AUC PR': 1.0}, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then return 0.6392070123615109;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then return 0.49932275605826126;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.48603426285502305;  // std dev = 0,048, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(B) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.2655255794896324;  // std dev = 0,449, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.36781172432766746;  // std dev = 0,045, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(B) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.2259980125449849;  // std dev = 0,401, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.287158393729034;  // std dev = 0,040, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.19498917350747075;  // std dev = 0,357, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.23214384880569278;  // std dev = 0,035, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( female(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.17037515018822647;  // std dev = 0,320, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.19336506562323585;  // std dev = 0,030, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.15058117166806642;  // std dev = 0,287, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.16498643994376377;  // std dev = 0,027, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(B) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1344501929458366;  // std dev = 0,260, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.1435003025682876;  // std dev = 0,024, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1211333242235348;  // std dev = 0,237, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.99252
   AUC PR    = 0.872151
   CLL	      = -0.156293
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.913 seconds
Total inference time: 1.674 seconds
AUC ROC: 0.99252


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:31
{'AUC ROC': 0.99252, 'Recall': 1.0, 'CLL': -0.156293, 'Precision': [0.626761, 0.5], 'Learning time': 1.913, 'F1': 0.770563, 'Inference time': 1.674, 'AUC PR': 0.872151}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */


Results
   AUC ROC   = 0.891758
   AUC PR    = 0.203944
   CLL	      = -0.232442
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.679 seconds
Total inference time: 1.205 seconds
AUC ROC: 0.891758


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:08:33
{'AUC ROC': 0.891758, 'Recall': 0.0, 'CLL': -0.232442, 'Precision': [nan, 0.5], 'Learning time': 0.679, 'F1': nan, 'Inference time': 1.205, 'AUC PR': 0.203944}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.2242306976642271;  // std dev = 0,459, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21493262873955551;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, F) )
%   | | | then return -0.10436215883741057;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.18088284822050626;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.0950023130645015;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.0426558077745665;  // std dev = 0,715, 40,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.1282070237025274;  // std dev = 0,069, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07119662745208835;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078633
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.132 seconds
Total inference time: 1.912 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108592
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.629 seconds
Parameter learned model CLL: -0.108592


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, G), director(G)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 20], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [7.3e-08, 0, 20], 'false': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true': [0.0, 2, 0], 'true,true': [0.0, 0, 20], 'false': [1.67e-08, 18, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [5.16e-08, 0, 20], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [2.11e-08, 0, 20], 'false': [1.05e-08, 18, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.459, 2, 20], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.18e-08, 18, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'genre(B, F)'}, {'true,true,true,true': [0.0, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 18, 0], 'true,true,false,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 20], 'false': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)'}, {'true,true': [0.715, 20, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.069, 2, 20], 'true,false': [0.0, 0, 0], 'false': [6.45e-09, 18, 0]}]]
[{'': [0.08264462809917356, -3.0839528461809902e-18], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.05899888532770057, 0.0], 'true,true': [2.6645352591003756e-16, nan], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.03684300341868208, 1.5419764230904953e-17], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.022270669623612512, -4.625929269271485e-18], 'true,false,true': [0.0, nan], 'true': [1.3322676295501878e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.014124143999590782, 6.1679056923619804e-18], 'true,false,true': [0.0, nan], 'true,true': [2.2204460492503132e-17, nan], 'true': [2.2204460492503132e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.009573792011243693, 7.709882115452476e-18], 'true,true,true': [0.009573792011243693, nan], 'true,true': [0.009573792011243693, nan], 'true': [0.009573792011243693, nan]}, {'': [0.008425550526761956, 0.0], 'true,true,true': [-2.2204460492503132e-17, nan], 'true,true': [-2.2204460492503132e-17, 0.0], 'true': [0.008425550526761956, nan], 'true,true,false': [0.0, nan]}, {'': [0.006290299356797913, -7.709882115452476e-19], 'true,true': [-5.551115123125783e-18, nan], 'true': [-5.551115123125783e-18, 0.0], 'true,false': [0.0, nan]}, {'': [0.012774447745219093, nan], 'true': [0.012774447745219093, nan]}, {'': [0.004787482534365695, 2.3129646346357427e-18], 'true': [0.004787482534365695, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.224230697664227;  // std dev = 0,098, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.224230697664227;  // std dev = 0,098, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.08518475138839683;  // std dev = 1,18e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.18590582986892218;  // std dev = 0,092, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.18590582986892218;  // std dev = 0,092, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1852234842419557;  // std dev = 2,98e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12306036409923406;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.13440276932527587;  // std dev = 0,077, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.13440276932527587;  // std dev = 0,077, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11754837585192957;  // std dev = 0,076, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.11754837585192957;  // std dev = 0,076, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.0641918400820262;  // std dev = 6,45e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080828
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.269 seconds
Total inference time: 1.473 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103959
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.601 seconds
Refined model CLL: -0.103959


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.080828
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.631 seconds
Total inference time: 1.473 seconds
AUC ROC: 1.0
Total revision time: 3.631
Best scored revision CLL: -0.103959


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:41
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.080828, 'Precision': [1.0, 0.5], 'Learning time': 3.631, 'parameter_20': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.078633, 'Precision': [1.0, 0.5], 'Learning time': 1.132, 'F1': 1.0, 'Inference time': 1.912, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.473, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.6465415686654066;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.6465415686654066;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.5044629797645588;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.5044629797645588;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.37956420580342304;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.37956420580342304;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.3780557943351663;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( female(B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.24390639889656743;  // std dev = 0,239, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.29403551075991874;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( female(B) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.2138363418557296;  // std dev = 0,221, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2368730776591903;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.18908552776525564;  // std dev = 0,203, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.1967435409324434;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.16850745281590304;  // std dev = 0,186, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16749070606793368;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.1512581723843053;  // std dev = 0,171, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14541711499744175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( female(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.13669103860518977;  // std dev = 0,157, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.985041
   AUC PR    = 0.626761
   CLL	      = -0.197063
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 2.007 seconds
Total inference time: 1.555 seconds
AUC ROC: 0.985041


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:44
{'AUC ROC': 0.985041, 'Recall': 1.0, 'CLL': -0.197063, 'Precision': [0.626761, 0.5], 'Learning time': 2.007, 'F1': 0.770563, 'Inference time': 1.555, 'AUC PR': 0.626761}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.23376
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.699 seconds
Total inference time: 1.067 seconds
AUC ROC: 0.870167


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:08:46
{'AUC ROC': 0.870167, 'Recall': 0.0, 'CLL': -0.23376, 'Precision': [nan, 0.5], 'Learning time': 0.699, 'F1': nan, 'Inference time': 1.067, 'AUC PR': 0.162113}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.22996061338742388;  // std dev = 0,463, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 1,58e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21396736159732746;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, F) )
%   | | | then return -0.10489895349271869;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1801779707546057;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.09544974140467491;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.042561488751570106;  // std dev = 0,796, 50,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.13176277493066244;  // std dev = 0,063, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0711903906073282;  // std dev = 1,12e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078726
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.123 seconds
Total inference time: 1.693 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107735
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.61 seconds
Parameter learned model CLL: -0.107735


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, G), director(G)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.33e-07, 0, 25], 'false': [1.49e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [0.0, 0, 25], 'false': [0.0, 23, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true': [0.0, 2, 0], 'true,true': [0.0, 0, 25], 'false': [1.05e-08, 23, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [2.11e-08, 0, 25], 'false': [1.18e-08, 23, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.463, 2, 25], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.58e-08, 23, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'genre(B, F)'}, {'true,true,true,true': [1.49e-08, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 23, 0], 'true,true,false,true': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 2, 0], 'true,true,true': [1.49e-08, 0, 25], 'false': [0.0, 23, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)'}, {'true,true': [0.796, 25, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.063, 2, 25], 'true,false': [0.0, 0, 0], 'false': [1.12e-08, 23, 0]}]]
[{'': [0.06858710562414343, 9.654113257610057e-18], 'true,false,true': [0.0, nan], 'true,true': [7.105427357601002e-16, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.04896340963409988, -2.413528314402514e-18], 'true,true': [-7.105427357601002e-17, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.030576155100552255, 4.827056628805028e-18], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.01848251731452055, -2.413528314402514e-18], 'true,false,true': [0.0, nan], 'true': [-3.552713678800501e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.011721683291841456, 6.033820786006285e-18], 'true,false,true': [0.0, nan], 'true,true': [1.7763568394002505e-17, nan], 'true': [1.7763568394002505e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.007945328075174797, 1.0860877414811314e-17], 'true,true,true': [0.007945328075174797, nan], 'true,true': [0.007945328075174797, nan], 'true': [0.007945328075174797, nan]}, {'': [0.006973643820240387, -4.827056628805028e-18], 'true,true,true': [8.881784197001253e-18, nan], 'true,true': [8.881784197001253e-18, 0.0], 'true': [0.006973643820240387, nan], 'true,true,false': [0.0, nan]}, {'': [0.005210606015785968, -1.8101462358018856e-18], 'true,true': [8.881784197001253e-18, nan], 'true': [8.881784197001253e-18, 0.0], 'true,false': [0.0, nan]}, {'': [0.012673261978559336, nan], 'true': [0.012673261978559336, nan]}, {'': [0.003969150785951024, 5.430438707405657e-18], 'true': [0.003969150785951024, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.22899093534195966;  // std dev = 0,091, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.23086102871535466;  // std dev = 0,088, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.08518475138839682;  // std dev = 1,58e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.18959676685667828;  // std dev = 0,085, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0.19104457165304378;  // std dev = 0,082, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109176;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18369274033422642;  // std dev = 0,001, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12415569028496448;  // std dev = 0,000255, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07324622576333704;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420275;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.13726131881116924;  // std dev = 0,072, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.1383069547097568;  // std dev = 0,069, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12008890322198505;  // std dev = 0,071, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.12102726981241962;  // std dev = 0,068, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.0641918400820262;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081102
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.186 seconds
Total inference time: 1.464 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102228
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.553 seconds
Refined model CLL: -0.102228


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.081102
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.472 seconds
Total inference time: 1.464 seconds
AUC ROC: 1.0
Total revision time: 3.472
Best scored revision CLL: -0.102228


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:54
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.081102, 'Precision': [1.0, 0.5], 'parameter_25': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.078726, 'Precision': [1.0, 0.5], 'Learning time': 1.123, 'F1': 1.0, 'Inference time': 1.693, 'AUC PR': 1.0}, 'Learning time': 3.472, 'F1': 1.0, 'Inference time': 1.464, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6622329172201352;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.5154428111118985;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.3875647182006322;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 1,18e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.29398103437200096;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.30202725427262445;  // std dev = 0,009, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( female(B) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.2213437277808904;  // std dev = 0,255, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.24237808330359925;  // std dev = 0,008, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.19830254077952938;  // std dev = 0,241, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.20067825702122127;  // std dev = 0,007, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.1788414562056796;  // std dev = 0,227, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.1704082549023632;  // std dev = 0,006, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( female(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.16218657390172933;  // std dev = 0,212, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.14765118464821797;  // std dev = 0,005, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( female(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.14780376900511896;  // std dev = 0,198, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.977561
   AUC PR    = 0.504309
   CLL	      = -0.24679
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.879 seconds
Total inference time: 1.479 seconds
AUC ROC: 0.977561


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:57
{'AUC ROC': 0.977561, 'Recall': 1.0, 'CLL': -0.24679, 'Precision': [0.626761, 0.5], 'Learning time': 1.879, 'F1': 0.770563, 'Inference time': 1.479, 'AUC PR': 0.504309}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */


Results
   AUC ROC   = 0.848575
   AUC PR    = 0.136922
   CLL	      = -0.234324
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.729 seconds
Total inference time: 0.894 seconds
AUC ROC: 0.848575


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:08:59
{'AUC ROC': 0.848575, 'Recall': 0.0, 'CLL': -0.234324, 'Precision': [nan, 0.5], 'Learning time': 0.729, 'F1': nan, 'Inference time': 0.894, 'AUC PR': 0.136922}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.19844607690984173;  // std dev = 0,311, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21931540999270674;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, F) )
%   | | | then return -0.10197652126901377;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.18407551867794292;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.09300951736417028;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.055483696841981546;  // std dev = 0,344, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.11066391867240481;  // std dev = 0,090, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07008514949088193;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07304
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.882 seconds
Total inference time: 1.292 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111386
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.495 seconds
Parameter learned model CLL: -0.111386


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, G), director(G)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 5], 'false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [1.49e-08, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.311, 1, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'genre(B, F)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [5.27e-09, 0, 5], 'false': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [0.0, 1, 0], 'true,true': [0.344, 4, 5], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.09, 1, 5], 'true,false': [0.0, 0, 0], 'false': [0.007, 4, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true,false,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.09915090450905224, 0.0], 'true,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan]}, {'': [0.061916714078618984, 0.0], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.03742709756190412, 0.0], 'true,false,true': [0.0, nan], 'true': [4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.02373640866597888, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-2.2204460492503132e-17, nan], 'true': [-2.2204460492503132e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.01608928935222897, 0.0], 'true,true,true': [0.01608928935222897, nan], 'true,true': [0.01608928935222897, nan], 'true': [0.01608928935222897, nan]}, {'': [0.014337292374150842, 0.0], 'true,true,true': [-1.1102230246251566e-17, nan], 'true,true': [-1.1102230246251566e-17, 0.0], 'true': [0.014337292374150842, nan], 'true,true,false': [0.0, nan]}, {'': [0.010663349610897111, 0.0], 'true,true': [5.551115123125783e-18, nan], 'true': [5.551115123125783e-18, 0.0], 'true,false': [0.0, nan]}, {'': [0.01316571394943626, 0.0], 'true': [0.01316571394943626, nan], 'false': [nan, 0.0]}, {'': [0.008044524617213828, 1.1577031929503774e-05], 'true': [0.008044524617213828, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.19844607690984173;  // std dev = 0,311, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.16576675478241998;  // std dev = 0,293, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.1922544955674892;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11818961007473873;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.11905405276008751;  // std dev = 0,247, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1040028846124803;  // std dev = 0,243, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068828
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.031 seconds
Total inference time: 1.149 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111782
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.467 seconds
Refined model CLL: -0.111782


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07304
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.875 seconds
Total inference time: 1.292 seconds
AUC ROC: 1.0
Total revision time: 2.875
Best scored revision CLL: -0.111386


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:05
{'AUC ROC': 1.0, 'parameter_5': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.07304, 'Precision': [1.0, 0.5], 'Learning time': 0.882, 'F1': 1.0, 'Inference time': 1.292, 'AUC PR': 1.0}, 'Recall': 1.0, 'CLL': -0.07304, 'Precision': [1.0, 0.5], 'Learning time': 2.875, 'F1': 1.0, 'Inference time': 1.292, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.13443124979540308;  // std dev = 0,604, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.627926505773422;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.19890208353793024;  // std dev = 0,212, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11019763633538357;  // std dev = 0,032, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.3607695316252569;  // std dev = 0,761, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.09250722596511014;  // std dev = 0,508, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.38571403527054504;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.19352869298787856;  // std dev = 0,266, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.07830858323906979;  // std dev = 0,497, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.29920669962652724;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.16896846979901317;  // std dev = 0,240, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.06594171170670204;  // std dev = 0,488, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.24043702289275715;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.14931843357776922;  // std dev = 0,217, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09691238308520105;  // std dev = 0,088, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.1584382435889459;  // std dev = 0,544, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.04992027725737686;  // std dev = 0,440, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.17520757885568627;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.14157829403314856;  // std dev = 0,229, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.04208860917669804;  // std dev = 0,435, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.15130940733805354;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.12737540585726867;  // std dev = 0,209, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.998684
   AUC PR    = 0.897867
   CLL	      = -0.17667
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 1.241 seconds
Total inference time: 1.156 seconds
AUC ROC: 0.998684


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:08
{'AUC ROC': 0.998684, 'Recall': 1.0, 'CLL': -0.17667, 'Precision': [0.918367, 0.5], 'Learning time': 1.241, 'F1': 0.957447, 'Inference time': 1.156, 'AUC PR': 0.897867}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */


Results
   AUC ROC   = 0.965362
   AUC PR    = 0.255682
   CLL	      = -0.173549
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.5 seconds
Total inference time: 0.714 seconds
AUC ROC: 0.965362


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:09:09
{'AUC ROC': 0.965362, 'Recall': 0.0, 'CLL': -0.173549, 'Precision': [nan, 0.5], 'Learning time': 0.5, 'F1': nan, 'Inference time': 0.714, 'AUC PR': 0.255682}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.224230697664227;  // std dev = 0,325, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21493262873955543;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, F) )
%   | | | then return -0.10436215883741057;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.1808828482205065;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.0950023130645015;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.04850227017555425;  // std dev = 0,492, 19,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.12748653259554144;  // std dev = 0,069, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0707628363967009;  // std dev = 0,007, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072709
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.93 seconds
Total inference time: 1.243 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108092
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.553 seconds
Parameter learned model CLL: -0.108092


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, G), director(G)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 10], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [2.98e-08, 0, 10], 'false': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 10], 'false': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [3.65e-08, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 10], 'false': [0.0, 9, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.325, 1, 10], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 9, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'genre(B, F)'}, {'true,true,true,true': [0.0, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 9, 0], 'true,true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [7.45e-09, 0, 10], 'false': [2.63e-09, 9, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [0.0, 1, 0], 'true,true': [0.492, 9, 10], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.069, 1, 10], 'true,false': [0.0, 0, 0], 'false': [0.007, 9, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.058998885327700486, 0.0], 'true,true': [8.881784197001253e-17, nan], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true': [-1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02227066962361243, 3.0839528461809902e-18], 'true,false,true': [0.0, nan], 'true': [1.3322676295501878e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.014124143999590711, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.009573792011243714, 1.5419764230904951e-18], 'true,true,true': [0.009573792011243714, nan], 'true,true': [0.009573792011243714, nan], 'true': [0.009573792011243714, nan]}, {'': [0.008425550526761956, 0.0], 'true,true,true': [-1.1102230246251566e-17, nan], 'true,true': [-1.1102230246251566e-17, 0.0], 'true': [0.008425550526761956, nan], 'true,true,false': [0.0, nan]}, {'': [0.006290299356797929, 7.709882115452476e-19], 'true,true': [5.551115123125783e-18, nan], 'true': [5.551115123125783e-18, 0.0], 'true,false': [0.0, nan]}, {'': [0.012763164648107325, 0.0], 'true': [0.012763164648107325, nan], 'false': [nan, 0.0]}, {'': [0.004777088221651813, 5.39724907093398e-06], 'true': [0.004777088221651813, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1871008437779122;  // std dev = 0,304, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1568228180298871;  // std dev = 0,288, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18442787577928257;  // std dev = 0,028, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11609138217068932;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( female(A) )
%   | | then return 0.11349399625769643;  // std dev = 0,244, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.15179749476095628;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.09904879477048005;  // std dev = 0,240, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.13326778453767685;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069532
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.93 seconds
Total inference time: 1.044 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102941
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.488 seconds
Refined model CLL: -0.102941


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069532
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.9010000000000002 seconds
Total inference time: 1.044 seconds
AUC ROC: 1.0
Total revision time: 2.9010000000000002
Best scored revision CLL: -0.102941


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:15
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.069532, 'Precision': [1.0, 0.5], 'Learning time': 2.9010000000000002, 'parameter_10': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.072709, 'Precision': [1.0, 0.5], 'Learning time': 0.93, 'F1': 1.0, 'Inference time': 1.243, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.044, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.5580193346218546;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.4419486100244409;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.33541139495094313;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.45176837314502194;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( female(B) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.20657636385569025;  // std dev = 0,395, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.3440502083105984;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( female(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1817237272655355;  // std dev = 0,364, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.27104110509140633;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1614626593267214;  // std dev = 0,335, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( female(A) )
%   | | then return 0.22090711408221786;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17709649774527736;  // std dev = 5,27e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1447228381341605;  // std dev = 0,308, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.18523188550383973;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.15274385809367097;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1307310020898308;  // std dev = 0,285, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14395932785338378;  // std dev = 0,012, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11891420887997776;  // std dev = 0,264, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.998684
   AUC PR    = 0.897867
   CLL	      = -0.089349
   Precision = 0.918367 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.957447


Total learning time: 1.657 seconds
Total inference time: 1.262 seconds
AUC ROC: 0.998684


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:18
{'AUC ROC': 0.998684, 'Recall': 1.0, 'CLL': -0.089349, 'Precision': [0.918367, 0.5], 'Learning time': 1.657, 'F1': 0.957447, 'Inference time': 1.262, 'AUC PR': 0.897867}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */


Results
   AUC ROC   = 0.963505
   AUC PR    = 0.244543
   CLL	      = -0.173843
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.598 seconds
Total inference time: 0.727 seconds
AUC ROC: 0.963505


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:09:20
{'AUC ROC': 0.963505, 'Recall': 0.0, 'CLL': -0.173843, 'Precision': [nan, 0.5], 'Learning time': 0.598, 'F1': nan, 'Inference time': 0.727, 'AUC PR': 0.244543}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.23389993044712148;  // std dev = 0,330, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21330557280030996;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, F) )
%   | | | then return -0.10526941242403036;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17969434175747062;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.09575831855240317;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.046322199581724795;  // std dev = 0,604, 29,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.13373077700614036;  // std dev = 0,058, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07092177183161501;  // std dev = 0,007, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072619
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.964 seconds
Total inference time: 1.289 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106821
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.541 seconds
Parameter learned model CLL: -0.106821


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, G), director(G)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 15], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [5.16e-08, 0, 15], 'false': [7.45e-09, 14, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 15], 'false': [1.18e-08, 14, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [4.71e-08, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 15], 'false': [7.45e-09, 14, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.33, 1, 15], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [8.33e-09, 14, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'genre(B, F)'}, {'true,true,true,true': [2.36e-08, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 14, 0], 'true,true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 15], 'false': [3.73e-09, 14, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [0.0, 1, 0], 'true,true': [0.604, 14, 15], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.058, 1, 15], 'true,false': [0.0, 0, 0], 'false': [0.007, 14, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true,false,true': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.041829287839756535, 3.96508223080413e-18], 'true,true': [1.7763568394002506e-16, nan], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.015789556783928405, -3.96508223080413e-18], 'true,false,true': [0.0, nan], 'true': [1.4802973661668753e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.010013797405959826, 3.96508223080413e-18], 'true,false,true': [0.0, nan], 'true,true': [-1.4802973661668754e-17, nan], 'true': [-1.4802973661668754e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.006787668945471635, 4.956352788505163e-18], 'true,true,true': [0.006787668945471635, nan], 'true,true': [0.006787668945471635, nan], 'true': [0.006787668945471635, nan]}, {'': [0.005946680930313829, -9.912705577010326e-19], 'true,true,true': [3.700743415417188e-17, nan], 'true,true': [3.700743415417188e-17, 0.0], 'true': [0.005946680930313829, nan], 'true,true,false': [0.0, nan]}, {'': [0.0044457520354562255, 9.912705577010326e-19], 'true,true': [-2.960594732333751e-17, nan], 'true': [-2.960594732333751e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.01259945089167038, 0.0], 'true': [0.01259945089167038, nan], 'false': [nan, 0.0]}, {'': [0.0033838015538943493, 3.4839985656999273e-06], 'true': [0.0033838015538943493, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.21735479879639094;  // std dev = 0,107, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.2551722425694894;  // std dev = 1,29e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1805599709025794;  // std dev = 0,101, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.2097577156325356;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18241838697264143;  // std dev = 0,019, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12174749917028119;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( female(A) )
%   | | then return 0.13087577845458592;  // std dev = 0,085, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.15205640759961936;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11436739328118757;  // std dev = 0,084, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.1334701190055968;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else return -0.06419184008202619;  // std dev = 6,97e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069571
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.05 seconds
Total inference time: 1.121 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100736
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.523 seconds
Refined model CLL: -0.100736


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069571
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.078 seconds
Total inference time: 1.121 seconds
AUC ROC: 1.0
Total revision time: 3.078
Best scored revision CLL: -0.100736


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:26
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.069571, 'Precision': [1.0, 0.5], 'Learning time': 3.078, 'F1': 1.0, 'Inference time': 1.121, 'parameter_15': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.072619, 'Precision': [1.0, 0.5], 'Learning time': 0.964, 'F1': 1.0, 'Inference time': 1.289, 'AUC PR': 1.0}, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.6302322013528495;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.7194734122109543;  // std dev = 2,11e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.4930252128087158;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.3713223124091624;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.41751358415830986;  // std dev = 2,58e-08, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.2802444957903803;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.29347135559568716;  // std dev = 0,139, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return -0.23214279366789514;  // std dev = 0,509, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.23679053026367336;  // std dev = 0,121, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return -0.2065729839613806;  // std dev = 0,477, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1968726275701879;  // std dev = 0,105, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A) )
%   | then return -0.18506404219345976;  // std dev = 0,445, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.16770757996792904;  // std dev = 0,093, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A) )
%   | then return -0.1667733410830006;  // std dev = 0,413, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.14566473702644825;  // std dev = 0,083, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A) )
%   | then return -0.15110266095738462;  // std dev = 0,383, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */


Results
   AUC ROC   = 0.998684
   AUC PR    = 0.897867
   CLL	      = -0.126685
   Precision = 0.298013 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.459184


Total learning time: 1.565 seconds
Total inference time: 1.059 seconds
AUC ROC: 0.998684


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:29
{'AUC ROC': 0.998684, 'Recall': 1.0, 'CLL': -0.126685, 'Precision': [0.298013, 0.5], 'Learning time': 1.565, 'F1': 0.459184, 'Inference time': 1.059, 'AUC PR': 0.897867}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */


Results
   AUC ROC   = 0.963505
   AUC PR    = 0.244543
   CLL	      = -0.173751
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.651 seconds
Total inference time: 0.733 seconds
AUC ROC: 0.963505


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:09:30
{'AUC ROC': 0.963505, 'Recall': 0.0, 'CLL': -0.173751, 'Precision': [nan, 0.5], 'Learning time': 0.651, 'F1': nan, 'Inference time': 0.733, 'AUC PR': 0.244543}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926094;  // std dev = 9,13e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.238964766666733;  // std dev = 0,332, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.2124568954916488;  // std dev = 1,83e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, F) )
%   | | | then return -0.10574741263677113;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17907370093620298;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.09615622364368014;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.04824910749795488;  // std dev = 0,689, 38,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.13661789443375227;  // std dev = 0,051, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07079101416951476;  // std dev = 0,010, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072763
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.004 seconds
Total inference time: 1.182 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105894
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.583 seconds
Parameter learned model CLL: -0.105894


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, G), director(G)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 20], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [7.3e-08, 0, 20], 'false': [0.0, 19, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 20], 'false': [1.67e-08, 19, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [5.16e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [2.11e-08, 0, 20], 'false': [9.13e-09, 19, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.332, 1, 20], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.29e-08, 19, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'genre(B, F)'}, {'true,true,true,true': [1.83e-08, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 19, 0], 'true,true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 20], 'false': [0.0, 19, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [0.0, 2, 0], 'true,true': [0.689, 18, 20], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.051, 1, 20], 'true,false': [0.0, 0, 0], 'false': [0.01, 19, 0]}]]
[{'': [0.04535147392290242, 0.0], 'true,false,true': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.03237580555397633, 0.0], 'true,true': [2.6645352591003756e-16, nan], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02021770255628346, 1.460819769243627e-17], 'true': [-2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.012221093081438202, -5.843279076974508e-18], 'true,false,true': [0.0, nan], 'true': [1.3322676295501878e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.007750664054197215, 4.382459307730881e-18], 'true,false,true': [0.0, nan], 'true,true': [2.2204460492503132e-17, nan], 'true': [2.2204460492503132e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.005253645502768649, 8.764918615461762e-18], 'true,true,true': [0.005253645502768649, nan], 'true,true': [0.005253645502768649, nan], 'true': [0.005253645502768649, nan]}, {'': [0.004592017311178531, -4.382459307730881e-18], 'true,true,true': [1.6653345369377347e-17, nan], 'true,true': [1.6653345369377347e-17, 0.0], 'true': [0.004592017311178531, nan], 'true,true,false': [0.0, nan]}, {'': [0.003435442693163146, 0.0], 'true,true': [-3.8857805861880476e-17, nan], 'true': [-3.8857805861880476e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.012492434001478559, 0.0], 'true': [0.012492434001478559, nan], 'false': [nan, 0.0]}, {'': [0.0026149624738718608, 5.12342336905853e-06], 'true': [0.0026149624738718608, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926094;  // std dev = 9,13e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.22899093534195966;  // std dev = 0,091, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1895967668566781;  // std dev = 0,085, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0.2097577156325356;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18120947531936515;  // std dev = 0,015, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1239752945230273;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( female(A) )
%   | | then return 0.13756509370715772;  // std dev = 0,072, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0.1522123445069571;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12032802464889145;  // std dev = 0,071, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.13359194869952373;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else return -0.06419184008202619;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069591
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.102 seconds
Total inference time: 1.052 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099376
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.522 seconds
Refined model CLL: -0.099376


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069591
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2110000000000003 seconds
Total inference time: 1.052 seconds
AUC ROC: 1.0
Total revision time: 3.2110000000000003
Best scored revision CLL: -0.099376


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:36
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.069591, 'Precision': [1.0, 0.5], 'Learning time': 3.2110000000000003, 'parameter_20': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.072763, 'Precision': [1.0, 0.5], 'Learning time': 1.004, 'F1': 1.0, 'Inference time': 1.182, 'AUC PR': 1.0}, 'F1': 1.0, 'Inference time': 1.052, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.3853022650638632;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.2920349799096258;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839683;  // std dev = 1,29e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.22699179224124724;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.1812058810760637;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.2097577156325356;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.20582192397495916;  // std dev = 0,105, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( female(A) )
%   | then return -0.2486916172904827;  // std dev = 0,608, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.17429782648777087;  // std dev = 0,092, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( female(A) )
%   | then return -0.22572594555707062;  // std dev = 0,581, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.15067945745701405;  // std dev = 0,082, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( female(A) )
%   | then return -0.20562998183508577;  // std dev = 0,550, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.998684
   AUC PR    = 0.897867
   CLL	      = -0.156833
   Precision = 0.255682 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.40724


Total learning time: 1.749 seconds
Total inference time: 1.059 seconds
AUC ROC: 0.998684


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:39
{'AUC ROC': 0.998684, 'Recall': 1.0, 'CLL': -0.156833, 'Precision': [0.255682, 0.5], 'Learning time': 1.749, 'F1': 0.40724, 'Inference time': 1.059, 'AUC PR': 0.897867}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( female(A) )
%   | then return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */


Results
   AUC ROC   = 0.963505
   AUC PR    = 0.244543
   CLL	      = -0.173724
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.703 seconds
Total inference time: 0.714 seconds
AUC ROC: 0.963505


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:09:41
{'AUC ROC': 0.963505, 'Recall': 0.0, 'CLL': -0.173724, 'Precision': [nan, 0.5], 'Learning time': 0.703, 'F1': nan, 'Inference time': 0.714, 'AUC PR': 0.244543}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(E, G), director(G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, B), movie(E, A) )
%   | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, A) )
%   | | then if ( movie(D, E), director(E) )
%   | | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then if ( movie(F, A) )
%   | | | then return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 1,39e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.24208158895572468;  // std dev = 0,334, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.21193585940340579;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, F) )
%   | | | then return -0.10604251700645996;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17869242182476966;  // std dev = 2,58e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B) )
%   | | then return -0.09640173933490354;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.04698162367941708;  // std dev = 0,773, 48,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.1386978112671871;  // std dev = 0,046, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07087560016643872;  // std dev = 0,010, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072699
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.042 seconds
Total inference time: 1.247 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105533
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.586 seconds
Parameter learned model CLL: -0.105533


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, G), director(G)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A), movie(F, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [1.33e-07, 0, 25], 'false': [1.49e-08, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 25], 'false': [0.0, 24, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, B), movie(E, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true': [0.0, 0, 25], 'false': [7.45e-09, 24, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(D, E), director(E)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, A)'}, {'true,false,true,false': [0.0, 0, 0], 'true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,false,true': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, A), movie(C, B)'}, {'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true': [2.11e-08, 0, 25], 'false': [1.39e-08, 24, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.334, 1, 25], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.67e-08, 24, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)', 'true,true,false': 'genre(B, F)'}, {'true,true,true,true': [1.49e-08, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 24, 0], 'true,true,false,true': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true,false': 'movie(E, B)', 'true': 'movie(C, B), movie(C, A)'}, {'true,false,true': [0.0, 1, 0], 'true,true,true': [2.58e-08, 0, 25], 'false': [0.0, 24, 0], 'true,false,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [0.0, 2, 0], 'true,true': [0.773, 23, 25], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.046, 1, 25], 'true,false': [0.0, 0, 0], 'false': [0.01, 24, 0]}]]
[{'': [0.03698224852071082, 9.25185853854297e-18], 'true,false,true': [0.0, nan], 'true,true': [7.105427357601002e-16, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.026401128419570055, -4.625929269271485e-18], 'true,true': [-7.105427357601002e-17, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.016486699015016572, 2.3129646346357427e-18], 'true': [-2.842170943040401e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.009965795208791005, -2.3129646346357427e-18], 'true,false,true': [0.0, nan], 'true': [-3.552713678800501e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.006320345502775467, 8.0953762212251e-18], 'true,false,true': [0.0, nan], 'true,true': [1.7763568394002505e-17, nan], 'true': [1.7763568394002505e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.004284130300889366, 1.1564823173178714e-17], 'true,true,true': [0.004284130300889366, nan], 'true,true': [0.004284130300889366, nan], 'true': [0.004284130300889366, nan]}, {'': [0.0037392843145064645, 0.0], 'true,true,true': [8.881784197001253e-18, nan], 'true,true': [8.881784197001253e-18, 0.0], 'true': [0.0037392843145064645, nan], 'true,true,false': [0.0, nan]}, {'': [0.0027986981325497373, -1.1564823173178713e-18], 'true,true': [2.6645352591003756e-17, nan], 'true': [2.6645352591003756e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.012445902814854241, 0.0], 'true': [0.012445902814854241, nan], 'false': [nan, 0.0]}, {'': [0.0021322168673755717, 4.0611498969053e-06], 'true': [0.0021322168673755717, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, B), movie(C, A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, B), movie(C, A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
4;true;movie(C, A), movie(C, B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
6;true;movie(C, B).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
7;true;movie(C, B), movie(C, A).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.09269127618926093;  // std dev = 1,39e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.23389993044712148;  // std dev = 0,082, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( female(A) )
%   | | then return 0.1933946362237887;  // std dev = 0,077, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0.2097577156325357;  // std dev = 1,97e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.18042742250371827;  // std dev = 0,014, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12492400729201185;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( female(A) )
%   | | then return 0.1404156733049338;  // std dev = 0,065, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0.15231329098351232;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12287797006584127;  // std dev = 0,064, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.1336708031241438;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202622;  // std dev = 3,73e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069601
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.077 seconds
Total inference time: 1.086 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098485
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.554 seconds
Refined model CLL: -0.098485


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069601
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2590000000000003 seconds
Total inference time: 1.086 seconds
AUC ROC: 1.0
Total revision time: 3.2590000000000003
Best scored revision CLL: -0.098485


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:47
{'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.069601, 'Precision': [1.0, 0.5], 'parameter_25': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.072699, 'Precision': [1.0, 0.5], 'Learning time': 1.042, 'F1': 1.0, 'Inference time': 1.247, 'AUC PR': 1.0}, 'Learning time': 3.2590000000000003, 'F1': 1.0, 'Inference time': 1.086, 'AUC PR': 1.0}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.7956489350995123;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.6694131893798132;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360639;  // std dev = 7,45e-09, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.5204603507259603;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.3912519545392304;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 1,05e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.2971751345678791;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 1,67e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.2319331449240747;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109176;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.18613927539734212;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.20014505844672595;  // std dev = 0,094, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.2510569779272465;  // std dev = 0,616, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.17007196718164166;  // std dev = 0,083, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.22820351273714173;  // std dev = 0,590, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06419184008202618;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.14743308109061337;  // std dev = 0,074, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( female(A) )
%   | then if ( female(B) )
%   | | then return -0.06419184008202618;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.2081681665783229;  // std dev = 0,559, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06419184008202618;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.998684
   AUC PR    = 0.897867
   CLL	      = -0.157716
   Precision = 0.255682 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.40724


Total learning time: 1.689 seconds
Total inference time: 1.025 seconds
AUC ROC: 0.998684


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:50
{'AUC ROC': 0.998684, 'Recall': 1.0, 'CLL': -0.157716, 'Precision': [0.255682, 0.5], 'Learning time': 1.689, 'F1': 0.40724, 'Inference time': 1.025, 'AUC PR': 0.897867}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( female(A) )
%   | then return 0.7956489350995123;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.963505
   AUC PR    = 0.244543
   CLL	      = -0.173713
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.871 seconds
Total inference time: 0.72 seconds
AUC ROC: 0.963505


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:09:52
{'AUC ROC': 0.963505, 'Recall': 0.0, 'CLL': -0.173713, 'Precision': [nan, 0.5], 'Learning time': 0.871, 'F1': nan, 'Inference time': 0.72, 'AUC PR': 0.244543}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926098;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333703;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.06980479461696834;  // std dev = 0,303, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.14392748796317845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06948451206052769;  // std dev = 0,010, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.078198
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.825 seconds
Total inference time: 1.195 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.101635
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.492 seconds
Parameter learned model CLL: -0.101635


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [1.49e-08, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [2.63e-09, 5, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [0.0, 2, 0], 'true,true': [0.303, 3, 5], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false': [0.01, 5, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.0, 0.0], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan]}, {'': [-2.2204460492503132e-17, 1.3877787807814458e-18], 'true,true': [-2.2204460492503132e-17, nan], 'true': [-2.2204460492503132e-17, nan]}, {'': [0.0, 0.0], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [-5.551115123125783e-18, -1.3877787807814458e-18], 'true,true,true': [-5.551115123125783e-18, nan], 'true,true': [-5.551115123125783e-18, nan], 'true': [-5.551115123125783e-18, nan]}, {'': [0.0, 1.3877787807814458e-18], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [0.01146481375065418, 0.0], 'true': [0.01146481375065418, nan], 'false': [nan, 0.0]}, {'': [-2.7755575615628915e-18, 1.8674917781342364e-05], 'true': [-2.7755575615628915e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926098;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07324622576333703;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420272;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.696 seconds
Total inference time: 0.953 seconds
AUC ROC: 0.97972


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.499 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 2.512 seconds
Total inference time: 0.953 seconds
AUC ROC: 0.97972
Total revision time: 2.512
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:09:57
{'AUC ROC': 0.97972, 'parameter_5': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.078198, 'Precision': [1.0, 0.5], 'Learning time': 0.825, 'F1': 1.0, 'Inference time': 1.195, 'AUC PR': 1.0}, 'Recall': 1.0, 'CLL': -0.145678, 'Precision': [0.348837, 0.5], 'Learning time': 2.512, 'F1': 0.517241, 'Inference time': 0.953, 'AUC PR': 0.348837}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.154459
   Precision = 0.326087 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.491803


Total learning time: 1.038 seconds
Total inference time: 0.948 seconds
AUC ROC: 0.977547


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:09:59
{'AUC ROC': 0.977547, 'Recall': 1.0, 'CLL': -0.154459, 'Precision': [0.326087, 0.5], 'Learning time': 1.038, 'F1': 0.491803, 'Inference time': 0.948, 'AUC PR': 0.326087}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.1668
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.524 seconds
Total inference time: 0.744 seconds
AUC ROC: 0.977547


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:10:01
{'AUC ROC': 0.977547, 'Recall': 0.0, 'CLL': -0.1668, 'Precision': [nan, 0.5], 'Learning time': 0.524, 'F1': nan, 'Inference time': 0.744, 'AUC PR': 0.326087}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333703;  // std dev = 4,56e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.06167351388395822;  // std dev = 0,449, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.14493226592548245;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06998271974412679;  // std dev = 0,012, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077642
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.871 seconds
Total inference time: 1.247 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102323
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.559 seconds
Parameter learned model CLL: -0.102323


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [2.98e-08, 0, 10], 'true,false': [0.0, 0, 0], 'false': [5.27e-09, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [3.65e-08, 0, 10], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [1.83e-08, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [0.0, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [7.45e-09, 0, 10], 'true,false': [0.0, 0, 0], 'false': [4.56e-09, 10, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [0.0, 3, 0], 'true,true': [0.449, 7, 10], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [2.63e-09, 0, 10], 'true,false': [0.0, 0, 0], 'false': [0.012, 10, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true,true': [8.881784197001253e-17, nan], 'true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true': [-1.7763568394002506e-16, nan]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true,true': [-4.4408920985006264e-17, nan], 'true': [-4.4408920985006264e-17, nan]}, {'': [3.3306690738754695e-17, 1.3877787807814458e-18], 'true,true,true': [3.3306690738754695e-17, nan], 'true,true': [3.3306690738754695e-17, nan], 'true': [3.3306690738754695e-17, nan]}, {'': [-2.7755575615628914e-17, 0.0], 'true,true,true': [-2.7755575615628914e-17, nan], 'true,true': [-2.7755575615628914e-17, nan], 'true': [-2.7755575615628914e-17, nan]}, {'': [5.551115123125783e-18, 2.0816681711721684e-18], 'true,true': [5.551115123125783e-18, nan], 'true': [5.551115123125783e-18, nan]}, {'': [0.011848296563536509, -5.782411586589357e-19], 'true': [0.011848296563536509, nan], 'false': [nan, -5.782411586589357e-19]}, {'': [8.326672684688674e-18, 1.4371837397539333e-05], 'true': [8.326672684688674e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926096;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333703;  // std dev = 4,56e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.736 seconds
Total inference time: 0.989 seconds
AUC ROC: 0.97972


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.475 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 2.6410000000000005 seconds
Total inference time: 0.989 seconds
AUC ROC: 0.97972
Total revision time: 2.6410000000000005
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:10:06
{'AUC ROC': 0.97972, 'Recall': 1.0, 'CLL': -0.145678, 'Precision': [0.348837, 0.5], 'Learning time': 2.6410000000000005, 'parameter_10': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.077642, 'Precision': [1.0, 0.5], 'Learning time': 0.871, 'F1': 1.0, 'Inference time': 1.247, 'AUC PR': 1.0}, 'F1': 0.517241, 'Inference time': 0.989, 'AUC PR': 0.348837}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08518475138839687;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.0641918400820262;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.151 seconds
Total inference time: 0.997 seconds
AUC ROC: 0.97972


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:10:09
{'AUC ROC': 0.97972, 'Recall': 1.0, 'CLL': -0.145678, 'Precision': [0.348837, 0.5], 'Learning time': 1.151, 'F1': 0.517241, 'Inference time': 0.997, 'AUC PR': 0.348837}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.16597
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.561 seconds
Total inference time: 0.74 seconds
AUC ROC: 0.97972


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:10:10
{'AUC ROC': 0.97972, 'Recall': 0.0, 'CLL': -0.16597, 'Precision': [nan, 0.5], 'Learning time': 0.561, 'F1': nan, 'Inference time': 0.74, 'AUC PR': 0.348837}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926097;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.06427552371852138;  // std dev = 0,542, 25,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.1446101047251283;  // std dev = 3,23e-09, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06982368666890688;  // std dev = 0,015, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07782
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.091 seconds
Total inference time: 1.213 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102103
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.564 seconds
Parameter learned model CLL: -0.102103


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [5.16e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [1.39e-08, 15, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [4.71e-08, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [2.36e-08, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [9.13e-09, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [0.0, 0, 15], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0], 'false': [3.73e-09, 15, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [1.86e-09, 5, 0], 'true,true': [0.542, 10, 15], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [3.23e-09, 0, 15], 'true,false': [0.0, 0, 0], 'false': [0.015, 15, 0]}]]
[{'': [-2.3684757858670006e-16, -1.4802973661668754e-17], 'true,true': [-2.3684757858670006e-16, nan], 'true': [-2.3684757858670006e-16, nan]}, {'': [1.7763568394002506e-16, 3.7007434154171884e-18], 'true,true': [1.7763568394002506e-16, nan], 'true': [1.7763568394002506e-16, nan]}, {'': [-2.3684757858670006e-16, 1.295260195396016e-17], 'true': [-2.3684757858670006e-16, nan]}, {'': [1.4802973661668753e-16, -5.551115123125783e-18], 'true': [1.4802973661668753e-16, nan]}, {'': [-1.4802973661668754e-17, -1.8503717077085942e-18], 'true,true': [-1.4802973661668754e-17, nan], 'true': [-1.4802973661668754e-17, nan]}, {'': [3.700743415417188e-17, 5.551115123125783e-18], 'true,true,true': [3.700743415417188e-17, nan], 'true,true': [3.700743415417188e-17, nan], 'true': [3.700743415417188e-17, nan]}, {'': [-2.960594732333751e-17, -1.8503717077085942e-18], 'true,true,true': [-2.960594732333751e-17, nan], 'true,true': [-2.960594732333751e-17, nan], 'true': [-2.960594732333751e-17, nan]}, {'': [-7.401486830834377e-18, 9.251858538542971e-19], 'true,true': [-7.401486830834377e-18, nan], 'true': [-7.401486830834377e-18, nan]}, {'': [0.011739969280669862, 6.938893903907229e-19], 'true': [0.011739969280669862, nan], 'false': [nan, 6.938893903907229e-19]}, {'': [1.1102230246251566e-17, 1.5858847989082734e-05], 'true': [1.1102230246251566e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926097;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839685;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 7,90e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.752 seconds
Total inference time: 0.925 seconds
AUC ROC: 0.97972


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.501 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 2.908 seconds
Total inference time: 0.925 seconds
AUC ROC: 0.97972
Total revision time: 2.908
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:10:16
{'AUC ROC': 0.97972, 'Recall': 1.0, 'CLL': -0.145678, 'Precision': [0.348837, 0.5], 'Learning time': 2.908, 'F1': 0.517241, 'Inference time': 0.925, 'parameter_15': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.07782, 'Precision': [1.0, 0.5], 'Learning time': 1.091, 'F1': 1.0, 'Inference time': 1.213, 'AUC PR': 1.0}, 'AUC PR': 0.348837}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360638;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926097;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839689;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.0641918400820262;  // std dev = 4,56e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.197 seconds
Total inference time: 0.954 seconds
AUC ROC: 0.97972


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:10:18
{'AUC ROC': 0.97972, 'Recall': 1.0, 'CLL': -0.145678, 'Precision': [0.348837, 0.5], 'Learning time': 1.197, 'F1': 0.517241, 'Inference time': 0.954, 'AUC PR': 0.348837}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.16597
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.541 seconds
Total inference time: 0.77 seconds
AUC ROC: 0.97972


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:10:20
{'AUC ROC': 0.97972, 'Recall': 0.0, 'CLL': -0.16597, 'Precision': [nan, 0.5], 'Learning time': 0.541, 'F1': nan, 'Inference time': 0.77, 'AUC PR': 0.348837}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.05795635697743935;  // std dev = 0,648, 35,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.14539352993812588;  // std dev = 4,56e-09, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07020926942364;  // std dev = 0,016, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.07739
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.95 seconds
Total inference time: 1.241 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.581 seconds
Parameter learned model CLL: -0.102637


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 20, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [7.3e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 20, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [5.16e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [2.11e-08, 0, 20], 'true,false': [0.0, 0, 0], 'false': [7.45e-09, 20, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [1.49e-08, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.39e-08, 20, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [0.0, 0, 20], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.0, 20, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [1.86e-09, 5, 0], 'true,true': [0.648, 15, 20], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [4.56e-09, 0, 20], 'true,false': [0.0, 0, 0], 'false': [0.016, 20, 0]}]]
[{'': [-8.881784197001253e-17, 2.7755575615628915e-18], 'true,true': [-8.881784197001253e-17, nan], 'true': [-8.881784197001253e-17, nan]}, {'': [2.6645352591003756e-16, 0.0], 'true,true': [2.6645352591003756e-16, nan], 'true': [2.6645352591003756e-16, nan]}, {'': [-2.6645352591003756e-16, 1.1102230246251566e-17], 'true': [-2.6645352591003756e-16, nan]}, {'': [1.3322676295501878e-16, -1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan]}, {'': [2.2204460492503132e-17, 2.7755575615628915e-18], 'true,true': [2.2204460492503132e-17, nan], 'true': [2.2204460492503132e-17, nan]}, {'': [1.1102230246251566e-17, 9.714451465470119e-18], 'true,true,true': [1.1102230246251566e-17, nan], 'true,true': [1.1102230246251566e-17, nan], 'true': [1.1102230246251566e-17, nan]}, {'': [-2.7755575615628914e-17, -4.8572257327350596e-18], 'true,true,true': [-2.7755575615628914e-17, nan], 'true,true': [-2.7755575615628914e-17, nan], 'true': [-2.7755575615628914e-17, nan]}, {'': [-2.2204460492503132e-17, -6.938893903907229e-19], 'true,true': [-2.2204460492503132e-17, nan], 'true': [-2.2204460492503132e-17, nan]}, {'': [0.011979560490479444, 6.938893903907229e-19], 'true': [0.011979560490479444, nan], 'false': [nan, 6.938893903907229e-19]}, {'': [1.9428902930940238e-17, 1.2069818627104268e-05], 'true': [1.9428902930940238e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06419184008202619;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.804 seconds
Total inference time: 0.97 seconds
AUC ROC: 0.97972


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.498 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 2.833 seconds
Total inference time: 0.97 seconds
AUC ROC: 0.97972
Total revision time: 2.833
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:10:25
{'AUC ROC': 0.97972, 'Recall': 1.0, 'CLL': -0.145678, 'Precision': [0.348837, 0.5], 'Learning time': 2.833, 'parameter_20': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.07739, 'Precision': [1.0, 0.5], 'Learning time': 0.95, 'F1': 1.0, 'Inference time': 1.241, 'AUC PR': 1.0}, 'F1': 0.517241, 'Inference time': 0.97, 'AUC PR': 0.348837}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.1418510649004878;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,29e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783633;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09269127618926096;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839685;  // std dev = 1,05e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109175;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06419184008202619;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.226 seconds
Total inference time: 0.972 seconds
AUC ROC: 0.97972


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:10:28
{'AUC ROC': 0.97972, 'Recall': 1.0, 'CLL': -0.145678, 'Precision': [0.348837, 0.5], 'Learning time': 1.226, 'F1': 0.517241, 'Inference time': 0.972, 'AUC PR': 0.348837}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.1418510649004878;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.16597
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.581 seconds
Total inference time: 0.769 seconds
AUC ROC: 0.97972


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:10:29
{'AUC ROC': 0.97972, 'Recall': 0.0, 'CLL': -0.16597, 'Precision': [nan, 0.5], 'Learning time': 0.581, 'F1': nan, 'Inference time': 0.769, 'AUC PR': 0.348837}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false,true;publication(I, K), professor(K).;false;false
0;true,true;tempadvisedby(D, B), ta(E, D, F).;false;true
0;true,false;publication(I, A), publication(J, B).;true;true
0;true,false,false;tempadvisedby(L, B), ta(M, A, N).;false;false
0;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,false,true;ta(G, A, H).;false;false
1;true,true;publication(C, D), tempadvisedby(D, B).;false;false
1;true,false;publication(E, A), tempadvisedby(F, B).;true;true
1;true,false,false;ta(I, A, J), publication(K, B).;false;false
1;true;publication(C, B), publication(C, A).;true;true
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false,true;tempadvisedby(K, B), ta(L, K, M).;false;false
2;true,true;ta(D, A, E).;true;false
2;true,false;publication(I, B), publication(J, A).;true;true
2;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;true,true,true;tempadvisedby(F, B), ta(G, F, H).;false;false
2;true;publication(C, B), publication(C, A).;true;true
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,false,true;publication(D, E), professor(E).;false;false
3;true;publication(C, B), publication(C, A).;false;true
3;true,false;publication(D, A).;true;true
3;true,false,false;projectmember(F, B).;false;false
4;;advisedby(A, B) :- student(A), professor(B).;true;false
4;true,false,true;publication(J, A), ta(K, H, L).;false;false
4;true,true;publication(C, D), tempadvisedby(D, B).;false;true
4;true,false;tempadvisedby(H, B), publication(I, B).;true;true
4;true,false,false;ta(M, A, N), publication(P, B).;false;false
4;true,true,false;publication(C, E), ta(F, E, G).;false;false
4;true;publication(C, A), publication(C, B).;true;true
5;;advisedby(A, B) :- professor(B), student(A).;true;false
5;true,true;publication(C, D), ta(E, D, F).;true;true
5;true,false;publication(K, A), projectmember(L, B).;false;true
5;true,false,false;ta(M, A, N).;false;false
5;true,true,false;ta(H, A, I), publication(J, A).;false;false
5;true,true,true;publication(G, A).;false;false
5;true;publication(C, B).;true;true
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,false,true;publication(I, L), ta(M, L, N).;false;false
6;true,true;ta(E, D, F), publication(C, B).;true;true
6;true,false;publication(I, B), ta(J, A, K).;true;true
6;true,false,false;ta(P, A, Q).;false;false
6;true,true,false;projectmember(H, B).;false;false
6;true,true,true;publication(G, D).;false;false
6;true;publication(C, A), tempadvisedby(D, B).;true;true
7;;advisedby(A, B) :- student(A), professor(B).;true;false
7;true,false,true;ta(H, A, I), ta(H, J, G).;false;false
7;true,true;tempadvisedby(D, B), publication(C, D).;false;false
7;true,false;tempadvisedby(E, B), ta(F, E, G).;true;true
7;true,false,false;tempadvisedby(K, B), publication(L, B).;false;false
7;true;publication(C, B), publication(C, A).;true;true
8;;advisedby(A, B) :- student(A), tempadvisedby(C, B).;true;true
8;true,false,true;projectmember(G, B), publication(H, B).;false;false
8;true;publication(D, A).;false;true
8;true,false;ta(E, C, F).;true;true
8;false;student(A), professor(B).;true;false
8;true,false,false;ta(I, A, J).;false;false
8;false,true,true;ta(K, M, N), tempadvisedby(M, P).;false;false
8;false,true;ta(K, A, L).;true;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false,true;publication(J, H).;false;false
9;true,true;publication(F, B).;true;false
9;true,false;tempadvisedby(H, B), publication(I, B).;true;true
9;true,false,false;publication(K, B).;false;false
9;true,true,true;ta(G, A, E).;false;false
9;true;tempadvisedby(C, B), ta(D, C, E).;true;true


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1,29e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926093;  // std dev = 1,29e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(E, A) )
%   | | | then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839683;  // std dev = 1,58e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A) )
%   | then if ( movie(C, B) )
%   | | then if ( movie(D, E) )
%   | | | then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( movie(C, A) )
%   | then return 0.05723826984777094;  // std dev = 0,727, 44,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then return 0.1454827780390094;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07025294801505093;  // std dev = 0,017, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.077341
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.948 seconds
Total inference time: 1.331 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102698
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.588 seconds
Parameter learned model CLL: -0.102698


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [1.33e-07, 0, 25], 'true,false': [0.0, 0, 0], 'false': [1.49e-08, 25, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [1.29e-08, 25, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, A), movie(C, B)'}, {'true,true,true': [2.11e-08, 0, 25], 'true,false': [0.0, 0, 0], 'false': [1.29e-08, 25, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, D)', 'true,true,true': 'movie(E, A)', 'true': 'movie(C, B)'}, {'true,true,true,true': [0.0, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [1.58e-08, 25, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,true': 'movie(C, B)', 'true,true,true': 'movie(D, E)', 'true': 'movie(C, A)'}, {'true,true,true,true': [1.49e-08, 0, 25], 'true,true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true,true': 'movie(C, D)', 'true': 'movie(C, B), movie(C, A)'}, {'true,true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.0, 25, 0], 'true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A)', 'true': 'movie(C, A)', 'false': 'actor(A), director(B)'}, {'false,false': [1.86e-09, 6, 0], 'true,true': [0.727, 19, 25], 'false,true': [0.0, 0, 0], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)'}, {'true,true': [0.0, 0, 25], 'true,false': [0.0, 0, 0], 'false': [0.017, 25, 0]}]]
[{'': [7.105427357601002e-16, 8.881784197001253e-18], 'true,true': [7.105427357601002e-16, nan], 'true': [7.105427357601002e-16, nan]}, {'': [-7.105427357601002e-17, -2.220446049250313e-18], 'true,true': [-7.105427357601002e-17, nan], 'true': [-7.105427357601002e-17, nan]}, {'': [-2.842170943040401e-16, 6.661338147750939e-18], 'true': [-2.842170943040401e-16, nan]}, {'': [-3.552713678800501e-17, -2.220446049250313e-18], 'true': [-3.552713678800501e-17, nan]}, {'': [1.7763568394002505e-17, 6.661338147750939e-18], 'true,true': [1.7763568394002505e-17, nan], 'true': [1.7763568394002505e-17, nan]}, {'': [0.0, 9.992007221626408e-18], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan], 'true': [0.0, nan]}, {'': [8.881784197001253e-18, -1.1102230246251566e-18], 'true,true,true': [8.881784197001253e-18, nan], 'true,true': [8.881784197001253e-18, nan], 'true': [8.881784197001253e-18, nan]}, {'': [-3.552713678800501e-17, -1.1102230246251566e-18], 'true,true': [-3.552713678800501e-17, nan], 'true': [-3.552713678800501e-17, nan]}, {'': [0.012001733402888643, 5.782411586589357e-19], 'true': [0.012001733402888643, nan], 'false': [nan, 5.782411586589357e-19]}, {'': [-1.7763568394002505e-17, 1.1601167171305105e-05], 'true': [-1.7763568394002505e-17, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), director(B).;true;true
5;;workedunder(A, B) :- director(B), actor(A).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- actor(A), director(B).;true;true
8;;workedunder(A, B) :- actor(A).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360638;  // std dev = 1,29e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.09269127618926093;  // std dev = 1,29e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839683;  // std dev = 1,58e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A) )
%   then if ( actor(B) )
%   | then return -0.06842697784420274;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 5,27e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.82 seconds
Total inference time: 1.022 seconds
AUC ROC: 0.97972


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094637
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.563 seconds
Refined model CLL: -0.094637


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 2.9189999999999996 seconds
Total inference time: 1.022 seconds
AUC ROC: 0.97972
Total revision time: 2.9189999999999996
Best scored revision CLL: -0.094637


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:10:35
{'AUC ROC': 0.97972, 'Recall': 1.0, 'CLL': -0.145678, 'Precision': [0.348837, 0.5], 'parameter_25': {'AUC ROC': 1.0, 'Recall': 1.0, 'CLL': -0.077341, 'Precision': [1.0, 0.5], 'Learning time': 0.948, 'F1': 1.0, 'Inference time': 1.331, 'AUC PR': 1.0}, 'Learning time': 2.9189999999999996, 'F1': 0.517241, 'Inference time': 1.022, 'AUC PR': 0.348837}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.14185106490048777;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.12544463852839138;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.11231637819360638;  // std dev = 1,29e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.10159632948783635;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.09269127618926093;  // std dev = 1,29e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.08518475138839683;  // std dev = 1,58e-08, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07877675473109179;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.07324622576333704;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06842697784420275;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.06419184008202622;  // std dev = 5,27e-09, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.316 seconds
Total inference time: 0.9 seconds
AUC ROC: 0.97972


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:10:38
{'AUC ROC': 0.97972, 'Recall': 1.0, 'CLL': -0.145678, 'Precision': [0.348837, 0.5], 'Learning time': 1.316, 'F1': 0.517241, 'Inference time': 0.9, 'AUC PR': 0.348837}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else return -0.14185106490048777;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #neg=25 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.16597
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.576 seconds
Total inference time: 0.758 seconds
AUC ROC: 0.97972


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:10:39
{'AUC ROC': 0.97972, 'Recall': 0.0, 'CLL': -0.16597, 'Precision': [nan, 0.5], 'Learning time': 0.576, 'F1': nan, 'Inference time': 0.758, 'AUC PR': 0.348837}


