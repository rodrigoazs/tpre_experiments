Starting experiment #4 for 2_uwcse_imdb

Start learning from source dataset

Source train facts examples: 2387
Source train pos examples: 113
Source train neg examples: 4079

WILL Produced-Tree #1
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B), publication(C, D) )
%   | | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.858148935099512;  // std dev = 1,46e-07, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( publication(E, A), publication(F, B) )
%   | | then if ( tempadvisedby(G, B), publication(H, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.31648226843284566;  // std dev = 2,441, 24,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( tempadvisedby(I, B), ta(J, I, K) )
%   | | | then return 0.6729637499143266;  // std dev = 2,018, 27,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | | | else return 0.5081489350995118;  // std dev = 3,695, 60,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=39 */
%   else return -0.1418510649004881;  // std dev = 0,000, 185,000 (wgt'ed) examples reached here.  /* #neg=185 */
WILL Produced-Tree #2
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then return 0.7278731563331485;  // std dev = 0,075, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( tempadvisedby(G, B), ta(H, G, I) )
%   | | | then return 0.7194734122109545;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5528067455442878;  // std dev = 1,581, 18,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else if ( publication(J, A) )
%   | | then if ( publication(J, K), ta(L, K, M) )
%   | | | then return 0.39500352826163515;  // std dev = 2,304, 22,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.1133670210784933;  // std dev = 1,651, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( tempadvisedby(N, B), ta(P, N, Q) )
%   | | | then return 0.43271088975114724;  // std dev = 2,603, 31,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   | | | else return 0.5571876090467988;  // std dev = 2,780, 44,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=34 */
%   else return -0.1254446385283913;  // std dev = 4,71e-08, 165,000 (wgt'ed) examples reached here.  /* #neg=165 */
WILL Produced-Tree #3
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( publication(C, D), ta(E, D, F) )
%   | | then if ( tempadvisedby(G, B), publication(C, G) )
%   | | | then return 0.6139574213322496;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3768207085399083;  // std dev = 1,572, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0.5807952997074389;  // std dev = 0,096, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( tempadvisedby(H, B), publication(I, A) )
%   | | then if ( publication(I, J), professor(J) )
%   | | | then return -0.060849842412149226;  // std dev = 1,925, 27,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.49810183316167816;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tempadvisedby(K, B), ta(L, A, M) )
%   | | | then return 0.6117693489889344;  // std dev = 0,965, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.3601309192174745;  // std dev = 3,973, 72,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=48 */
%   else return -0.11231637819360651;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #4
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B), publication(C, A) )
%   | then if ( tempadvisedby(D, B) )
%   | | then return 0.44331829604682843;  // std dev = 0,117, 29,000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( ta(E, A, F) )
%   | | | then return 0.1260456918568226;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.45292564238472116;  // std dev = 0,007, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( tempadvisedby(G, B), publication(H, G) )
%   | | then if ( ta(I, A, J) )
%   | | | then return 0.294801219351629;  // std dev = 0,566, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.12537406572900628;  // std dev = 1,192, 8,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( publication(K, B), ta(L, A, M) )
%   | | | then return 0.3608393497414604;  // std dev = 2,634, 40,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=31 */
%   | | | else return 0.22493997324260148;  // std dev = 3,725, 64,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=37 */
%   else return -0.10159632948783649;  // std dev = 0,000, 191,000 (wgt'ed) examples reached here.  /* #neg=191 */
WILL Produced-Tree #5
% FOR advisedby(A, B):
%   if ( student(A), hasposition(B, C) )
%   then if ( ta(D, A, E), publication(F, B) )
%   | then if ( ta(D, G, H), publication(F, G) )
%   | | then if ( publication(F, A), tempadvisedby(I, B) )
%   | | | then return 0.3534705170402925;  // std dev = 0,004, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.021642025860028072;  // std dev = 1,600, 9,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( tempadvisedby(J, B) )
%   | | | then return 0.26959506558679575;  // std dev = 1,745, 22,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return 0.516875878635378;  // std dev = 0,114, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( publication(K, B), publication(K, A) )
%   | | then if ( publication(K, L), tempadvisedby(M, L) )
%   | | | then return 0.332278405491494;  // std dev = 0,089, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.20133300603682155;  // std dev = 0,926, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( publication(N, A) )
%   | | | then return -0.02438236681949603;  // std dev = 2,575, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.23738791457702887;  // std dev = 2,904, 40,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=28 */
%   else return -0.0912932134833031;  // std dev = 0,054, 186,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=1 */
WILL Produced-Tree #6
% FOR advisedby(A, B):
%   if ( student(A), professor(B) )
%   then if ( tempadvisedby(C, B) )
%   | then if ( ta(D, C, E) )
%   | | then if ( publication(F, A), ta(G, A, H) )
%   | | | then return 0.32282026599620844;  // std dev = 0,343, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.17242507111510658;  // std dev = 2,366, 42,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=32 */
%   | | else if ( projectmember(I, B) )
%   | | | then return 0.323268128625527;  // std dev = 1,078, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.002795870429019045;  // std dev = 2,909, 49,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=25 */
%   | else if ( publication(J, B), publication(K, A) )
%   | | then if ( publication(J, L), ta(M, L, N) )
%   | | | then return 0.20965120543564927;  // std dev = 1,555, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return -0.010537969929710359;  // std dev = 1,446, 8,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( ta(P, A, Q) )
%   | | | then return 0.22294686260699265;  // std dev = 1,301, 13,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.33279243454199314;  // std dev = 1,584, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else return -0.08529376325401199;  // std dev = 0,000, 169,000 (wgt'ed) examples reached here.  /* #neg=169 */
WILL Produced-Tree #7
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( tempadvisedby(C, B), publication(D, C) )
%   | then if ( publication(D, A) )
%   | | then return 0.26935317624966704;  // std dev = 0,024, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( ta(E, A, F), publication(G, A) )
%   | | | then return -0.42244681677288043;  // std dev = 0,769, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.032090037817469864;  // std dev = 1,889, 20,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | else if ( projectmember(H, B) )
%   | | then if ( publication(I, A) )
%   | | | then return 0.6067978013088584;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23348388582363314;  // std dev = 0,918, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( publication(J, B), publication(J, A) )
%   | | | then return 0.21995645176355488;  // std dev = 1,005, 31,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return 0.1369626624575196;  // std dev = 4,109, 86,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=60 */
%   else return -0.07887035321978603;  // std dev = 0,000, 202,000 (wgt'ed) examples reached here.  /* #neg=202 */
WILL Produced-Tree #8
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, A), publication(C, B) )
%   | then if ( tempadvisedby(D, B), ta(E, A, F) )
%   | | then return 0.210476330107842;  // std dev = 0,119, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( publication(C, G), tempadvisedby(H, G) )
%   | | | then return 0.11907538364179217;  // std dev = 1,598, 27,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | | else return 0.2249450045507196;  // std dev = 0,036, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( publication(I, B), publication(J, A) )
%   | | then if ( publication(J, K), professor(K) )
%   | | | then return -0.19369105006245999;  // std dev = 1,992, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.19099552283998533;  // std dev = 1,321, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( tempadvisedby(L, B), ta(M, L, N) )
%   | | | then return 0.08011886456429405;  // std dev = 2,468, 31,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=22 */
%   | | | else return -0.030448288752439323;  // std dev = 4,011, 66,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   else return -0.07332741593346272;  // std dev = 4,47e-08, 173,000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #9
% FOR advisedby(A, B):
%   if ( hasposition(B, C), student(A) )
%   then if ( tempadvisedby(D, B), publication(E, B) )
%   | then if ( ta(F, A, G), ta(F, D, H) )
%   | | then return 0.014220489610090347;  // std dev = 0,772, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( publication(I, A) )
%   | | | then return 0.10589728760223939;  // std dev = 1,863, 37,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=30 */
%   | | | else return 0.19547484192365602;  // std dev = 2,134, 31,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | else if ( projectmember(J, B), publication(K, A) )
%   | | then return 0.46444066688883656;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tempadvisedby(L, B) )
%   | | | then return -0.06886830599933756;  // std dev = 1,676, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.08095450719861044;  // std dev = 3,411, 59,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=43 */
%   else if ( professor(B) )
%   | then if ( publication(M, B) )
%   | | then return -0.06849804034784078;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.05579477727283481;  // std dev = 0,707, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.06849804034784061;  // std dev = 5,05e-08, 162,000 (wgt'ed) examples reached here.  /* #neg=162 */
WILL Produced-Tree #10
% FOR advisedby(A, B):
%   if ( professor(B), student(A) )
%   then if ( publication(C, B) )
%   | then if ( publication(C, D), tempadvisedby(E, D) )
%   | | then if ( ta(F, E, G) )
%   | | | then return 0.14769739189196648;  // std dev = 3,421, 109,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=91 */
%   | | | else return -0.08744836563315696;  // std dev = 1,398, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return -0.015375414961641659;  // std dev = 0,657, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( projectmember(H, B) )
%   | | then return 0.3598622115268939;  // std dev = 0,017, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( ta(I, A, J) )
%   | | | then return -0.2236908059227424;  // std dev = 1,212, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.03011906149445176;  // std dev = 1,694, 12,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else return -0.06428239111545736;  // std dev = 0,002, 193,000 (wgt'ed) examples reached here.  /* #neg=193 */


Starting fold 1

Target train facts examples: 863
Target train pos examples: 326
Target train neg examples: 10928

Target test facts examples: 215
Target test pos	 examples: 56
Target test neg examples: 3308

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.19844607690984173;  // std dev = 0,311, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.16576675478241998;  // std dev = 0,293, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1922544955674892;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11818961007473873;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.16414821422809056;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return -0.10641675457992776;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.10292162413647155;  // std dev = 0,089, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.932 seconds
Total inference time: 1.431 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106188
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.512 seconds
Parameter learned model CLL: -0.106188


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,true,true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [5.27e-09, 0, 5], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.311, 1, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [0.0, 4, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.293, 1, 5], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, B), movie(F, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [0.0, 4, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 4, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.089, 1, 5], 'true,false': [0.0, 0, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true,false,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.09915090450905224, 0.0], 'true,false,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.061916714078618984, 0.0], 'true,false': [0.0, nan], 'true,true': [-4.4408920985006264e-17, nan], 'true,false,true': [0.0, nan], 'true': [-4.4408920985006264e-17, 0.0], 'true,true,true': [-4.4408920985006264e-17, nan]}, {'': [0.03742709756190412, 0.0], 'true': [4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan]}, {'': [-2.2204460492503132e-17, 0.0], 'true': [-2.2204460492503132e-17, nan], 'true,true,true': [-2.2204460492503132e-17, nan], 'true,true': [-2.2204460492503132e-17, nan]}, {'': [0.01608928935222897, 0.0], 'true': [0.01608928935222897, nan]}, {'': [0.014337292374150842, 0.0], 'true': [0.014337292374150842, nan], 'true,true': [0.014337292374150842, nan]}, {'': [0.01338549204555594, 0.0], 'true,false,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.0002309157018288363], 'false': [0.0, 0.0], 'true': [0.0, nan], 'true,true': [0.0, nan], 'false,true': [0.0, nan]}, {'': [0.007970791624083177, 0.0], 'true': [0.007970791624083177, nan], 'true,true': [0.007970791624083177, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.19844607690984173;  // std dev = 0,311, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.16576675478241998;  // std dev = 0,293, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1922544955674892;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11818961007473873;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.16414821422809056;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( director(B) )
%   | then return -0.10641675457992776;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.10292162413647155;  // std dev = 0,219, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068457
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.671 seconds
Total inference time: 1.388 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106188
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.481 seconds
Refined model CLL: -0.106188


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.066719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.596 seconds
Total inference time: 1.431 seconds
AUC ROC: 1.0
Total revision time: 2.596
Best scored revision CLL: -0.106188


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:12
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066719, 'Inference time': 1.431, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 2.596, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.066719, 'Inference time': 1.431, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 0.932}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.5851860008555361;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.46125983910675533;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.5155129923615089;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( actor(B) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1821796590281756;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.3885429256897412;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.13667576989135657;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.20196915303738536;  // std dev = 0,852, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.2603879457987285;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.053948428724199284;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.21343531926914705;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.04122720060920774;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.1797891826503134;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.03162015662350185;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), female(A) )
%   then return 0.15478347567020068;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.024323557782851373;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */


Results
   AUC ROC   = 0.983055
   AUC PR    = 0.338212
   CLL	      = -0.115114
   Precision = 0.321839 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.486957


Total learning time: 1.164 seconds
Total inference time: 1.252 seconds
AUC ROC: 0.983055


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:06:15
{'AUC ROC': 0.983055, 'AUC PR': 0.338212, 'CLL': -0.115114, 'Inference time': 1.252, 'Recall': 1.0, 'F1': 0.486957, 'Precision': [0.321839, 0.5], 'Learning time': 1.164}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */


Results
   AUC ROC   = 0.982164
   AUC PR    = 0.321839
   CLL	      = -0.160312
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.51 seconds
Total inference time: 0.802 seconds
AUC ROC: 0.982164


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:06:17
{'AUC ROC': 0.982164, 'AUC PR': 0.321839, 'CLL': -0.160312, 'Inference time': 0.802, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.51}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 1,18e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0513509638543199;  // std dev = 0,392, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.20457531369521811;  // std dev = 0,457, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08846206664884308;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.17031247200847288;  // std dev = 0,431, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08158368838152567;  // std dev = 2,63e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19700554728469674;  // std dev = 0,061, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12151298053593065;  // std dev = 0,003, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07567575240209222;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.13512660937184645;  // std dev = 0,255, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.05397098457548642;  // std dev = 0,233, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07054937395754728;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.10611261210738977;  // std dev = 0,102, 12,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0660611426217139;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067949
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.971 seconds
Total inference time: 1.525 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.11396
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.532 seconds
Parameter learned model CLL: -0.11396


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 8, 0], 'true,true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 8, 0], 'true,true,true': [2.98e-08, 0, 10], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 8, 0], 'true,true,true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.18e-08, 0, 10], 'false': [3.73e-09, 8, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 9], 'false': [0.392, 9, 1], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [0.0, 8, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.457, 2, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [2.63e-09, 8, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.431, 2, 10], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, B), movie(F, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 8, 0], 'true,true,true': [0.061, 0, 10], 'true,false,true,true': [0.003, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [0.0, 8, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.233, 1, 1], 'true,true,true': [0.255, 1, 9], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 8, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.102, 2, 10], 'true,false': [0.0, 0, 0]}]]
[{'': [0.1388888888888887, -6.938893903907228e-18], 'true,false,true': [0.0, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.09915090450905217, 0.0], 'true,false,true': [0.0, nan], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [8.881784197001253e-17, nan]}, {'': [0.0619167140786188, -1.734723475976807e-18], 'true,false': [0.0, nan], 'true,true': [-1.7763568394002506e-16, nan], 'true,false,true': [0.0, nan], 'true': [-1.7763568394002506e-16, 0.0], 'true,true,true': [-1.7763568394002506e-16, nan]}, {'': [0.037427097561904134, 1.734723475976807e-18], 'true': [1.3322676295501878e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.015381192815554301, 0.015381192815554324], 'true': [0.015381192815554301, nan], 'true,true,true': [-3.700743415417188e-17, 0.0], 'true,true': [0.015381192815554301, nan]}, {'': [0.017425783077460167, 0.0], 'true': [0.017425783077460167, nan]}, {'': [0.01546970205036223, 8.673617379884035e-19], 'true': [0.01546970205036223, nan], 'true,true': [0.01546970205036223, nan]}, {'': [0.014399173634252851, 0.0], 'true,false,true': [4.8676514855100494e-06, nan], 'true': [0.0003690260699696857, 4.8676514855100494e-06], 'true,false': [4.8676514855100494e-06, nan], 'true,true': [0.0003690260699696857, nan]}, {'': [0.006520264690740907, 0.007932947019279253], 'false': [0.027260479345040056, 0.0], 'true': [0.006520264690740907, nan], 'true,true': [0.006520264690740907, nan], 'false,true': [0.027260479345040056, nan]}, {'': [0.01042692831066281, 0.0], 'true': [0.01042692831066281, nan], 'true,true': [0.01042692831066281, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360639;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.217361066322797;  // std dev = 0,358, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.010659504648091699;  // std dev = 0,358, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.17831476626978;  // std dev = 0,336, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.21947948534264097;  // std dev = 0,120, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.08728647276200122;  // std dev = 0,010, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.14795221143499082;  // std dev = 0,323, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.18165408542893086;  // std dev = 0,113, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.08057952091926872;  // std dev = 0,010, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20032301358160085;  // std dev = 0,057, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14161496064586976;  // std dev = 0,011, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07480869010008195;  // std dev = 0,009, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.10432034315390887;  // std dev = 0,273, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.15806841667787164;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( director(B) )
%   | then return 0.04288269828323744;  // std dev = 0,228, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return -0.06979356746319555;  // std dev = 0,008, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.0898805195077313;  // std dev = 0,271, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.11290725373969315;  // std dev = 0,091, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.06539678017751577;  // std dev = 0,008, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067978
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.99 seconds
Total inference time: 1.457 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.116648
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.506 seconds
Refined model CLL: -0.116648


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.067949
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.9990000000000006 seconds
Total inference time: 1.525 seconds
AUC ROC: 1.0
Total revision time: 2.9990000000000006
Best scored revision CLL: -0.11396


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:23
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.067949, 'Inference time': 1.525, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 0.971}, 'CLL': -0.067949, 'Inference time': 1.525, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 2.9990000000000006}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.6189976143448207;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.6258618619471136;  // std dev = 0,076, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), actor(B) )
%   | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.237982887989597;  // std dev = 0,254, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4725985878740551;  // std dev = 0,082, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), actor(B) )
%   | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.2006920966456383;  // std dev = 0,223, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.3586877868933776;  // std dev = 0,076, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.17248389972046352;  // std dev = 0,197, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.28112537190169357;  // std dev = 0,068, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.15063821460441223;  // std dev = 0,175, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.228039857228108;  // std dev = 0,059, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.133345824434577;  // std dev = 0,157, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.19045984650258543;  // std dev = 0,052, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11938726592361565;  // std dev = 0,143, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16285062539234393;  // std dev = 0,046, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10792401779356468;  // std dev = 0,130, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1418779675025988;  // std dev = 0,041, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(A), actor(B) )
%   | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09836682033841768;  // std dev = 0,120, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.999328
   AUC PR    = 0.918673
   CLL	      = -0.067926
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.792 seconds
Total inference time: 1.63 seconds
AUC ROC: 0.999328


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:06:27
{'AUC ROC': 0.999328, 'AUC PR': 0.918673, 'CLL': -0.067926, 'Inference time': 1.63, 'Recall': 1.0, 'F1': 0.973913, 'Precision': [0.949153, 0.5], 'Learning time': 1.792}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( female(A) )
%   | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7331489350995123;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */


Results
   AUC ROC   = 0.981274
   AUC PR    = 0.307778
   CLL	      = -0.160457
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.628 seconds
Total inference time: 0.796 seconds
AUC ROC: 0.981274


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:06:29
{'AUC ROC': 0.981274, 'AUC PR': 0.307778, 'CLL': -0.160457, 'Inference time': 0.796, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.628}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 1,18e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06513106796596692;  // std dev = 0,399, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.2197019420380505;  // std dev = 0,467, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08735717026912303;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.18219433968714616;  // std dev = 0,438, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0806389859664046;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19084781841645443;  // std dev = 0,063, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12366720010034793;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07485928941064626;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.14131470995443204;  // std dev = 0,260, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.052818008590975296;  // std dev = 0,233, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06983706233557206;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11436851279822886;  // std dev = 0,087, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06543450526106556;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06748
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.298 seconds
Total inference time: 1.373 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.108
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.574 seconds
Parameter learned model CLL: -0.108


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 13, 0], 'true,true,true': [0.0, 0, 15], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [7.45e-09, 13, 0], 'true,true,true': [5.16e-08, 0, 15], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [1.05e-08, 13, 0], 'true,true,true,true': [0.0, 0, 15], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.18e-08, 0, 15], 'false': [0.0, 13, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 14], 'false': [0.399, 14, 1], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [0.0, 13, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.467, 2, 15]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [0.0, 13, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.438, 2, 15], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, B), movie(F, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [3.73e-09, 13, 0], 'true,true,true': [0.063, 0, 15], 'true,false,true,true': [0.002, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [0.0, 13, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.233, 1, 1], 'true,true,true': [0.26, 1, 14], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [5.27e-09, 13, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.087, 2, 15], 'true,false': [0.0, 0, 0]}]]
[{'': [0.10380622837370206, -1.2810265668751807e-17], 'true,false,true': [0.0, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.0741058663458661, 4.270088556250602e-18], 'true,false,true': [0.0, nan], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [1.7763568394002506e-16, nan]}, {'': [0.04627685204491911, 8.540177112501205e-18], 'true,false': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,true,true': [-2.3684757858670006e-16, nan]}, {'': [0.027973194025506288, -2.135044278125301e-18], 'true': [1.4802973661668753e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.010633911082358515, 0.010633911082358545], 'true': [0.010633911082358515, nan], 'true,true,true': [-3.172065784643304e-17, 0.0], 'true,true': [0.010633911082358515, nan]}, {'': [0.01283314610101625, -2.135044278125301e-18], 'true': [0.01283314610101625, nan]}, {'': [0.011302855103000912, -2.135044278125301e-18], 'true': [0.011302855103000912, nan], 'true,true': [0.011302855103000912, nan]}, {'': [0.010505458951824712, 1.0675221390626506e-18], 'true,false,true': [2.230052485176562e-06, nan], 'true': [0.0002682780749572918, 2.230052485176562e-06], 'true,false': [2.230052485176562e-06, nan], 'true,true': [0.0002682780749572918, nan]}, {'': [0.004494086640969312, 0.0053707891386337225], 'false': [0.02724255430562273, -4.270088556250602e-18], 'true': [0.004494086640969312, nan], 'true,true': [0.004494086640969312, nan], 'false,true': [0.02724255430562273, nan]}, {'': [0.007630155888937931, 2.135044278125301e-18], 'true': [0.007630155888937931, nan], 'true,true': [0.007630155888937931, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.1015963294878363;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.217361066322797;  // std dev = 0,358, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.010659504648091699;  // std dev = 0,358, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.17831476626978;  // std dev = 0,336, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.23320746889142882;  // std dev = 0,096, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.086478118387538;  // std dev = 0,011, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.14795221143499082;  // std dev = 0,323, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.1924886109491159;  // std dev = 0,090, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.07988692963271336;  // std dev = 0,010, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.19273597654102312;  // std dev = 0,065, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1430494506483157;  // std dev = 0,009, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07420901469763436;  // std dev = 0,010, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.10521526139692534;  // std dev = 0,274, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.1558223644931198;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( director(B) )
%   | then return 0.04029762810331816;  // std dev = 0,227, 2,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return -0.0692695318813833;  // std dev = 0,009, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.09060085177940067;  // std dev = 0,272, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.12079443893473123;  // std dev = 0,073, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else return -0.06493509588809981;  // std dev = 0,008, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068235
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.085 seconds
Total inference time: 1.334 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109523
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.513 seconds
Refined model CLL: -0.109523


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.06748
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.4699999999999998 seconds
Total inference time: 1.373 seconds
AUC ROC: 1.0
Total revision time: 3.4699999999999998
Best scored revision CLL: -0.108


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:35
{'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06748, 'Inference time': 1.373, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.298}, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.06748, 'Inference time': 1.373, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.4699999999999998}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then return 0.5170719622367217;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.657810671461647;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360636;  // std dev = 1,05e-08, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then return 0.41257245288266;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.5123505661168763;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.48281600511325345;  // std dev = 0,159, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A), actor(B) )
%   | then return -0.10159632948783627;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.2939471648425565;  // std dev = 0,392, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.366260539353753;  // std dev = 0,153, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926098;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.24608086384737274;  // std dev = 0,344, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2865508926797417;  // std dev = 0,137, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.20931022209372482;  // std dev = 0,302, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.23199544984583947;  // std dev = 0,121, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.18074297907868475;  // std dev = 0,267, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1934311667735788;  // std dev = 0,107, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.15821744031038945;  // std dev = 0,238, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1651496965575185;  // std dev = 0,095, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.14017239372880405;  // std dev = 0,214, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.14370401931095264;  // std dev = 0,086, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(A), actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.12549146793975996;  // std dev = 0,193, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.999328
   AUC PR    = 0.918673
   CLL	      = -0.07023
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.742 seconds
Total inference time: 1.509 seconds
AUC ROC: 0.999328


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:06:39
{'AUC ROC': 0.999328, 'AUC PR': 0.918673, 'CLL': -0.07023, 'Inference time': 1.509, 'Recall': 1.0, 'F1': 0.973913, 'Precision': [0.949153, 0.5], 'Learning time': 1.742}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( female(A) )
%   | then return 0.6081489350995122;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7812258581764353;  // std dev = 0,266, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */


Results
   AUC ROC   = 0.981274
   AUC PR    = 0.307778
   CLL	      = -0.1604
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.623 seconds
Total inference time: 0.841 seconds
AUC ROC: 0.981274


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:06:40
{'AUC ROC': 0.981274, 'AUC PR': 0.307778, 'CLL': -0.1604, 'Inference time': 0.841, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.623}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, E) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.32071184716014967;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.03363368713934516;  // std dev = 0,663, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.22008287470546004;  // std dev = 0,582, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0899011817742715;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.18229387057379795;  // std dev = 0,545, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0828117120696383;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1953604976595676;  // std dev = 0,095, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1243849798780244;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0767352395213919;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.1303472674884879;  // std dev = 0,359, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.12994088520405606;  // std dev = 0,283, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07147230131055457;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1134949957772468;  // std dev = 0,094, 23,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06687196917242123;  // std dev = 6,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068748
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.037 seconds
Total inference time: 1.448 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111575
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.626 seconds
Parameter learned model CLL: -0.111575


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 17, 0], 'true,true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 17, 0], 'true,true,true': [7.3e-08, 0, 20], 'true,false,true,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [1.49e-08, 17, 0], 'true,true,true,true': [0.0, 0, 20], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.18e-08, 0, 20], 'false': [0.0, 17, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [1.49e-08, 0, 17], 'false': [0.663, 18, 3], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [0.0, 17, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.582, 3, 20]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [0.0, 17, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.545, 3, 20], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, B), movie(F, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 17, 0], 'true,true,true': [0.095, 0, 20], 'true,false,true,true': [0.005, 3, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [7.45e-09, 17, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.283, 1, 3], 'true,true,true': [0.359, 2, 17], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [6.45e-09, 17, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.094, 3, 20], 'true,false': [0.0, 0, 0]}]]
[{'': [0.11342155009451807, -3.2653618371328133e-18], 'true,false,true': [0.0, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.08097011483536962, 0.0], 'true,false,true': [0.0, nan], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [2.6645352591003756e-16, nan]}, {'': [0.05056336575040308, 1.3061447348531253e-17], 'true,false': [2.3129646346357427e-18, nan], 'true,true': [-2.6645352591003756e-16, nan], 'true,false,true': [2.3129646346357427e-18, nan], 'true': [-2.6645352591003756e-16, 2.3129646346357427e-18], 'true,true,true': [-2.6645352591003756e-16, nan]}, {'': [0.030564283831271546, -8.163404592832034e-18], 'true': [1.3322676295501878e-16, -1.1564823173178713e-18], 'true,false': [-1.1564823173178713e-18, nan]}, {'': [0.01609604665216519, 0.02092679294633239], 'true': [0.01609604665216519, nan], 'true,true,true': [1.3061447348531253e-17, 0.0], 'true,true': [0.01609604665216519, nan]}, {'': [0.014712619902595352, -1.6326809185664067e-18], 'true': [0.014712619902595352, nan]}, {'': [0.012936406782420844, -5.714383214982423e-18], 'true': [0.012936406782420844, nan], 'true,true': [0.012936406782420844, nan]}, {'': [0.011992977360942379, -2.44902137784961e-18], 'true,false,true': [9.327554070591437e-06, nan], 'true': [0.0004552417355719152, 9.327554070591437e-06], 'true,false': [9.327554070591437e-06, nan], 'true,true': [0.0004552417355719152, nan]}, {'': [0.006767576774884762, 0.01007661590772104], 'false': [0.020062061185369857, 3.2653618371328133e-18], 'true': [0.006767576774884762, nan], 'true,true': [0.006767576774884762, nan], 'false,true': [0.020062061185369857, nan]}, {'': [0.008799831501645624, 2.44902137784961e-18], 'true': [0.008799831501645624, nan], 'true,true': [0.008799831501645624, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.1553505978203854;  // std dev = 0,453, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0.217361066322797;  // std dev = 0,358, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2630939349239834;  // std dev = 0,056, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10862612497197877;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839687;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21537224225053775;  // std dev = 0,049, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09854743784157492;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1812252000373302;  // std dev = 0,043, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09013321022098658;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.07114220480766593;  // std dev = 0,279, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.15047178117765597;  // std dev = 1,67e-08, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( director(B) )
%   | then return 0.10157838774584108;  // std dev = 0,217, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1396037592843199;  // std dev = 0,053, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08944566350262513;  // std dev = 0,006, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202619;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064796
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.033 seconds
Total inference time: 1.344 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098998
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.538 seconds
Refined model CLL: -0.098998


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064796
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.234 seconds
Total inference time: 1.344 seconds
AUC ROC: 1.0
Total revision time: 3.234
Best scored revision CLL: -0.098998


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:47
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068748, 'Inference time': 1.448, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.037}, 'CLL': -0.064796, 'Inference time': 1.344, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.234}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783631;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202619;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.999547
   AUC PR    = 0.949153
   CLL	      = -0.065262
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.429 seconds
Total inference time: 1.182 seconds
AUC ROC: 0.999547


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:06:50
{'AUC ROC': 0.999547, 'AUC PR': 0.949153, 'CLL': -0.065262, 'Inference time': 1.182, 'Recall': 1.0, 'F1': 0.973913, 'Precision': [0.949153, 0.5], 'Learning time': 1.429}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.999547
   AUC PR    = 0.949153
   CLL	      = -0.153142
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.628 seconds
Total inference time: 0.817 seconds
AUC ROC: 0.999547


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:06:52
{'AUC ROC': 0.999547, 'AUC PR': 0.949153, 'CLL': -0.153142, 'Inference time': 0.817, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.628}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.3207118471601496;  // std dev = 2,98e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.02909079567396705;  // std dev = 0,761, 26,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.21796959149825063;  // std dev = 0,669, 29,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0902735695569523;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.18064595059896807;  // std dev = 0,627, 29,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0831290298611149;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19641453340873538;  // std dev = 0,108, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1235647916949391;  // std dev = 0,006, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07700867156769918;  // std dev = 7,45e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.12540876699939155;  // std dev = 0,434, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.146018445730223;  // std dev = 0,292, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07171023287429626;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1122499024366673;  // std dev = 0,096, 29,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06708080132374235;  // std dev = 9,13e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068919
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.142 seconds
Total inference time: 1.307 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.112513
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.639 seconds
Parameter learned model CLL: -0.112513


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [1.05e-08, 21, 0], 'true,true,true': [1.33e-07, 0, 25], 'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 21, 0], 'true,true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [1.29e-08, 21, 0], 'true,true,true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 4, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 25], 'false': [0.0, 21, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [2.98e-08, 0, 21], 'false': [0.761, 22, 4], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [2.63e-09, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [0.0, 21, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.669, 4, 25]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [0.0, 21, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.627, 4, 25], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, B), movie(F, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [7.45e-09, 21, 0], 'true,true,true': [0.108, 0, 25], 'true,false,true,true': [0.006, 4, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [1.05e-08, 21, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.292, 1, 4], 'true,true,true': [0.434, 3, 21], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [9.13e-09, 21, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.096, 4, 25], 'true,false': [0.0, 0, 0]}]]
[{'': [0.11890606420927562, 5.28677630773884e-18], 'true,false,true': [0.0, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [7.105427357601002e-16, nan]}, {'': [0.08488543548931946, -2.64338815386942e-18], 'true,false,true': [0.0, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-7.105427357601002e-17, nan]}, {'': [0.053008364014988554, 7.93016446160826e-18], 'true,false': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.842170943040401e-16, 0.0], 'true,true,true': [-2.842170943040401e-16, nan]}, {'': [0.03204222383421043, -2.64338815386942e-18], 'true': [-3.552713678800501e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.018692421824458422, 0.02224761616976958], 'true': [0.018692421824458422, nan], 'true,true,true': [4.229421046191072e-17, 2.3129646346357427e-18], 'true,true': [0.018692421824458422, nan]}, {'': [0.015427881339548808, -1.32169407693471e-18], 'true': [0.015427881339548808, nan]}, {'': [0.013572936493784112, -1.32169407693471e-18], 'true': [0.013572936493784112, nan], 'true,true': [0.013572936493784112, nan]}, {'': [0.01257949615309839, 2.64338815386942e-18], 'true,false,true': [9.107272581809073e-06, nan], 'true': [0.00046844547828408525, 9.107272581809073e-06], 'true,false': [9.107272581809073e-06, nan], 'true,true': [0.00046844547828408525, nan]}, {'': [0.007863625530339919, 0.010652689313029482], 'false': [0.01710470261143517, 5.28677630773884e-18], 'true': [0.007863625530339919, nan], 'true,true': [0.007863625530339919, nan], 'false,true': [0.01710470261143517, nan]}, {'': [0.009195743680067963, 3.96508223080413e-18], 'true': [0.009195743680067963, nan], 'true,true': [0.009195743680067963, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.1435390800104023;  // std dev = 0,205, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.32071184716014967;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926103;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else return 0.23803122249026756;  // std dev = 0,370, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.263353658906701;  // std dev = 0,065, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1078027354821477;  // std dev = 0,008, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08518475138839685;  // std dev = 1,18e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2155575841882913;  // std dev = 0,057, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09786548564377523;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07877675473109179;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18136226293482252;  // std dev = 0,050, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08955987467579496;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.15498148666613934;  // std dev = 0,043, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.08069825725553127;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B) )
%   | then return 0.11141783013553966;  // std dev = 0,223, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13752309560031625;  // std dev = 0,044, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08052117555248046;  // std dev = 0,019, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.0641918400820262;  // std dev = 5,27e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064204
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.109 seconds
Total inference time: 1.278 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097491
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.535 seconds
Refined model CLL: -0.097491


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064204
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.425 seconds
Total inference time: 1.278 seconds
AUC ROC: 1.0
Total revision time: 3.425
Best scored revision CLL: -0.097491


Dataset: 2_uwcse_imdb, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:58
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068919, 'Inference time': 1.307, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.142}, 'CLL': -0.064204, 'Inference time': 1.278, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.425}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360636;  // std dev = 1,29e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926103;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839683;  // std dev = 1,49e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109179;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 5,27e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.999547
   AUC PR    = 0.949153
   CLL	      = -0.065262
   Precision = 0.949153 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.973913


Total learning time: 1.525 seconds
Total inference time: 1.242 seconds
AUC ROC: 0.999547


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN-B), Time: 00:07:01
{'AUC ROC': 0.999547, 'AUC PR': 0.949153, 'CLL': -0.065262, 'Inference time': 1.242, 'Recall': 1.0, 'F1': 0.973913, 'Precision': [0.949153, 0.5], 'Learning time': 1.525}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,05e-08, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.999547
   AUC PR    = 0.949153
   CLL	      = -0.153142
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.625 seconds
Total inference time: 0.851 seconds
AUC ROC: 0.999547


Dataset: 2_uwcse_imdb, Fold: 1, Type: Scratch (RDN), Time: 00:07:03
{'AUC ROC': 0.999547, 'AUC PR': 0.949153, 'CLL': -0.153142, 'Inference time': 0.851, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.625}


Starting fold 2

Target train facts examples: 870
Target train pos examples: 324
Target train neg examples: 10813

Target test facts examples: 208
Target test pos	 examples: 58
Target test neg examples: 3423

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.025423901910570628;  // std dev = 0,494, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.2791827581499097;  // std dev = 0,066, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0948516716010991;  // std dev = 2,63e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.22678138129809106;  // std dev = 0,057, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08701521868559602;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.18960872258639733;  // std dev = 0,050, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08034628108886939;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.14594234242663495;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.18671486019664785;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0746060676083557;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.14120547303599687;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06961595012676933;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.079793
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.851 seconds
Total inference time: 2.277 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100539
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.531 seconds
Parameter learned model CLL: -0.100539


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)', 'true,true': 'movie(C, D)'}, {'true,true,true,true': [0.0, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'true,true': [5.27e-09, 0, 5]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 3], 'false': [0.494, 5, 2], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [2.63e-09, 5, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.066, 0, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.057, 0, 5], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.05, 0, 5], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [1.86e-09, 5, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 2], 'true,true,true': [0.0, 0, 3], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.015, 0, 5], 'true,false': [0.0, 0, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true,true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan]}, {'': [0.0, 0.03487798824388735], 'true': [0.0, nan], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0008647572876563814, 1.3877787807814458e-18], 'true': [0.0008647572876563814, nan]}, {'': [0.0006599827116966272, 0.0], 'true': [0.0006599827116966272, nan], 'true,true': [0.0006599827116966272, nan]}, {'': [0.0005085719682749401, 0.0], 'true': [0.0005085719682749401, nan], 'true,true': [0.0005085719682749401, nan]}, {'': [0.0, 0.01393645455283018], 'false': [0.0, 6.938893903907229e-19], 'true': [0.0, nan], 'true,true': [0.0, nan], 'false,true': [0.0, nan]}, {'': [0.0002355369339339497, -6.938893903907229e-19], 'true': [0.0002355369339339497, nan], 'true,true': [0.0002355369339339497, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( female(A) )
%   | then return 0.18291080604367946;  // std dev = 0,338, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.26599645305822683;  // std dev = 0,030, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0900002801333905;  // std dev = 0,022, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2174135852819307;  // std dev = 0,026, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.082903651341276;  // std dev = 0,020, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.18271566596491448;  // std dev = 0,023, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.0768204693310584;  // std dev = 0,019, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.14965112944901493;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( director(B) )
%   | then return 0.16804607281395956;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.07155134715674166;  // std dev = 0,018, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13728992574085266;  // std dev = 0,016, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06694536608497542;  // std dev = 0,016, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.16451
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 0.727 seconds
Total inference time: 1.055 seconds
AUC ROC: 0.976337


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097459
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.402 seconds
Refined model CLL: -0.097459


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976337
   AUC PR    = 0.263636
   CLL	      = -0.16451
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 2.511 seconds
Total inference time: 1.055 seconds
AUC ROC: 0.976337
Total revision time: 2.511
Best scored revision CLL: -0.097459


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:09
{'AUC ROC': 0.976337, 'AUC PR': 0.263636, 'CLL': -0.16451, 'Inference time': 1.055, 'Recall': 1.0, 'F1': 0.417266, 'Precision': [0.263636, 0.5], 'Learning time': 2.511, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.079793, 'Inference time': 2.277, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 0.851}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.168993
   Precision = 0.245763 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.394558


Total learning time: 1.036 seconds
Total inference time: 1.067 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:12
{'AUC ROC': 0.973999, 'AUC PR': 0.245763, 'CLL': -0.168993, 'Inference time': 1.067, 'Recall': 1.0, 'F1': 0.394558, 'Precision': [0.245763, 0.5], 'Learning time': 1.036}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.973999
   AUC PR    = 0.245763
   CLL	      = -0.162966
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.507 seconds
Total inference time: 0.81 seconds
AUC ROC: 0.973999


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:07:13
{'AUC ROC': 0.973999, 'AUC PR': 0.245763, 'CLL': -0.162966, 'Inference time': 0.81, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.507}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 1,18e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.03450968484132693;  // std dev = 0,688, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.24534649326995517;  // std dev = 0,358, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09563460663628548;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.20127749088098443;  // std dev = 0,332, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08767709229601989;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19822612937358514;  // std dev = 0,071, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12705242530874591;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08091269193334906;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.11437957269393864;  // std dev = 0,246, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.19312016118481734;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0750959677841914;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1238758926405661;  // std dev = 0,080, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07004364645033213;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072892
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.91 seconds
Total inference time: 1.483 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10996
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.536 seconds
Parameter learned model CLL: -0.10996


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 9, 0], 'true,true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 9, 0], 'true,true,true': [2.98e-08, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 9, 0], 'true,true,true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.18e-08, 0, 10], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 6], 'false': [0.688, 9, 4], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [5.27e-09, 9, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.358, 1, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [0.0, 9, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.332, 1, 10], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, B), movie(F, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [5.27e-09, 9, 0], 'true,true,true': [0.071, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [2.63e-09, 9, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 4], 'true,true,true': [0.246, 1, 6], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 9, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.08, 1, 10], 'true,false': [0.0, 0, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true,false,true': [0.0, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.058998885327700486, 0.0], 'true,false,true': [0.0, nan], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [8.881784197001253e-17, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true,false': [0.0, nan], 'true,true': [-1.7763568394002506e-16, nan], 'true,false,true': [0.0, nan], 'true': [-1.7763568394002506e-16, 0.0], 'true,true,true': [-1.7763568394002506e-16, nan]}, {'': [0.02227066962361243, 3.0839528461809902e-18], 'true': [1.3322676295501878e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.02092679294633239, 0.03640519009598654], 'true': [0.02092679294633239, nan], 'true,true,true': [-3.700743415417188e-17, 0.0], 'true,true': [0.02092679294633239, nan]}, {'': [0.011660787129243707, 3.0839528461809902e-18], 'true': [0.011660787129243707, nan]}, {'': [0.010045068266541652, -1.5419764230904951e-18], 'true': [0.010045068266541652, nan], 'true,true': [0.010045068266541652, nan]}, {'': [0.009208295591731171, 3.0839528461809902e-18], 'true,false,true': [0.0, nan], 'true': [0.0005103853203382635, 0.0], 'true,false': [0.0, nan], 'true,true': [0.0005103853203382635, nan]}, {'': [0.00866364665480573, 0.015324474001232647], 'false': [0.0, 7.709882115452476e-19], 'true': [0.00866364665480573, nan], 'true,true': [0.00866364665480573, nan], 'false,true': [0.0, nan]}, {'': [0.006380968538813236, 0.0], 'true': [0.006380968538813236, nan], 'true,true': [0.006380968538813236, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then return 0.2616542581102339;  // std dev = 0,145, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.21174042082252867;  // std dev = 0,134, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.20975771563253554;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.17465795081010935;  // std dev = 0,129, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18966590604098016;  // std dev = 0,032, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.16339850931652924;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.12507643949629615;  // std dev = 0,109, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( director(B) )
%   | then return 0.1511243014674869;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13274139384348305;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1083131289008924;  // std dev = 0,109, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070171
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.969 seconds
Total inference time: 1.224 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.107703
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.521 seconds
Refined model CLL: -0.107703


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070171
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.936 seconds
Total inference time: 1.224 seconds
AUC ROC: 1.0
Total revision time: 2.936
Best scored revision CLL: -0.107703


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:19
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072892, 'Inference time': 1.483, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 0.91}, 'CLL': -0.070171, 'Inference time': 1.224, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 2.936}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3584548159137827;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.3758477125459625;  // std dev = 0,142, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( female(B) )
%   | then return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.21636721810781964;  // std dev = 0,428, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.29317544697447745;  // std dev = 0,125, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.19056039804924876;  // std dev = 0,397, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.23665032642175374;  // std dev = 0,108, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( female(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1694010635104977;  // std dev = 0,366, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1968104100190319;  // std dev = 0,094, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.15183222468946145;  // std dev = 0,338, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16768543128476252;  // std dev = 0,083, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.13708942199055754;  // std dev = 0,312, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.14566367993035953;  // std dev = 0,074, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( female(B) )
%   | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12460193987223256;  // std dev = 0,289, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.999617
   AUC PR    = 0.971227
   CLL	      = -0.074148
   Precision = 0.935484 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.966667


Total learning time: 1.571 seconds
Total inference time: 1.451 seconds
AUC ROC: 0.999617


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:23
{'AUC ROC': 0.999617, 'AUC PR': 0.971227, 'CLL': -0.074148, 'Inference time': 1.451, 'Recall': 1.0, 'F1': 0.966667, 'Precision': [0.935484, 0.5], 'Learning time': 1.571}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */


Results
   AUC ROC   = 0.975954
   AUC PR    = 0.272034
   CLL	      = -0.162689
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.627 seconds
Total inference time: 0.821 seconds
AUC ROC: 0.975954


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:07:24
{'AUC ROC': 0.975954, 'AUC PR': 0.272034, 'CLL': -0.162689, 'Inference time': 0.821, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.627}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 1,18e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.016099019429005018;  // std dev = 0,793, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.25328821479797636;  // std dev = 0,367, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09405410433917648;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.20742729790610118;  // std dev = 0,340, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08634015973149366;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1940248046092923;  // std dev = 0,089, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1286235491298577;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07976798053937616;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.1269249931981869;  // std dev = 0,254, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.194451332748936;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07410542503316728;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1284904825321682;  // std dev = 0,068, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06917852237909415;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072268
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.989 seconds
Total inference time: 1.656 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106357
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.559 seconds
Parameter learned model CLL: -0.106357


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 14, 0], 'true,true,true': [0.0, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0], 'true,true,true': [5.16e-08, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [1.18e-08, 14, 0], 'true,true,true,true': [0.0, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.18e-08, 0, 15], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 10], 'false': [0.793, 14, 5], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [0.0, 14, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.367, 1, 15]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [0.0, 14, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.34, 1, 15], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, B), movie(F, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [3.73e-09, 14, 0], 'true,true,true': [0.089, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [0.0, 14, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 5], 'true,true,true': [0.254, 1, 10], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 14, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.068, 1, 15], 'true,false': [0.0, 0, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true,false,true': [0.0, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.041829287839756535, 3.96508223080413e-18], 'true,false,true': [0.0, nan], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [1.7763568394002506e-16, nan]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true,false': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,true,true': [-2.3684757858670006e-16, nan]}, {'': [0.015789556783928405, -3.96508223080413e-18], 'true': [1.4802973661668753e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.014124143999590711, 0.03313891957798717], 'true': [0.014124143999590711, nan], 'true,true,true': [-4.4408920985006264e-17, 0.0], 'true,true': [0.014124143999590711, nan]}, {'': [0.008439528472081945, -1.982541115402065e-18], 'true': [0.008439528472081945, nan]}, {'': [0.007225283883790123, -3.96508223080413e-18], 'true': [0.007225283883790123, nan], 'true,true': [0.007225283883790123, nan]}, {'': [0.006598705394930737, 9.912705577010326e-19], 'true,false,true': [0.0, nan], 'true': [0.0005322465772646427, 0.0], 'true,false': [0.0, nan], 'true,true': [0.0005322465772646427, nan]}, {'': [0.005847100214525899, 0.013985017314488833], 'false': [0.0, -1.982541115402065e-18], 'true': [0.005847100214525899, nan], 'true,true': [0.005847100214525899, nan], 'false,true': [0.0, nan]}, {'': [0.00459130225254379, -2.9738116731030977e-18], 'true': [0.00459130225254379, nan], 'true,true': [0.00459130225254379, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then return 0.283129745037476;  // std dev = 0,119, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.25757501152597145;  // std dev = 0,008, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2234811840683424;  // std dev = 0,114, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.08518475138839686;  // std dev = 8,33e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.21145599537478477;  // std dev = 0,007, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18418573857271375;  // std dev = 0,110, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18576043012717683;  // std dev = 0,025, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.16932597540412064;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.13445563782848485;  // std dev = 0,089, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( director(B) )
%   | then return 0.15270735222217272;  // std dev = 0,007, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.06842697784420272;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13472076420484025;  // std dev = 0,008, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.11480800735783563;  // std dev = 0,093, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.06419184008202619;  // std dev = 6,97e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070454
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.031 seconds
Total inference time: 1.431 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10377
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.503 seconds
Refined model CLL: -0.10377


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070454
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.082 seconds
Total inference time: 1.431 seconds
AUC ROC: 1.0
Total revision time: 3.082
Best scored revision CLL: -0.10377


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:31
{'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072268, 'Inference time': 1.656, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 0.989}, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.070454, 'Inference time': 1.431, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.082}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6392070123615109;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.49932275605826126;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3758491322444214;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.28401811356076057;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.29370688540364015;  // std dev = 0,122, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.23403940171802917;  // std dev = 0,516, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2368825949304641;  // std dev = 0,106, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(A) )
%   | | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.20840533739735093;  // std dev = 0,484, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.19689470801393744;  // std dev = 0,092, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.18680698907476997;  // std dev = 0,452, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.16769550992119117;  // std dev = 0,081, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.16840794244566765;  // std dev = 0,420, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14563621334026172;  // std dev = 0,072, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( female(B) )
%   | | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.15261835491052594;  // std dev = 0,389, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.999617
   AUC PR    = 0.971227
   CLL	      = -0.090431
   Precision = 0.527273 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.690476


Total learning time: 1.778 seconds
Total inference time: 1.584 seconds
AUC ROC: 0.999617


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:35
{'AUC ROC': 0.999617, 'AUC PR': 0.971227, 'CLL': -0.090431, 'Inference time': 1.584, 'Recall': 1.0, 'F1': 0.690476, 'Precision': [0.527273, 0.5], 'Learning time': 1.778}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */


Results
   AUC ROC   = 0.975954
   AUC PR    = 0.272034
   CLL	      = -0.162752
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.629 seconds
Total inference time: 0.829 seconds
AUC ROC: 0.975954


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:07:36
{'AUC ROC': 0.975954, 'AUC PR': 0.272034, 'CLL': -0.162752, 'Inference time': 0.829, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.629}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.006565625491467061;  // std dev = 0,822, 24,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.2549103963038786;  // std dev = 0,372, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09214058434713665;  // std dev = 1,05e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.20883775044840508;  // std dev = 0,344, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08471718580335746;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.190479329443095;  // std dev = 0,102, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1289638283121692;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07837511633783827;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.1345260409781768;  // std dev = 0,258, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.15294003756934635;  // std dev = 0,247, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07289769350695098;  // std dev = 5,27e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13169744968819763;  // std dev = 0,061, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06895399707133275;  // std dev = 0,015, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071338
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.003 seconds
Total inference time: 1.675 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104955
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.606 seconds
Parameter learned model CLL: -0.104955


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 19, 0], 'true,true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 19, 0], 'true,true,true': [7.3e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [1.67e-08, 19, 0], 'true,true,true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.18e-08, 0, 20], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 15], 'false': [0.822, 19, 5], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [1.05e-08, 19, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.372, 1, 20]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [0.0, 19, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.344, 1, 20], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, B), movie(F, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 19, 0], 'true,true,true': [0.102, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [5.27e-09, 18, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.247, 1, 5], 'true,true,true': [0.258, 1, 15], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.015, 19, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.061, 1, 20], 'true,false': [0.0, 0, 0]}]]
[{'': [0.04535147392290242, 0.0], 'true,false,true': [0.0, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.03237580555397633, 0.0], 'true,false,true': [0.0, nan], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [2.6645352591003756e-16, nan]}, {'': [0.02021770255628346, 1.460819769243627e-17], 'true,false': [0.0, nan], 'true,true': [-2.6645352591003756e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.6645352591003756e-16, 0.0], 'true,true,true': [-2.6645352591003756e-16, nan]}, {'': [0.012221093081438202, -5.843279076974508e-18], 'true': [1.3322676295501878e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.010013797405959826, 0.028186985290849953], 'true': [0.010013797405959826, nan], 'true,true,true': [-1.4802973661668754e-17, 0.0], 'true,true': [0.010013797405959826, nan]}, {'': [0.0065841642534453185, 5.843279076974508e-18], 'true': [0.0065841642534453185, nan]}, {'': [0.005625406596320916, -7.304098846218135e-18], 'true': [0.005625406596320916, nan], 'true,true': [0.005625406596320916, nan]}, {'': [0.005126466330658777, -3.652049423109067e-18], 'true,false,true': [0.0, nan], 'true': [0.0005235548359224462, 0.0], 'true,false': [0.0, nan], 'true,true': [0.0005235548359224462, nan]}, {'': [0.004156102787176711, 0.012113136684701374], 'false': [0.010200536155538, 1.5419764230904951e-18], 'true': [0.004156102787176711, nan], 'true,true': [0.004156102787176711, nan], 'false,true': [0.010200536155538, nan]}, {'': [0.003702420971016241, 1.2465510417296394e-05], 'true': [0.003702420971016241, nan], 'true,true': [0.003702420971016241, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783635;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.27937153482520866;  // std dev = 0,124, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.09269127618926094;  // std dev = 9,13e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.22764900079251538;  // std dev = 0,110, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.08518475138839685;  // std dev = 1,05e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.18744904970349519;  // std dev = 0,105, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.07877675473109175;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18362151008200617;  // std dev = 0,030, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.16984321612182152;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.1519013475426899;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1328989271600519;  // std dev = 0,093, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( director(B) )
%   | then return 0.11626857012595747;  // std dev = 0,202, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13501776649931213;  // std dev = 0,006, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.11802483188360796;  // std dev = 0,089, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.06482494264884539;  // std dev = 0,012, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070362
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.155 seconds
Total inference time: 1.395 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10231
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.516 seconds
Refined model CLL: -0.10231


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.070362
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2800000000000002 seconds
Total inference time: 1.395 seconds
AUC ROC: 1.0
Total revision time: 3.2800000000000002
Best scored revision CLL: -0.10231


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:43
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071338, 'Inference time': 1.675, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.003}, 'CLL': -0.070362, 'Inference time': 1.395, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.2800000000000002}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.6465415686654066;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5044629797645588;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.37956420580342304;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.10159632948783633;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2871467034260754;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.22234379807937285;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.08518475138839685;  // std dev = 1,05e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.23863323471859393;  // std dev = 0,129, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109179;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.2966815852191771;  // std dev = 0,534, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.19816629934554397;  // std dev = 0,113, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(B), actor(A) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.2633537522858826;  // std dev = 0,499, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16865160978242374;  // std dev = 0,100, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.23437585183423867;  // std dev = 0,460, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.14637722666024833;  // std dev = 0,089, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202619;  // std dev = 5,27e-09, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.20914161229050365;  // std dev = 0,421, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094088
   Precision = 0.263636 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.417266


Total learning time: 1.83 seconds
Total inference time: 1.664 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:47
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.094088, 'Inference time': 1.664, 'Recall': 1.0, 'F1': 0.417266, 'Precision': [0.263636, 0.5], 'Learning time': 1.83}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.977485
   AUC PR    = 0.280399
   CLL	      = -0.161984
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.671 seconds
Total inference time: 0.869 seconds
AUC ROC: 0.977485


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:07:49
{'AUC ROC': 0.977485, 'AUC PR': 0.280399, 'CLL': -0.161984, 'Inference time': 0.869, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.671}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, E) )
%   | | then return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.32071184716014967;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.01754955670391522;  // std dev = 1,001, 30,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.23634211379790487;  // std dev = 0,607, 28,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09417777441762575;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.19454860127555373;  // std dev = 0,565, 28,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08644488782913667;  // std dev = 1,18e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.19796829557936008;  // std dev = 0,116, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12531766159005073;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07985773780735549;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.1144553012394591;  // std dev = 0,426, 20,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.16803009953834203;  // std dev = 0,257, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07418315954723181;  // std dev = 3,73e-09, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12116691727662433;  // std dev = 0,086, 28,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07003441693521913;  // std dev = 0,017, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072061
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.086 seconds
Total inference time: 1.521 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111794
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.645 seconds
Parameter learned model CLL: -0.111794


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [1.05e-08, 22, 0], 'true,true,true': [1.33e-07, 0, 25], 'true,false,true,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 22, 0], 'true,true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [1.29e-08, 22, 0], 'true,true,true,true': [0.0, 0, 25], 'true,false,true,true': [2.63e-09, 3, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 25], 'false': [0.0, 22, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [1.49e-08, 0, 17], 'false': [1.001, 22, 8], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [2.63e-09, 3, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [5.27e-09, 22, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.607, 3, 25]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [1.18e-08, 22, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.565, 3, 25], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, B), movie(F, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 22, 0], 'true,true,true': [0.116, 0, 25], 'true,false,true,true': [0.0, 3, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [3.73e-09, 21, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.257, 1, 8], 'true,true,true': [0.426, 3, 17], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.017, 22, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.086, 3, 25], 'true,false': [0.0, 0, 0]}]]
[{'': [0.09566326530612335, 5.046468293750712e-18], 'true,false,true': [0.0, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [7.105427357601002e-16, nan]}, {'': [0.06829271484041863, -2.523234146875356e-18], 'true,false,true': [0.0, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-7.105427357601002e-17, nan]}, {'': [0.042646716329660696, 7.569702440626067e-18], 'true,false': [2.3129646346357427e-18, nan], 'true,true': [-2.842170943040401e-16, nan], 'true,false,true': [2.3129646346357427e-18, nan], 'true': [-2.842170943040401e-16, 2.3129646346357427e-18], 'true,true,true': [-2.842170943040401e-16, nan]}, {'': [0.025778868218658442, -1.261617073437678e-18], 'true': [-3.552713678800501e-17, -1.1564823173178713e-18], 'true,false': [-1.1564823173178713e-18, nan]}, {'': [0.02179002315536862, 0.033420863401698295], 'true': [0.02179002315536862, nan], 'true,true,true': [1.3061447348531253e-17, 2.3129646346357427e-18], 'true,true': [0.02179002315536862, nan]}, {'': [0.013145848918383813, 1.261617073437678e-18], 'true': [0.013145848918383813, nan]}, {'': [0.01139509240349976, 6.308085367188389e-18], 'true': [0.01139509240349976, nan], 'true,true': [0.01139509240349976, nan]}, {'': [0.010475173491301698, -5.046468293750712e-18], 'true,false,true': [0.0, nan], 'true': [0.0005342860849426545, 0.0], 'true,false': [0.0, nan], 'true,true': [0.0005342860849426545, nan]}, {'': [0.009066848157747345, 0.0145201475620217], 'false': [0.007333407859606912, 6.60847038467355e-19], 'true': [0.009066848157747345, nan], 'true,true': [0.009066848157747345, nan], 'false,true': [0.007333407859606912, nan]}, {'': [0.007430198583757819, 1.30382334733189e-05], 'true': [0.007430198583757819, nan], 'true,true': [0.007430198583757819, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.2288444864158362;  // std dev = 0,172, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.283129745037476;  // std dev = 0,119, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.09269127618926093;  // std dev = 1,18e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.26305332973346546;  // std dev = 0,035, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11567742425325556;  // std dev = 0,005, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2153199136457846;  // std dev = 0,030, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10436053910658467;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18117194882416185;  // std dev = 0,027, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09500149693760707;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.1583468030805624;  // std dev = 0,015, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.08714235394337068;  // std dev = 0,004, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B) )
%   | then return 0.12616630820901154;  // std dev = 0,069, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 21,000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1373098942702531;  // std dev = 0,015, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08045545387779839;  // std dev = 0,003, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06477042144241943;  // std dev = 0,012, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064291
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.133 seconds
Total inference time: 1.293 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.097299
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.532 seconds
Refined model CLL: -0.097299


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.064291
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.396 seconds
Total inference time: 1.293 seconds
AUC ROC: 1.0
Total revision time: 3.396
Best scored revision CLL: -0.097299


Dataset: 2_uwcse_imdb, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:55
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072061, 'Inference time': 1.521, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.086}, 'CLL': -0.064291, 'Inference time': 1.293, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.396}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.12544463852839138;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.11231637819360638;  // std dev = 1,29e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1015963294878363;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10159632948783635;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014955;  // std dev = 2,11e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09269127618926093;  // std dev = 1,18e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948956;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.08518475138839682;  // std dev = 1,49e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253554;  // std dev = 1,49e-08, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07877675473109179;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527747;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333704;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06419184008202622;  // std dev = 5,27e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.063422
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.447 seconds
Total inference time: 1.243 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN-B), Time: 00:07:58
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.063422, 'Inference time': 1.243, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.447}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.14185106490048774;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.152985
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.653 seconds
Total inference time: 0.902 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 2, Type: Scratch (RDN), Time: 00:08:00
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.152985, 'Inference time': 0.902, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.653}


Starting fold 3

Target train facts examples: 737
Target train pos examples: 204
Target train neg examples: 10693

Target test facts examples: 341
Target test pos	 examples: 178
Target test neg examples: 3543

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.023790755631025878;  // std dev = 0,377, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.26932114521402895;  // std dev = 0,063, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09070977761578683;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.21988205462710556;  // std dev = 0,056, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08350049674800492;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.18460064037347698;  // std dev = 0,049, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07732858878256614;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.14867666923878964;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.19773432960717563;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07198848069477438;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1383042931681269;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06732491536794964;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10943
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.812 seconds
Total inference time: 1.433 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098142
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.508 seconds
Parameter learned model CLL: -0.098142


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)', 'true,true': 'movie(C, D)'}, {'true,true,true,true': [0.0, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'true,true': [5.27e-09, 0, 5]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 4], 'false': [0.377, 5, 1], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [3.73e-09, 5, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.063, 0, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.056, 0, 5], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.049, 0, 5], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [1.86e-09, 5, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'true,true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.015, 0, 5], 'true,false': [0.0, 0, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true,true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan]}, {'': [0.0, 0.023736408665978894], 'true': [0.0, nan], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0008007657841786142, 2.7755575615628915e-18], 'true': [0.0008007657841786142, nan]}, {'': [0.0006210086063809017, 0.0], 'true': [0.0006210086063809017, nan], 'true,true': [0.0006210086063809017, nan]}, {'': [0.0004852223481672635, 0.0], 'true': [0.0004852223481672635, nan], 'true,true': [0.0004852223481672635, nan]}, {'': [0.0, 0.010104221444053017], 'false': [0.0, 6.938893903907229e-19], 'true': [0.0, nan], 'true,true': [0.0, nan], 'false,true': [0.0, nan]}, {'': [0.00022383273155300864, -6.938893903907229e-19], 'true': [0.00022383273155300864, nan], 'true,true': [0.00022383273155300864, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.023790755631025878;  // std dev = 0,377, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.26932114521402895;  // std dev = 0,063, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09070977761578683;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.21988205462710556;  // std dev = 0,056, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08350049674800492;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.18460064037347698;  // std dev = 0,049, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07732858878256614;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.14867666923878964;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( director(B) )
%   | then return 0.19773432960717563;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.07198848069477438;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1383042931681269;  // std dev = 0,033, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06732491536794964;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.9283
   AUC PR    = 0.265885
   CLL	      = -0.387649
   Precision = 0.229974 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.37395


Total learning time: 0.617 seconds
Total inference time: 1.204 seconds
AUC ROC: 0.9283


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098142
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.489 seconds
Refined model CLL: -0.098142


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10943
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.426 seconds
Total inference time: 1.433 seconds
AUC ROC: 1.0
Total revision time: 2.426
Best scored revision CLL: -0.098142


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.10943, 'Inference time': 1.433, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 2.426, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.10943, 'Inference time': 1.433, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 0.812}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.575892
   Precision = 0.162113 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.278997


Total learning time: 1.001 seconds
Total inference time: 1.16 seconds
AUC ROC: 0.870167


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:08
{'AUC ROC': 0.870167, 'AUC PR': 0.162113, 'CLL': -0.575892, 'Inference time': 1.16, 'Recall': 1.0, 'F1': 0.278997, 'Precision': [0.162113, 0.5], 'Learning time': 1.001}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.870167
   AUC PR    = 0.162113
   CLL	      = -0.236693
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.493 seconds
Total inference time: 0.846 seconds
AUC ROC: 0.870167


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:08:10
{'AUC ROC': 0.870167, 'AUC PR': 0.162113, 'CLL': -0.236693, 'Inference time': 0.846, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.493}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 1,18e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0513509638543199;  // std dev = 0,392, 10,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.23121507554467824;  // std dev = 0,340, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08846206664884307;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.1910583333010244;  // std dev = 0,317, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08158368838152567;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.189633657059398;  // std dev = 0,059, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12437613732562708;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07567575240209222;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.12986921857979478;  // std dev = 0,254, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.21230977764823988;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07054937395754728;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11968038386214917;  // std dev = 0,078, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0660611426217139;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084676
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.925 seconds
Total inference time: 1.699 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105992
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.558 seconds
Parameter learned model CLL: -0.105992


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 9, 0], 'true,true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 9, 0], 'true,true,true': [2.98e-08, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 9, 0], 'true,true,true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.18e-08, 0, 10], 'false': [5.27e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 9], 'false': [0.392, 9, 1], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [5.27e-09, 9, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.34, 1, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [3.73e-09, 9, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.317, 1, 10], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, B), movie(F, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 9, 0], 'true,true,true': [0.059, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [2.63e-09, 9, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'true,true,true': [0.254, 1, 9], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 9, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.078, 1, 10], 'true,false': [0.0, 0, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true,false,true': [0.0, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.058998885327700486, 0.0], 'true,false,true': [0.0, nan], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [8.881784197001253e-17, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true,false': [0.0, nan], 'true,true': [-1.7763568394002506e-16, nan], 'true,false,true': [0.0, nan], 'true': [-1.7763568394002506e-16, 0.0], 'true,true,true': [-1.7763568394002506e-16, nan]}, {'': [0.02227066962361243, 3.0839528461809902e-18], 'true': [1.3322676295501878e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.015381192815554301, 0.015381192815554324], 'true': [0.015381192815554301, nan], 'true,true,true': [-3.700743415417188e-17, 0.0], 'true,true': [0.015381192815554301, nan]}, {'': [0.010493822238659689, 3.0839528461809902e-18], 'true': [0.010493822238659689, nan]}, {'': [0.00915664590948058, 1.5419764230904951e-18], 'true': [0.00915664590948058, nan], 'true,true': [0.00915664590948058, nan]}, {'': [0.008466990366043729, 0.0], 'true,false,true': [0.0, nan], 'true': [0.000349857496309397, 0.0], 'true,false': [0.0, nan], 'true,true': [0.000349857496309397, nan]}, {'': [0.0064706177857766336, 0.007200836968243113], 'false': [0.0, 7.709882115452476e-19], 'true': [0.0064706177857766336, nan], 'true,true': [0.0064706177857766336, nan], 'false,true': [0.0, nan]}, {'': [0.00610812382898012, 0.0], 'true': [0.00610812382898012, nan], 'true,true': [0.00610812382898012, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783627;  // std dev = 5,27e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.23803122249026756;  // std dev = 0,370, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( female(A) )
%   | then return -0.09269127618926096;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.010010651519378832;  // std dev = 0,370, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.21549338253865144;  // std dev = 0,365, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08814833306052973;  // std dev = 0,010, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.17703446600322106;  // std dev = 0,348, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08131647496004361;  // std dev = 0,009, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.19324410983670542;  // std dev = 0,064, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.16102120872148507;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.0754456331229048;  // std dev = 0,009, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.15066584172734743;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.10919550490773222;  // std dev = 0,279, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( director(B) )
%   | then return 0.20977806877477423;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.07034927193973689;  // std dev = 0,008, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13238265674055238;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.10824980852398725;  // std dev = 0,288, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.06588564961580162;  // std dev = 0,008, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.090914
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.951 seconds
Total inference time: 1.34 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109045
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.507 seconds
Refined model CLL: -0.109045


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084676
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.9410000000000003 seconds
Total inference time: 1.699 seconds
AUC ROC: 1.0
Total revision time: 2.9410000000000003
Best scored revision CLL: -0.105992


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:16
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.084676, 'Inference time': 1.699, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 0.925}, 'CLL': -0.084676, 'Inference time': 1.699, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 2.9410000000000003}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6056364498471037;  // std dev = 0,801, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.13907827118943647;  // std dev = 0,116, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4845912943420874;  // std dev = 0,759, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1234256208061981;  // std dev = 0,106, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.09936009366083205;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14929318021312768;  // std dev = 0,173, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.38673450149772015;  // std dev = 0,645, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2959705685790078;  // std dev = 0,619, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( female(A) )
%   | then return -0.0908157491441998;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.13309266509522566;  // std dev = 0,160, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.08359070224831121;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14027384785499075;  // std dev = 0,220, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2420408308766715;  // std dev = 0,535, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.07740624772389568;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12567407751752308;  // std dev = 0,202, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19074724640394194;  // std dev = 0,531, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.16276985836893557;  // std dev = 0,479, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( female(A) )
%   | then return -0.07205600280714781;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12876054838056586;  // std dev = 0,238, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then if ( female(A) )
%   | then return -0.0673841374430752;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1168812864317205;  // std dev = 0,221, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( female(A) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.13295267913112777;  // std dev = 0,482, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.11846105862342743;  // std dev = 0,441, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( female(A) )
%   | then return -0.06327094317714144;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.11966904397807425;  // std dev = 0,250, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.99252
   AUC PR    = 0.872151
   CLL	      = -0.25414
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.526 seconds
Total inference time: 1.653 seconds
AUC ROC: 0.99252


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:20
{'AUC ROC': 0.99252, 'AUC PR': 0.872151, 'CLL': -0.25414, 'Inference time': 1.653, 'Recall': 1.0, 'F1': 0.770563, 'Precision': [0.626761, 0.5], 'Learning time': 1.526}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6914822684328455;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */


Results
   AUC ROC   = 0.891758
   AUC PR    = 0.203944
   CLL	      = -0.232375
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.618 seconds
Total inference time: 0.86 seconds
AUC ROC: 0.891758


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:08:21
{'AUC ROC': 0.891758, 'AUC PR': 0.203944, 'CLL': -0.232375, 'Inference time': 0.86, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.618}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 1,18e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06513106796596693;  // std dev = 0,399, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.23889313655724884;  // std dev = 0,343, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08735717026912301;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.19705709222326473;  // std dev = 0,320, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0806389859664046;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.18565319150261145;  // std dev = 0,062, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12587330295090166;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07485928941064626;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.13753440259443941;  // std dev = 0,259, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.21299352317470743;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06983706233557206;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12419081212526822;  // std dev = 0,066, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06543450526106556;  // std dev = 5,89e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084447
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.007 seconds
Total inference time: 1.824 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102432
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.553 seconds
Parameter learned model CLL: -0.102432


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 14, 0], 'true,true,true': [0.0, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0], 'true,true,true': [5.16e-08, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [1.18e-08, 14, 0], 'true,true,true,true': [0.0, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.18e-08, 0, 15], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 14], 'false': [0.399, 14, 1], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [5.27e-09, 14, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.343, 1, 15]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [0.0, 14, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.32, 1, 15], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, B), movie(F, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [3.73e-09, 14, 0], 'true,true,true': [0.062, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [0.0, 14, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'true,true,true': [0.259, 1, 14], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [5.89e-09, 14, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.066, 1, 15], 'true,false': [0.0, 0, 0]}]]
[{'': [0.05859374999999978, -1.1895246692412391e-17], 'true,false,true': [0.0, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.041829287839756535, 3.96508223080413e-18], 'true,false,true': [0.0, nan], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [1.7763568394002506e-16, nan]}, {'': [0.02612111375191717, 9.912705577010326e-18], 'true,false': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,true,true': [-2.3684757858670006e-16, nan]}, {'': [0.015789556783928405, -3.96508223080413e-18], 'true': [1.4802973661668753e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.010633911082358515, 0.010633911082358545], 'true': [0.010633911082358515, nan], 'true,true,true': [-3.172065784643304e-17, 0.0], 'true,true': [0.010633911082358515, nan]}, {'': [0.00737408463207672, 1.982541115402065e-18], 'true': [0.00737408463207672, nan]}, {'': [0.00641165503866626, -1.982541115402065e-18], 'true': [0.00641165503866626, nan], 'true,true': [0.00641165503866626, nan]}, {'': [0.005928431266377286, 9.912705577010326e-19], 'true,false,true': [0.0, nan], 'true': [0.00025811272081318986, 0.0], 'true,false': [0.0, nan], 'true,true': [0.00025811272081318986, nan]}, {'': [0.004471342231904033, 0.004977350939561002], 'false': [0.0, -3.96508223080413e-18], 'true': [0.004471342231904033, nan], 'true,true': [0.004471342231904033, nan], 'false,true': [0.0, nan]}, {'': [0.004311234863370591, 2.4781763942525816e-18], 'true': [0.004311234863370591, nan], 'true,true': [0.004311234863370591, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.27477816678799294;  // std dev = 0,130, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), movie(E, B) )
%   | then return 0.010659504648091699;  // std dev = 0,358, 4,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 7,45e-09, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.23118653721962365;  // std dev = 0,118, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.0869862268514863;  // std dev = 0,013, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.20975771563253556;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1898218362607411;  // std dev = 0,113, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.0803223865228805;  // std dev = 0,012, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18812187340867237;  // std dev = 0,054, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.170028982902316;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07458613884183372;  // std dev = 0,011, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.15132248556461103;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1287172430147432;  // std dev = 0,098, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( director(B) )
%   | then return 0.2025726541903925;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.06959915491811522;  // std dev = 0,011, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13289640602425856;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.11787221393513476;  // std dev = 0,094, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.06522555237234375;  // std dev = 0,010, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.089296
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.076 seconds
Total inference time: 1.312 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104872
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.54 seconds
Refined model CLL: -0.104872


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.084447
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.176 seconds
Total inference time: 1.824 seconds
AUC ROC: 1.0
Total revision time: 3.176
Best scored revision CLL: -0.102432


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:28
{'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.084447, 'Inference time': 1.824, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.007}, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.084447, 'Inference time': 1.824, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.176}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6392070123615109;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360636;  // std dev = 1,18e-08, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.49932275605826126;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1015963294878363;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.4175135841583099;  // std dev = 2,11e-08, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3758491322444214;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.35869560700051617;  // std dev = 0,120, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return -0.09269127618926097;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.1799063778975907;  // std dev = 0,478, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.2812400414817696;  // std dev = 0,105, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return -0.08518475138839687;  // std dev = 2,63e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.16096424477487162;  // std dev = 0,451, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.22818227823145906;  // std dev = 0,091, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.1452535555009806;  // std dev = 0,425, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.19060042444259773;  // std dev = 0,080, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.13202949618916873;  // std dev = 0,399, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16297979024662193;  // std dev = 0,070, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( female(A) )
%   | then return -0.06842697784420272;  // std dev = 1,86e-09, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12076387926156033;  // std dev = 0,376, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.14199362537109053;  // std dev = 0,063, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( female(A) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.11106967660173879;  // std dev = 0,354, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */


Results
   AUC ROC   = 0.99252
   AUC PR    = 0.872151
   CLL	      = -0.241289
   Precision = 0.301184 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.462939


Total learning time: 1.736 seconds
Total inference time: 1.327 seconds
AUC ROC: 0.99252


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:31
{'AUC ROC': 0.99252, 'AUC PR': 0.872151, 'CLL': -0.241289, 'Inference time': 1.327, 'Recall': 1.0, 'F1': 0.462939, 'Precision': [0.301184, 0.5], 'Learning time': 1.736}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */


Results
   AUC ROC   = 0.891758
   AUC PR    = 0.203944
   CLL	      = -0.23398
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.635 seconds
Total inference time: 0.883 seconds
AUC ROC: 0.891758


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:08:33
{'AUC ROC': 0.891758, 'AUC PR': 0.203944, 'CLL': -0.23398, 'Inference time': 0.883, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.635}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.3207118471601496;  // std dev = 2,58e-08, 19,000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07093321706560776;  // std dev = 0,402, 19,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.22792093529188112;  // std dev = 0,471, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08689569490478452;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.18863636552523913;  // std dev = 0,441, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0802439336888958;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.18756694315417013;  // std dev = 0,065, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12375495023084711;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0745174978784631;  // std dev = 8,33e-09, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.13212692065386966;  // std dev = 0,361, 21,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.2169221819015552;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0695385898688768;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.11867965415578188;  // std dev = 0,077, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0651717125454576;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083827
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.039 seconds
Total inference time: 1.911 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105038
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.581 seconds
Parameter learned model CLL: -0.105038


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 18, 0], 'true,true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 18, 0], 'true,true,true': [7.3e-08, 0, 20], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [1.67e-08, 18, 0], 'true,true,true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.18e-08, 0, 20], 'false': [0.0, 18, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [2.58e-08, 0, 19], 'false': [0.402, 18, 1], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [0.0, 18, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.471, 2, 20]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [0.0, 18, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.441, 2, 20], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, B), movie(F, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [8.33e-09, 18, 0], 'true,true,true': [0.065, 0, 20], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [0.0, 18, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'true,true,true': [0.361, 2, 19], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 18, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.077, 2, 20], 'true,false': [0.0, 0, 0]}]]
[{'': [0.08264462809917356, -3.0839528461809902e-18], 'true,false,true': [0.0, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.05899888532770057, 0.0], 'true,false,true': [0.0, nan], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [2.6645352591003756e-16, nan]}, {'': [0.03684300341868208, 1.5419764230904953e-17], 'true,false': [0.0, nan], 'true,true': [-2.6645352591003756e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.6645352591003756e-16, 0.0], 'true,true,true': [-2.6645352591003756e-16, nan]}, {'': [0.022270669623612512, -4.625929269271485e-18], 'true': [1.3322676295501878e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.014726261702974683, 0.008521436462910984], 'true': [0.014726261702974683, nan], 'true,true,true': [3.5059674461847047e-17, 0.0], 'true,true': [0.014726261702974683, nan]}, {'': [0.010088130246497603, -4.625929269271485e-18], 'true': [0.010088130246497603, nan]}, {'': [0.008836465953085005, -2.3129646346357427e-18], 'true': [0.008836465953085005, nan], 'true,true': [0.008836465953085005, nan]}, {'': [0.008199325101931297, 3.854941057726238e-18], 'true,false,true': [0.0, nan], 'true': [0.00020822840295787182, 0.0], 'true,false': [0.0, nan], 'true,true': [0.00020822840295787182, nan]}, {'': [0.006219501263620488, 0.004091623068530765], 'false': [0.0, -2.3129646346357427e-18], 'true': [0.006219501263620488, nan], 'true,true': [0.006219501263620488, nan], 'false,true': [0.0, nan]}, {'': [0.0059956671073902075, -3.0839528461809902e-18], 'true': [0.0059956671073902075, nan], 'true,true': [0.0059956671073902075, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783635;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.27937153482520866;  // std dev = 0,124, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.283129745037476;  // std dev = 0,119, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), movie(E, B) )
%   | then return -0.023790755631025853;  // std dev = 0,377, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return -0.09269127618926096;  // std dev = 5,27e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.224896676614818;  // std dev = 0,115, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.23585978773199937;  // std dev = 0,109, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.08671948089600517;  // std dev = 0,010, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.18521974221599982;  // std dev = 0,110, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.1936077850964113;  // std dev = 0,104, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.08009348457903218;  // std dev = 0,010, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.19216104030987005;  // std dev = 0,049, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.17077822990780397;  // std dev = 0,002, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.0743876591764454;  // std dev = 0,009, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.1325345060534163;  // std dev = 0,093, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.13223651136141232;  // std dev = 0,089, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( director(B) )
%   | then return 0.20614185705645838;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.06942547677988457;  // std dev = 0,009, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11520046802132236;  // std dev = 0,093, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.12010450094623924;  // std dev = 0,087, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else return -0.06507234609289843;  // std dev = 0,008, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.087777
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.273 seconds
Total inference time: 1.393 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.109344
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.548 seconds
Refined model CLL: -0.109344


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083827
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.441 seconds
Total inference time: 1.911 seconds
AUC ROC: 1.0
Total revision time: 3.441
Best scored revision CLL: -0.105038


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:41
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.083827, 'Inference time': 1.911, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.039}, 'CLL': -0.083827, 'Inference time': 1.911, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.441}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.6392070123615109;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.6526478931012827;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360635;  // std dev = 1,67e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.49932275605826126;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.508738411682717;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.47043324524836183;  // std dev = 0,022, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.38658171075485215;  // std dev = 0,349, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.3569115032025315;  // std dev = 0,020, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926097;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.3123679025393095;  // std dev = 0,295, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.2797552208363879;  // std dev = 0,018, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839687;  // std dev = 5,27e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.2566532722378833;  // std dev = 0,249, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.22698563539524344;  // std dev = 0,015, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109172;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.21504427091083342;  // std dev = 0,212, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1896352355291106;  // std dev = 0,014, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 3,73e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.1835863369735595;  // std dev = 0,183, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16219220116833213;  // std dev = 0,012, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.15934752020413193;  // std dev = 0,160, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.14134168966893923;  // std dev = 0,011, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202619;  // std dev = 5,89e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.14028857636155498;  // std dev = 0,142, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.977561
   AUC PR    = 0.504309
   CLL	      = -0.146252
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 2.168 seconds
Total inference time: 1.634 seconds
AUC ROC: 0.977561


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:45
{'AUC ROC': 0.977561, 'AUC PR': 0.504309, 'CLL': -0.146252, 'Inference time': 1.634, 'Recall': 1.0, 'F1': 0.770563, 'Precision': [0.626761, 0.5], 'Learning time': 2.168}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( female(A) )
%   | then return 0.7581489350995123;  // std dev = 0,300, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.7748156017661789;  // std dev = 0,276, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */


Results
   AUC ROC   = 0.848575
   AUC PR    = 0.136922
   CLL	      = -0.233919
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.683 seconds
Total inference time: 0.918 seconds
AUC ROC: 0.848575


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:08:47
{'AUC ROC': 0.848575, 'AUC PR': 0.136922, 'CLL': -0.233919, 'Inference time': 0.918, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.683}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.32071184716014955;  // std dev = 2,98e-08, 24,000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07546614604970216;  // std dev = 0,405, 24,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.2330049771908747;  // std dev = 0,475, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08653670326359754;  // std dev = 7,45e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.19259146302571303;  // std dev = 0,444, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0799364161192812;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.18557047253619166;  // std dev = 0,065, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12473848971043562;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07425128989798101;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.13612464172145805;  // std dev = 0,365, 26,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.21649616294912877;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06930600615580686;  // std dev = 5,27e-09, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12150991750044707;  // std dev = 0,070, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06496684215205543;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083844
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.053 seconds
Total inference time: 1.413 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103095
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.634 seconds
Parameter learned model CLL: -0.103095


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [1.49e-08, 23, 0], 'true,true,true': [1.33e-07, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 23, 0], 'true,true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [1.05e-08, 23, 0], 'true,true,true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 25], 'false': [0.0, 23, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [2.98e-08, 0, 24], 'false': [0.405, 23, 1], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 2, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [7.45e-09, 23, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.475, 2, 25]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [0.0, 23, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.444, 2, 25], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, B), movie(F, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 23, 0], 'true,true,true': [0.065, 0, 25], 'true,false,true,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [5.27e-09, 23, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'true,true,true': [0.365, 2, 24], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 23, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.07, 2, 25], 'true,false': [0.0, 0, 0]}]]
[{'': [0.06858710562414343, 9.654113257610057e-18], 'true,false,true': [0.0, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [7.105427357601002e-16, nan]}, {'': [0.04896340963409988, -2.413528314402514e-18], 'true,false,true': [0.0, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-7.105427357601002e-17, nan]}, {'': [0.030576155100552255, 4.827056628805028e-18], 'true,false': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.842170943040401e-16, 0.0], 'true,true,true': [-2.842170943040401e-16, nan]}, {'': [0.01848251731452055, -2.413528314402514e-18], 'true': [-3.552713678800501e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.012135063365328888, 0.006824217491468929], 'true': [0.012135063365328888, nan], 'true,true,true': [3.700743415417188e-17, 0.0], 'true,true': [0.012135063365328888, nan]}, {'': [0.008339806742952415, 2.413528314402514e-18], 'true': [0.008339806742952415, nan]}, {'': [0.007288085978974469, -7.240584943207542e-18], 'true': [0.007288085978974469, nan], 'true,true': [0.007288085978974469, nan]}, {'': [0.006762641853145148, -4.827056628805028e-18], 'true,false,true': [0.0, nan], 'true': [0.0001709382346872257, 0.0], 'true,false': [0.0, nan], 'true,true': [0.0001709382346872257, nan]}, {'': [0.0051199369193042675, 0.003261642772390594], 'false': [0.0, 1.206764157201257e-18], 'true': [0.0051199369193042675, nan], 'true,true': [0.0051199369193042675, nan], 'false,true': [0.0, nan]}, {'': [0.004964325986688992, -4.2236745502044e-18], 'true': [0.004964325986688992, nan], 'true,true': [0.004964325986688992, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.10159632948783635;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.283129745037476;  // std dev = 0,119, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.29315163893685564;  // std dev = 0,103, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( movie(E, A), movie(E, B) )
%   | then return -0.023790755631025853;  // std dev = 0,377, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return -0.09269127618926093;  // std dev = 1,05e-08, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.22767279063561868;  // std dev = 0,110, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.24073075540001265;  // std dev = 0,095, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.08638584404652509;  // std dev = 0,011, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.18745468719186686;  // std dev = 0,105, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.1976420315442095;  // std dev = 0,090, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.07980753904116558;  // std dev = 0,010, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1892548302148852;  // std dev = 0,051, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1727549214888771;  // std dev = 0,003, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else return -0.07414001077838493;  // std dev = 0,010, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.13454775289612333;  // std dev = 0,089, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.1375993356110812;  // std dev = 0,077, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( director(B) )
%   | then return 0.20516186621680177;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.06920901772791095;  // std dev = 0,009, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.11701769890944033;  // std dev = 0,089, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.12340219020231404;  // std dev = 0,076, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else return -0.06488160623121877;  // std dev = 0,008, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.088097
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.275 seconds
Total inference time: 1.519 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106591
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.557 seconds
Refined model CLL: -0.106591


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.083844
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.5189999999999997 seconds
Total inference time: 1.413 seconds
AUC ROC: 1.0
Total revision time: 3.5189999999999997
Best scored revision CLL: -0.103095


Dataset: 2_uwcse_imdb, Fold: 3, Type: Transfer (trRDN-B), Time: 00:08:54
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.083844, 'Inference time': 1.413, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.053}, 'CLL': -0.083844, 'Inference time': 1.413, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.5189999999999997}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.7956489350995123;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.6465415686654066;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.6694131893798132;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 1,05e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.5044629797645588;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.5204603507259603;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.4604404914085438;  // std dev = 0,041, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.3924570260786973;  // std dev = 0,356, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.35003401278264107;  // std dev = 0,038, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.09269127618926094;  // std dev = 9,13e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.3170937204235016;  // std dev = 0,302, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.2751113922761455;  // std dev = 0,033, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.08518475138839685;  // std dev = 1,18e-08, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.2603126118149482;  // std dev = 0,255, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.22375835782646;  // std dev = 0,029, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.2178634621479786;  // std dev = 0,217, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.1873053004178022;  // std dev = 0,025, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.18578057054080432;  // std dev = 0,187, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.16044894692488668;  // std dev = 0,022, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.16108265695734456;  // std dev = 0,163, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.13999662359563422;  // std dev = 0,020, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202619;  // std dev = 7,45e-09, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return -0.14168428226268245;  // std dev = 0,145, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.977561
   AUC PR    = 0.504309
   CLL	      = -0.147281
   Precision = 0.626761 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.770563


Total learning time: 1.926 seconds
Total inference time: 1.65 seconds
AUC ROC: 0.977561


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN-B), Time: 00:08:57
{'AUC ROC': 0.977561, 'AUC PR': 0.504309, 'CLL': -0.147281, 'Inference time': 1.65, 'Recall': 1.0, 'F1': 0.770563, 'Precision': [0.626761, 0.5], 'Learning time': 1.926}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048774;  // std dev = 1,49e-08, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( female(A) )
%   | then return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.7956489350995123;  // std dev = 0,242, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */


Results
   AUC ROC   = 0.848575
   AUC PR    = 0.136922
   CLL	      = -0.234502
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.684 seconds
Total inference time: 0.871 seconds
AUC ROC: 0.848575


Dataset: 2_uwcse_imdb, Fold: 3, Type: Scratch (RDN), Time: 00:08:59
{'AUC ROC': 0.848575, 'AUC PR': 0.136922, 'CLL': -0.234502, 'Inference time': 0.871, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.684}


Starting fold 4

Target train facts examples: 927
Target train pos examples: 337
Target train neg examples: 12345

Target test facts examples: 151
Target test pos	 examples: 45
Target test neg examples: 1891

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.19844607690984173;  // std dev = 0,311, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.16576675478241998;  // std dev = 0,293, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1922544955674892;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11818961007473873;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.11905405276008751;  // std dev = 0,247, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1040028846124803;  // std dev = 0,099, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068828
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.626 seconds
Total inference time: 1.317 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111782
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.508 seconds
Parameter learned model CLL: -0.111782


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,true,true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [5.27e-09, 0, 5], 'false': [0.0, 4, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 5], 'false': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [0.0, 4, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.311, 1, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [0.0, 4, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.293, 1, 5], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, B), movie(F, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 4, 0], 'true,true,true': [0.0, 0, 5], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [0.0, 3, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 1, 0], 'true,true,true': [0.247, 1, 5], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 4, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.099, 1, 5], 'true,false': [0.0, 0, 0]}]]
[{'': [0.1388888888888887, 0.0], 'true,false,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.09915090450905224, 0.0], 'true,false,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.061916714078618984, 0.0], 'true,false': [0.0, nan], 'true,true': [-4.4408920985006264e-17, nan], 'true,false,true': [0.0, nan], 'true': [-4.4408920985006264e-17, 0.0], 'true,true,true': [-4.4408920985006264e-17, nan]}, {'': [0.03742709756190412, 0.0], 'true': [4.4408920985006264e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.02373640866597888, 0.0], 'true': [0.02373640866597888, nan], 'true,true,true': [-2.2204460492503132e-17, 0.0], 'true,true': [0.02373640866597888, nan]}, {'': [0.01608928935222897, 0.0], 'true': [0.01608928935222897, nan]}, {'': [0.014337292374150842, 0.0], 'true': [0.014337292374150842, nan], 'true,true': [0.014337292374150842, nan]}, {'': [0.01338549204555594, 0.0], 'true,false,true': [0.0, nan], 'true': [0.0, 0.0], 'true,false': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.010167416992511655, 0.0], 'false': [0.0, -5.782411586589357e-19], 'true': [0.010167416992511655, nan], 'true,true': [0.010167416992511655, nan], 'false,true': [0.0, nan]}, {'': [0.009881912395878358, 0.0], 'true': [0.009881912395878358, nan], 'true,true': [0.009881912395878358, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048777;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783628;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then return 0.2518113266019146;  // std dev = 0,377, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09269127618926096;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2043805033631121;  // std dev = 0,351, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.16876657905621142;  // std dev = 0,337, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20173900832071387;  // std dev = 7,45e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.16026603204661005;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.11935161417403244;  // std dev = 0,284, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( director(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.10329084565067105;  // std dev = 0,283, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071735
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.695 seconds
Total inference time: 1.018 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.119932
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.468 seconds
Refined model CLL: -0.119932


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.068828
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.2969999999999997 seconds
Total inference time: 1.317 seconds
AUC ROC: 1.0
Total revision time: 3.2969999999999997
Best scored revision CLL: -0.111782


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:06
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068828, 'Inference time': 1.317, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.2969999999999997, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.068828, 'Inference time': 1.317, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.626}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( female(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5980160139825493;  // std dev = 0,823, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.14489878247426094;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.47822729715264306;  // std dev = 0,798, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.12785229087705496;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( female(A) )
%   then return 0.4664524159293143;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.02018978586144243;  // std dev = 0,779, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.354150472166181;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1493160688319758;  // std dev = 0,641, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.18401726450135755;  // std dev = 0,176, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.24364032317876436;  // std dev = 0,666, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1115796158127215;  // std dev = 0,033, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2317180499639383;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.11624340507161117;  // std dev = 0,569, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.170937545171865;  // std dev = 0,208, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1930436096502003;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.09841971971443937;  // std dev = 0,556, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.1501595333837715;  // std dev = 0,188, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.15233746774708484;  // std dev = 0,568, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.1019113265038861;  // std dev = 0,076, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.1448306259481027;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.07784809476552557;  // std dev = 0,505, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.14003415195618596;  // std dev = 0,201, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 0.990011
   AUC PR    = 0.630542
   CLL	      = -0.162561
   Precision = 0.642857 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.782609


Total learning time: 1.225 seconds
Total inference time: 1.05 seconds
AUC ROC: 0.990011


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:08
{'AUC ROC': 0.990011, 'AUC PR': 0.630542, 'CLL': -0.162561, 'Inference time': 1.05, 'Recall': 1.0, 'F1': 0.782609, 'Precision': [0.642857, 0.5], 'Learning time': 1.225}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( female(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return 0.024815601766178873;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */


Results
   AUC ROC   = 0.520424
   AUC PR    = 0.02523
   CLL	      = -0.228388
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.481 seconds
Total inference time: 0.7 seconds
AUC ROC: 0.520424


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:09:09
{'AUC ROC': 0.520424, 'AUC PR': 0.02523, 'CLL': -0.228388, 'Inference time': 0.7, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.481}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 1,18e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.017527071943913577;  // std dev = 0,529, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.2368434097445902;  // std dev = 0,349, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09122774192187082;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.19516206784661996;  // std dev = 0,325, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08394125967433566;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.193109333343532;  // std dev = 0,071, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1254399052621668;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07770794118875995;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.12525000459063385;  // std dev = 0,252, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.06611632471787371;  // std dev = 0,277, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07231823581326136;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1251402720506414;  // std dev = 0,082, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06967344235213635;  // std dev = 0,012, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072163
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.985 seconds
Total inference time: 1.247 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.110548
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.554 seconds
Parameter learned model CLL: -0.110548


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 9, 0], 'true,true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 9, 0], 'true,true,true': [2.98e-08, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [0.0, 9, 0], 'true,true,true,true': [0.0, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.18e-08, 0, 10], 'false': [3.73e-09, 9, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 8], 'false': [0.529, 9, 2], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [0.0, 9, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.349, 1, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [3.73e-09, 9, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.325, 1, 10], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, B), movie(F, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [2.63e-09, 9, 0], 'true,true,true': [0.071, 0, 10], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [0.0, 7, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.277, 2, 2], 'true,true,true': [0.252, 1, 8], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.012, 9, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.082, 1, 10], 'true,false': [0.0, 0, 0]}]]
[{'': [0.0826446280991734, -9.25185853854297e-18], 'true,false,true': [0.0, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.058998885327700486, -3.0839528461809902e-18], 'true,false,true': [0.0, nan], 'true': [8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [8.881784197001253e-17, nan]}, {'': [0.036843003418682206, -1.5419764230904951e-18], 'true,false': [0.0, nan], 'true,true': [-1.7763568394002506e-16, nan], 'true,false,true': [0.0, nan], 'true': [-1.7763568394002506e-16, 0.0], 'true,true,true': [-1.7763568394002506e-16, nan]}, {'': [0.02227066962361243, 1.5419764230904951e-18], 'true': [1.3322676295501878e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.01687922394025164, 0.02542345919926334], 'true': [0.01687922394025164, nan], 'true,true,true': [-4.163336342344337e-17, 0.0], 'true,true': [0.01687922394025164, nan]}, {'': [0.011070167882766734, 0.0], 'true': [0.011070167882766734, nan]}, {'': [0.009603607993849073, 1.5419764230904951e-18], 'true': [0.009603607993849073, nan], 'true,true': [0.009603607993849073, nan]}, {'': [0.008839428562500513, 7.709882115452476e-19], 'true,false,true': [0.0, nan], 'true': [0.000498497108180529, 0.0], 'true,false': [0.0, nan], 'true,true': [0.000498497108180529, nan]}, {'': [0.00705449583277518, 0.011403447798018941], 'false': [0.019164127549448497, -9.912705577010326e-19], 'true': [0.00705449583277518, nan], 'true,true': [0.00705449583277518, nan], 'false,true': [0.019164127549448497, nan]}, {'': [0.006714142820564466, 1.4843498151136577e-05], 'true': [0.006714142820564466, nan], 'true,true': [0.006714142820564466, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783627;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then return 0.27477816678799294;  // std dev = 0,130, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.11401028548544434;  // std dev = 0,413, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.26804975495922095;  // std dev = 0,030, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1472893467878549;  // std dev = 0,326, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08908481205755632;  // std dev = 0,022, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.21883951679792663;  // std dev = 0,027, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.12273830198169484;  // std dev = 0,316, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08211967688971078;  // std dev = 0,020, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1928243300777847;  // std dev = 0,065, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1497704484323184;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07614184473759895;  // std dev = 0,019, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1254688499344134;  // std dev = 0,091, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( director(B) )
%   | then return 0.05534418459476592;  // std dev = 0,276, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.06778351645217646;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.14191544411607987;  // std dev = 0,028, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.07332044984788946;  // std dev = 0,271, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.06867124296211619;  // std dev = 0,028, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071069
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.957 seconds
Total inference time: 1.13 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.111105
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.487 seconds
Refined model CLL: -0.111105


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072163
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.983 seconds
Total inference time: 1.247 seconds
AUC ROC: 1.0
Total revision time: 2.983
Best scored revision CLL: -0.110548


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:15
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072163, 'Inference time': 1.247, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 0.985}, 'CLL': -0.072163, 'Inference time': 1.247, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 2.983}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.448295606241962;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.12544463852839138;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.36236334632262296;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.11231637819360639;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 2,98e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.25624542877104123;  // std dev = 0,716, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( actor(B) )
%   | then return -0.10159632948783628;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.19636849064858455;  // std dev = 0,232, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2544087778910487;  // std dev = 0,729, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.09871945174489169;  // std dev = 0,047, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1,49e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1857831993912627;  // std dev = 0,605, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( actor(B) )
%   | then return -0.08471615902915064;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1850190339695732;  // std dev = 0,263, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1523956723540032;  // std dev = 0,580, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( actor(B) )
%   | then return -0.07837423401337373;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.16235826671425482;  // std dev = 0,238, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.17709649774527736;  // std dev = 7,45e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.16339882218371682;  // std dev = 0,592, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08776974484731553;  // std dev = 0,112, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( female(A) )
%   | then return 0.15274385809367097;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.11053139408252605;  // std dev = 0,512, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( actor(B) )
%   | then return -0.06718305013871781;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.15328877946591654;  // std dev = 0,249, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.13400703000801117;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.12002899716640414;  // std dev = 0,542, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.08044332842985585;  // std dev = 0,129, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.125665
   Precision = 0.642857 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.782609


Total learning time: 1.563 seconds
Total inference time: 1.141 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:18
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.125665, 'Inference time': 1.141, 'Recall': 1.0, 'F1': 0.782609, 'Precision': [0.642857, 0.5], 'Learning time': 1.563}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5248156017661788;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else return -0.1418510649004878;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */


Results
   AUC ROC   = 0.970415
   AUC PR    = 0.292127
   CLL	      = -0.172611
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.597 seconds
Total inference time: 0.762 seconds
AUC ROC: 0.970415


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:09:20
{'AUC ROC': 0.970415, 'AUC PR': 0.292127, 'CLL': -0.172611, 'Inference time': 0.762, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.597}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 9,13e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 1,18e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.01973778383348262;  // std dev = 0,650, 17,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.24699769129058113;  // std dev = 0,360, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09104462787048785;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.20293061791493341;  // std dev = 0,334, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08378547875605426;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.190420197772277;  // std dev = 0,086, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12741936020725647;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07757389515754;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.13243243613760847;  // std dev = 0,256, 13,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.09258334625576256;  // std dev = 0,301, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07220173831539879;  // std dev = 6,45e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.12966773730429598;  // std dev = 0,069, 16,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06910376638021494;  // std dev = 0,015, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072273
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.035 seconds
Total inference time: 1.332 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.106956
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.574 seconds
Parameter learned model CLL: -0.106956


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 14, 0], 'true,true,true': [0.0, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [5.27e-09, 14, 0], 'true,true,true': [5.16e-08, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [9.13e-09, 14, 0], 'true,true,true,true': [0.0, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.18e-08, 0, 15], 'false': [0.0, 14, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 12], 'false': [0.65, 14, 3], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [0.0, 14, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.36, 1, 15]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [0.0, 14, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.334, 1, 15], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, B), movie(F, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [7.45e-09, 14, 0], 'true,true,true': [0.086, 0, 15], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [6.45e-09, 12, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.301, 2, 3], 'true,true,true': [0.256, 1, 12], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.015, 14, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.069, 1, 15], 'true,false': [0.0, 0, 0]}]]
[{'': [0.05859374999999978, -7.93016446160826e-18], 'true,false,true': [0.0, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.041829287839756535, 1.982541115402065e-18], 'true,false,true': [0.0, nan], 'true': [1.7763568394002506e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [1.7763568394002506e-16, nan]}, {'': [0.02612111375191717, 5.9476233462061954e-18], 'true,false': [0.0, nan], 'true,true': [-2.3684757858670006e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.3684757858670006e-16, 0.0], 'true,true,true': [-2.3684757858670006e-16, nan]}, {'': [0.015789556783928405, 0.0], 'true': [1.4802973661668753e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.012135063365328803, 0.024836989552221495], 'true': [0.012135063365328803, nan], 'true,true,true': [-5.551115123125783e-17, 0.0], 'true,true': [0.012135063365328803, nan]}, {'': [0.008088297395158033, -3.96508223080413e-18], 'true': [0.008088297395158033, nan]}, {'': [0.006964244712665053, 0.0], 'true': [0.006964244712665053, nan], 'true,true': [0.006964244712665053, nan]}, {'': [0.006383533153710059, 3.96508223080413e-18], 'true,false,true': [0.0, nan], 'true': [0.0004952279920849826, 0.0], 'true,false': [0.0, nan], 'true,true': [0.0004952279920849826, nan]}, {'': [0.0050571289072418955, 0.010961872472887756], 'false': [0.0181027493980832, 3.469446951953614e-18], 'true': [0.0050571289072418955, nan], 'true,true': [0.0050571289072418955, nan], 'false,true': [0.0181027493980832, nan]}, {'': [0.004820523657173226, 1.5203538324145521e-05], 'true': [0.004820523657173226, nan], 'true,true': [0.004820523657173226, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360638;  // std dev = 9,13e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783628;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.23803122249026756;  // std dev = 0,370, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2114868788789742;  // std dev = 0,133, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.08518475138839687;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17457583497566645;  // std dev = 0,128, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.07877675473109172;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18527665646007416;  // std dev = 0,042, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.16014972476105174;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.15168824228723743;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.11097940738206007;  // std dev = 0,280, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( director(B) )
%   | then return 0.06781401538881596;  // std dev = 0,249, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 12,000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1342917391750415;  // std dev = 0,009, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.11226116350108462;  // std dev = 0,109, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.06543276785214364;  // std dev = 0,011, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072162
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.055 seconds
Total inference time: 1.024 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.104672
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.509 seconds
Refined model CLL: -0.104672


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072162
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.1729999999999996 seconds
Total inference time: 1.024 seconds
AUC ROC: 1.0
Total revision time: 3.1729999999999996
Best scored revision CLL: -0.104672


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:26
{'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072273, 'Inference time': 1.332, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.035}, 'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072162, 'Inference time': 1.024, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.1729999999999996}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109543;  // std dev = 2,98e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6045267906174348;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4749335700127619;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.11231637819360638;  // std dev = 9,13e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 3,33e-08, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3584548159137827;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.10159632948783628;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.35746909075069155;  // std dev = 0,174, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.09269127618926094;  // std dev = 2,63e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.2575925320806725;  // std dev = 0,404, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.2807293480076589;  // std dev = 0,154, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 3,73e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.22341677832332427;  // std dev = 0,368, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.22802297706441352;  // std dev = 0,135, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.07877675473109173;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.19563116837870667;  // std dev = 0,334, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 1,86e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.19060914165003193;  // std dev = 0,118, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.17285764086581842;  // std dev = 0,302, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.1630677199232705;  // std dev = 0,105, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.15404306015675734;  // std dev = 0,275, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 1,32e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.14211718195572184;  // std dev = 0,094, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 2,63e-09, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.13837013563252845;  // std dev = 0,251, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.085209
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.515 seconds
Total inference time: 1.145 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:29
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.085209, 'Inference time': 1.145, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.515}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else return -0.1418510649004878;  // std dev = 0,000, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */


Results
   AUC ROC   = 0.970415
   AUC PR    = 0.292127
   CLL	      = -0.172135
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.613 seconds
Total inference time: 0.724 seconds
AUC ROC: 0.970415


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:09:30
{'AUC ROC': 0.970415, 'AUC PR': 0.292127, 'CLL': -0.172135, 'Inference time': 0.724, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.613}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,58e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.020795080824146064;  // std dev = 0,751, 23,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.25231461845755765;  // std dev = 0,368, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0909571685500094;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.20698358074361825;  // std dev = 0,340, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0837110587554921;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.18902235080823;  // std dev = 0,099, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1284647808914537;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07750984671473352;  // std dev = 9,86e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.13624368841076862;  // std dev = 0,259, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.11016859438054431;  // std dev = 0,316, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07214606581908042;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13193171326362108;  // std dev = 0,061, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06876989344248076;  // std dev = 0,017, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072341
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.056 seconds
Total inference time: 1.261 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.105001
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.59 seconds
Parameter learned model CLL: -0.105001


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 19, 0], 'true,true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [7.45e-09, 19, 0], 'true,true,true': [7.3e-08, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [1.58e-08, 19, 0], 'true,true,true,true': [0.0, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [1.18e-08, 0, 20], 'false': [0.0, 19, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 16], 'false': [0.751, 19, 4], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [0.0, 19, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.368, 1, 20]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [0.0, 19, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.34, 1, 20], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, B), movie(F, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [9.86e-09, 19, 0], 'true,true,true': [0.099, 0, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [0.0, 17, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.316, 2, 4], 'true,true,true': [0.259, 1, 16], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.017, 19, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.061, 1, 20], 'true,false': [0.0, 0, 0]}]]
[{'': [0.04535147392290242, -5.843279076974508e-18], 'true,false,true': [0.0, nan], 'true': [-8.881784197001253e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.03237580555397633, 2.921639538487254e-18], 'true,false,true': [0.0, nan], 'true': [2.6645352591003756e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [2.6645352591003756e-16, nan]}, {'': [0.02021770255628346, 1.3147377923192643e-17], 'true,false': [0.0, nan], 'true,true': [-2.6645352591003756e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.6645352591003756e-16, 0.0], 'true,true,true': [-2.6645352591003756e-16, nan]}, {'': [0.012221093081438202, -5.843279076974508e-18], 'true': [1.3322676295501878e-16, 0.0], 'true,false': [0.0, nan]}, {'': [0.009461710305608181, 0.02455304881289914], 'true': [0.009461710305608181, nan], 'true,true,true': [0.0, 0.0], 'true,true': [0.009461710305608181, nan]}, {'': [0.006443809112236161, -1.460819769243627e-18], 'true': [0.006443809112236161, nan]}, {'': [0.005520458854137418, 0.0], 'true': [0.005520458854137418, nan], 'true,true': [0.005520458854137418, nan]}, {'': [0.005041019493643328, 5.112869192352694e-18], 'true,false,true': [0.0, nan], 'true': [0.0004931619542829946, 0.0], 'true,false': [0.0, nan], 'true,true': [0.0004931619542829946, nan]}, {'': [0.003937517374136847, 0.010744435993106783], 'false': [0.016619317661852314, -3.2653618371328133e-18], 'true': [0.003937517374136847, nan], 'true,true': [0.003937517374136847, nan], 'false,true': [0.016619317661852314, nan]}, {'': [0.0037789171131795986, 1.4515096518450429e-05], 'true': [0.0037789171131795986, nan], 'true,true': [0.0037789171131795986, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360635;  // std dev = 1,58e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783631;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.27477816678799294;  // std dev = 0,130, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09269127618926094;  // std dev = 9,13e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.22761961755710997;  // std dev = 0,110, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.08518475138839686;  // std dev = 1,05e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.18744188467648157;  // std dev = 0,105, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.07877675473109173;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1835933419597883;  // std dev = 0,030, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1691914116488053;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.15190497640219625;  // std dev = 5,27e-09, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1300647318627276;  // std dev = 0,098, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( director(B) )
%   | then return 0.08063987864742928;  // std dev = 0,258, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.06842697784420272;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.12680833831938346;  // std dev = 0,065, 21,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else return -0.06519793083373904;  // std dev = 0,013, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072646
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.202 seconds
Total inference time: 1.067 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102803
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.537 seconds
Refined model CLL: -0.102803


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072646
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.385 seconds
Total inference time: 1.067 seconds
AUC ROC: 1.0
Total revision time: 3.385
Best scored revision CLL: -0.102803


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:37
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.072341, 'Inference time': 1.261, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.056}, 'CLL': -0.072646, 'Inference time': 1.067, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.385}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.6465415686654066;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5044629797645588;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.11231637819360635;  // std dev = 1,58e-08, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.37956420580342304;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.10159632948783631;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2871467034260754;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.09269127618926094;  // std dev = 9,13e-09, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.08518475138839687;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.2842125657789766;  // std dev = 0,130, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(B) )
%   | then return -0.08518475138839686;  // std dev = 7,45e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.2857055379294433;  // std dev = 0,491, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.23027297025233234;  // std dev = 0,113, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07877675473109173;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.07877675473109172;  // std dev = 3,73e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.2510273081526578;  // std dev = 0,455, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B) )
%   | then return 0.19212445515105334;  // std dev = 0,099, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.22166661603476304;  // std dev = 0,417, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.1641294551068538;  // std dev = 0,087, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.19674247956320953;  // std dev = 0,380, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.0641918400820262;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.14288707796398453;  // std dev = 0,078, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( actor(B) )
%   | then return -0.06419184008202619;  // std dev = 6,97e-09, 13,000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else return -0.17557739025834873;  // std dev = 0,345, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.094139
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.717 seconds
Total inference time: 1.235 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:40
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.094139, 'Inference time': 1.235, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.717}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.7672398441904213;  // std dev = 0,287, 11,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */


Results
   AUC ROC   = 0.970415
   AUC PR    = 0.292127
   CLL	      = -0.17208
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.628 seconds
Total inference time: 0.752 seconds
AUC ROC: 0.970415


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:09:42
{'AUC ROC': 0.970415, 'AUC PR': 0.292127, 'CLL': -0.17208, 'Inference time': 0.752, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.628}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,29e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.3207118471601496;  // std dev = 2,98e-08, 21,000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.03363368713934519;  // std dev = 0,765, 28,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.25329861210376864;  // std dev = 0,370, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08990118177427148;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.2078352171909012;  // std dev = 0,342, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08281171206963832;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1868921812147408;  // std dev = 0,106, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.12867044114157764;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07673523952139188;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.1398377072013701;  // std dev = 0,261, 22,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.11180652503233424;  // std dev = 0,317, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07147230131055454;  // std dev = 1,12e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13249226746837087;  // std dev = 0,056, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06790406425309552;  // std dev = 0,017, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.071885
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.121 seconds
Total inference time: 1.189 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.103083
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.629 seconds
Parameter learned model CLL: -0.103083


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [1.29e-08, 24, 0], 'true,true,true': [1.33e-07, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 24, 0], 'true,true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [1.49e-08, 24, 0], 'true,true,true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 25], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [2.98e-08, 0, 21], 'false': [0.765, 24, 4], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [0.0, 24, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.37, 1, 25]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [0.0, 24, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.342, 1, 25], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, B), movie(F, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 24, 0], 'true,true,true': [0.106, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [1.12e-08, 22, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.317, 2, 4], 'true,true,true': [0.261, 1, 21], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.017, 24, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.056, 1, 25], 'true,false': [0.0, 0, 0]}]]
[{'': [0.03698224852071082, 6.938893903907228e-18], 'true,false,true': [0.0, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [7.105427357601002e-16, nan]}, {'': [0.026401128419570055, -2.3129646346357427e-18], 'true,false,true': [0.0, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-7.105427357601002e-17, nan]}, {'': [0.016486699015016572, 9.25185853854297e-18], 'true,false': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.842170943040401e-16, 0.0], 'true,true,true': [-2.842170943040401e-16, nan]}, {'': [0.009965795208791005, -3.469446951953614e-18], 'true': [-3.552713678800501e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.007415175599785167, 0.02092679294633243], 'true': [0.007415175599785167, nan], 'true,true,true': [4.229421046191072e-17, 0.0], 'true,true': [0.007415175599785167, nan]}, {'': [0.005269825475777274, 0.0], 'true': [0.005269825475777274, nan]}, {'': [0.0045099225104683, -6.938893903907228e-18], 'true': [0.0045099225104683, nan], 'true,true': [0.0045099225104683, nan]}, {'': [0.00411384276214819, -1.1564823173178713e-18], 'true,false,true': [0.0, nan], 'true': [0.0004484053715419378, 0.0], 'true,false': [0.0, nan], 'true,true': [0.0004484053715419378, nan]}, {'': [0.003090560694161594, 0.009254698581754312], 'false': [0.016795564092813395, 5.677276830469551e-18], 'true': [0.003090560694161594, nan], 'true,true': [0.003090560694161594, nan], 'false,true': [0.016795564092813395, nan]}, {'': [0.0030922237850183718, 1.1717422811065303e-05], 'true': [0.0030922237850183718, nan], 'true,true': [0.0030922237850183718, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048774;  // std dev = 1,29e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.28626158688103215;  // std dev = 0,114, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.09269127618926103;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.23358097127102626;  // std dev = 0,098, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.19223422688046554;  // std dev = 0,094, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.07877675473109175;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18238803210267526;  // std dev = 0,026, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.17234022054067788;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07324622576333704;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.1520603214539018;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.13588061046749808;  // std dev = 0,086, 12,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( director(B) )
%   | then return 0.08026865590206089;  // std dev = 0,258, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return -0.06842697784420275;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1348938305657931;  // std dev = 0,011, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.12233149881937726;  // std dev = 0,080, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.06498621572152423;  // std dev = 0,013, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072788
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.211 seconds
Total inference time: 1.027 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10128
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.54 seconds
Refined model CLL: -0.10128


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.072788
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.5010000000000003 seconds
Total inference time: 1.027 seconds
AUC ROC: 1.0
Total revision time: 3.5010000000000003
Best scored revision CLL: -0.10128


Dataset: 2_uwcse_imdb, Fold: 4, Type: Transfer (trRDN-B), Time: 00:09:48
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.071885, 'Inference time': 1.189, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.121}, 'CLL': -0.072788, 'Inference time': 1.027, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.5010000000000003}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.14185106490048774;  // std dev = 1,29e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6622329172201352;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.5154428111118985;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.3875647182006322;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.29398103437200096;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.09269127618926103;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.2288562690978686;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.18306311556471894;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.07877675473109175;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.2001043094085493;  // std dev = 0,111, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.3083833873737528;  // std dev = 0,576, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.17006415331858032;  // std dev = 0,097, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.27692056160294914;  // std dev = 0,544, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( actor(B) )
%   | then return -0.06419184008202618;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.14744215943120176;  // std dev = 0,087, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( actor(B) )
%   | then return -0.06419184008202618;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.2487996900179773;  // std dev = 0,506, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.11795
   Precision = 0.28125 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.439024


Total learning time: 1.765 seconds
Total inference time: 1.161 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN-B), Time: 00:09:51
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.11795, 'Inference time': 1.161, 'Recall': 1.0, 'F1': 0.439024, 'Precision': [0.28125, 0.5], 'Learning time': 1.765}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.7867203636709409;  // std dev = 0,258, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else return -0.14185106490048774;  // std dev = 1,29e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.970415
   AUC PR    = 0.292127
   CLL	      = -0.172067
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.67 seconds
Total inference time: 0.756 seconds
AUC ROC: 0.970415


Dataset: 2_uwcse_imdb, Fold: 4, Type: Scratch (RDN), Time: 00:09:53
{'AUC ROC': 0.970415, 'AUC PR': 0.292127, 'CLL': -0.172067, 'Inference time': 0.756, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.67}


Starting fold 5

Target train facts examples: 915
Target train pos examples: 337
Target train neg examples: 12165

Target test facts examples: 163
Target test pos	 examples: 45
Target test neg examples: 2071

Amount of data: 5
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583099;  // std dev = 5,27e-09, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.023790755631025878;  // std dev = 0,377, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.26932114521402895;  // std dev = 0,063, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09070977761578683;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.21988205462710556;  // std dev = 0,056, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08350049674800492;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.18460064037347698;  // std dev = 0,049, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07732858878256614;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.14867666923878964;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.19773432960717563;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07198848069477438;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1383042931681269;  // std dev = 0,015, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06732491536794964;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076499
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.834 seconds
Total inference time: 1.127 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098142
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.504 seconds
Parameter learned model CLL: -0.098142


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)', 'true,true': 'movie(C, D)'}, {'true,true,true,true': [0.0, 0, 5], 'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [0.0, 5, 0], 'true,false': [0.0, 0, 0], 'true,true': [5.27e-09, 0, 5]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 4], 'false': [0.377, 5, 1], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [3.73e-09, 5, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.063, 0, 5]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.056, 0, 5], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.049, 0, 5], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [1.86e-09, 5, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'true,true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 5, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.015, 0, 5], 'true,false': [0.0, 0, 0]}]]
[{'': [0.0, -2.7755575615628915e-18], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0, 0.0], 'true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [-4.4408920985006264e-17, 0.0], 'true': [-4.4408920985006264e-17, nan], 'true,true,true': [-4.4408920985006264e-17, nan], 'true,true': [-4.4408920985006264e-17, nan]}, {'': [4.4408920985006264e-17, 0.0], 'true': [4.4408920985006264e-17, nan]}, {'': [0.0, 0.023736408665978894], 'true': [0.0, nan], 'true,true,true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0008007657841786142, 2.7755575615628915e-18], 'true': [0.0008007657841786142, nan]}, {'': [0.0006210086063809017, 0.0], 'true': [0.0006210086063809017, nan], 'true,true': [0.0006210086063809017, nan]}, {'': [0.0004852223481672635, 0.0], 'true': [0.0004852223481672635, nan], 'true,true': [0.0004852223481672635, nan]}, {'': [0.0, 0.010104221444053017], 'false': [0.0, 6.938893903907229e-19], 'true': [0.0, nan], 'true,true': [0.0, nan], 'false,true': [0.0, nan]}, {'': [0.00022383273155300864, -6.938893903907229e-19], 'true': [0.00022383273155300864, nan], 'true,true': [0.00022383273155300864, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.023790755631025878;  // std dev = 0,377, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.26932114521402895;  // std dev = 0,063, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.09070977761578683;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.21988205462710556;  // std dev = 0,056, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08350049674800492;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.18460064037347698;  // std dev = 0,049, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07732858878256614;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.14867666923878964;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( director(B) )
%   | then return 0.19773432960717563;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.07198848069477438;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1383042931681269;  // std dev = 0,033, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06732491536794964;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */


Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.145767
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.635 seconds
Total inference time: 0.954 seconds
AUC ROC: 0.98318


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098142
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.465 seconds
Refined model CLL: -0.098142


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076499
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 2.438 seconds
Total inference time: 1.127 seconds
AUC ROC: 1.0
Total revision time: 2.438
Best scored revision CLL: -0.098142


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:09:58
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076499, 'Inference time': 1.127, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 2.438, 'parameter_5': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076499, 'Inference time': 1.127, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 0.834}}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.7194734122109545;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.5553664367462845;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.4175135841583099;  // std dev = 1,49e-08, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926098;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.32071184716014967;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.25517224256948945;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109177;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.20975771563253556;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.17709649774527736;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 1,86e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.15274385809367097;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0641918400820262;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.13400703000801117;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.154459
   Precision = 0.326087 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.491803


Total learning time: 1.007 seconds
Total inference time: 0.925 seconds
AUC ROC: 0.977547


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:10:00
{'AUC ROC': 0.977547, 'AUC PR': 0.326087, 'CLL': -0.154459, 'Inference time': 0.925, 'Recall': 1.0, 'F1': 0.491803, 'Precision': [0.326087, 0.5], 'Learning time': 1.007}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0.8581489350995122;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.1668
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.475 seconds
Total inference time: 0.734 seconds
AUC ROC: 0.977547


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:10:02
{'AUC ROC': 0.977547, 'AUC PR': 0.326087, 'CLL': -0.1668, 'Inference time': 0.734, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.475}


Amount of data: 10
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 1,18e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.023790755631025864;  // std dev = 0,534, 12,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.2693211452140289;  // std dev = 0,089, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.09070977761578682;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.21988205462710556;  // std dev = 0,079, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0835004967480049;  // std dev = 6,45e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.18460064037347695;  // std dev = 0,070, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07732858878256613;  // std dev = 4,56e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.14867666923878964;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.19773432960717563;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07198848069477438;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.13830429316812687;  // std dev = 0,015, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0673249153679497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076499
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.878 seconds
Total inference time: 1.109 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098142
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.545 seconds
Parameter learned model CLL: -0.098142


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 10], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [5.27e-09, 10, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [2.98e-08, 0, 10], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)', 'true,true': 'movie(C, D)'}, {'true,true,true,true': [0.0, 0, 10], 'false': [0.0, 10, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [3.73e-09, 10, 0], 'true,false': [0.0, 0, 0], 'true,true': [1.18e-08, 0, 10]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 8], 'false': [0.534, 10, 2], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [7.45e-09, 10, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.089, 0, 10]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [6.45e-09, 10, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.079, 0, 10], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [4.56e-09, 10, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.07, 0, 10], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [2.63e-09, 10, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 2], 'true,true,true': [0.0, 0, 8], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 10, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.015, 0, 10], 'true,false': [0.0, 0, 0]}]]
[{'': [-8.881784197001253e-17, -1.1102230246251566e-17], 'true': [-8.881784197001253e-17, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [8.881784197001253e-17, 2.7755575615628915e-18], 'true': [8.881784197001253e-17, nan], 'true,true': [8.881784197001253e-17, nan]}, {'': [-1.7763568394002506e-16, 0.0], 'true': [-1.7763568394002506e-16, nan], 'true,true,true': [-1.7763568394002506e-16, nan], 'true,true': [-1.7763568394002506e-16, nan]}, {'': [1.3322676295501878e-16, 1.3877787807814458e-18], 'true': [1.3322676295501878e-16, nan]}, {'': [-4.163336342344337e-17, 0.023736408665978884], 'true': [-4.163336342344337e-17, nan], 'true,true,true': [-4.163336342344337e-17, nan], 'true,true': [-4.163336342344337e-17, nan]}, {'': [0.0008007657841786475, 5.551115123125783e-18], 'true': [0.0008007657841786475, nan]}, {'': [0.0006210086063809017, 4.163336342344337e-18], 'true': [0.0006210086063809017, nan], 'true,true': [0.0006210086063809017, nan]}, {'': [0.0004852223481672635, 2.0816681711721684e-18], 'true': [0.0004852223481672635, nan], 'true,true': [0.0004852223481672635, nan]}, {'': [-3.469446951953614e-18, 0.010104221444053011], 'false': [0.0, 6.938893903907229e-19], 'true': [-3.469446951953614e-18, nan], 'true,true': [-3.469446951953614e-18, nan], 'false,true': [0.0, nan]}, {'': [0.0002238327315530142, -2.0816681711721684e-18], 'true': [0.0002238327315530142, nan], 'true,true': [0.0002238327315530142, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( female(A) )
%   | then return 0.18291080604367946;  // std dev = 0,338, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.09269127618926097;  // std dev = 0,000, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2605843478138581;  // std dev = 0,034, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08759251576089369;  // std dev = 0,023, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.21359856284036344;  // std dev = 0,030, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.08084445183828749;  // std dev = 0,021, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17992434731815116;  // std dev = 0,026, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.0750402768008677;  // std dev = 0,020, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1511869933732849;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( director(B) )
%   | then return 0.16973304078728546;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.06999774585250385;  // std dev = 0,019, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1356592779423952;  // std dev = 0,018, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.06557816086242932;  // std dev = 0,018, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */


Results
   AUC ROC   = 0.983438
   AUC PR    = 0.401547
   CLL	      = -0.150178
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.795 seconds
Total inference time: 0.936 seconds
AUC ROC: 0.983438


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096062
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.471 seconds
Refined model CLL: -0.096062


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983438
   AUC PR    = 0.401547
   CLL	      = -0.150178
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 2.689 seconds
Total inference time: 0.936 seconds
AUC ROC: 0.983438
Total revision time: 2.689
Best scored revision CLL: -0.096062


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:10:07
{'AUC ROC': 0.983438, 'AUC PR': 0.401547, 'parameter_10': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.076499, 'Inference time': 1.109, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 0.878}, 'CLL': -0.150178, 'Inference time': 0.936, 'Recall': 1.0, 'F1': 0.517241, 'Precision': [0.348837, 0.5], 'Learning time': 2.689}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839138;  // std dev = 5,27e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.7194734122109544;  // std dev = 2,98e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360638;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.5553664367462846;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783628;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.41751358415830986;  // std dev = 3,65e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926097;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.3207118471601497;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839687;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2551722425694894;  // std dev = 1,83e-08, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109172;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.2097577156325356;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333704;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.17709649774527736;  // std dev = 7,45e-09, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420272;  // std dev = 2,63e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.15274385809367094;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202619;  // std dev = 3,73e-09, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.13400703000801117;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.154459
   Precision = 0.326087 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.491803


Total learning time: 1.118 seconds
Total inference time: 0.873 seconds
AUC ROC: 0.977547


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:10:09
{'AUC ROC': 0.977547, 'AUC PR': 0.326087, 'CLL': -0.154459, 'Inference time': 0.873, 'Recall': 1.0, 'F1': 0.491803, 'Precision': [0.326087, 0.5], 'Learning time': 1.118}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004878;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0.8581489350995122;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */


Results
   AUC ROC   = 0.977547
   AUC PR    = 0.326087
   CLL	      = -0.1668
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.51 seconds
Total inference time: 0.719 seconds
AUC ROC: 0.977547


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:10:10
{'AUC ROC': 0.977547, 'AUC PR': 0.326087, 'CLL': -0.1668, 'Inference time': 0.719, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.51}


Amount of data: 15
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.4175135841583098;  // std dev = 1,18e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.044055614618742064;  // std dev = 0,549, 17,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.2652005372402781;  // std dev = 0,099, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08905210716139503;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.2169605380750909;  // std dev = 0,087, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08208751399730622;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.18245380064358746;  // std dev = 0,078, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07611068262659135;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.14984349270535008;  // std dev = 1,49e-08, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.11132277324837862;  // std dev = 0,223, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.0709284369646911;  // std dev = 3,73e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.1388491828741675;  // std dev = 0,018, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06720962382907612;  // std dev = 0,012, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075207
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.919 seconds
Total inference time: 1.244 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.098374
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.567 seconds
Parameter learned model CLL: -0.098374


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 15, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [7.45e-09, 15, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [5.16e-08, 0, 15], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)', 'true,true': 'movie(C, D)'}, {'true,true,true,true': [0.0, 0, 15], 'false': [1.39e-08, 15, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [0.0, 15, 0], 'true,false': [0.0, 0, 0], 'true,true': [1.18e-08, 0, 15]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [0.0, 0, 13], 'false': [0.549, 15, 2], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [7.45e-09, 15, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.099, 0, 15]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [5.27e-09, 15, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.087, 0, 15], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 15, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.078, 0, 15], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [3.73e-09, 14, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.223, 1, 2], 'true,true,true': [1.49e-08, 0, 13], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.012, 15, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.018, 0, 15], 'true,false': [0.0, 0, 0]}]]
[{'': [-2.3684757858670006e-16, -1.4802973661668754e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.7763568394002506e-16, 3.7007434154171884e-18], 'true': [1.7763568394002506e-16, nan], 'true,true': [1.7763568394002506e-16, nan]}, {'': [-2.3684757858670006e-16, 1.295260195396016e-17], 'true': [-2.3684757858670006e-16, nan], 'true,true,true': [-2.3684757858670006e-16, nan], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [1.4802973661668753e-16, -5.551115123125783e-18], 'true': [1.4802973661668753e-16, nan]}, {'': [-5.124106267500723e-17, 0.017740706823015352], 'true': [-5.124106267500723e-17, nan], 'true,true,true': [-5.124106267500723e-17, nan], 'true,true': [-5.124106267500723e-17, nan]}, {'': [0.0006536835110271255, 3.7007434154171884e-18], 'true': [0.0006536835110271255, nan]}, {'': [0.0005102783381582506, 1.8503717077085942e-18], 'true': [0.0005102783381582506, nan], 'true,true': [0.0005102783381582506, nan]}, {'': [0.000401005076848752, -1.8503717077085942e-18], 'true': [0.000401005076848752, nan], 'true,true': [0.000401005076848752, nan]}, {'': [1.708035422500241e-17, 0.007757946348196108], 'false': [0.016607751812064264, 9.912705577010326e-19], 'true': [1.708035422500241e-17, nan], 'true,true': [1.708035422500241e-17, nan], 'false,true': [0.016607751812064264, nan]}, {'': [0.00032863638213619003, 9.30624344684013e-06], 'true': [0.00032863638213619003, nan], 'true,true': [0.00032863638213619003, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360635;  // std dev = 1,39e-08, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.3207118471601497;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.18291080604367946;  // std dev = 0,338, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2587803127324018;  // std dev = 0,036, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08678992763672808;  // std dev = 0,023, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.21232114920898262;  // std dev = 0,031, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08015616460092813;  // std dev = 0,022, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1789858006945595;  // std dev = 0,028, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07444380461211196;  // std dev = 0,020, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1517036010154662;  // std dev = 0,000, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( director(B) )
%   | then return 0.08423721633227708;  // std dev = 0,211, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.06816086757484886;  // std dev = 7,45e-09, 14,000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1365986124655507;  // std dev = 0,034, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.0660185569694547;  // std dev = 0,030, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.143138
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.795 seconds
Total inference time: 0.979 seconds
AUC ROC: 0.98318


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.096719
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.487 seconds
Refined model CLL: -0.096719


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.98318
   AUC PR    = 0.399657
   CLL	      = -0.143138
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 2.7680000000000002 seconds
Total inference time: 0.979 seconds
AUC ROC: 0.98318
Total revision time: 2.7680000000000002
Best scored revision CLL: -0.096719


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:10:16
{'parameter_15': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075207, 'Inference time': 1.244, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 0.919}, 'AUC ROC': 0.98318, 'AUC PR': 0.399657, 'CLL': -0.143138, 'Inference time': 0.979, 'Recall': 1.0, 'F1': 0.517241, 'Precision': [0.348837, 0.5], 'Learning time': 2.7680000000000002}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.7194734122109542;  // std dev = 5,16e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.12544463852839138;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.11231637819360636;  // std dev = 9,13e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.4175135841583098;  // std dev = 4,71e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.10159632948783631;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.32071184716014967;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.09269127618926096;  // std dev = 5,27e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.2551722425694894;  // std dev = 2,36e-08, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.08518475138839686;  // std dev = 6,45e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.20975771563253562;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07877675473109173;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527741;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.06419184008202619;  // std dev = 5,89e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.198 seconds
Total inference time: 0.98 seconds
AUC ROC: 0.97972


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:10:18
{'AUC ROC': 0.97972, 'AUC PR': 0.348837, 'CLL': -0.145678, 'Inference time': 0.98, 'Recall': 1.0, 'F1': 0.517241, 'Precision': [0.348837, 0.5], 'Learning time': 1.198}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995123;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else return -0.1418510649004878;  // std dev = 0,000, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.16597
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.545 seconds
Total inference time: 0.717 seconds
AUC ROC: 0.97972


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:10:20
{'AUC ROC': 0.97972, 'AUC PR': 0.348837, 'CLL': -0.16597, 'Inference time': 0.717, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.545}


Amount of data: 20
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048777;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360633;  // std dev = 1,83e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830986;  // std dev = 1,18e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.32071184716014967;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0387691296654248;  // std dev = 0,668, 23,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.26627880183486585;  // std dev = 0,118, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08948188917930675;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.21772720073352594;  // std dev = 0,104, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.0824542060003973;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.18301865446767723;  // std dev = 0,092, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07642701205477209;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.14953676864322163;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.0922435505287403;  // std dev = 0,298, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07120396555192218;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.139792119909825;  // std dev = 0,020, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06772781219392485;  // std dev = 0,015, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.075375
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 0.946 seconds
Total inference time: 1.215 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.099068
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.597 seconds
Parameter learned model CLL: -0.099068


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,true': 'movie(C, D)'}, {'false': [0.0, 20, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.0, 0, 20], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [7.45e-09, 20, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [7.3e-08, 0, 20], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)', 'true,true': 'movie(C, D)'}, {'true,true,true,true': [0.0, 0, 20], 'false': [1.83e-08, 20, 0], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)'}, {'false': [0.0, 20, 0], 'true,false': [0.0, 0, 0], 'true,true': [1.18e-08, 0, 20]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [1.49e-08, 0, 17], 'false': [0.668, 20, 3], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [0.0, 20, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.118, 0, 20]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [7.45e-09, 20, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.104, 0, 20], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, A), movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [6.45e-09, 20, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.092, 0, 20], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [0.0, 18, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.298, 2, 3], 'true,true,true': [0.0, 0, 17], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.015, 20, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.02, 0, 20], 'true,false': [0.0, 0, 0]}]]
[{'': [-8.881784197001253e-17, -2.7755575615628915e-18], 'true': [-8.881784197001253e-17, nan], 'true,true': [-8.881784197001253e-17, nan]}, {'': [2.6645352591003756e-16, 2.7755575615628915e-18], 'true': [2.6645352591003756e-16, nan], 'true,true': [2.6645352591003756e-16, nan]}, {'': [-2.6645352591003756e-16, 1.6653345369377347e-17], 'true': [-2.6645352591003756e-16, nan], 'true,true,true': [-2.6645352591003756e-16, nan], 'true,true': [-2.6645352591003756e-16, nan]}, {'': [1.3322676295501878e-16, -2.7755575615628915e-18], 'true': [1.3322676295501878e-16, nan]}, {'': [1.3061447348531253e-17, 0.01938398590492036], 'true': [1.3061447348531253e-17, nan], 'true,true,true': [1.3061447348531253e-17, nan], 'true,true': [1.3061447348531253e-17, nan]}, {'': [0.0006990153993868154, -4.163336342344337e-18], 'true': [0.0006990153993868154, nan]}, {'': [0.0005447340774191456, 2.7755575615628915e-18], 'true': [0.0005447340774191456, nan], 'true,true': [0.0005447340774191456, nan]}, {'': [0.0004274391257233001, 2.0816681711721684e-18], 'true': [0.0004274391257233001, nan], 'true,true': [0.0004274391257233001, nan]}, {'': [0.0, 0.008416852713591183], 'false': [0.017810060341958946, -7.709882115452476e-19], 'true': [0.0, nan], 'true,true': [0.0, nan], 'false,true': [0.017810060341958946, nan]}, {'': [0.0003897957761551274, 1.0721545048546222e-05], 'true': [0.0003897957761551274, nan], 'true,true': [0.0003897957761551274, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360633;  // std dev = 1,83e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then return 0.32071184716014967;  // std dev = 1,49e-08, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( female(A), director(B) )
%   | then return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.09269127618926096;  // std dev = 5,27e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839685;  // std dev = 1,05e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109173;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( director(B) )
%   | then return 0.06427552371852137;  // std dev = 0,242, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.06842697784420274;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.13559749121557876;  // std dev = 0,017, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.0650366170700583;  // std dev = 0,011, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.983438
   AUC PR    = 0.401547
   CLL	      = -0.141707
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 0.828 seconds
Total inference time: 0.97 seconds
AUC ROC: 0.983438


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.095765
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.492 seconds
Refined model CLL: -0.095765


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983438
   AUC PR    = 0.401547
   CLL	      = -0.141707
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 2.863 seconds
Total inference time: 0.97 seconds
AUC ROC: 0.983438
Total revision time: 2.863
Best scored revision CLL: -0.095765


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:10:26
{'AUC ROC': 0.983438, 'AUC PR': 0.401547, 'parameter_20': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.075375, 'Inference time': 1.215, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 0.946}, 'CLL': -0.141707, 'Inference time': 0.97, 'Recall': 1.0, 'F1': 0.517241, 'Precision': [0.348837, 0.5], 'Learning time': 2.863}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.7194734122109543;  // std dev = 7,30e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.12544463852839138;  // std dev = 7,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.5553664367462846;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.41751358415830986;  // std dev = 5,16e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.10159632948783634;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.3207118471601496;  // std dev = 2,11e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.09269127618926094;  // std dev = 1,05e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.25517224256948945;  // std dev = 1,49e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.08518475138839685;  // std dev = 1,05e-08, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.2097577156325356;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07877675473109173;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.17709649774527744;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.07324622576333704;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.1527438580936708;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06842697784420274;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then return 0.13400703000801117;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.06419184008202619;  // std dev = 6,45e-09, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.145678
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.312 seconds
Total inference time: 0.986 seconds
AUC ROC: 0.97972


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:10:28
{'AUC ROC': 0.97972, 'AUC PR': 0.348837, 'CLL': -0.145678, 'Inference time': 0.986, 'Recall': 1.0, 'F1': 0.517241, 'Precision': [0.348837, 0.5], 'Learning time': 1.312}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then return 0.8581489350995122;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else return -0.14185106490048777;  // std dev = 0,000, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */


Results
   AUC ROC   = 0.97972
   AUC PR    = 0.348837
   CLL	      = -0.16597
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.578 seconds
Total inference time: 0.759 seconds
AUC ROC: 0.97972


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:10:30
{'AUC ROC': 0.97972, 'AUC PR': 0.348837, 'CLL': -0.16597, 'Inference time': 0.759, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.578}


Amount of data: 25
******************************************
Performing Parameter Learning
******************************************
Refine
0;;advisedby(A, B) :- professor(B), student(A).;true;false
0;true,false;publication(E, A), publication(F, B).;true;true
0;true,true;tempadvisedby(D, B), publication(C, D).;false;false
0;true,false,true;tempadvisedby(G, B), publication(H, G).;false;false
0;true;publication(C, B), publication(C, A).;true;true
0;true,false,false;tempadvisedby(I, B), ta(J, I, K).;false;false
1;;advisedby(A, B) :- professor(B), student(A).;true;false
1;true,true,false;tempadvisedby(G, B), ta(H, G, I).;false;false
1;true,true;publication(C, D), ta(E, D, F).;false;true
1;true,false,true;publication(J, K), ta(L, K, M).;false;false
1;true;publication(C, A), publication(C, B).;true;true
1;true,false;publication(J, A).;true;true
1;true,false,false;tempadvisedby(N, B), ta(P, N, Q).;false;false
2;;advisedby(A, B) :- professor(B), student(A).;true;false
2;true,false;tempadvisedby(H, B), publication(I, A).;true;true
2;true,true;publication(C, D), ta(E, D, F).;true;false
2;true,false,true;publication(I, J), professor(J).;false;false
2;true;publication(C, A), publication(C, B).;true;true
2;true,true,true;tempadvisedby(G, B), publication(C, G).;false;false
2;true,false,false;tempadvisedby(K, B), ta(L, A, M).;false;false
3;;advisedby(A, B) :- professor(B), student(A).;true;false
3;true,true,false;ta(E, A, F).;false;false
3;true,true;tempadvisedby(D, B).;false;true
3;true,false,true;ta(I, A, J).;false;false
3;true;publication(C, B), publication(C, A).;true;true
3;true,false;tempadvisedby(G, B), publication(H, G).;true;true
3;true,false,false;publication(K, B), ta(L, A, M).;false;false
4;;advisedby(A, B) :- student(A), hasposition(B, C).;true;false
4;true,true,false;tempadvisedby(J, B).;false;false
4;true,true;ta(D, G, H), publication(F, G).;true;true
4;true,false,true;publication(K, L), tempadvisedby(M, L).;false;false
4;true;ta(D, A, E), publication(F, B).;true;true
4;true,true,true;publication(F, A), tempadvisedby(I, B).;false;false
4;true,false;publication(K, B), publication(K, A).;true;true
4;true,false,false;publication(N, A).;false;false
5;;advisedby(A, B) :- student(A), professor(B).;true;false
5;true,true,false;projectmember(I, B).;false;false
5;true,true;ta(D, C, E).;true;true
5;true,false,true;publication(J, L), ta(M, L, N).;false;false
5;true;tempadvisedby(C, B).;true;true
5;true,true,true;publication(F, A), ta(G, A, H).;false;false
5;true,false;publication(J, B), publication(K, A).;true;true
5;true,false,false;ta(P, A, Q).;false;false
6;;advisedby(A, B) :- professor(B), student(A).;true;false
6;true,true,false;ta(E, A, F), publication(G, A).;false;false
6;true,true;publication(D, A).;false;true
6;true,false,true;publication(I, A).;false;false
6;true;tempadvisedby(C, B), publication(D, C).;true;true
6;true,false;projectmember(H, B).;true;true
6;true,false,false;publication(J, B), publication(J, A).;false;false
7;;advisedby(A, B) :- professor(B), student(A).;true;false
7;true,true,false;publication(C, G), tempadvisedby(H, G).;false;false
7;true,true;tempadvisedby(D, B), ta(E, A, F).;false;true
7;true,false,true;publication(J, K), professor(K).;false;false
7;true;publication(C, A), publication(C, B).;true;true
7;true,false;publication(I, B), publication(J, A).;true;true
7;true,false,false;tempadvisedby(L, B), ta(M, L, N).;false;false
8;;advisedby(A, B) :- hasposition(B, C), student(A).;true;true
8;true,true,false;publication(I, A).;false;false
8;true,true;ta(F, A, G), ta(F, D, H).;false;true
8;false,true;publication(M, B).;false;false
8;false;professor(B).;true;false
8;true;tempadvisedby(D, B), publication(E, B).;true;true
8;true,false;projectmember(J, B), publication(K, A).;false;true
8;true,false,false;tempadvisedby(L, B).;false;false
9;;advisedby(A, B) :- professor(B), student(A).;true;false
9;true,false;projectmember(H, B).;false;true
9;true,true;publication(C, D), tempadvisedby(E, D).;true;false
9;true;publication(C, B).;true;true
9;true,true,true;ta(F, E, G).;false;false
9;true,false,false;ta(I, A, J).;false;false


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then if ( movie(C, D) )
%   | | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A), movie(F, B) )
%   | | then if ( movie(G, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.14185106490048774;  // std dev = 1,29e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, A) )
%   | | then if ( movie(E, F) )
%   | | | then return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then if ( movie(C, E) )
%   | | | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( movie(D, E) )
%   | | then return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, B) )
%   | then if ( movie(D, E) )
%   | | then if ( movie(D, A) )
%   | | | then return 0.32071184716014955;  // std dev = 2,11e-08, 22,000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.09269127618926096;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.04675759581710425;  // std dev = 0,675, 27,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A) )
%   | then return 0.2508289248682449;  // std dev = 0,364, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08883316074915142;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, D) )
%   | then if ( movie(C, A) )
%   | | then return 0.20605968269112163;  // std dev = 0,337, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.08190061346778237;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.18550512871470687;  // std dev = 0,098, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( movie(E, B), movie(F, A) )
%   | | then if ( movie(F, G), director(G) )
%   | | | then return -0.1281952406375954;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.07594938047746908;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( movie(D, B) )
%   | then if ( movie(E, A) )
%   | | then return 0.14107746428472545;  // std dev = 0,261, 23,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( director(B) )
%   | then if ( movie(F, B) )
%   | | then return 0.09558628307210486;  // std dev = 0,304, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return -0.07078788546361149;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B) )
%   | then if ( movie(C, D) )
%   | | then return 0.131589038622269;  // std dev = 0,055, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return -0.06719315588838344;  // std dev = 0,015, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069631
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.109 seconds
Total inference time: 1.227 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.102306
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.653 seconds
Parameter learned model CLL: -0.102306


Structure after Parameter Learning
[['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(G, H)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(E, A), movie(F, B)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [1.29e-08, 24, 0], 'true,true,true': [1.33e-07, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(E, F)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 24, 0], 'true,true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false': 'movie(F, A)', 'true,true': 'movie(C, D)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,true,true': 'movie(C, E)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 0], 'false': [1.49e-08, 24, 0], 'true,true,true,true': [0.0, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B), movie(C, A)', 'true,false': 'movie(D, E)'}, {'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'true,true': [0.0, 0, 25], 'false': [0.0, 24, 0]}], ['workedunder(A, B)', {'': 'actor(A), genre(B, C)', 'true': 'movie(D, B)', 'true,true,true': 'movie(D, A)', 'true,true': 'movie(D, E)'}, {'true,true,true,true': [2.11e-08, 0, 22], 'false': [0.675, 24, 3], 'true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true,false': [0.0, 1, 0]}], ['workedunder(A, B)', {'': 'actor(A), director(B)', 'true': 'movie(C, A)'}, {'false': [0.0, 24, 0], 'true,false': [0.0, 0, 0], 'true,true': [0.364, 1, 25]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, D)', 'true,true': 'movie(C, A)'}, {'false': [0.0, 24, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.337, 1, 25], 'true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true,false,true': 'movie(F, G), director(G)', 'true': 'movie(C, A), movie(C, B)', 'true,false': 'movie(E, B), movie(F, A)', 'true,true': 'movie(C, D)'}, {'true,true,false': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 0], 'false': [0.0, 24, 0], 'true,true,true': [0.098, 0, 25], 'true,false,true,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'genre(B, C), actor(A)', 'false': 'director(B)', 'true': 'movie(D, B)', 'true,true': 'movie(E, A)', 'false,true': 'movie(F, B)'}, {'false,false': [0.0, 22, 0], 'true,true,false': [0.0, 0, 0], 'false,true,true': [0.304, 2, 3], 'true,true,true': [0.261, 1, 22], 'true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0]}], ['workedunder(A, B)', {'': 'director(B), actor(A)', 'true': 'movie(C, B)', 'true,true': 'movie(C, D)'}, {'false': [0.015, 24, 0], 'true,true,false': [0.0, 0, 0], 'true,true,true': [0.055, 1, 25], 'true,false': [0.0, 0, 0]}]]
[{'': [0.03698224852071082, 6.938893903907228e-18], 'true,false,true': [0.0, nan], 'true': [7.105427357601002e-16, 0.0], 'true,false': [0.0, nan], 'true,true': [7.105427357601002e-16, nan]}, {'': [0.026401128419570055, -2.3129646346357427e-18], 'true,false,true': [0.0, nan], 'true': [-7.105427357601002e-17, 0.0], 'true,false': [0.0, nan], 'true,true': [-7.105427357601002e-17, nan]}, {'': [0.016486699015016572, 9.25185853854297e-18], 'true,false': [0.0, nan], 'true,true': [-2.842170943040401e-16, nan], 'true,false,true': [0.0, nan], 'true': [-2.842170943040401e-16, 0.0], 'true,true,true': [-2.842170943040401e-16, nan]}, {'': [0.009965795208791005, -3.469446951953614e-18], 'true': [-3.552713678800501e-17, 0.0], 'true,false': [0.0, nan]}, {'': [0.007107461498470833, 0.016879223940251677], 'true': [0.007107461498470833, nan], 'true,true,true': [2.0185873175002847e-17, 0.0], 'true,true': [0.007107461498470833, nan]}, {'': [0.005099768779180365, -8.0953762212251e-18], 'true': [0.005099768779180365, nan]}, {'': [0.004379576320355589, -2.3129646346357427e-18], 'true': [0.004379576320355589, nan], 'true,true': [0.004379576320355589, nan]}, {'': [0.004008313889854697, -3.469446951953614e-18], 'true,false,true': [0.0, nan], 'true': [0.0003837263788423195, 0.0], 'true,false': [0.0, nan], 'true,true': [0.0003837263788423195, nan]}, {'': [0.0029699585493726728, 0.007594064185446085], 'false': [0.01845357597063397, -1.261617073437678e-18], 'true': [0.0029699585493726728, nan], 'true,true': [0.0029699585493726728, nan], 'false,true': [0.01845357597063397, nan]}, {'': [0.003047573236798241, 9.358099671810555e-06], 'true': [0.003047573236798241, nan], 'true,true': [0.003047573236798241, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- director(B), actor(A).;true;true
0;true;movie(C, B), movie(C, A).;true;true
1;;workedunder(A, B) :- director(B), actor(A).;true;true
1;true;movie(C, A), movie(C, B).;true;true
2;;workedunder(A, B) :- director(B), actor(A).;true;true
2;true;movie(C, A), movie(C, B).;true;true
3;;workedunder(A, B) :- director(B), actor(A).;true;true
3;true;movie(C, B), movie(C, A).;true;true
4;;workedunder(A, B) :- actor(A), genre(B, C).;true;true
4;true;movie(D, A).;true;true
5;;workedunder(A, B) :- actor(A), director(B).;true;true
6;;workedunder(A, B) :- director(B), actor(A).;true;true
7;;workedunder(A, B) :- director(B), actor(A).;true;true
7;true;movie(C, A), movie(C, B).;true;true
8;;workedunder(A, B) :- genre(B, C), actor(A).;true;true
8;false;director(B).;true;true
9;;workedunder(A, B) :- director(B), actor(A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.858148935099512;  // std dev = 1,33e-07, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.14185106490048777;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.14185106490048774;  // std dev = 1,29e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, B), movie(C, A) )
%   | then return 0.41751358415830997;  // std dev = 0,000, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.10159632948783628;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), genre(B, C) )
%   then if ( movie(D, A) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.29315163893685564;  // std dev = 0,103, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926104;  // std dev = 0,000, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else return 0.1553505978203854;  // std dev = 0,453, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.26408413942497816;  // std dev = 0,048, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.23505168870720103;  // std dev = 0,095, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.08697009421465897;  // std dev = 0,029, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.21607940949309618;  // std dev = 0,042, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.19340801043591524;  // std dev = 0,091, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.08031038394588534;  // std dev = 0,027, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.18447736198971576;  // std dev = 0,039, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.17370447201869818;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return -0.07457721481489879;  // std dev = 0,025, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(B, C), actor(A) )
%   then if ( female(A) )
%   | then return 0.14984017613250833;  // std dev = 0,000, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.13952774310424398;  // std dev = 0,077, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( director(B) )
%   | then return 0.06902043341258979;  // std dev = 0,282, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.06813116152244543;  // std dev = 1,05e-08, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.14013472972624672;  // std dev = 0,045, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.121578990602607;  // std dev = 0,078, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.06620580323983652;  // std dev = 0,037, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069193
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 1.194 seconds
Total inference time: 1.167 seconds
AUC ROC: 1.0


Results scoring model
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.10255
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total scoring time: 0.536 seconds
Refined model CLL: -0.10255


******************************************
Best model found
******************************************
Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.069631
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 3.492 seconds
Total inference time: 1.227 seconds
AUC ROC: 1.0
Total revision time: 3.492
Best scored revision CLL: -0.102306


Dataset: 2_uwcse_imdb, Fold: 5, Type: Transfer (trRDN-B), Time: 00:10:36
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'parameter_25': {'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.069631, 'Inference time': 1.227, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 1.109}, 'CLL': -0.069631, 'Inference time': 1.227, 'Recall': 1.0, 'F1': 1.0, 'Precision': [1.0, 0.5], 'Learning time': 3.492}


Start learning from scratch in target domain

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.7914822684328456;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.14185106490048774;  // std dev = 1,29e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.7194734122109542;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6660633000779167;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.12544463852839138;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.5553664367462846;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5181199435476403;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.11231637819360636;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.4175135841583098;  // std dev = 4,21e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.38952954024068537;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.10159632948783635;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.3207118471601497;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2956796123843447;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.09269127618926103;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.2551722425694894;  // std dev = 2,11e-08, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.23048996886792547;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.08518475138839683;  // std dev = 1,39e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.20975771563253562;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.18469472944075366;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.07877675473109175;  // std dev = 0,000, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.20012664110405073;  // std dev = 0,102, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.07324622576333704;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A), actor(B) )
%   | then return -0.07324622576333704;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.3094235659278624;  // std dev = 0,579, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.17006872883588556;  // std dev = 0,090, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06842697784420272;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06842697784420272;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.27803070525177304;  // std dev = 0,547, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, A), movie(C, B) )
%   then if ( director(B), actor(A) )
%   | then return 0.1474375978838617;  // std dev = 0,080, 25,000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.06419184008202618;  // std dev = 2,63e-09, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A), actor(B) )
%   | then return -0.06419184008202618;  // std dev = 3,73e-09, 15,000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.24993552447263157;  // std dev = 0,509, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.100544
   Precision = 0.348837 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.517241


Total learning time: 1.754 seconds
Total inference time: 1.193 seconds
AUC ROC: 1.0


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN-B), Time: 00:10:39
{'AUC ROC': 1.0, 'AUC PR': 1.0, 'CLL': -0.100544, 'Inference time': 1.193, 'Recall': 1.0, 'F1': 0.517241, 'Precision': [0.348837, 0.5], 'Learning time': 1.754}


WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.7914822684328456;  // std dev = 0,249, 15,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else return -0.14185106490048774;  // std dev = 1,29e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */


Results
   AUC ROC   = 0.980428
   AUC PR    = 0.360179
   CLL	      = -0.166093
   Precision = nan at threshold = 0.5
   Recall    = 0.0
   F1        = nan


Total learning time: 0.666 seconds
Total inference time: 0.775 seconds
AUC ROC: 0.980428


Dataset: 2_uwcse_imdb, Fold: 5, Type: Scratch (RDN), Time: 00:10:41
{'AUC ROC': 0.980428, 'AUC PR': 0.360179, 'CLL': -0.166093, 'Inference time': 0.775, 'Recall': 0.0, 'F1': nan, 'Precision': [nan, 0.5], 'Learning time': 0.666}


